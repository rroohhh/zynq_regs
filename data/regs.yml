ps7_debug_cpu_ptm1_ETMCR_ReturnStackEn:
  addr: 0xf889d000
  mask: 0x20000000
  name: ReturnStackEn
  description: |
    Return stack enable
ps7_debug_cpu_ptm1_ETMCR_TimestampEn:
  addr: 0xf889d000
  mask: 0x10000000
  name: TimestampEn
  description: |
    Timestamp enable
ps7_debug_cpu_ptm1_ETMCR_ProcSelect:
  addr: 0xf889d000
  mask: 0xe000000
  name: ProcSelect
  description: |
    Select for external multiplexor if PTM is shared between multiple processors.
ps7_debug_cpu_ptm1_ETMCR_reserved:
  addr: 0xf889d000
  mask: 0x1ff0000
  name: reserved
  description: |
    Reserved
ps7_debug_cpu_ptm1_ETMCR_ContexIDSize:
  addr: 0xf889d000
  mask: 0xc000
  name: ContexIDSize
  description: |
    Context ID Size
ps7_debug_cpu_ptm1_ETMCR_reserved_1:
  addr: 0xf889d000
  mask: 0x2000
  name: reserved_1
  description: |
    Reserved
ps7_debug_cpu_ptm1_ETMCR_CycleAccurate:
  addr: 0xf889d000
  mask: 0x1000
  name: CycleAccurate
  description: |
    Enables cycle counting
ps7_debug_cpu_ptm1_ETMCR_reserved_2:
  addr: 0xf889d000
  mask: 0x800
  name: reserved_2
  description: |
    Reserved
ps7_debug_cpu_ptm1_ETMCR_ProgBit:
  addr: 0xf889d000
  mask: 0x400
  name: ProgBit
  description: |
    This bit must be set to b1 when the PTM is being programmed.
ps7_debug_cpu_ptm1_ETMCR_DebugReqCtrl:
  addr: 0xf889d000
  mask: 0x200
  name: DebugReqCtrl
  description: |
    Debug Request Control
    When set to b1 and the trigger event occurs, the PTMDBGRQ output is asserted until PTMDBGACK is observed. This enables a debugger to force the processor into Debug state.
ps7_debug_cpu_ptm1_ETMCR_BranchOutput:
  addr: 0xf889d000
  mask: 0x100
  name: BranchOutput
  description: |
    When this bit is set to b1, addresses are output for all executed branches, both direct and indirect.
ps7_debug_cpu_ptm1_ETMCR_reserved_3:
  addr: 0xf889d000
  mask: 0xfe
  name: reserved_3
  description: |
    Reserved
ps7_debug_cpu_ptm1_ETMCR_PowerDown:
  addr: 0xf889d000
  mask: 0x1
  name: PowerDown
  description: |
    This bit enables external control of the PTM. This bit must be cleared by the trace software tools at the beginning of a debug session.
    When this bit is set to b0, both the PTM and the trace interface in the processor are enabled.
    To avoid corruption of trace data, this bit must not be set before the Programming Status bit in the PTM Status Register has been read as 1.
ps7_debug_cpu_ptm1_ETMCCR_IDRegPresent:
  addr: 0xf889d004
  mask: 0x80000000
  name: IDRegPresent
  description: |
    Indicates that the ID Register is present.
ps7_debug_cpu_ptm1_ETMCCR_reserved:
  addr: 0xf889d004
  mask: 0x70000000
  name: reserved
  description: |
    Reserved
ps7_debug_cpu_ptm1_ETMCCR_SoftwareAccess:
  addr: 0xf889d004
  mask: 0x8000000
  name: SoftwareAccess
  description: |
    Indicates that software access is supported.
ps7_debug_cpu_ptm1_ETMCCR_TraceSSB:
  addr: 0xf889d004
  mask: 0x4000000
  name: TraceSSB
  description: |
    Indicates that the trace start/stop block is present.
ps7_debug_cpu_ptm1_ETMCCR_NumCntxtIDComp:
  addr: 0xf889d004
  mask: 0x3000000
  name: NumCntxtIDComp
  description: |
    Specifies the number of Context ID comparators, one.
ps7_debug_cpu_ptm1_ETMCCR_FIFOFULLLogic:
  addr: 0xf889d004
  mask: 0x800000
  name: FIFOFULLLogic
  description: |
    Indicates that it is not possible to stall the processor to prevent FIFO overflow.
ps7_debug_cpu_ptm1_ETMCCR_NumExtOut:
  addr: 0xf889d004
  mask: 0x700000
  name: NumExtOut
  description: |
    Specifies the number of external outputs, two.
ps7_debug_cpu_ptm1_ETMCCR_NumExtIn:
  addr: 0xf889d004
  mask: 0xe0000
  name: NumExtIn
  description: |
    Specifies the number of external inputs, four.
ps7_debug_cpu_ptm1_ETMCCR_Sequencer:
  addr: 0xf889d004
  mask: 0x10000
  name: Sequencer
  description: |
    Indicates that the sequencer is present.
ps7_debug_cpu_ptm1_ETMCCR_NumCounters:
  addr: 0xf889d004
  mask: 0xe000
  name: NumCounters
  description: |
    Specifies the number of counters, two.
ps7_debug_cpu_ptm1_ETMCCR_reserved_1:
  addr: 0xf889d004
  mask: 0x1ff0
  name: reserved_1
  description: |
    Reserved
ps7_debug_cpu_ptm1_ETMCCR_NumAddrComp:
  addr: 0xf889d004
  mask: 0xf
  name: NumAddrComp
  description: |
    Specifies the number of address comparator pairs, four.
ps7_debug_cpu_ptm1_ETMTRIGGER_TrigEvent:
  addr: 0xf889d008
  mask: 0x1ffff
  name: TrigEvent
  description: |
    Trigger event. Subdivided as:
    Function, bits [16:14]
    Specifies the function that combines the two resources that define the event.
    Resource B, bits [13:7] and Resource A, bits [6:0]
    Specify the two resources that are combined by the logical operation specified by the Function field.
ps7_debug_cpu_ptm1_ETMSR_TrigFlag:
  addr: 0xf889d010
  mask: 0x8
  name: TrigFlag
  description: |
    Trigger bit. Set when the trigger occurs and prevents the trigger from being output until the PTM is next programmed.
ps7_debug_cpu_ptm1_ETMSR_TSSRStat:
  addr: 0xf889d010
  mask: 0x4
  name: TSSRStat
  description: |
    Holds the current status of the trace start/stop resource. If set to 1, indicates that a trace start address has been matched, without a corresponding trace stop address match.
ps7_debug_cpu_ptm1_ETMSR_ProgBit:
  addr: 0xf889d010
  mask: 0x2
  name: ProgBit
  description: |
    Effective state of the Programming bit. You must wait for this bit to go to b1 before starting to program the PTM.
ps7_debug_cpu_ptm1_ETMSR_Overflow:
  addr: 0xf889d010
  mask: 0x1
  name: Overflow
  description: |
    If set to 1, there is an overflow that has not yet been traced.
ps7_debug_cpu_ptm1_ETMSCR_NumProcs:
  addr: 0xf889d014
  mask: 0x7000
  name: NumProcs
  description: |
    Number of supported processors minus 1.
ps7_debug_cpu_ptm1_ETMSCR_reserved:
  addr: 0xf889d014
  mask: 0xe00
  name: reserved
  description: |
    Reserved
ps7_debug_cpu_ptm1_ETMSCR_FIFOFULL:
  addr: 0xf889d014
  mask: 0x100
  name: FIFOFULL
  description: |
    FIFOFULL not supported
ps7_debug_cpu_ptm1_ETMSCR_reserved_1:
  addr: 0xf889d014
  mask: 0xff
  name: reserved_1
  description: |
    Reserved
ps7_debug_cpu_ptm1_ETMTSSCR_StopAddrSel:
  addr: 0xf889d018
  mask: 0xff0000
  name: StopAddrSel
  description: |
    When a bit is set to 1, it selects a single address comparator (8-1) as a stop address for the TraceEnable
    Start/Stop block. For example, if you set bit [16] to 1 it selects single address comparator 1 as a stop address.
ps7_debug_cpu_ptm1_ETMTSSCR_reserved:
  addr: 0xf889d018
  mask: 0xff00
  name: reserved
  description: |
    Reserved
ps7_debug_cpu_ptm1_ETMTSSCR_StartAddrSel:
  addr: 0xf889d018
  mask: 0xff
  name: StartAddrSel
  description: |
    When a bit is set to 1, it selects a single address comparator (8-1) as a start address for the TraceEnable
    Start/Stop block. For example, if you set bit [0] to 1 it selects single address comparator 1 as a start address.
ps7_debug_cpu_ptm1_ETMTECR1_TraceSSEn:
  addr: 0xf889d024
  mask: 0x2000000
  name: TraceSSEn
  description: |
    Trace start/stop control enable. The possible values of this bit are:
    0 Tracing is unaffected by the trace start/stop logic.
    1 Tracing is controlled by the trace on and off addresses configured for the trace start/stop logic.
    The trace start/stop resource is not affected by the value of this bit.
ps7_debug_cpu_ptm1_ETMTECR1_ExcIncFlag:
  addr: 0xf889d024
  mask: 0x1000000
  name: ExcIncFlag
  description: |
    Exclude/include flag. The possible values of this bit are:
    0 Include. The specified address range comparators indicate the regions where tracing can occur.
    No tracing occurs outside this region.
    1 Exclude. The specified address range comparators indicate regions to be excluded from the
    trace. When outside an exclude region, tracing can occur.
ps7_debug_cpu_ptm1_ETMTECR1_reserved:
  addr: 0xf889d024
  mask: 0xfffff0
  name: reserved
  description: |
    Reserved
ps7_debug_cpu_ptm1_ETMTECR1_AddrCompSel:
  addr: 0xf889d024
  mask: 0xf
  name: AddrCompSel
  description: |
    When a bit is set to 1, it selects an address range comparator, 4-1, for include/exclude control. For example, bit [0] set to 1 selects address range comparator 1.
ps7_debug_cpu_ptm1_ETMACVR1_Address:
  addr: 0xf889d040
  mask: 0xffffffff
  name: Address
  description: |
    Address for comparison
ps7_debug_cpu_ptm1_ETMACVR2_Address:
  addr: 0xf889d044
  mask: 0xffffffff
  name: Address
  description: |
    Address for comparison
ps7_debug_cpu_ptm1_ETMACVR3_Address:
  addr: 0xf889d048
  mask: 0xffffffff
  name: Address
  description: |
    Address for comparison
ps7_debug_cpu_ptm1_ETMACVR4_Address:
  addr: 0xf889d04c
  mask: 0xffffffff
  name: Address
  description: |
    Address for comparison
ps7_debug_cpu_ptm1_ETMACVR5_Address:
  addr: 0xf889d050
  mask: 0xffffffff
  name: Address
  description: |
    Address for comparison
ps7_debug_cpu_ptm1_ETMACVR6_Address:
  addr: 0xf889d054
  mask: 0xffffffff
  name: Address
  description: |
    Address for comparison
ps7_debug_cpu_ptm1_ETMACVR7_Address:
  addr: 0xf889d058
  mask: 0xffffffff
  name: Address
  description: |
    Address for comparison
ps7_debug_cpu_ptm1_ETMACVR8_Address:
  addr: 0xf889d05c
  mask: 0xffffffff
  name: Address
  description: |
    Address for comparison
ps7_debug_cpu_ptm1_ETMACTR1_SecLevelCtrl:
  addr: 0xf889d080
  mask: 0xc00
  name: SecLevelCtrl
  description: |
    Security level control
ps7_debug_cpu_ptm1_ETMACTR1_ContextIDCompCtrl:
  addr: 0xf889d080
  mask: 0x300
  name: ContextIDCompCtrl
  description: |
    Context ID comparator control.
ps7_debug_cpu_ptm1_ETMACTR1_reserved:
  addr: 0xf889d080
  mask: 0xf8
  name: reserved
  description: |
    Reserved
ps7_debug_cpu_ptm1_ETMACTR1_AccessType:
  addr: 0xf889d080
  mask: 0x7
  name: AccessType
  description: |
    Access type. Returns the value: Instruction execute.
ps7_debug_cpu_ptm1_ETMACTR2_SecLevelCtrl:
  addr: 0xf889d084
  mask: 0xc00
  name: SecLevelCtrl
  description: |
    Security level control
ps7_debug_cpu_ptm1_ETMACTR2_ContextIDCompCtrl:
  addr: 0xf889d084
  mask: 0x300
  name: ContextIDCompCtrl
  description: |
    Context ID comparator control.
ps7_debug_cpu_ptm1_ETMACTR2_reserved:
  addr: 0xf889d084
  mask: 0xf8
  name: reserved
  description: |
    Reserved
ps7_debug_cpu_ptm1_ETMACTR2_AccessType:
  addr: 0xf889d084
  mask: 0x7
  name: AccessType
  description: |
    Access type. Returns the value: Instruction execute.
ps7_debug_cpu_ptm1_ETMACTR3_SecLevelCtrl:
  addr: 0xf889d088
  mask: 0xc00
  name: SecLevelCtrl
  description: |
    Security level control
ps7_debug_cpu_ptm1_ETMACTR3_ContextIDCompCtrl:
  addr: 0xf889d088
  mask: 0x300
  name: ContextIDCompCtrl
  description: |
    Context ID comparator control.
ps7_debug_cpu_ptm1_ETMACTR3_reserved:
  addr: 0xf889d088
  mask: 0xf8
  name: reserved
  description: |
    Reserved
ps7_debug_cpu_ptm1_ETMACTR3_AccessType:
  addr: 0xf889d088
  mask: 0x7
  name: AccessType
  description: |
    Access type. Returns the value: Instruction execute.
ps7_debug_cpu_ptm1_ETMACTR4_SecLevelCtrl:
  addr: 0xf889d08c
  mask: 0xc00
  name: SecLevelCtrl
  description: |
    Security level control
ps7_debug_cpu_ptm1_ETMACTR4_ContextIDCompCtrl:
  addr: 0xf889d08c
  mask: 0x300
  name: ContextIDCompCtrl
  description: |
    Context ID comparator control.
ps7_debug_cpu_ptm1_ETMACTR4_reserved:
  addr: 0xf889d08c
  mask: 0xf8
  name: reserved
  description: |
    Reserved
ps7_debug_cpu_ptm1_ETMACTR4_AccessType:
  addr: 0xf889d08c
  mask: 0x7
  name: AccessType
  description: |
    Access type. Returns the value: Instruction execute.
ps7_debug_cpu_ptm1_ETMACTR5_SecLevelCtrl:
  addr: 0xf889d090
  mask: 0xc00
  name: SecLevelCtrl
  description: |
    Security level control
ps7_debug_cpu_ptm1_ETMACTR5_ContextIDCompCtrl:
  addr: 0xf889d090
  mask: 0x300
  name: ContextIDCompCtrl
  description: |
    Context ID comparator control.
ps7_debug_cpu_ptm1_ETMACTR5_reserved:
  addr: 0xf889d090
  mask: 0xf8
  name: reserved
  description: |
    Reserved
ps7_debug_cpu_ptm1_ETMACTR5_AccessType:
  addr: 0xf889d090
  mask: 0x7
  name: AccessType
  description: |
    Access type. Returns the value: Instruction execute.
ps7_debug_cpu_ptm1_ETMACTR6_SecLevelCtrl:
  addr: 0xf889d094
  mask: 0xc00
  name: SecLevelCtrl
  description: |
    Security level control
ps7_debug_cpu_ptm1_ETMACTR6_ContextIDCompCtrl:
  addr: 0xf889d094
  mask: 0x300
  name: ContextIDCompCtrl
  description: |
    Context ID comparator control.
ps7_debug_cpu_ptm1_ETMACTR6_reserved:
  addr: 0xf889d094
  mask: 0xf8
  name: reserved
  description: |
    Reserved
ps7_debug_cpu_ptm1_ETMACTR6_AccessType:
  addr: 0xf889d094
  mask: 0x7
  name: AccessType
  description: |
    Access type. Returns the value: Instruction execute.
ps7_debug_cpu_ptm1_ETMACTR7_SecLevelCtrl:
  addr: 0xf889d098
  mask: 0xc00
  name: SecLevelCtrl
  description: |
    Security level control
ps7_debug_cpu_ptm1_ETMACTR7_ContextIDCompCtrl:
  addr: 0xf889d098
  mask: 0x300
  name: ContextIDCompCtrl
  description: |
    Context ID comparator control.
ps7_debug_cpu_ptm1_ETMACTR7_reserved:
  addr: 0xf889d098
  mask: 0xf8
  name: reserved
  description: |
    Reserved
ps7_debug_cpu_ptm1_ETMACTR7_AccessType:
  addr: 0xf889d098
  mask: 0x7
  name: AccessType
  description: |
    Access type. Returns the value: Instruction execute.
ps7_debug_cpu_ptm1_ETMACTR8_SecLevelCtrl:
  addr: 0xf889d09c
  mask: 0xc00
  name: SecLevelCtrl
  description: |
    Security level control
ps7_debug_cpu_ptm1_ETMACTR8_ContextIDCompCtrl:
  addr: 0xf889d09c
  mask: 0x300
  name: ContextIDCompCtrl
  description: |
    Context ID comparator control.
ps7_debug_cpu_ptm1_ETMACTR8_reserved:
  addr: 0xf889d09c
  mask: 0xf8
  name: reserved
  description: |
    Reserved
ps7_debug_cpu_ptm1_ETMACTR8_AccessType:
  addr: 0xf889d09c
  mask: 0x7
  name: AccessType
  description: |
    Access type. Returns the value: Instruction execute.
ps7_debug_cpu_ptm1_ETMCNTRLDVR1_InitValue:
  addr: 0xf889d140
  mask: 0xffff
  name: InitValue
  description: |
    Counter initial value
ps7_debug_cpu_ptm1_ETMCNTRLDVR2_InitValue:
  addr: 0xf889d144
  mask: 0xffff
  name: InitValue
  description: |
    Counter initial value
ps7_debug_cpu_ptm1_ETMCNTENR1_Reserved_1:
  addr: 0xf889d150
  mask: 0x20000
  name: Reserved_1
  description: |
    Reserved, RAO/WI
ps7_debug_cpu_ptm1_ETMCNTENR1_ExtOutEvent:
  addr: 0xf889d150
  mask: 0x1ffff
  name: ExtOutEvent
  description: |
    Count enable event. Subdivided as:
    Function, bits [16:14]
    Specifies the function that combines the two resources that define the event.
    Resource B, bits [13:7] and Resource A, bits [6:0]
    Specify the two resources that are combined by the logical operation specified by the Function field.
ps7_debug_cpu_ptm1_ETMCNTENR2_Reserved_1:
  addr: 0xf889d154
  mask: 0x20000
  name: Reserved_1
  description: |
    Reserved, RAO/WI
ps7_debug_cpu_ptm1_ETMCNTENR2_ExtOutEvent:
  addr: 0xf889d154
  mask: 0x1ffff
  name: ExtOutEvent
  description: |
    Count enable event. Subdivided as:
    Function, bits [16:14]
    Specifies the function that combines the two resources that define the event.
    Resource B, bits [13:7] and Resource A, bits [6:0]
    Specify the two resources that are combined by the logical operation specified by the Function field.
ps7_debug_cpu_ptm1_ETMCNTRLDEVR1_CntReloadEvent:
  addr: 0xf889d160
  mask: 0x1ffff
  name: CntReloadEvent
  description: |
    Count reload event. Subdivided as:
    Function, bits [16:14]
    Specifies the function that combines the two resources that define the event.
    Resource B, bits [13:7] and Resource A, bits [6:0]
    Specify the two resources that are combined by the logical operation specified by the Function field.
ps7_debug_cpu_ptm1_ETMCNTRLDEVR2_CntReloadEvent:
  addr: 0xf889d164
  mask: 0x1ffff
  name: CntReloadEvent
  description: |
    Count reload event. Subdivided as:
    Function, bits [16:14]
    Specifies the function that combines the two resources that define the event.
    Resource B, bits [13:7] and Resource A, bits [6:0]
    Specify the two resources that are combined by the logical operation specified by the Function field.
ps7_debug_cpu_ptm1_ETMCNTVR1_CurrCount:
  addr: 0xf889d170
  mask: 0xffff
  name: CurrCount
  description: |
    Current counter value.
ps7_debug_cpu_ptm1_ETMCNTVR2_CurrCount:
  addr: 0xf889d174
  mask: 0xffff
  name: CurrCount
  description: |
    Current counter value.
ps7_debug_cpu_ptm1_ETMSQ12EVR_TransEvent:
  addr: 0xf889d180
  mask: 0x1ffff
  name: TransEvent
  description: |
    A Sequencer State Transition Event Register, ETMSQmnEVR, defines the evnet that causes the sequencer state transition from state m to state n.
    The format is subdivided as:
    Function, bits [16:14]
    Specifies the function that combines the two resources that define the event.
    Resource B, bits [13:7] and Resource A, bits [6:0]
    Specify the two resources that are combined by the logical operation specified by the Function field.
ps7_debug_cpu_ptm1_ETMSQ21EVR_TransEvent:
  addr: 0xf889d184
  mask: 0x1ffff
  name: TransEvent
  description: |
    A Sequencer State Transition Event Register, ETMSQmnEVR, defines the evnet that causes the sequencer state transition from state m to state n.
    The format is subdivided as:
    Function, bits [16:14]
    Specifies the function that combines the two resources that define the event.
    Resource B, bits [13:7] and Resource A, bits [6:0]
    Specify the two resources that are combined by the logical operation specified by the Function field.
ps7_debug_cpu_ptm1_ETMSQ23EVR_TransEvent:
  addr: 0xf889d188
  mask: 0x1ffff
  name: TransEvent
  description: |
    A Sequencer State Transition Event Register, ETMSQmnEVR, defines the evnet that causes the sequencer state transition from state m to state n.
    The format is subdivided as:
    Function, bits [16:14]
    Specifies the function that combines the two resources that define the event.
    Resource B, bits [13:7] and Resource A, bits [6:0]
    Specify the two resources that are combined by the logical operation specified by the Function field.
ps7_debug_cpu_ptm1_ETMSQ31EVR_TransEvent:
  addr: 0xf889d18c
  mask: 0x1ffff
  name: TransEvent
  description: |
    A Sequencer State Transition Event Register, ETMSQmnEVR, defines the evnet that causes the sequencer state transition from state m to state n.
    The format is subdivided as:
    Function, bits [16:14]
    Specifies the function that combines the two resources that define the event.
    Resource B, bits [13:7] and Resource A, bits [6:0]
    Specify the two resources that are combined by the logical operation specified by the Function field.
ps7_debug_cpu_ptm1_ETMSQ32EVR_TransEvent:
  addr: 0xf889d190
  mask: 0x1ffff
  name: TransEvent
  description: |
    A Sequencer State Transition Event Register, ETMSQmnEVR, defines the evnet that causes the sequencer state transition from state m to state n.
    The format is subdivided as:
    Function, bits [16:14]
    Specifies the function that combines the two resources that define the event.
    Resource B, bits [13:7] and Resource A, bits [6:0]
    Specify the two resources that are combined by the logical operation specified by the Function field.
ps7_debug_cpu_ptm1_ETMSQ13EVR_TransEvent:
  addr: 0xf889d194
  mask: 0x1ffff
  name: TransEvent
  description: |
    A Sequencer State Transition Event Register, ETMSQmnEVR, defines the evnet that causes the sequencer state transition from state m to state n.
    The format is subdivided as:
    Function, bits [16:14]
    Specifies the function that combines the two resources that define the event.
    Resource B, bits [13:7] and Resource A, bits [6:0]
    Specify the two resources that are combined by the logical operation specified by the Function field.
ps7_debug_cpu_ptm1_ETMSQR_CurrentSeqState:
  addr: 0xf889d19c
  mask: 0x3
  name: CurrentSeqState
  description: |
    Indicates the current sequencer state
ps7_debug_cpu_ptm1_ETMEXTOUTEVR1_ExtOutputEvent:
  addr: 0xf889d1a0
  mask: 0x1ffff
  name: ExtOutputEvent
  description: |
    External output event. Subdivided as:
    Function, bits [16:14]
    Specifies the function that combines the two resources that define the event.
    Resource B, bits [13:7] and Resource A, bits [6:0]
    Specify the two resources that are combined by the logical operation specified by the Function field.
ps7_debug_cpu_ptm1_ETMEXTOUTEVR2_ExtOutputEvent:
  addr: 0xf889d1a4
  mask: 0x1ffff
  name: ExtOutputEvent
  description: |
    External output event. Subdivided as:
    Function, bits [16:14]
    Specifies the function that combines the two resources that define the event.
    Resource B, bits [13:7] and Resource A, bits [6:0]
    Specify the two resources that are combined by the logical operation specified by the Function field.
ps7_debug_cpu_ptm1_ETMCIDCVR1_ContextID:
  addr: 0xf889d1b0
  mask: 0xffffffff
  name: ContextID
  description: |
    Holds a 32-bit Context ID value
ps7_debug_cpu_ptm1_ETMCIDCMR_ContextMask:
  addr: 0xf889d1bc
  mask: 0xffffffff
  name: ContextMask
  description: |
    Holds a 32-bit Context ID mask
ps7_debug_cpu_ptm1_ETMSYNCFR_SyncFreq:
  addr: 0xf889d1e0
  mask: 0xffc
  name: SyncFreq
  description: |
    Synchronization frequency
ps7_debug_cpu_ptm1_ETMSYNCFR_reserved:
  addr: 0xf889d1e0
  mask: 0x3
  name: reserved
  description: |
    Reserved
ps7_debug_cpu_ptm1_ETMIDR_ImplCode:
  addr: 0xf889d1e4
  mask: 0xff000000
  name: ImplCode
  description: |
    Implementor code. The field reads 0x41, ASCII code for A, indicating ARM Limited.
ps7_debug_cpu_ptm1_ETMIDR_reserved:
  addr: 0xf889d1e4
  mask: 0xe00000
  name: reserved
  description: |
    Reserved
ps7_debug_cpu_ptm1_ETMIDR_reserved_1:
  addr: 0xf889d1e4
  mask: 0x100000
  name: reserved_1
  description: |
    Reserved, RAO
ps7_debug_cpu_ptm1_ETMIDR_SecExtSupp:
  addr: 0xf889d1e4
  mask: 0x80000
  name: SecExtSupp
  description: |
    Support for security extensions.
ps7_debug_cpu_ptm1_ETMIDR_Thumb32Supp:
  addr: 0xf889d1e4
  mask: 0x40000
  name: Thumb32Supp
  description: |
    Support for 32-bit Thumb instructions.
ps7_debug_cpu_ptm1_ETMIDR_reserved_2:
  addr: 0xf889d1e4
  mask: 0x30000
  name: reserved_2
  description: |
    Reserved
ps7_debug_cpu_ptm1_ETMIDR_Reserved_F:
  addr: 0xf889d1e4
  mask: 0xf000
  name: Reserved_F
  description: |
    Reserved, 0b1111
ps7_debug_cpu_ptm1_ETMIDR_MajorVer:
  addr: 0xf889d1e4
  mask: 0xf00
  name: MajorVer
  description: |
    Major architecture version number, 0b0011
ps7_debug_cpu_ptm1_ETMIDR_MinorVer:
  addr: 0xf889d1e4
  mask: 0xf0
  name: MinorVer
  description: |
    Minor architecture version number, 0b0000
ps7_debug_cpu_ptm1_ETMIDR_ImplRev:
  addr: 0xf889d1e4
  mask: 0xf
  name: ImplRev
  description: |
    Implementation revision.
ps7_debug_cpu_ptm1_ETMCCER_BarrTS:
  addr: 0xf889d1e8
  mask: 0x2000000
  name: BarrTS
  description: |
    Timestamps are not generated for DMB/DSB
ps7_debug_cpu_ptm1_ETMCCER_BarrWP:
  addr: 0xf889d1e8
  mask: 0x1000000
  name: BarrWP
  description: |
    DMB/DSB instructions are not treated as waypoints.
ps7_debug_cpu_ptm1_ETMCCER_RetStack:
  addr: 0xf889d1e8
  mask: 0x800000
  name: RetStack
  description: |
    Return stack implemented.
ps7_debug_cpu_ptm1_ETMCCER_Timestamp:
  addr: 0xf889d1e8
  mask: 0x400000
  name: Timestamp
  description: |
    Timestamping implemented.
ps7_debug_cpu_ptm1_ETMCCER_reserved:
  addr: 0xf889d1e8
  mask: 0x3f0000
  name: reserved
  description: |
    Reserved
ps7_debug_cpu_ptm1_ETMCCER_InstrumRes:
  addr: 0xf889d1e8
  mask: 0xe000
  name: InstrumRes
  description: |
    Specifies the number of instrumentation resources.
ps7_debug_cpu_ptm1_ETMCCER_Reserved_1:
  addr: 0xf889d1e8
  mask: 0x1000
  name: Reserved_1
  description: |
    Reserved, RAO
ps7_debug_cpu_ptm1_ETMCCER_RegReads:
  addr: 0xf889d1e8
  mask: 0x800
  name: RegReads
  description: |
    Indicates that all registers, except some Integration Test Registers, are readable.
ps7_debug_cpu_ptm1_ETMCCER_ExtInSize:
  addr: 0xf889d1e8
  mask: 0x7f8
  name: ExtInSize
  description: |
    Specifies the size of the extended external input bus, 52.
ps7_debug_cpu_ptm1_ETMCCER_ExtInSel:
  addr: 0xf889d1e8
  mask: 0x7
  name: ExtInSel
  description: |
    Specifies the number of extended external input selectors, 2.
ps7_debug_cpu_ptm1_ETMEXTINSELR_ExtInSel2:
  addr: 0xf889d1ec
  mask: 0x3f00
  name: ExtInSel2
  description: |
    Second extended external input selector
ps7_debug_cpu_ptm1_ETMEXTINSELR_reserved:
  addr: 0xf889d1ec
  mask: 0xc0
  name: reserved
  description: |
    Reserved
ps7_debug_cpu_ptm1_ETMEXTINSELR_ExtInSel1:
  addr: 0xf889d1ec
  mask: 0x3f
  name: ExtInSel1
  description: |
    First extended external input selector
ps7_debug_cpu_ptm1_ETMAUXCR_ForceSyncInsert:
  addr: 0xf889d1fc
  mask: 0x8
  name: ForceSyncInsert
  description: |
    Force insertion of synchronization packets, regardless of current trace activity.
    Possible values for this bit are:
    b0 = Synchronization packets delayed when trace activity is high. This is the reset value.
    b1 = Synchronization packets inserted regardless of trace activity.
    This bit might be set if synchronization packets occur too far apart. Setting this bit might cause the trace FIFO to overflow more frequently when trace activity is high.
ps7_debug_cpu_ptm1_ETMAUXCR_DisableWPUpdate:
  addr: 0xf889d1fc
  mask: 0x4
  name: DisableWPUpdate
  description: |
    Specifies whether the PTM issues waypoint update packets if there are more than 4096 bytes between waypoints. Possible values for this bit are:
    b0 = PTM always issues update packets if there are more than 4096 bytes between waypoints. This is the reset value.
    b1 = PTM does not issue waypoint update packets unless required to do so as the result of an exception or debug entry.
ps7_debug_cpu_ptm1_ETMAUXCR_DisableTSOnBarr:
  addr: 0xf889d1fc
  mask: 0x2
  name: DisableTSOnBarr
  description: |
    Specifies whether the PTM issues a timestamp on a barrier instruction. Possible values for this bit are:
    b0 = PTM issues timestamps on barrier instructions. This is the reset value.
    b1 = PTM does not issue timestamps on barriers
ps7_debug_cpu_ptm1_ETMAUXCR_DisableForcedOF:
  addr: 0xf889d1fc
  mask: 0x1
  name: DisableForcedOF
  description: |
    Specifies whether the PTM enters overflow state when synchronization is requested,
    and the previous synchronization sequence has not yet completed. This does not affect entry to overflow state when the FIFO becomes full. Possible values for this bit are:
    b0 = Forced overflow enabled. This is the reset value.
    b1 = Forced overflow disabled.
ps7_debug_cpu_ptm1_ETMTRACEIDR_TraceID:
  addr: 0xf889d200
  mask: 0x7f
  name: TraceID
  description: |
    Before trace is generated, you must program this register with a non-reserved value.
    Reserved values are 0x00 and any value in the range 0x70-0x7F. The reset value of this register is 0x00.
ps7_debug_cpu_ptm1_OSLSR_a:
  addr: 0xf889d304
  mask: 0xffffffff
  name: a
  description: |
    Shows that OS Locking is not implemented.
ps7_debug_cpu_ptm1_ETMPDSR_a:
  addr: 0xf889d314
  mask: 0xffffffff
  name: a
  description: |
    Indicates that the PTM Trace Registers can be accessed.
ps7_debug_cpu_ptm1_ITMISCOUT_PTMEXTOUT:
  addr: 0xf889dedc
  mask: 0x300
  name: PTMEXTOUT
  description: |
    Drives the PTMEXTOUT[1:0] outputs
ps7_debug_cpu_ptm1_ITMISCOUT_reserved:
  addr: 0xf889dedc
  mask: 0xc0
  name: reserved
  description: |
    Reserved
ps7_debug_cpu_ptm1_ITMISCOUT_PTMIDLEACK:
  addr: 0xf889dedc
  mask: 0x20
  name: PTMIDLEACK
  description: |
    Drives the PTMIDLEACK output
ps7_debug_cpu_ptm1_ITMISCOUT_PTMDBGREQ:
  addr: 0xf889dedc
  mask: 0x10
  name: PTMDBGREQ
  description: |
    Drives the PTMDBGREQ output
ps7_debug_cpu_ptm1_ITMISCOUT_reserved_1:
  addr: 0xf889dedc
  mask: 0xf
  name: reserved_1
  description: |
    Reserved
ps7_debug_cpu_ptm1_ITMISCIN_STANDBYWFI:
  addr: 0xf889dee0
  mask: 0x40
  name: STANDBYWFI
  description: |
    Returns the value of the STANDBYWFI input
ps7_debug_cpu_ptm1_ITMISCIN_reserved:
  addr: 0xf889dee0
  mask: 0x20
  name: reserved
  description: |
    Reserved
ps7_debug_cpu_ptm1_ITMISCIN_PTMDBGACK:
  addr: 0xf889dee0
  mask: 0x10
  name: PTMDBGACK
  description: |
    Returns the value of the PTMDBGACK input
ps7_debug_cpu_ptm1_ITMISCIN_EXTIN:
  addr: 0xf889dee0
  mask: 0xf
  name: EXTIN
  description: |
    Returns the value of the EXTIN[3:0] inputs
ps7_debug_cpu_ptm1_ITTRIGGER_PTMTRIGGER:
  addr: 0xf889dee8
  mask: 0x1
  name: PTMTRIGGER
  description: |
    Drives the PTMTRIGGER output
ps7_debug_cpu_ptm1_ITATBDATA0_ATDATAM31:
  addr: 0xf889deec
  mask: 0x10
  name: ATDATAM31
  description: |
    Drives the ATDATAM[31] output
ps7_debug_cpu_ptm1_ITATBDATA0_ATDATAM23:
  addr: 0xf889deec
  mask: 0x8
  name: ATDATAM23
  description: |
    Drives the ATDATAM[23] output
ps7_debug_cpu_ptm1_ITATBDATA0_ATDATAM15:
  addr: 0xf889deec
  mask: 0x4
  name: ATDATAM15
  description: |
    Drives the ATDATAM[15] output
ps7_debug_cpu_ptm1_ITATBDATA0_ATDATAM7:
  addr: 0xf889deec
  mask: 0x2
  name: ATDATAM7
  description: |
    Drives the ATDATAM[7] output
ps7_debug_cpu_ptm1_ITATBDATA0_ATDATAM0:
  addr: 0xf889deec
  mask: 0x1
  name: ATDATAM0
  description: |
    Drives the ATDATAM[0] output
ps7_debug_cpu_ptm1_ITATBCTR2_AFVALIDM:
  addr: 0xf889def0
  mask: 0x2
  name: AFVALIDM
  description: |
    Returns the value of the AFVALIDM input
ps7_debug_cpu_ptm1_ITATBCTR2_ATREADYM:
  addr: 0xf889def0
  mask: 0x1
  name: ATREADYM
  description: |
    Returns the value of the ATREADYM input
ps7_debug_cpu_ptm1_ITATBID_ATIDM:
  addr: 0xf889def4
  mask: 0x7f
  name: ATIDM
  description: |
    Drives the ATIDM[6:0] outputs
ps7_debug_cpu_ptm1_ITATBCTR0_ATBYTESM:
  addr: 0xf889def8
  mask: 0x300
  name: ATBYTESM
  description: |
    Drives the ATBYTESM[9:8] outputs
ps7_debug_cpu_ptm1_ITATBCTR0_reserved:
  addr: 0xf889def8
  mask: 0xfc
  name: reserved
  description: |
    Reserved
ps7_debug_cpu_ptm1_ITATBCTR0_AFREADYM:
  addr: 0xf889def8
  mask: 0x2
  name: AFREADYM
  description: |
    Drives the AFREADYM output
ps7_debug_cpu_ptm1_ITATBCTR0_ATVALIDM:
  addr: 0xf889def8
  mask: 0x1
  name: ATVALIDM
  description: |
    Drives the ATVALIDM output
ps7_debug_cpu_ptm1_ETMITCTRL_a:
  addr: 0xf889df00
  mask: 0x1
  name: a
  description: |
    Enable Integration Test registers.
    Before entering integration mode, the PTM must be powered up and in programming mode.
    THis means bit 0 of the Main Control Register is set to 0, and bit 10 of the Main Control Register ist set 1.
    After leaving integration mode, the PTM must be reset before attempting to perform tracing.
ps7_debug_cpu_ptm1_CTSR_a:
  addr: 0xf889dfa0
  mask: 0xff
  name: a
  description: |
    The claim tag register is used for any interrogating tools to determine if the device is being programmed or has been programmed.
    Read:
    1= Claim tag is implemented, 0 = Claim tag is not implemented
    Write:
    1= Set claim tag bit, 0= No effect
ps7_debug_cpu_ptm1_CTCR_a:
  addr: 0xf889dfa4
  mask: 0xff
  name: a
  description: |
    The claim tag register is used for any interrogating tools to determine if the device is being programmed or has been programmed.
    Read: Current value of claim tag.
    Write: 1= Clear claim tag bit, 0= No effect
ps7_debug_cpu_ptm1_LAR_a:
  addr: 0xf889dfb0
  mask: 0xffffffff
  name: a
  description: |
    Write Access Code.
    Write behavior depends on PADDRDBG31 pin:
    - PADDRDBG31=0 (lower 2GB):
    After reset (via PRESETDBGn), PTM is locked, i.e., writes to all other registers using lower 2GB addresses are ignored.
    To unlock, 0xC5ACCE55 must be written this register.
    After the required registers are written, to lock again, write a value other than 0xC5ACCE55 to this register.
    - PADDRDBG31=1 (upper 2GB):
    PTM is unlocked when upper 2GB addresses are used to write to all the registers.
    However, write to this register is ignored using a upper 2GB address!
    Note: read from this register always returns 0, regardless of PADDRDBG31.
ps7_debug_cpu_ptm1_LSR_n8BIT:
  addr: 0xf889dfb4
  mask: 0x4
  name: n8BIT
  description: |
    Set to 0 since PTM implements a 32-bit lock access register
ps7_debug_cpu_ptm1_LSR_STATUS:
  addr: 0xf889dfb4
  mask: 0x2
  name: STATUS
  description: |
    Read behavior depends on PADDRDBG31 pin:
    - PADDRDBG31=0 (lower 2GB):
    When a lower 2GB address is used to read this register, this bit indicates whether PTM is in locked state
    (1= locked, 0= unlocked).
    - PADDRDBG31=1 (upper 2GB):
    always returns 0.
ps7_debug_cpu_ptm1_LSR_IMP:
  addr: 0xf889dfb4
  mask: 0x1
  name: IMP
  description: |
    Read behavior depends on PADDRDBG31 pin:
    - PADDRDBG31=0 (lower 2GB):
    always returns 1, meaning lock mechanism are implemented.
    - PADDRDBG31=1 (upper 2GB):
    always returns 0, meaning lock mechanism is NOT implemented.
ps7_debug_cpu_ptm1_ASR_SNI:
  addr: 0xf889dfb8
  mask: 0xc0
  name: SNI
  description: |
    Secure non-invasive debug
    Always 2'b00,.
    This functionality is not implemented
ps7_debug_cpu_ptm1_ASR_SI:
  addr: 0xf889dfb8
  mask: 0x30
  name: SI
  description: |
    Secure invasive debug
    Always 2'b00.
    This functionality is not implemented.
ps7_debug_cpu_ptm1_ASR_NSNI:
  addr: 0xf889dfb8
  mask: 0xc
  name: NSNI
  description: |
    Non-secure non-invasive debug
    IF NIDEN or DBGEN is 1, this field is 2'b11, indicating the functionality is implemented and enabled.
    Otherwise, this field is 2'b10 (implemented but disabled)
ps7_debug_cpu_ptm1_ASR_NSI:
  addr: 0xf889dfb8
  mask: 0x3
  name: NSI
  description: |
    Non-secure invasive debug
    Always 2'b00.
    This functionality is not implemented.
ps7_debug_cpu_ptm1_DEVID_a:
  addr: 0xf889dfc8
  mask: 0xffffffff
  name: a
  description: |
    Component capability
ps7_debug_cpu_ptm1_DTIR_a:
  addr: 0xf889dfcc
  mask: 0xff
  name: a
  description: |
    A trace source and processor trace
ps7_debug_cpu_ptm1_PERIPHID4_n4KB_count:
  addr: 0xf889dfd0
  mask: 0xf0
  name: n4KB_count
  description: |
    4KB Count, set to 0
ps7_debug_cpu_ptm1_PERIPHID4_JEP106ID:
  addr: 0xf889dfd0
  mask: 0xf
  name: JEP106ID
  description: |
    JEP106 continuation code
ps7_debug_cpu_ptm1_PERIPHID5_a:
  addr: 0xf889dfd4
  mask: 0xff
  name: a
  description: |
    reserved
ps7_debug_cpu_ptm1_PERIPHID6_a:
  addr: 0xf889dfd8
  mask: 0xff
  name: a
  description: |
    reserved
ps7_debug_cpu_ptm1_PERIPHID7_a:
  addr: 0xf889dfdc
  mask: 0xff
  name: a
  description: |
    reserved
ps7_debug_cpu_ptm1_PERIPHID0_a:
  addr: 0xf889dfe0
  mask: 0xff
  name: a
  description: |
    PartNumber0
ps7_debug_cpu_ptm1_PERIPHID1_JEP106ID:
  addr: 0xf889dfe4
  mask: 0xf0
  name: JEP106ID
  description: |
    JEP106 Identity Code [3:0]
ps7_debug_cpu_ptm1_PERIPHID1_PartNumber1:
  addr: 0xf889dfe4
  mask: 0xf
  name: PartNumber1
  description: |
    PartNumber1
ps7_debug_cpu_ptm1_PERIPHID2_RevNum:
  addr: 0xf889dfe8
  mask: 0xf0
  name: RevNum
  description: |
    Revision number of Peripheral
ps7_debug_cpu_ptm1_PERIPHID2_JEDEC:
  addr: 0xf889dfe8
  mask: 0x8
  name: JEDEC
  description: |
    Indicates that a JEDEC assigned value is used
ps7_debug_cpu_ptm1_PERIPHID2_JEP106ID:
  addr: 0xf889dfe8
  mask: 0x7
  name: JEP106ID
  description: |
    JEP106 Identity Code [6:4]
ps7_debug_cpu_ptm1_PERIPHID3_RevAnd:
  addr: 0xf889dfec
  mask: 0xf0
  name: RevAnd
  description: |
    RevAnd, at top level
ps7_debug_cpu_ptm1_PERIPHID3_CustMod:
  addr: 0xf889dfec
  mask: 0xf
  name: CustMod
  description: |
    Customer Modified
ps7_debug_cpu_ptm1_COMPID0_a:
  addr: 0xf889dff0
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_debug_cpu_ptm1_COMPID1_a:
  addr: 0xf889dff4
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_debug_cpu_ptm1_COMPID2_a:
  addr: 0xf889dff8
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_debug_cpu_ptm1_COMPID3_a:
  addr: 0xf889dffc
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_debug_cpu_ptm0_ETMCR_ReturnStackEn:
  addr: 0xf889c000
  mask: 0x20000000
  name: ReturnStackEn
  description: |
    Return stack enable
ps7_debug_cpu_ptm0_ETMCR_TimestampEn:
  addr: 0xf889c000
  mask: 0x10000000
  name: TimestampEn
  description: |
    Timestamp enable
ps7_debug_cpu_ptm0_ETMCR_ProcSelect:
  addr: 0xf889c000
  mask: 0xe000000
  name: ProcSelect
  description: |
    Select for external multiplexor if PTM is shared between multiple processors.
ps7_debug_cpu_ptm0_ETMCR_reserved:
  addr: 0xf889c000
  mask: 0x1ff0000
  name: reserved
  description: |
    Reserved
ps7_debug_cpu_ptm0_ETMCR_ContexIDSize:
  addr: 0xf889c000
  mask: 0xc000
  name: ContexIDSize
  description: |
    Context ID Size
ps7_debug_cpu_ptm0_ETMCR_reserved_1:
  addr: 0xf889c000
  mask: 0x2000
  name: reserved_1
  description: |
    Reserved
ps7_debug_cpu_ptm0_ETMCR_CycleAccurate:
  addr: 0xf889c000
  mask: 0x1000
  name: CycleAccurate
  description: |
    Enables cycle counting
ps7_debug_cpu_ptm0_ETMCR_reserved_2:
  addr: 0xf889c000
  mask: 0x800
  name: reserved_2
  description: |
    Reserved
ps7_debug_cpu_ptm0_ETMCR_ProgBit:
  addr: 0xf889c000
  mask: 0x400
  name: ProgBit
  description: |
    This bit must be set to b1 when the PTM is being programmed.
ps7_debug_cpu_ptm0_ETMCR_DebugReqCtrl:
  addr: 0xf889c000
  mask: 0x200
  name: DebugReqCtrl
  description: |
    Debug Request Control
    When set to b1 and the trigger event occurs, the PTMDBGRQ output is asserted until PTMDBGACK is observed. This enables a debugger to force the processor into Debug state.
ps7_debug_cpu_ptm0_ETMCR_BranchOutput:
  addr: 0xf889c000
  mask: 0x100
  name: BranchOutput
  description: |
    When this bit is set to b1, addresses are output for all executed branches, both direct and indirect.
ps7_debug_cpu_ptm0_ETMCR_reserved_3:
  addr: 0xf889c000
  mask: 0xfe
  name: reserved_3
  description: |
    Reserved
ps7_debug_cpu_ptm0_ETMCR_PowerDown:
  addr: 0xf889c000
  mask: 0x1
  name: PowerDown
  description: |
    This bit enables external control of the PTM. This bit must be cleared by the trace software tools at the beginning of a debug session.
    When this bit is set to b0, both the PTM and the trace interface in the processor are enabled.
    To avoid corruption of trace data, this bit must not be set before the Programming Status bit in the PTM Status Register has been read as 1.
ps7_debug_cpu_ptm0_ETMCCR_IDRegPresent:
  addr: 0xf889c004
  mask: 0x80000000
  name: IDRegPresent
  description: |
    Indicates that the ID Register is present.
ps7_debug_cpu_ptm0_ETMCCR_reserved:
  addr: 0xf889c004
  mask: 0x70000000
  name: reserved
  description: |
    Reserved
ps7_debug_cpu_ptm0_ETMCCR_SoftwareAccess:
  addr: 0xf889c004
  mask: 0x8000000
  name: SoftwareAccess
  description: |
    Indicates that software access is supported.
ps7_debug_cpu_ptm0_ETMCCR_TraceSSB:
  addr: 0xf889c004
  mask: 0x4000000
  name: TraceSSB
  description: |
    Indicates that the trace start/stop block is present.
ps7_debug_cpu_ptm0_ETMCCR_NumCntxtIDComp:
  addr: 0xf889c004
  mask: 0x3000000
  name: NumCntxtIDComp
  description: |
    Specifies the number of Context ID comparators, one.
ps7_debug_cpu_ptm0_ETMCCR_FIFOFULLLogic:
  addr: 0xf889c004
  mask: 0x800000
  name: FIFOFULLLogic
  description: |
    Indicates that it is not possible to stall the processor to prevent FIFO overflow.
ps7_debug_cpu_ptm0_ETMCCR_NumExtOut:
  addr: 0xf889c004
  mask: 0x700000
  name: NumExtOut
  description: |
    Specifies the number of external outputs, two.
ps7_debug_cpu_ptm0_ETMCCR_NumExtIn:
  addr: 0xf889c004
  mask: 0xe0000
  name: NumExtIn
  description: |
    Specifies the number of external inputs, four.
ps7_debug_cpu_ptm0_ETMCCR_Sequencer:
  addr: 0xf889c004
  mask: 0x10000
  name: Sequencer
  description: |
    Indicates that the sequencer is present.
ps7_debug_cpu_ptm0_ETMCCR_NumCounters:
  addr: 0xf889c004
  mask: 0xe000
  name: NumCounters
  description: |
    Specifies the number of counters, two.
ps7_debug_cpu_ptm0_ETMCCR_reserved_1:
  addr: 0xf889c004
  mask: 0x1ff0
  name: reserved_1
  description: |
    Reserved
ps7_debug_cpu_ptm0_ETMCCR_NumAddrComp:
  addr: 0xf889c004
  mask: 0xf
  name: NumAddrComp
  description: |
    Specifies the number of address comparator pairs, four.
ps7_debug_cpu_ptm0_ETMTRIGGER_TrigEvent:
  addr: 0xf889c008
  mask: 0x1ffff
  name: TrigEvent
  description: |
    Trigger event. Subdivided as:
    Function, bits [16:14]
    Specifies the function that combines the two resources that define the event.
    Resource B, bits [13:7] and Resource A, bits [6:0]
    Specify the two resources that are combined by the logical operation specified by the Function field.
ps7_debug_cpu_ptm0_ETMSR_TrigFlag:
  addr: 0xf889c010
  mask: 0x8
  name: TrigFlag
  description: |
    Trigger bit. Set when the trigger occurs and prevents the trigger from being output until the PTM is next programmed.
ps7_debug_cpu_ptm0_ETMSR_TSSRStat:
  addr: 0xf889c010
  mask: 0x4
  name: TSSRStat
  description: |
    Holds the current status of the trace start/stop resource. If set to 1, indicates that a trace start address has been matched, without a corresponding trace stop address match.
ps7_debug_cpu_ptm0_ETMSR_ProgBit:
  addr: 0xf889c010
  mask: 0x2
  name: ProgBit
  description: |
    Effective state of the Programming bit. You must wait for this bit to go to b1 before starting to program the PTM.
ps7_debug_cpu_ptm0_ETMSR_Overflow:
  addr: 0xf889c010
  mask: 0x1
  name: Overflow
  description: |
    If set to 1, there is an overflow that has not yet been traced.
ps7_debug_cpu_ptm0_ETMSCR_NumProcs:
  addr: 0xf889c014
  mask: 0x7000
  name: NumProcs
  description: |
    Number of supported processors minus 1.
ps7_debug_cpu_ptm0_ETMSCR_reserved:
  addr: 0xf889c014
  mask: 0xe00
  name: reserved
  description: |
    Reserved
ps7_debug_cpu_ptm0_ETMSCR_FIFOFULL:
  addr: 0xf889c014
  mask: 0x100
  name: FIFOFULL
  description: |
    FIFOFULL not supported
ps7_debug_cpu_ptm0_ETMSCR_reserved_1:
  addr: 0xf889c014
  mask: 0xff
  name: reserved_1
  description: |
    Reserved
ps7_debug_cpu_ptm0_ETMTSSCR_StopAddrSel:
  addr: 0xf889c018
  mask: 0xff0000
  name: StopAddrSel
  description: |
    When a bit is set to 1, it selects a single address comparator (8-1) as a stop address for the TraceEnable
    Start/Stop block. For example, if you set bit [16] to 1 it selects single address comparator 1 as a stop address.
ps7_debug_cpu_ptm0_ETMTSSCR_reserved:
  addr: 0xf889c018
  mask: 0xff00
  name: reserved
  description: |
    Reserved
ps7_debug_cpu_ptm0_ETMTSSCR_StartAddrSel:
  addr: 0xf889c018
  mask: 0xff
  name: StartAddrSel
  description: |
    When a bit is set to 1, it selects a single address comparator (8-1) as a start address for the TraceEnable
    Start/Stop block. For example, if you set bit [0] to 1 it selects single address comparator 1 as a start address.
ps7_debug_cpu_ptm0_ETMTECR1_TraceSSEn:
  addr: 0xf889c024
  mask: 0x2000000
  name: TraceSSEn
  description: |
    Trace start/stop control enable. The possible values of this bit are:
    0 Tracing is unaffected by the trace start/stop logic.
    1 Tracing is controlled by the trace on and off addresses configured for the trace start/stop logic.
    The trace start/stop resource is not affected by the value of this bit.
ps7_debug_cpu_ptm0_ETMTECR1_ExcIncFlag:
  addr: 0xf889c024
  mask: 0x1000000
  name: ExcIncFlag
  description: |
    Exclude/include flag. The possible values of this bit are:
    0 Include. The specified address range comparators indicate the regions where tracing can occur.
    No tracing occurs outside this region.
    1 Exclude. The specified address range comparators indicate regions to be excluded from the
    trace. When outside an exclude region, tracing can occur.
ps7_debug_cpu_ptm0_ETMTECR1_reserved:
  addr: 0xf889c024
  mask: 0xfffff0
  name: reserved
  description: |
    Reserved
ps7_debug_cpu_ptm0_ETMTECR1_AddrCompSel:
  addr: 0xf889c024
  mask: 0xf
  name: AddrCompSel
  description: |
    When a bit is set to 1, it selects an address range comparator, 4-1, for include/exclude control. For example, bit [0] set to 1 selects address range comparator 1.
ps7_debug_cpu_ptm0_ETMACVR1_Address:
  addr: 0xf889c040
  mask: 0xffffffff
  name: Address
  description: |
    Address for comparison
ps7_debug_cpu_ptm0_ETMACVR2_Address:
  addr: 0xf889c044
  mask: 0xffffffff
  name: Address
  description: |
    Address for comparison
ps7_debug_cpu_ptm0_ETMACVR3_Address:
  addr: 0xf889c048
  mask: 0xffffffff
  name: Address
  description: |
    Address for comparison
ps7_debug_cpu_ptm0_ETMACVR4_Address:
  addr: 0xf889c04c
  mask: 0xffffffff
  name: Address
  description: |
    Address for comparison
ps7_debug_cpu_ptm0_ETMACVR5_Address:
  addr: 0xf889c050
  mask: 0xffffffff
  name: Address
  description: |
    Address for comparison
ps7_debug_cpu_ptm0_ETMACVR6_Address:
  addr: 0xf889c054
  mask: 0xffffffff
  name: Address
  description: |
    Address for comparison
ps7_debug_cpu_ptm0_ETMACVR7_Address:
  addr: 0xf889c058
  mask: 0xffffffff
  name: Address
  description: |
    Address for comparison
ps7_debug_cpu_ptm0_ETMACVR8_Address:
  addr: 0xf889c05c
  mask: 0xffffffff
  name: Address
  description: |
    Address for comparison
ps7_debug_cpu_ptm0_ETMACTR1_SecLevelCtrl:
  addr: 0xf889c080
  mask: 0xc00
  name: SecLevelCtrl
  description: |
    Security level control
ps7_debug_cpu_ptm0_ETMACTR1_ContextIDCompCtrl:
  addr: 0xf889c080
  mask: 0x300
  name: ContextIDCompCtrl
  description: |
    Context ID comparator control.
ps7_debug_cpu_ptm0_ETMACTR1_reserved:
  addr: 0xf889c080
  mask: 0xf8
  name: reserved
  description: |
    Reserved
ps7_debug_cpu_ptm0_ETMACTR1_AccessType:
  addr: 0xf889c080
  mask: 0x7
  name: AccessType
  description: |
    Access type. Returns the value: Instruction execute.
ps7_debug_cpu_ptm0_ETMACTR2_SecLevelCtrl:
  addr: 0xf889c084
  mask: 0xc00
  name: SecLevelCtrl
  description: |
    Security level control
ps7_debug_cpu_ptm0_ETMACTR2_ContextIDCompCtrl:
  addr: 0xf889c084
  mask: 0x300
  name: ContextIDCompCtrl
  description: |
    Context ID comparator control.
ps7_debug_cpu_ptm0_ETMACTR2_reserved:
  addr: 0xf889c084
  mask: 0xf8
  name: reserved
  description: |
    Reserved
ps7_debug_cpu_ptm0_ETMACTR2_AccessType:
  addr: 0xf889c084
  mask: 0x7
  name: AccessType
  description: |
    Access type. Returns the value: Instruction execute.
ps7_debug_cpu_ptm0_ETMACTR3_SecLevelCtrl:
  addr: 0xf889c088
  mask: 0xc00
  name: SecLevelCtrl
  description: |
    Security level control
ps7_debug_cpu_ptm0_ETMACTR3_ContextIDCompCtrl:
  addr: 0xf889c088
  mask: 0x300
  name: ContextIDCompCtrl
  description: |
    Context ID comparator control.
ps7_debug_cpu_ptm0_ETMACTR3_reserved:
  addr: 0xf889c088
  mask: 0xf8
  name: reserved
  description: |
    Reserved
ps7_debug_cpu_ptm0_ETMACTR3_AccessType:
  addr: 0xf889c088
  mask: 0x7
  name: AccessType
  description: |
    Access type. Returns the value: Instruction execute.
ps7_debug_cpu_ptm0_ETMACTR4_SecLevelCtrl:
  addr: 0xf889c08c
  mask: 0xc00
  name: SecLevelCtrl
  description: |
    Security level control
ps7_debug_cpu_ptm0_ETMACTR4_ContextIDCompCtrl:
  addr: 0xf889c08c
  mask: 0x300
  name: ContextIDCompCtrl
  description: |
    Context ID comparator control.
ps7_debug_cpu_ptm0_ETMACTR4_reserved:
  addr: 0xf889c08c
  mask: 0xf8
  name: reserved
  description: |
    Reserved
ps7_debug_cpu_ptm0_ETMACTR4_AccessType:
  addr: 0xf889c08c
  mask: 0x7
  name: AccessType
  description: |
    Access type. Returns the value: Instruction execute.
ps7_debug_cpu_ptm0_ETMACTR5_SecLevelCtrl:
  addr: 0xf889c090
  mask: 0xc00
  name: SecLevelCtrl
  description: |
    Security level control
ps7_debug_cpu_ptm0_ETMACTR5_ContextIDCompCtrl:
  addr: 0xf889c090
  mask: 0x300
  name: ContextIDCompCtrl
  description: |
    Context ID comparator control.
ps7_debug_cpu_ptm0_ETMACTR5_reserved:
  addr: 0xf889c090
  mask: 0xf8
  name: reserved
  description: |
    Reserved
ps7_debug_cpu_ptm0_ETMACTR5_AccessType:
  addr: 0xf889c090
  mask: 0x7
  name: AccessType
  description: |
    Access type. Returns the value: Instruction execute.
ps7_debug_cpu_ptm0_ETMACTR6_SecLevelCtrl:
  addr: 0xf889c094
  mask: 0xc00
  name: SecLevelCtrl
  description: |
    Security level control
ps7_debug_cpu_ptm0_ETMACTR6_ContextIDCompCtrl:
  addr: 0xf889c094
  mask: 0x300
  name: ContextIDCompCtrl
  description: |
    Context ID comparator control.
ps7_debug_cpu_ptm0_ETMACTR6_reserved:
  addr: 0xf889c094
  mask: 0xf8
  name: reserved
  description: |
    Reserved
ps7_debug_cpu_ptm0_ETMACTR6_AccessType:
  addr: 0xf889c094
  mask: 0x7
  name: AccessType
  description: |
    Access type. Returns the value: Instruction execute.
ps7_debug_cpu_ptm0_ETMACTR7_SecLevelCtrl:
  addr: 0xf889c098
  mask: 0xc00
  name: SecLevelCtrl
  description: |
    Security level control
ps7_debug_cpu_ptm0_ETMACTR7_ContextIDCompCtrl:
  addr: 0xf889c098
  mask: 0x300
  name: ContextIDCompCtrl
  description: |
    Context ID comparator control.
ps7_debug_cpu_ptm0_ETMACTR7_reserved:
  addr: 0xf889c098
  mask: 0xf8
  name: reserved
  description: |
    Reserved
ps7_debug_cpu_ptm0_ETMACTR7_AccessType:
  addr: 0xf889c098
  mask: 0x7
  name: AccessType
  description: |
    Access type. Returns the value: Instruction execute.
ps7_debug_cpu_ptm0_ETMACTR8_SecLevelCtrl:
  addr: 0xf889c09c
  mask: 0xc00
  name: SecLevelCtrl
  description: |
    Security level control
ps7_debug_cpu_ptm0_ETMACTR8_ContextIDCompCtrl:
  addr: 0xf889c09c
  mask: 0x300
  name: ContextIDCompCtrl
  description: |
    Context ID comparator control.
ps7_debug_cpu_ptm0_ETMACTR8_reserved:
  addr: 0xf889c09c
  mask: 0xf8
  name: reserved
  description: |
    Reserved
ps7_debug_cpu_ptm0_ETMACTR8_AccessType:
  addr: 0xf889c09c
  mask: 0x7
  name: AccessType
  description: |
    Access type. Returns the value: Instruction execute.
ps7_debug_cpu_ptm0_ETMCNTRLDVR1_InitValue:
  addr: 0xf889c140
  mask: 0xffff
  name: InitValue
  description: |
    Counter initial value
ps7_debug_cpu_ptm0_ETMCNTRLDVR2_InitValue:
  addr: 0xf889c144
  mask: 0xffff
  name: InitValue
  description: |
    Counter initial value
ps7_debug_cpu_ptm0_ETMCNTENR1_Reserved_1:
  addr: 0xf889c150
  mask: 0x20000
  name: Reserved_1
  description: |
    Reserved, RAO/WI
ps7_debug_cpu_ptm0_ETMCNTENR1_ExtOutEvent:
  addr: 0xf889c150
  mask: 0x1ffff
  name: ExtOutEvent
  description: |
    Count enable event. Subdivided as:
    Function, bits [16:14]
    Specifies the function that combines the two resources that define the event.
    Resource B, bits [13:7] and Resource A, bits [6:0]
    Specify the two resources that are combined by the logical operation specified by the Function field.
ps7_debug_cpu_ptm0_ETMCNTENR2_Reserved_1:
  addr: 0xf889c154
  mask: 0x20000
  name: Reserved_1
  description: |
    Reserved, RAO/WI
ps7_debug_cpu_ptm0_ETMCNTENR2_ExtOutEvent:
  addr: 0xf889c154
  mask: 0x1ffff
  name: ExtOutEvent
  description: |
    Count enable event. Subdivided as:
    Function, bits [16:14]
    Specifies the function that combines the two resources that define the event.
    Resource B, bits [13:7] and Resource A, bits [6:0]
    Specify the two resources that are combined by the logical operation specified by the Function field.
ps7_debug_cpu_ptm0_ETMCNTRLDEVR1_CntReloadEvent:
  addr: 0xf889c160
  mask: 0x1ffff
  name: CntReloadEvent
  description: |
    Count reload event. Subdivided as:
    Function, bits [16:14]
    Specifies the function that combines the two resources that define the event.
    Resource B, bits [13:7] and Resource A, bits [6:0]
    Specify the two resources that are combined by the logical operation specified by the Function field.
ps7_debug_cpu_ptm0_ETMCNTRLDEVR2_CntReloadEvent:
  addr: 0xf889c164
  mask: 0x1ffff
  name: CntReloadEvent
  description: |
    Count reload event. Subdivided as:
    Function, bits [16:14]
    Specifies the function that combines the two resources that define the event.
    Resource B, bits [13:7] and Resource A, bits [6:0]
    Specify the two resources that are combined by the logical operation specified by the Function field.
ps7_debug_cpu_ptm0_ETMCNTVR1_CurrCount:
  addr: 0xf889c170
  mask: 0xffff
  name: CurrCount
  description: |
    Current counter value.
ps7_debug_cpu_ptm0_ETMCNTVR2_CurrCount:
  addr: 0xf889c174
  mask: 0xffff
  name: CurrCount
  description: |
    Current counter value.
ps7_debug_cpu_ptm0_ETMSQ12EVR_TransEvent:
  addr: 0xf889c180
  mask: 0x1ffff
  name: TransEvent
  description: |
    A Sequencer State Transition Event Register, ETMSQmnEVR, defines the evnet that causes the sequencer state transition from state m to state n.
    The format is subdivided as:
    Function, bits [16:14]
    Specifies the function that combines the two resources that define the event.
    Resource B, bits [13:7] and Resource A, bits [6:0]
    Specify the two resources that are combined by the logical operation specified by the Function field.
ps7_debug_cpu_ptm0_ETMSQ21EVR_TransEvent:
  addr: 0xf889c184
  mask: 0x1ffff
  name: TransEvent
  description: |
    A Sequencer State Transition Event Register, ETMSQmnEVR, defines the evnet that causes the sequencer state transition from state m to state n.
    The format is subdivided as:
    Function, bits [16:14]
    Specifies the function that combines the two resources that define the event.
    Resource B, bits [13:7] and Resource A, bits [6:0]
    Specify the two resources that are combined by the logical operation specified by the Function field.
ps7_debug_cpu_ptm0_ETMSQ23EVR_TransEvent:
  addr: 0xf889c188
  mask: 0x1ffff
  name: TransEvent
  description: |
    A Sequencer State Transition Event Register, ETMSQmnEVR, defines the evnet that causes the sequencer state transition from state m to state n.
    The format is subdivided as:
    Function, bits [16:14]
    Specifies the function that combines the two resources that define the event.
    Resource B, bits [13:7] and Resource A, bits [6:0]
    Specify the two resources that are combined by the logical operation specified by the Function field.
ps7_debug_cpu_ptm0_ETMSQ31EVR_TransEvent:
  addr: 0xf889c18c
  mask: 0x1ffff
  name: TransEvent
  description: |
    A Sequencer State Transition Event Register, ETMSQmnEVR, defines the evnet that causes the sequencer state transition from state m to state n.
    The format is subdivided as:
    Function, bits [16:14]
    Specifies the function that combines the two resources that define the event.
    Resource B, bits [13:7] and Resource A, bits [6:0]
    Specify the two resources that are combined by the logical operation specified by the Function field.
ps7_debug_cpu_ptm0_ETMSQ32EVR_TransEvent:
  addr: 0xf889c190
  mask: 0x1ffff
  name: TransEvent
  description: |
    A Sequencer State Transition Event Register, ETMSQmnEVR, defines the evnet that causes the sequencer state transition from state m to state n.
    The format is subdivided as:
    Function, bits [16:14]
    Specifies the function that combines the two resources that define the event.
    Resource B, bits [13:7] and Resource A, bits [6:0]
    Specify the two resources that are combined by the logical operation specified by the Function field.
ps7_debug_cpu_ptm0_ETMSQ13EVR_TransEvent:
  addr: 0xf889c194
  mask: 0x1ffff
  name: TransEvent
  description: |
    A Sequencer State Transition Event Register, ETMSQmnEVR, defines the evnet that causes the sequencer state transition from state m to state n.
    The format is subdivided as:
    Function, bits [16:14]
    Specifies the function that combines the two resources that define the event.
    Resource B, bits [13:7] and Resource A, bits [6:0]
    Specify the two resources that are combined by the logical operation specified by the Function field.
ps7_debug_cpu_ptm0_ETMSQR_CurrentSeqState:
  addr: 0xf889c19c
  mask: 0x3
  name: CurrentSeqState
  description: |
    Indicates the current sequencer state
ps7_debug_cpu_ptm0_ETMEXTOUTEVR1_ExtOutputEvent:
  addr: 0xf889c1a0
  mask: 0x1ffff
  name: ExtOutputEvent
  description: |
    External output event. Subdivided as:
    Function, bits [16:14]
    Specifies the function that combines the two resources that define the event.
    Resource B, bits [13:7] and Resource A, bits [6:0]
    Specify the two resources that are combined by the logical operation specified by the Function field.
ps7_debug_cpu_ptm0_ETMEXTOUTEVR2_ExtOutputEvent:
  addr: 0xf889c1a4
  mask: 0x1ffff
  name: ExtOutputEvent
  description: |
    External output event. Subdivided as:
    Function, bits [16:14]
    Specifies the function that combines the two resources that define the event.
    Resource B, bits [13:7] and Resource A, bits [6:0]
    Specify the two resources that are combined by the logical operation specified by the Function field.
ps7_debug_cpu_ptm0_ETMCIDCVR1_ContextID:
  addr: 0xf889c1b0
  mask: 0xffffffff
  name: ContextID
  description: |
    Holds a 32-bit Context ID value
ps7_debug_cpu_ptm0_ETMCIDCMR_ContextMask:
  addr: 0xf889c1bc
  mask: 0xffffffff
  name: ContextMask
  description: |
    Holds a 32-bit Context ID mask
ps7_debug_cpu_ptm0_ETMSYNCFR_SyncFreq:
  addr: 0xf889c1e0
  mask: 0xffc
  name: SyncFreq
  description: |
    Synchronization frequency
ps7_debug_cpu_ptm0_ETMSYNCFR_reserved:
  addr: 0xf889c1e0
  mask: 0x3
  name: reserved
  description: |
    Reserved
ps7_debug_cpu_ptm0_ETMIDR_ImplCode:
  addr: 0xf889c1e4
  mask: 0xff000000
  name: ImplCode
  description: |
    Implementor code. The field reads 0x41, ASCII code for A, indicating ARM Limited.
ps7_debug_cpu_ptm0_ETMIDR_reserved:
  addr: 0xf889c1e4
  mask: 0xe00000
  name: reserved
  description: |
    Reserved
ps7_debug_cpu_ptm0_ETMIDR_reserved_1:
  addr: 0xf889c1e4
  mask: 0x100000
  name: reserved_1
  description: |
    Reserved, RAO
ps7_debug_cpu_ptm0_ETMIDR_SecExtSupp:
  addr: 0xf889c1e4
  mask: 0x80000
  name: SecExtSupp
  description: |
    Support for security extensions.
ps7_debug_cpu_ptm0_ETMIDR_Thumb32Supp:
  addr: 0xf889c1e4
  mask: 0x40000
  name: Thumb32Supp
  description: |
    Support for 32-bit Thumb instructions.
ps7_debug_cpu_ptm0_ETMIDR_reserved_2:
  addr: 0xf889c1e4
  mask: 0x30000
  name: reserved_2
  description: |
    Reserved
ps7_debug_cpu_ptm0_ETMIDR_Reserved_F:
  addr: 0xf889c1e4
  mask: 0xf000
  name: Reserved_F
  description: |
    Reserved, 0b1111
ps7_debug_cpu_ptm0_ETMIDR_MajorVer:
  addr: 0xf889c1e4
  mask: 0xf00
  name: MajorVer
  description: |
    Major architecture version number, 0b0011
ps7_debug_cpu_ptm0_ETMIDR_MinorVer:
  addr: 0xf889c1e4
  mask: 0xf0
  name: MinorVer
  description: |
    Minor architecture version number, 0b0000
ps7_debug_cpu_ptm0_ETMIDR_ImplRev:
  addr: 0xf889c1e4
  mask: 0xf
  name: ImplRev
  description: |
    Implementation revision.
ps7_debug_cpu_ptm0_ETMCCER_BarrTS:
  addr: 0xf889c1e8
  mask: 0x2000000
  name: BarrTS
  description: |
    Timestamps are not generated for DMB/DSB
ps7_debug_cpu_ptm0_ETMCCER_BarrWP:
  addr: 0xf889c1e8
  mask: 0x1000000
  name: BarrWP
  description: |
    DMB/DSB instructions are not treated as waypoints.
ps7_debug_cpu_ptm0_ETMCCER_RetStack:
  addr: 0xf889c1e8
  mask: 0x800000
  name: RetStack
  description: |
    Return stack implemented.
ps7_debug_cpu_ptm0_ETMCCER_Timestamp:
  addr: 0xf889c1e8
  mask: 0x400000
  name: Timestamp
  description: |
    Timestamping implemented.
ps7_debug_cpu_ptm0_ETMCCER_reserved:
  addr: 0xf889c1e8
  mask: 0x3f0000
  name: reserved
  description: |
    Reserved
ps7_debug_cpu_ptm0_ETMCCER_InstrumRes:
  addr: 0xf889c1e8
  mask: 0xe000
  name: InstrumRes
  description: |
    Specifies the number of instrumentation resources.
ps7_debug_cpu_ptm0_ETMCCER_Reserved_1:
  addr: 0xf889c1e8
  mask: 0x1000
  name: Reserved_1
  description: |
    Reserved, RAO
ps7_debug_cpu_ptm0_ETMCCER_RegReads:
  addr: 0xf889c1e8
  mask: 0x800
  name: RegReads
  description: |
    Indicates that all registers, except some Integration Test Registers, are readable.
ps7_debug_cpu_ptm0_ETMCCER_ExtInSize:
  addr: 0xf889c1e8
  mask: 0x7f8
  name: ExtInSize
  description: |
    Specifies the size of the extended external input bus, 52.
ps7_debug_cpu_ptm0_ETMCCER_ExtInSel:
  addr: 0xf889c1e8
  mask: 0x7
  name: ExtInSel
  description: |
    Specifies the number of extended external input selectors, 2.
ps7_debug_cpu_ptm0_ETMEXTINSELR_ExtInSel2:
  addr: 0xf889c1ec
  mask: 0x3f00
  name: ExtInSel2
  description: |
    Second extended external input selector
ps7_debug_cpu_ptm0_ETMEXTINSELR_reserved:
  addr: 0xf889c1ec
  mask: 0xc0
  name: reserved
  description: |
    Reserved
ps7_debug_cpu_ptm0_ETMEXTINSELR_ExtInSel1:
  addr: 0xf889c1ec
  mask: 0x3f
  name: ExtInSel1
  description: |
    First extended external input selector
ps7_debug_cpu_ptm0_ETMAUXCR_ForceSyncInsert:
  addr: 0xf889c1fc
  mask: 0x8
  name: ForceSyncInsert
  description: |
    Force insertion of synchronization packets, regardless of current trace activity.
    Possible values for this bit are:
    b0 = Synchronization packets delayed when trace activity is high. This is the reset value.
    b1 = Synchronization packets inserted regardless of trace activity.
    This bit might be set if synchronization packets occur too far apart. Setting this bit might cause the trace FIFO to overflow more frequently when trace activity is high.
ps7_debug_cpu_ptm0_ETMAUXCR_DisableWPUpdate:
  addr: 0xf889c1fc
  mask: 0x4
  name: DisableWPUpdate
  description: |
    Specifies whether the PTM issues waypoint update packets if there are more than 4096 bytes between waypoints. Possible values for this bit are:
    b0 = PTM always issues update packets if there are more than 4096 bytes between waypoints. This is the reset value.
    b1 = PTM does not issue waypoint update packets unless required to do so as the result of an exception or debug entry.
ps7_debug_cpu_ptm0_ETMAUXCR_DisableTSOnBarr:
  addr: 0xf889c1fc
  mask: 0x2
  name: DisableTSOnBarr
  description: |
    Specifies whether the PTM issues a timestamp on a barrier instruction. Possible values for this bit are:
    b0 = PTM issues timestamps on barrier instructions. This is the reset value.
    b1 = PTM does not issue timestamps on barriers
ps7_debug_cpu_ptm0_ETMAUXCR_DisableForcedOF:
  addr: 0xf889c1fc
  mask: 0x1
  name: DisableForcedOF
  description: |
    Specifies whether the PTM enters overflow state when synchronization is requested,
    and the previous synchronization sequence has not yet completed. This does not affect entry to overflow state when the FIFO becomes full. Possible values for this bit are:
    b0 = Forced overflow enabled. This is the reset value.
    b1 = Forced overflow disabled.
ps7_debug_cpu_ptm0_ETMTRACEIDR_TraceID:
  addr: 0xf889c200
  mask: 0x7f
  name: TraceID
  description: |
    Before trace is generated, you must program this register with a non-reserved value.
    Reserved values are 0x00 and any value in the range 0x70-0x7F. The reset value of this register is 0x00.
ps7_debug_cpu_ptm0_OSLSR_a:
  addr: 0xf889c304
  mask: 0xffffffff
  name: a
  description: |
    Shows that OS Locking is not implemented.
ps7_debug_cpu_ptm0_ETMPDSR_a:
  addr: 0xf889c314
  mask: 0xffffffff
  name: a
  description: |
    Indicates that the PTM Trace Registers can be accessed.
ps7_debug_cpu_ptm0_ITMISCOUT_PTMEXTOUT:
  addr: 0xf889cedc
  mask: 0x300
  name: PTMEXTOUT
  description: |
    Drives the PTMEXTOUT[1:0] outputs
ps7_debug_cpu_ptm0_ITMISCOUT_reserved:
  addr: 0xf889cedc
  mask: 0xc0
  name: reserved
  description: |
    Reserved
ps7_debug_cpu_ptm0_ITMISCOUT_PTMIDLEACK:
  addr: 0xf889cedc
  mask: 0x20
  name: PTMIDLEACK
  description: |
    Drives the PTMIDLEACK output
ps7_debug_cpu_ptm0_ITMISCOUT_PTMDBGREQ:
  addr: 0xf889cedc
  mask: 0x10
  name: PTMDBGREQ
  description: |
    Drives the PTMDBGREQ output
ps7_debug_cpu_ptm0_ITMISCOUT_reserved_1:
  addr: 0xf889cedc
  mask: 0xf
  name: reserved_1
  description: |
    Reserved
ps7_debug_cpu_ptm0_ITMISCIN_STANDBYWFI:
  addr: 0xf889cee0
  mask: 0x40
  name: STANDBYWFI
  description: |
    Returns the value of the STANDBYWFI input
ps7_debug_cpu_ptm0_ITMISCIN_reserved:
  addr: 0xf889cee0
  mask: 0x20
  name: reserved
  description: |
    Reserved
ps7_debug_cpu_ptm0_ITMISCIN_PTMDBGACK:
  addr: 0xf889cee0
  mask: 0x10
  name: PTMDBGACK
  description: |
    Returns the value of the PTMDBGACK input
ps7_debug_cpu_ptm0_ITMISCIN_EXTIN:
  addr: 0xf889cee0
  mask: 0xf
  name: EXTIN
  description: |
    Returns the value of the EXTIN[3:0] inputs
ps7_debug_cpu_ptm0_ITTRIGGER_PTMTRIGGER:
  addr: 0xf889cee8
  mask: 0x1
  name: PTMTRIGGER
  description: |
    Drives the PTMTRIGGER output
ps7_debug_cpu_ptm0_ITATBDATA0_ATDATAM31:
  addr: 0xf889ceec
  mask: 0x10
  name: ATDATAM31
  description: |
    Drives the ATDATAM[31] output
ps7_debug_cpu_ptm0_ITATBDATA0_ATDATAM23:
  addr: 0xf889ceec
  mask: 0x8
  name: ATDATAM23
  description: |
    Drives the ATDATAM[23] output
ps7_debug_cpu_ptm0_ITATBDATA0_ATDATAM15:
  addr: 0xf889ceec
  mask: 0x4
  name: ATDATAM15
  description: |
    Drives the ATDATAM[15] output
ps7_debug_cpu_ptm0_ITATBDATA0_ATDATAM7:
  addr: 0xf889ceec
  mask: 0x2
  name: ATDATAM7
  description: |
    Drives the ATDATAM[7] output
ps7_debug_cpu_ptm0_ITATBDATA0_ATDATAM0:
  addr: 0xf889ceec
  mask: 0x1
  name: ATDATAM0
  description: |
    Drives the ATDATAM[0] output
ps7_debug_cpu_ptm0_ITATBCTR2_AFVALIDM:
  addr: 0xf889cef0
  mask: 0x2
  name: AFVALIDM
  description: |
    Returns the value of the AFVALIDM input
ps7_debug_cpu_ptm0_ITATBCTR2_ATREADYM:
  addr: 0xf889cef0
  mask: 0x1
  name: ATREADYM
  description: |
    Returns the value of the ATREADYM input
ps7_debug_cpu_ptm0_ITATBID_ATIDM:
  addr: 0xf889cef4
  mask: 0x7f
  name: ATIDM
  description: |
    Drives the ATIDM[6:0] outputs
ps7_debug_cpu_ptm0_ITATBCTR0_ATBYTESM:
  addr: 0xf889cef8
  mask: 0x300
  name: ATBYTESM
  description: |
    Drives the ATBYTESM[9:8] outputs
ps7_debug_cpu_ptm0_ITATBCTR0_reserved:
  addr: 0xf889cef8
  mask: 0xfc
  name: reserved
  description: |
    Reserved
ps7_debug_cpu_ptm0_ITATBCTR0_AFREADYM:
  addr: 0xf889cef8
  mask: 0x2
  name: AFREADYM
  description: |
    Drives the AFREADYM output
ps7_debug_cpu_ptm0_ITATBCTR0_ATVALIDM:
  addr: 0xf889cef8
  mask: 0x1
  name: ATVALIDM
  description: |
    Drives the ATVALIDM output
ps7_debug_cpu_ptm0_ETMITCTRL_a:
  addr: 0xf889cf00
  mask: 0x1
  name: a
  description: |
    Enable Integration Test registers.
    Before entering integration mode, the PTM must be powered up and in programming mode.
    THis means bit 0 of the Main Control Register is set to 0, and bit 10 of the Main Control Register ist set 1.
    After leaving integration mode, the PTM must be reset before attempting to perform tracing.
ps7_debug_cpu_ptm0_CTSR_a:
  addr: 0xf889cfa0
  mask: 0xff
  name: a
  description: |
    The claim tag register is used for any interrogating tools to determine if the device is being programmed or has been programmed.
    Read:
    1= Claim tag is implemented, 0 = Claim tag is not implemented
    Write:
    1= Set claim tag bit, 0= No effect
ps7_debug_cpu_ptm0_CTCR_a:
  addr: 0xf889cfa4
  mask: 0xff
  name: a
  description: |
    The claim tag register is used for any interrogating tools to determine if the device is being programmed or has been programmed.
    Read: Current value of claim tag.
    Write: 1= Clear claim tag bit, 0= No effect
ps7_debug_cpu_ptm0_LAR_a:
  addr: 0xf889cfb0
  mask: 0xffffffff
  name: a
  description: |
    Write Access Code.
    Write behavior depends on PADDRDBG31 pin:
    - PADDRDBG31=0 (lower 2GB):
    After reset (via PRESETDBGn), PTM is locked, i.e., writes to all other registers using lower 2GB addresses are ignored.
    To unlock, 0xC5ACCE55 must be written this register.
    After the required registers are written, to lock again, write a value other than 0xC5ACCE55 to this register.
    - PADDRDBG31=1 (upper 2GB):
    PTM is unlocked when upper 2GB addresses are used to write to all the registers.
    However, write to this register is ignored using a upper 2GB address!
    Note: read from this register always returns 0, regardless of PADDRDBG31.
ps7_debug_cpu_ptm0_LSR_n8BIT:
  addr: 0xf889cfb4
  mask: 0x4
  name: n8BIT
  description: |
    Set to 0 since PTM implements a 32-bit lock access register
ps7_debug_cpu_ptm0_LSR_STATUS:
  addr: 0xf889cfb4
  mask: 0x2
  name: STATUS
  description: |
    Read behavior depends on PADDRDBG31 pin:
    - PADDRDBG31=0 (lower 2GB):
    When a lower 2GB address is used to read this register, this bit indicates whether PTM is in locked state
    (1= locked, 0= unlocked).
    - PADDRDBG31=1 (upper 2GB):
    always returns 0.
ps7_debug_cpu_ptm0_LSR_IMP:
  addr: 0xf889cfb4
  mask: 0x1
  name: IMP
  description: |
    Read behavior depends on PADDRDBG31 pin:
    - PADDRDBG31=0 (lower 2GB):
    always returns 1, meaning lock mechanism are implemented.
    - PADDRDBG31=1 (upper 2GB):
    always returns 0, meaning lock mechanism is NOT implemented.
ps7_debug_cpu_ptm0_ASR_SNI:
  addr: 0xf889cfb8
  mask: 0xc0
  name: SNI
  description: |
    Secure non-invasive debug
    Always 2'b00,.
    This functionality is not implemented
ps7_debug_cpu_ptm0_ASR_SI:
  addr: 0xf889cfb8
  mask: 0x30
  name: SI
  description: |
    Secure invasive debug
    Always 2'b00.
    This functionality is not implemented.
ps7_debug_cpu_ptm0_ASR_NSNI:
  addr: 0xf889cfb8
  mask: 0xc
  name: NSNI
  description: |
    Non-secure non-invasive debug
    IF NIDEN or DBGEN is 1, this field is 2'b11, indicating the functionality is implemented and enabled.
    Otherwise, this field is 2'b10 (implemented but disabled)
ps7_debug_cpu_ptm0_ASR_NSI:
  addr: 0xf889cfb8
  mask: 0x3
  name: NSI
  description: |
    Non-secure invasive debug
    Always 2'b00.
    This functionality is not implemented.
ps7_debug_cpu_ptm0_DEVID_a:
  addr: 0xf889cfc8
  mask: 0xffffffff
  name: a
  description: |
    Component capability
ps7_debug_cpu_ptm0_DTIR_a:
  addr: 0xf889cfcc
  mask: 0xff
  name: a
  description: |
    A trace source and processor trace
ps7_debug_cpu_ptm0_PERIPHID4_n4KB_count:
  addr: 0xf889cfd0
  mask: 0xf0
  name: n4KB_count
  description: |
    4KB Count, set to 0
ps7_debug_cpu_ptm0_PERIPHID4_JEP106ID:
  addr: 0xf889cfd0
  mask: 0xf
  name: JEP106ID
  description: |
    JEP106 continuation code
ps7_debug_cpu_ptm0_PERIPHID5_a:
  addr: 0xf889cfd4
  mask: 0xff
  name: a
  description: |
    reserved
ps7_debug_cpu_ptm0_PERIPHID6_a:
  addr: 0xf889cfd8
  mask: 0xff
  name: a
  description: |
    reserved
ps7_debug_cpu_ptm0_PERIPHID7_a:
  addr: 0xf889cfdc
  mask: 0xff
  name: a
  description: |
    reserved
ps7_debug_cpu_ptm0_PERIPHID0_a:
  addr: 0xf889cfe0
  mask: 0xff
  name: a
  description: |
    PartNumber0
ps7_debug_cpu_ptm0_PERIPHID1_JEP106ID:
  addr: 0xf889cfe4
  mask: 0xf0
  name: JEP106ID
  description: |
    JEP106 Identity Code [3:0]
ps7_debug_cpu_ptm0_PERIPHID1_PartNumber1:
  addr: 0xf889cfe4
  mask: 0xf
  name: PartNumber1
  description: |
    PartNumber1
ps7_debug_cpu_ptm0_PERIPHID2_RevNum:
  addr: 0xf889cfe8
  mask: 0xf0
  name: RevNum
  description: |
    Revision number of Peripheral
ps7_debug_cpu_ptm0_PERIPHID2_JEDEC:
  addr: 0xf889cfe8
  mask: 0x8
  name: JEDEC
  description: |
    Indicates that a JEDEC assigned value is used
ps7_debug_cpu_ptm0_PERIPHID2_JEP106ID:
  addr: 0xf889cfe8
  mask: 0x7
  name: JEP106ID
  description: |
    JEP106 Identity Code [6:4]
ps7_debug_cpu_ptm0_PERIPHID3_RevAnd:
  addr: 0xf889cfec
  mask: 0xf0
  name: RevAnd
  description: |
    RevAnd, at top level
ps7_debug_cpu_ptm0_PERIPHID3_CustMod:
  addr: 0xf889cfec
  mask: 0xf
  name: CustMod
  description: |
    Customer Modified
ps7_debug_cpu_ptm0_COMPID0_a:
  addr: 0xf889cff0
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_debug_cpu_ptm0_COMPID1_a:
  addr: 0xf889cff4
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_debug_cpu_ptm0_COMPID2_a:
  addr: 0xf889cff8
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_debug_cpu_ptm0_COMPID3_a:
  addr: 0xf889cffc
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_sd1_SDMA_system_address_register_SDMA_System_Address:
  addr: 0xe0101000
  mask: 0xffffffff
  name: SDMA_System_Address
  description: |
    Watchdog enable - if set, the watchdog is enabled and can generate any signals that are enabled.
ps7_sd1_Block_Size_Block_Count_Blocks_Count_for_Current_Transfer:
  addr: 0xe0101004
  mask: 0xffff0000
  name: Blocks_Count_for_Current_Transfer
  description: |
    This register is enabled when Block Count Enable in the Transfer
    Mode register is set to 1 and is valid only for multiple block transfers. The HC decrements the block count after each block transfer and stops when the count reaches zero. It can be accessed only if no transaction is
    executing (i.e. after a transaction has stopped). Read operations
    during transfer return an invalid value and write operations shall
    be ignored. When saving transfer context as a result of Suspend command, the number of blocks yet to be transferred can be determined
    by reading this register. When restoring transfer context prior to
    issuing a Resume command, the HD shall restore the previously
    save block count.
    0000h - Stop Count
    0001h - 1 block
    0002h - 2 blocks
    --- ---
    FFFFh - 65535 blocks
ps7_sd1_Block_Size_Block_Count_reserved:
  addr: 0xe0101004
  mask: 0x8000
  name: reserved
  description: |
    Reserved
ps7_sd1_Block_Size_Block_Count_Host_SDMA_Buffer_Size:
  addr: 0xe0101004
  mask: 0x7000
  name: Host_SDMA_Buffer_Size
  description: |
    To perform long DMA transfer, the System Address register shall be updated at every system boundary during a DMA transfer. These bits specify the size of contiguous buffer in the system memory. The DMA transfer shall wait at every boundary specified by these fields and the HC generates the DMA Interrupt to request the HD to update the System Address register.
    These bits shall support when the DMA Support in the Capabilities register is set to 1 and this function is active when the DMA Enable in the Transfer Mode register is set to 1.
    000b - 4KB(Detects A11 Carry out)
    001b - 8KB(Detects A12 Carry out)
    010b - 16KB(Detects A13 Carry out)
    011b - 32KB(Detects A14 Carry out)
    100b - 64KB(Detects A15 Carry out)
    101b -128KB(Detects A16 Carry out)
    110b - 256KB(Detects A17 Carry out)
    111b - 512KB(Detects A18 Carry out)
ps7_sd1_Block_Size_Block_Count_Transfer_Block_Size:
  addr: 0xe0101004
  mask: 0xfff
  name: Transfer_Block_Size
  description: |
    This register specifies the block size for block data transfers for CMD17, CMD18, CMD24, CMD25, and CMD53. It can be accessed only if no transaction is executing (i.e. after a transaction has stopped). Read operations during transfer return an invalid value and write operations shall be ignored.
    0000h - No Data Transfer
    0001h - 1 Byte
    0002h - 2 Bytes
    0003h - 3 Bytes
    0004h - 4 Bytes
    --- ---
    01FFh - 511 Bytes
    0200h - 512 Bytes
    --- ---
    0800h - 2048 Bytes
ps7_sd1_Argument_Command_Argument:
  addr: 0xe0101008
  mask: 0xffffffff
  name: Command_Argument
  description: |
    The SD Command Argument is specified as bit 39-8 of Command-Format.
ps7_sd1_Transfer_Mode_Command_reserved_3:
  addr: 0xe010100c
  mask: 0xc0000000
  name: reserved_3
  description: |
    Reserved
ps7_sd1_Transfer_Mode_Command_Command_Index:
  addr: 0xe010100c
  mask: 0x3f000000
  name: Command_Index
  description: |
    This bit shall be set to the command number (CMD0-63, ACMD0-63).
ps7_sd1_Transfer_Mode_Command_Command_Type:
  addr: 0xe010100c
  mask: 0xc00000
  name: Command_Type
  description: |
    There are three types of special commands. Suspend, Resume and Abort. These bits shall bet set to 00b for all other commands. Suspend Command If the Suspend command succeeds, the HC shall assume the SD Bus has been released and that it is possible to issue the next command which uses the DAT line. The HC shall de-assert Read Wait for read transactions and stop checking busy for write transactions. The Interrupt cycle shall start, in 4-bit mode. If the Suspend command fails, the HC shall maintain its current state. and the HD shall restart the transfer by setting Continue Request in the Block Gap Control Register. Resume Command The HD re-starts the data transfer by restoring the registers in the range of 000-00Dh. The HC shall check for busy before starting write transfers. Abort Command If this command is set when executing a read transfer, the HC shall stop reads to the buffer. If this command is set when executing a write transfer, the HC shall stop driving the DAT line. After issuing the Abort command, the HD should issue a software reset
    00b - Normal
    01b - Suspend
    10b - Resume
    11b - Abort
ps7_sd1_Transfer_Mode_Command_Data_Present_Select:
  addr: 0xe010100c
  mask: 0x200000
  name: Data_Present_Select
  description: |
    This bit is set to 1 to indicate that data is present and shall be transferred using the DAT line. If is set to 0 for the following:
    1. Commands using only CMD line (ex. CMD52)
    2. Commands with no data transfer but using busy signal on DAT[0]
    line (R1b or R5b ex. CMD38)
    3. Resume Command
    0 - No Data Present
    1 - Data Present
ps7_sd1_Transfer_Mode_Command_Command_Index_Check_Enable:
  addr: 0xe010100c
  mask: 0x100000
  name: Command_Index_Check_Enable
  description: |
    If this bit is set to 1, the HC shall check the index field in the response to see if it has the same value as the command index. If it is not, it is reported as a Command Index Error. If this bit is set to 0, the Index field is not checked.
    0 - Disable
    1 - Enable
ps7_sd1_Transfer_Mode_Command_Command_CRC_Check_Enable:
  addr: 0xe010100c
  mask: 0x80000
  name: Command_CRC_Check_Enable
  description: |
    If this bit is set to 1, the HC shall check the CRC field in the response. If an error is detected, it is reported as a Command CRC Error. If this bit is set to 0, the CRC field is not checked.
    0 - Disable
    1 - Enable
ps7_sd1_Transfer_Mode_Command_reserved_2:
  addr: 0xe010100c
  mask: 0x40000
  name: reserved_2
  description: |
    Reserved
ps7_sd1_Transfer_Mode_Command_Response_Type_Select:
  addr: 0xe010100c
  mask: 0x30000
  name: Response_Type_Select
  description: |
    Response Type Select
    00 - No Response
    01 - Response length 136
    10 - Response length 48
    11 - Response length 48 check
    Busy after response
ps7_sd1_Transfer_Mode_Command_reserved_1:
  addr: 0xe010100c
  mask: 0xffc0
  name: reserved_1
  description: |
    Reserved
ps7_sd1_Transfer_Mode_Command_Multi_Single_Block_Select:
  addr: 0xe010100c
  mask: 0x20
  name: Multi_Single_Block_Select
  description: |
    This bit enables multiple block DAT line data transfers.
    0 - Single Block
    1 - Multiple Block
ps7_sd1_Transfer_Mode_Command_Data_Transfer_Direction_Select:
  addr: 0xe010100c
  mask: 0x10
  name: Data_Transfer_Direction_Select
  description: |
    This bit defines the direction of DAT line data transfers.
    0 - Write (Host to Card)
    1 - Read (Card to Host)
ps7_sd1_Transfer_Mode_Command_reserved:
  addr: 0xe010100c
  mask: 0x8
  name: reserved
  description: |
    Reserved
ps7_sd1_Transfer_Mode_Command_Auto_CMD12_Enable:
  addr: 0xe010100c
  mask: 0x4
  name: Auto_CMD12_Enable
  description: |
    Multiple block transfers for memory require CMD12 to stop the transaction. When this bit is set to 1, the HC shall issue CMD12 automatically when last block transfer is completed. The HD shall not set this bit to issue commands that do not require CMD12 to stop data transfer.
    0 - Disable
    1 - Enable
ps7_sd1_Transfer_Mode_Command_Block_Count_Enable:
  addr: 0xe010100c
  mask: 0x2
  name: Block_Count_Enable
  description: |
    This bit is used to enable the Block count register, which is only relevant for multiple block transfers. When this bit is 0, the Block Count register is disabled, which is useful in executing an infinite transfer.
    0 - Disable
    1 - Enable
ps7_sd1_Transfer_Mode_Command_DMA_Enable:
  addr: 0xe010100c
  mask: 0x1
  name: DMA_Enable
  description: |
    DMA can be enabled only if DMA Support bit in the Capabilities register is set. If this bit is set to 1, a DMA operation shall begin when the HD writes to the upper byte of Command register (00Fh).
    0 - Disable
    1 - Enable
ps7_sd1_Response0_Command_Response:
  addr: 0xe0101010
  mask: 0xffffffff
  name: Command_Response
  description: |
    command responses registers
ps7_sd1_Response1_Command_Response:
  addr: 0xe0101014
  mask: 0xffffffff
  name: Command_Response
  description: |
    command responses registers
ps7_sd1_Response2_Command_Response:
  addr: 0xe0101018
  mask: 0xffffffff
  name: Command_Response
  description: |
    command responses registers
ps7_sd1_Response3_Command_Response:
  addr: 0xe010101c
  mask: 0xffffffff
  name: Command_Response
  description: |
    command responses registers
ps7_sd1_Buffer_Data_Port_Buffer_Data:
  addr: 0xe0101020
  mask: 0xffffffff
  name: Buffer_Data
  description: |
    The Host Controller Buffer can be accessed through this 32-bit Data Port Register.
ps7_sd1_Present_State_CMD_Line_Signal_Level:
  addr: 0xe0101024
  mask: 0x1000000
  name: CMD_Line_Signal_Level
  description: |
    This status is used to check CMD line level to recover from errors, and for debugging.
ps7_sd1_Present_State_DAT_Bit3_Bit0_Line_Signal_Level:
  addr: 0xe0101024
  mask: 0xf00000
  name: DAT_Bit3_Bit0_Line_Signal_Level
  description: |
    This status is used to check DAT line level to recover from errors, and for debugging. This is especially useful in detecting the busy signal level from DAT[0].
    D23 - DAT[3]
    D22 - DAT[2]
    D21 - DAT[1]
    D20 - DAT[0]
ps7_sd1_Present_State_Write_Protect_Switch_Pin_Level:
  addr: 0xe0101024
  mask: 0x80000
  name: Write_Protect_Switch_Pin_Level
  description: |
    The Write Protect Switch is supported for memory and combo cards. This bit reflects the SDWP# pin.
    0 - Write protected (SDWP# = 1)
    1 - Write enabled (SDWP# = 0)
ps7_sd1_Present_State_Card_Detect_Pin_Level:
  addr: 0xe0101024
  mask: 0x40000
  name: Card_Detect_Pin_Level
  description: |
    This bit reflects the inverse value of the SDCD# pin.
    0 - No Card present (SDCD# = 1)
    1 - Card present (SDCD# = 0)
ps7_sd1_Present_State_Card_State_Stable:
  addr: 0xe0101024
  mask: 0x20000
  name: Card_State_Stable
  description: |
    This bit is used for testing. If it is 0, the Card Detect Pin Level is not stable. If this bit is set to 1, it means the Card Detect Pin Level is stable. The Software Reset For All in the Software Reset Register shall not affect this bit.
    0 - Reset of Debouncing
    1 - No Card or Inserted
ps7_sd1_Present_State_Card_Inserted:
  addr: 0xe0101024
  mask: 0x10000
  name: Card_Inserted
  description: |
    This bit indicates whether a card has been inserted. Changing from 0 to 1 generates a Card Insertion interrupt in the Normal Interrupt Status register and changing from 1 to 0 generates a Card Removal Interrupt in the Normal Interrupt Status register. The Software Reset For All in the Software Reset register shall not affect this bit. If a Card is removed while its power is on and its clock is oscillating, the HC shall clear SD Bus Power in the Power Control register and SD Clock Enable in the Clock control register. In addition the HD should clear the HC by the Software Reset For All in Software register. The card detect is active regardless of the SD Bus Power.
    0 - Reset or Debouncing or No Card
    1 - Card Inserted
ps7_sd1_Present_State_reserved_1:
  addr: 0xe0101024
  mask: 0xf000
  name: reserved_1
  description: |
    Reserved
ps7_sd1_Present_State_Buffer_Read_Enable:
  addr: 0xe0101024
  mask: 0x800
  name: Buffer_Read_Enable
  description: |
    This status is used for non-DMA read transfers. This read only flag indicates that valid data exists in the host side buffer status. If this bit is 1, readable data exists in the buffer. A change of this bit from 1 to 0 occurs when all the block data is read from the buffer. A change of this bit from 0 to 1 occurs when all the block data is ready in the buffer and generates the Buffer Read Ready Interrupt.
    0 - Read Disable
    1 - Read Enable.
ps7_sd1_Present_State_Buffer_Write_Enable:
  addr: 0xe0101024
  mask: 0x400
  name: Buffer_Write_Enable
  description: |
    This status is used for non-DMA write transfers. This read only flag indicates if space is available for write data. If this bit is 1, data can be written to the buffer. A change of this bit from 1 to 0 occurs when all the block data is written to the buffer. A change of this bit from 0 to 1 occurs when top of block data can be written to the buffer and generates the Buffer Write Ready Interrupt.
    0 - Write Disable
    1 - Write Enable.
ps7_sd1_Present_State_Read_Transfer_Active:
  addr: 0xe0101024
  mask: 0x200
  name: Read_Transfer_Active
  description: |
    This status is used for detecting completion of a read transfer.
    This bit is set to 1 for either of the following conditions:
    1. After the end bit of the read command
    2. When writing a 1 to continue Request in the Block Gap Control register to restart a read transfer
    This bit is cleared to 0 for either of the following
    conditions:
    1. When the last data block as specified by block length is transferred to the system.
    2. When all valid data blocks have been transferred to the system and no current block transfers are being sent as a result of the Stop At Block Gap Request set to 1. A transfer complete interrupt is generated when this bit changes to 0.
    1 - Transferring data
    0 - No valid data
ps7_sd1_Present_State_Write_Transfer_Active:
  addr: 0xe0101024
  mask: 0x100
  name: Write_Transfer_Active
  description: |
    This status indicates a write transfer is active. If this bit is 0, it means no valid write data exists in the HC. This bit is set in either of the following cases:
    1. After the end bit of the write command.
    2. When writing a 1 to Continue Request in the Block Gap Control register to restart a write transfer.
    This bit is cleared in either of the following cases:
    1. After getting the CRC status of the last data block as specified by the transfer count (Single or Multiple)
    2. After getting a CRC status of any block where data transmission is about to be stopped by a Stop At Block Gap Request.
    During a write transaction, a Block Gap Event interrupt is generated when this bit is changed to 0, as a result of the Stop At Block Gap Request being set. This status is useful for the HD in determining when to issue commands during write busy.
    1 - transferring data
    0 - No valid data
ps7_sd1_Present_State_reserved:
  addr: 0xe0101024
  mask: 0xf8
  name: reserved
  description: |
    Reserved
ps7_sd1_Present_State_DAT_Line_Active:
  addr: 0xe0101024
  mask: 0x4
  name: DAT_Line_Active
  description: |
    This bit indicates whether one of the DAT line on SD bus is in use.
    1 - DAT line active
    0 - DAT line inactive
ps7_sd1_Present_State_Command_Inhibit_DAT:
  addr: 0xe0101024
  mask: 0x2
  name: Command_Inhibit_DAT
  description: |
    This status bit is generated if either the DAT Line Active or the Read transfer Active is set to 1. If this bit is 0, it indicates the HC can issue the next SD command. Commands with busy signal belong to Command Inhibit (DAT) (ex. R1b, R5b type). Changing from 1 to 0 generates a Transfer Complete interrupt in the Normal interrupt status register.
    Note: The SD Host Driver can save registers in the range of 000-00Dh for a suspend transaction after this bit has changed from 1 to 0.
    1 - cannot issue command which uses the DAT line
    0 - Can issue command which uses the DAT line
ps7_sd1_Present_State_Command_Inhibit_CMD:
  addr: 0xe0101024
  mask: 0x1
  name: Command_Inhibit_CMD
  description: |
    If this bit is 0, it indicates the CMD line is not in use and the HC can issue a SD command using the CMD line. This bit is set immediately after the Command register (00Fh) is written. This bit is cleared when the command response is received. Even if the Command Inhibit (DAT) is set to 1, Commands using only the CMD line can be issued if this bit is 0. Changing from 1 to 0 generates a Command complete interrupt in the Normal Interrupt Status register. If the HC cannot issue the command because of a command conflict error or because of Command Not Issued By Auto CMD12 Error, this bit shall remain 1 and the Command Complete is not set. Status issuing Auto CMD12 is not read from this bit. Note: The SD host controller requires couple of clocks to update this register bit after the command is posted to command register.
ps7_sd1_Host_control_Power_control_Block_Gap_Control_Wakeup_control_reserved_3:
  addr: 0xe0101028
  mask: 0xf8000000
  name: reserved_3
  description: |
    Reserved
ps7_sd1_Host_control_Power_control_Block_Gap_Control_Wakeup_control_Wakeup_Event_Enable_On_SD_Card_Removal:
  addr: 0xe0101028
  mask: 0x4000000
  name: Wakeup_Event_Enable_On_SD_Card_Removal
  description: |
    This bit enables wakeup event via
    Card Removal assertion in the
    Normal Interrupt Status register.
    FN_WUS (Wake up Support) in
    CIS does not affect this bit.
    1 - Enable
    0 - Disable
ps7_sd1_Host_control_Power_control_Block_Gap_Control_Wakeup_control_Wakeup_Event_Enable_On_SD_Card_Insertion:
  addr: 0xe0101028
  mask: 0x2000000
  name: Wakeup_Event_Enable_On_SD_Card_Insertion
  description: |
    This bit enables wakeup event via Card Insertion assertion in the Normal Interrupt Status register. FN_WUS (Wake up Support) in CIS does not affect this bit.
    1 - Enable
    0 - Disable
ps7_sd1_Host_control_Power_control_Block_Gap_Control_Wakeup_control_Wakeup_Event_Enable_On_Card_Interrupt:
  addr: 0xe0101028
  mask: 0x1000000
  name: Wakeup_Event_Enable_On_Card_Interrupt
  description: |
    This bit enables wakeup event via
    Card Interrupt assertion in the
    Normal Interrupt Status register.
    This bit can be set to 1 if FN_WUS
    (Wake Up Support) in CIS is set to
    1.
    1 - Enable
    0 - Disable
ps7_sd1_Host_control_Power_control_Block_Gap_Control_Wakeup_control_reserved_2:
  addr: 0xe0101028
  mask: 0xf00000
  name: reserved_2
  description: |
    Reserved
ps7_sd1_Host_control_Power_control_Block_Gap_Control_Wakeup_control_Interrupt_At_Block_Gap:
  addr: 0xe0101028
  mask: 0x80000
  name: Interrupt_At_Block_Gap
  description: |
    This bit is valid only in 4-bit mode of the SDIO
    card and selects a sample point in the interrupt
    cycle. Setting to 1 enables interrupt detection at
    the block gap for a multiple block transfer. If the
    SD card cannot signal an interrupt during a multiple
    block transfer, this bit should be set to 0.
    When the HD detects an SD card insertion, it shall
    set this bit according to the CCCR of the SDIO
    card.
ps7_sd1_Host_control_Power_control_Block_Gap_Control_Wakeup_control_Read_Wait_Control:
  addr: 0xe0101028
  mask: 0x40000
  name: Read_Wait_Control
  description: |
    The read wait function is optional for SDIO cards.
    If the card supports read wait, set this bit to
    enable use of the read wait protocol to stop read
    data using DAT[2] line. Otherwise the HC has to
    stop the SD clock to hold read data, which
    restricts commands generation. When the HD
    detects an SD card insertion, it shall set this bit
    according to the CCCR of the SDIO card. If the
    card does not support read wait, this bit shall
    never be set to 1 otherwise DAT line conflict may
    occur. If this bit is set to 0, Suspend / Resume
    cannot be supported
    1 - Enable Read Wait Control
    0 - Disable Read Wait Control
ps7_sd1_Host_control_Power_control_Block_Gap_Control_Wakeup_control_Continue_Request:
  addr: 0xe0101028
  mask: 0x20000
  name: Continue_Request
  description: |
    This bit is used to restart a transaction which was stopped using the Stop At Block Gap Request. To
    cancel stop at the block gap, set Stop At block
    Gap Request to 0 and set this bit to restart the
    transfer.
    The HC automatically clears this bit in either of
    the following cases:
    1) In the case of a read transaction, the DAT Line
    Active changes from 0 to 1 as a read transaction
    restarts.
    2) In the case of a write transaction, the Write
    transfer active changes from 0 to 1 as the write
    transaction restarts.
    Therefore it is not necessary for Host driver to set
    this bit to 0. If Stop At Block Gap Request is set to
    1, any write to this bit is ignored.
    1 - Restart
    0 - Ignored
ps7_sd1_Host_control_Power_control_Block_Gap_Control_Wakeup_control_Stop_At_Block_Gap_Request:
  addr: 0xe0101028
  mask: 0x10000
  name: Stop_At_Block_Gap_Request
  description: |
    This bit is used to stop executing a transaction at the next block gap for non- DMA,SDMA and ADMA transfers. Until the transfer complete is set
    to 1, indicating a transfer completion the HD shall leave this bit set to 1. Clearing both the Stop At Block Gap Request and Continue Request shall not cause the transaction to restart. Read Wait is used to stop the read transaction at the block gap. The HC shall honor Stop At Block Gap Request for write transfers, but for read transfers it requires that the SD card support Read Wait. Therefore the HD shall not set this bit during read transfers unless the SD card supports Read Wait and has set Read Wait Control to 1. In case of write transfers in which the HD writes data to the Buffer Data Port register, the HD shall set this bit after all block data is written. If this bit is set to 1, the HD shall not write data to Buffer data port register. This bit affects Read Transfer Active, Write Transfer Active, DAT line active and Command Inhibit (DAT) in the Present State register.
    1 - Stop
    0 - Transfer
ps7_sd1_Host_control_Power_control_Block_Gap_Control_Wakeup_control_reserved_1:
  addr: 0xe0101028
  mask: 0xf000
  name: reserved_1
  description: |
    Reserved
ps7_sd1_Host_control_Power_control_Block_Gap_Control_Wakeup_control_SD_Bus_Voltage_Select:
  addr: 0xe0101028
  mask: 0xe00
  name: SD_Bus_Voltage_Select
  description: |
    By setting these bits, the HD selects the voltage level for the SD card. Before setting this register, the HD shall check the voltage support bits
    in the capabilities register. If an unsupported voltage is selected, the
    Host System shall not supply SD bus voltage
    111b - 3.3 Flattop.)
    110b - 3.0 V(Typ.)
    101b - 1.8 V(Typ.)
    100b - 000b - Reserved
ps7_sd1_Host_control_Power_control_Block_Gap_Control_Wakeup_control_SD_Bus_Power:
  addr: 0xe0101028
  mask: 0x100
  name: SD_Bus_Power
  description: |
    Before setting this bit, the SD host driver shall set SD Bus Voltage Select. If the HC detects the No Card State, this bit shall be cleared.
    1 - Power on
    0 - Power off
ps7_sd1_Host_control_Power_control_Block_Gap_Control_Wakeup_control_Card_detect_signal_detetction:
  addr: 0xe0101028
  mask: 0x80
  name: Card_detect_signal_detetction
  description: |
    This bit selects source for card detection.
    1- The card detect test level is selected
    0 -SDCD# is selected (for normal use)
ps7_sd1_Host_control_Power_control_Block_Gap_Control_Wakeup_control_Card_Detect_Test_Level:
  addr: 0xe0101028
  mask: 0x40
  name: Card_Detect_Test_Level
  description: |
    This bit is enabled while the Card Detect Signal Selection is set to 1 and it
    indicates card inserted or not. Generates (card ins or card removal) interrupt when the normal int sts enable bit is set.
    1 - Card Inserted
    0 - No Card
ps7_sd1_Host_control_Power_control_Block_Gap_Control_Wakeup_control_reserved:
  addr: 0xe0101028
  mask: 0x20
  name: reserved
  description: |
    Reserved
ps7_sd1_Host_control_Power_control_Block_Gap_Control_Wakeup_control_DMA_Select:
  addr: 0xe0101028
  mask: 0x18
  name: DMA_Select
  description: |
    One of supported DMA modes can be selected. The host driver shall check support of DMA modes by referring the Capabilities register.
    00 - SDMA is selected
    01 - 32-bit Address ADMA1 is selected
    10 -32-bit Address ADMA2 is selected
    11 - 64-bit Address ADMA2 is selected
ps7_sd1_Host_control_Power_control_Block_Gap_Control_Wakeup_control_High_Speed_Enable:
  addr: 0xe0101028
  mask: 0x4
  name: High_Speed_Enable
  description: |
    This bit is optional. Before setting this bit, the HD shall check the High Speed Support in the capabilities register. If this bit is set to 0 (default), the HC outputs CMD line and DAT lines at the falling edge of the SD clock (up to 25 MHz/20 MHz for MMC). If this bit is set to 1, the HC outputs CMD line and DAT lines at the rising edge of the SD clock (up to 50 MHz for SD/52 MHz for MMC)
    1 - High Speed Mode
    0 - Normal Speed Mode
ps7_sd1_Host_control_Power_control_Block_Gap_Control_Wakeup_control_Data_Transfer_Width_SD1_or_SD4:
  addr: 0xe0101028
  mask: 0x2
  name: Data_Transfer_Width_SD1_or_SD4
  description: |
    This bit selects the data width of the HC. The HD shall select it to match the data width of the SD card.
    1 - 4 bit mode
    0 - 1 bit mode
ps7_sd1_Host_control_Power_control_Block_Gap_Control_Wakeup_control_LED_Control:
  addr: 0xe0101028
  mask: 0x1
  name: LED_Control
  description: |
    This bit is used to caution the user not to remove the card while the SD card is being accessed. If the software is going to issue multiple SD commands, this bit can be set during all transactions. It is not necessary to change for each transaction.
    1 - LED on
    0 - LED off
ps7_sd1_Clock_Control_Timeout_control_Software_reset_Software_Reset_for_DAT_Line:
  addr: 0xe010102c
  mask: 0x4000000
  name: Software_Reset_for_DAT_Line
  description: |
    Only part of data circuit is reset. The following registers and bits are cleared by this bit:
    Buffer Data Port Register
    Buffer is cleared and Initialized.
    Present State register
    Buffer read Enable
    Buffer write Enable
    Read Transfer Active
    Write Transfer Active
    DAT Line Active
    Command Inhibit (DAT)
    Block Gap Control register
    Continue Request
    Stop At Block Gap Request
    Normal Interrupt Status register
    Buffer Read Ready
    Buffer Write Ready
    Block Gap Event
    Transfer Complete
    1 - Reset
    0 - Work
ps7_sd1_Clock_Control_Timeout_control_Software_reset_Software_Reset_for_CMD_Line:
  addr: 0xe010102c
  mask: 0x2000000
  name: Software_Reset_for_CMD_Line
  description: |
    Only part of command circuit is reset. The following registers and bits are cleared by this bit:
    Present State register
    Command Inhibit (CMD)
    Normal Interrupt Status register
    Command Complete
    1 - Reset
    0 - Work
ps7_sd1_Clock_Control_Timeout_control_Software_reset_Software_Reset_for_All:
  addr: 0xe010102c
  mask: 0x1000000
  name: Software_Reset_for_All
  description: |
    This reset affects the entire HC except for the card detection circuit. Register bits of type ROC, RW, RW1C, RWAC are cleared to 0. During its initialization, the HD shall set this bit to 1 to reset the HC. The HC shall reset this bit to 0 when capabilities registers are valid and the HD
    can read them. Additional use of Software Reset For All may not affect the value of the Capabilities registers. If this bit is set to 1, the SD card shall reset itself and must be re initialized by the HD.
    1 - Reset
    0 - Work
ps7_sd1_Clock_Control_Timeout_control_Software_reset_reserved_1:
  addr: 0xe010102c
  mask: 0xf00000
  name: reserved_1
  description: |
    Reserved
ps7_sd1_Clock_Control_Timeout_control_Software_reset_Data_Timeout_Counter_Value_:
  addr: 0xe010102c
  mask: 0xf0000
  name: Data_Timeout_Counter_Value_
  description: |
    This value determines the interval by which DAT line time-outs are detected. Refer to the Data Timeout Error in the Error Interrupt Status register for information on factors that dictate Timeout generation. Timeout clock frequency will be generated by dividing the sdclockTMCLK by this value. When setting this register, prevent inadvertent Timeout events by clearing the Data
    Time-out Error Status Enable (in the Error Interrupt Status Enable register)
    1111 - Reserved
    1110 - TMCLK * 2^27
    ------------------------------
    ------------------------------
    0001 - TMCLK * 2^14
    0000 - TMCLK * 2^13
ps7_sd1_Clock_Control_Timeout_control_Software_reset_SDCLK_Frequency_Select:
  addr: 0xe010102c
  mask: 0xff00
  name: SDCLK_Frequency_Select
  description: |
    This register is used to select the frequency of the SDCLK pin. The frequency is not programmed directly; rather this register holds the divisor of the Base Clock Frequency For SD clock in the capabilities register. Only the following settings are allowed.
    80h - base clock divided by 256
    40h - base clock divided by 128
    20h - base clock divided by 64
    10h - base clock divided by 32
    08h - base clock divided by 16
    04h - base clock divided by 8
    02h - base clock divided by 4
    01h - base clock divided by 2
    00h - base clock(10MHz-63MHz)
    Setting 00h specifies the highest frequency of the SD Clock. When setting multiple bits, the most significant bit is used as the divisor. But multiple bits should not be set. The two default divider values can be calculated by the frequency that is defined by the Base Clock Frequency For SD Clock in the Capabilities register.
    1) 25 MHz divider value
    2) 400 KHz divider value
    The frequency of the SDCLK is set by the following formula:
    Clock Frequency = (Baseclock) / divisor.
    Thus choose the smallest possible divisor which results in a clock frequency that is less than or equal to the target frequency.
    Maximum Frequency for SD = 50Mhz (base clock)
    Maximum Frequency for MMC = 52Mhz (base clock)
    Minimum Frequency = 195.3125Khz (50Mhz / 256), same calc for MMC also
ps7_sd1_Clock_Control_Timeout_control_Software_reset_reserved:
  addr: 0xe010102c
  mask: 0xf8
  name: reserved
  description: |
    Reserved
ps7_sd1_Clock_Control_Timeout_control_Software_reset_SD_Clock_Enable:
  addr: 0xe010102c
  mask: 0x4
  name: SD_Clock_Enable
  description: |
    The HC shall stop SDCLK when writing this bit to 0. SDCLK frequency Select can be changed when this bit is 0. Then, the HC shall maintain the same clock frequency until SDCLK is stopped (Stop at SDCLK = 0). If the HC detects the No Card state, this bit shall be cleared.
    1 - Enable
    0 - Disable
ps7_sd1_Clock_Control_Timeout_control_Software_reset_Internal_Clock_Stable:
  addr: 0xe010102c
  mask: 0x2
  name: Internal_Clock_Stable
  description: |
    This bit is set to 1 when SD clock is stable after writing to Internal Clock Enable in this register to 1. The SD Host Driver shall wait to set SD Clock Enable until this bit is set to 1.
    Note: This is useful when using PLL for a clock oscillator that requires setup time.
    1 - Ready
    0 - Not Ready
ps7_sd1_Clock_Control_Timeout_control_Software_reset_Internal_Clock_Enable:
  addr: 0xe010102c
  mask: 0x1
  name: Internal_Clock_Enable
  description: |
    This bit is set to 0 when the HD is not using the HC or the HC awaits a wakeup event. The HC should stop its internal clock to go very low power state. Still, registers shall be able to be read and written. Clock starts to oscillate when this bit is set to 1. When clock oscillation is stable, the HC shall set Internal Clock Stable in this register to 1. This bit shall not affect card detection.
    1 - Oscillate
    0 - Stop
ps7_sd1_Normal_interrupt_status_Error_interrupt_status_Ceata_Error_Status:
  addr: 0xe0101030
  mask: 0x20000000
  name: Ceata_Error_Status
  description: |
    Occurs when ATA command termination has occurred due to an error condition the device has encountered.
    0 - no error
    1 - error
ps7_sd1_Normal_interrupt_status_Error_interrupt_status_Target_Response_error:
  addr: 0xe0101030
  mask: 0x10000000
  name: Target_Response_error
  description: |
    Occurs when detecting ERROR in m_hresp(dma transaction)
    0 - no error
    1 - error
ps7_sd1_Normal_interrupt_status_Error_interrupt_status_reserved_1:
  addr: 0xe0101030
  mask: 0xc000000
  name: reserved_1
  description: |
    Reserved
ps7_sd1_Normal_interrupt_status_Error_interrupt_status_ADMA_Error:
  addr: 0xe0101030
  mask: 0x2000000
  name: ADMA_Error
  description: |
    This bit is set when the Host Controller detects errors during ADMA based data transfer. The state of the ADMA at an error occurrence is saved in the ADMA Error Status Register.
    1- Error
    0 -No error
ps7_sd1_Normal_interrupt_status_Error_interrupt_status_Auto_CMD12_Error:
  addr: 0xe0101030
  mask: 0x1000000
  name: Auto_CMD12_Error
  description: |
    Occurs when detecting that one of the bits in Auto CMD12 Error Status register has changed from 0 to 1. This bit is set to 1 also when Auto CMD12 is not executed due to the previous command error.
    0 - No Error
    1 - Error
ps7_sd1_Normal_interrupt_status_Error_interrupt_status_Current_Limit_Error:
  addr: 0xe0101030
  mask: 0x800000
  name: Current_Limit_Error
  description: |
    By setting the SD Bus Power bit in the Power Control Register, the HC is requested to supply power for the SD Bus. If the HC supports the Current Limit Function, it can be protected from an Illegal card by stopping power supply to the card in which case this bit indicates a failure status. Reading 1 means the HC is not supplying power to SD card due to some failure. Reading 0 means that the HC is supplying power and no error has occurred. This bit shall always set to be 0, if the HC does not support this function.
    0 - No Error
    1 - Power Fail
ps7_sd1_Normal_interrupt_status_Error_interrupt_status_Data_End_Bit_Error:
  addr: 0xe0101030
  mask: 0x400000
  name: Data_End_Bit_Error
  description: |
    Occurs when detecting 0 at the end bit position of read data which uses the DAT line or the end bit position of the CRC status.
    0 - No Error
    1 - Error
ps7_sd1_Normal_interrupt_status_Error_interrupt_status_Data_CRC_Error:
  addr: 0xe0101030
  mask: 0x200000
  name: Data_CRC_Error
  description: |
    Occurs when detecting CRC error when transferring read data which uses the DAT line or when detecting the Write CRC Status having a value of other than '010'.
    0 - No Error
    1 - Error
ps7_sd1_Normal_interrupt_status_Error_interrupt_status_Data_Timeout_Error:
  addr: 0xe0101030
  mask: 0x100000
  name: Data_Timeout_Error
  description: |
    Occurs when detecting one of following timeout conditions.
    1. Busy Timeout for R1b, R5b type.
    2. Busy Timeout after Write CRC status
    3. Write CRC status Timeout
    4. Read Data Timeout
    0 - No Error
    1 - Timeout
ps7_sd1_Normal_interrupt_status_Error_interrupt_status_Command_Index_Error:
  addr: 0xe0101030
  mask: 0x80000
  name: Command_Index_Error
  description: |
    Occurs if a Command Index error occurs in the Command Response.
    0 - No Error
    1 - Error
ps7_sd1_Normal_interrupt_status_Error_interrupt_status_Command_End_Bit_Error:
  addr: 0xe0101030
  mask: 0x40000
  name: Command_End_Bit_Error
  description: |
    Occurs when detecting that the end bit of a command response is 0.
    0 - No Error
    1 - End Bit Error Generated
ps7_sd1_Normal_interrupt_status_Error_interrupt_status_Command_CRC_Error:
  addr: 0xe0101030
  mask: 0x20000
  name: Command_CRC_Error
  description: |
    Command CRC Error is generated in two cases.
    1. If a response is returned and the Command Timeout Error is set to 0, this bit is set to 1 when detecting a CRT error in the command response
    2. The HC detects a CMD line conflict by monitoring the CMD line when a command is issued. If the HC drives the CMD line to 1 level, but detects 0 level on the CMD line at the next SDCLK edge, then the HC shall abort the command (Stop driving CMD line) and set this bit to 1. The Command Timeout Error shall also be set to 1 to distinguish CMD line conflict.
    0 - No Error
    1 - CRC Error Generated
ps7_sd1_Normal_interrupt_status_Error_interrupt_status_Command_Timeout_Error:
  addr: 0xe0101030
  mask: 0x10000
  name: Command_Timeout_Error
  description: |
    Occurs only if the no response is returned within 64 SDCLK cycles from the end bit of the command. If the HC detects a CMD line conflict, in which case Command CRC Error shall also be set. This bit shall be set without waiting for 64 SDCLK cycles because the command will be aborted by the HC.
    0 - No Error
    1 - Timeout
ps7_sd1_Normal_interrupt_status_Error_interrupt_status_Error_Interrupt:
  addr: 0xe0101030
  mask: 0x8000
  name: Error_Interrupt
  description: |
    If any of the bits in the Error Interrupt Status Register are set, then this bit is set. Therefore the HD can test for an error by checking this bit first.
    0 - No Error.
    1 - Error.
ps7_sd1_Normal_interrupt_status_Error_interrupt_status_reserved:
  addr: 0xe0101030
  mask: 0x7800
  name: reserved
  description: |
    Reserved
ps7_sd1_Normal_interrupt_status_Error_interrupt_status_Boot_terminate_Interrupt:
  addr: 0xe0101030
  mask: 0x400
  name: Boot_terminate_Interrupt
  description: |
    This status is set if the boot operation get terminated
    0 - Boot operation is not terminated.
    1 - Boot operation is terminated
ps7_sd1_Normal_interrupt_status_Error_interrupt_status_Boot_ack_rcv:
  addr: 0xe0101030
  mask: 0x200
  name: Boot_ack_rcv
  description: |
    This status is set if the boot acknowledge is received from device.
    0 - Boot ack is not received.
    1 - Boot ack is received.
ps7_sd1_Normal_interrupt_status_Error_interrupt_status_Card_Interrupt:
  addr: 0xe0101030
  mask: 0x100
  name: Card_Interrupt
  description: |
    Writing this bit to 1 does not clear this bit. It is cleared by resetting the SD card interrupt factor. In 1-bit mode, the HC shall detect the Card Interrupt without SD Clock to support wakeup. In 4-bit mode, the card interrupt signal is sampled during the interrupt cycle, so there are some sample delays between the interrupt signal from the card and the interrupt to the Host system.
    when this status has been set and the HD needs to start this interrupt service, Card Interrupt Status Enable in the Normal Interrupt Status register shall be set to 0 in order to clear the card interrupt statuses latched in the HC and stop driving the Host System. After completion of the card interrupt service (the reset factor in the SD card and the interrupt signal may not be asserted), set Card Interrupt Status Enable to 1 and start sampling the interrupt signal again.
    0 - No Card Interrupt
    1 - Generate Card Interrupt
ps7_sd1_Normal_interrupt_status_Error_interrupt_status_Card_Removal:
  addr: 0xe0101030
  mask: 0x80
  name: Card_Removal
  description: |
    This status is set if the Card Inserted in the Present State register changes from 1 to 0. When the HD writes this bit to 1 to clear this status the status of the Card Inserted in the Present State register should be confirmed.
    Because the card detect may possibly be changed when the HD clear this bit an Interrupt event may not be generated.
    0 - Card State Stable or Debouncing
    1 - Card Removed
ps7_sd1_Normal_interrupt_status_Error_interrupt_status_Card_Insertion:
  addr: 0xe0101030
  mask: 0x40
  name: Card_Insertion
  description: |
    This status is set if the Card Inserted in the Present State register changes from 0 to 1. When the HD writes this bit to 1 to clear this status the status of the Card Inserted in the Present State register should be confirmed.
    Because the card detect may possibly be changed when the HD clear this bit an Interrupt event may not be generated.
    0 - Card State Stable or Debouncing
    1 - Card Inserted
ps7_sd1_Normal_interrupt_status_Error_interrupt_status_Buffer_Read_Ready:
  addr: 0xe0101030
  mask: 0x20
  name: Buffer_Read_Ready
  description: |
    This status is set if the Buffer Read Enable
    changes from 0 to 1.
    0 - Not Ready to read Buffer.
    1 - Ready to read Buffer.
ps7_sd1_Normal_interrupt_status_Error_interrupt_status_Buffer_Write_Ready:
  addr: 0xe0101030
  mask: 0x10
  name: Buffer_Write_Ready
  description: |
    This status is set if the Buffer Write Enable
    changes from 0 to 1.
    0 - Not Ready to Write Buffer.
    1 - Ready to Write Buffer.
ps7_sd1_Normal_interrupt_status_Error_interrupt_status_DMA_Interrupt:
  addr: 0xe0101030
  mask: 0x8
  name: DMA_Interrupt
  description: |
    This status is set if the HC detects the Host
    DMA Buffer Boundary in the Block Size
    register.
    0 - No DMA Interrupt
    1 - DMA Interrupt is Generated
ps7_sd1_Normal_interrupt_status_Error_interrupt_status_Block_Gap_Event:
  addr: 0xe0101030
  mask: 0x4
  name: Block_Gap_Event
  description: |
    If the Stop At Block Gap Request in the Block
    Gap Control Register is set, this bit is set.
    Read Transaction:
    This bit is set at the falling edge of the DAT
    Line Active Status (When the transaction is
    stopped at SD Bus timing. The Read Wait
    must be supported in order to use this function).
    Write Transaction:
    This bit is set at the falling edge of Write
    Transfer Active Status (After getting CRC status
    at SD Bus timing).
    0 - No Block Gap Event
    1 - Transaction stopped at Block
    Gap
ps7_sd1_Normal_interrupt_status_Error_interrupt_status_Transfer_Complete:
  addr: 0xe0101030
  mask: 0x2
  name: Transfer_Complete
  description: |
    This bit is set when a read / write transaction is completed.
    Read Transaction:
    This bit is set at the falling edge of Read Transfer Active Status.
    There are two cases in which the Interrupt is generated. The first is when a data transfer is completed as specified by data length (After the last data has been read to the Host System). The second is when data has stopped at the block gap and completed the data transfer by setting the Stop At Block Gap Request in the Block Gap Control Register (After valid
    data has been read to the Host System).
    Write Transaction:
    This bit is set at the falling edge of the DAT
    Line Active Status.
    There are two cases in which the Interrupt is generated. The first is when the last data is written to the card as specified by data length and Busy signal is released. The second is when data transfers are stopped at the block gap by setting Stop At Block Gap Request in the Block Gap Control Register and data transfers completed. (After valid data is written to the SD card and the busy signal is released).
    Note: Transfer Complete has higher priority than Data Timeout Error. If both bits are set to 1, the data transfer can be considered complete
    0 - No Data Transfer Complete
    1 - Data Transfer Complete
ps7_sd1_Normal_interrupt_status_Error_interrupt_status_Command_Complete:
  addr: 0xe0101030
  mask: 0x1
  name: Command_Complete
  description: |
    This bit is set when get the end bit of the command response (Except Auto CMD12).
    Note: Command Timeout Error has higher priority than Command Complete. If both are set to 1, it can be considered that the response was not received correctly.
    0 - No Command Complete
    1 - Command Complete
ps7_sd1_Normal_interrupt_status_enable_Error_interrupt_status_enable_Ceata_Error_Status_Enable:
  addr: 0xe0101034
  mask: 0x20000000
  name: Ceata_Error_Status_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_status_enable_Error_interrupt_status_enable_Target_Response_Error_Status_Enable:
  addr: 0xe0101034
  mask: 0x10000000
  name: Target_Response_Error_Status_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_status_enable_Error_interrupt_status_enable_reserved_1:
  addr: 0xe0101034
  mask: 0xc000000
  name: reserved_1
  description: |
    Reserved
ps7_sd1_Normal_interrupt_status_enable_Error_interrupt_status_enable_ADMA_Error_Status_Enable:
  addr: 0xe0101034
  mask: 0x2000000
  name: ADMA_Error_Status_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_status_enable_Error_interrupt_status_enable_Auto_CMD12_Error_Status_Enable:
  addr: 0xe0101034
  mask: 0x1000000
  name: Auto_CMD12_Error_Status_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_status_enable_Error_interrupt_status_enable_Current_Limit_Error_Status_Enable:
  addr: 0xe0101034
  mask: 0x800000
  name: Current_Limit_Error_Status_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_status_enable_Error_interrupt_status_enable_Data_End_Bit_Error_Status_Enable:
  addr: 0xe0101034
  mask: 0x400000
  name: Data_End_Bit_Error_Status_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_status_enable_Error_interrupt_status_enable_Data_CRC_Error_Status_Enable:
  addr: 0xe0101034
  mask: 0x200000
  name: Data_CRC_Error_Status_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_status_enable_Error_interrupt_status_enable_Data_Timeout_Error_Status_Enable:
  addr: 0xe0101034
  mask: 0x100000
  name: Data_Timeout_Error_Status_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_status_enable_Error_interrupt_status_enable_Command_Index_Error_Status_Enable:
  addr: 0xe0101034
  mask: 0x80000
  name: Command_Index_Error_Status_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_status_enable_Error_interrupt_status_enable_Command_End_Bit_Error_Status_Enable:
  addr: 0xe0101034
  mask: 0x40000
  name: Command_End_Bit_Error_Status_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_status_enable_Error_interrupt_status_enable_Command_CRC_Error_Status_Enable:
  addr: 0xe0101034
  mask: 0x20000
  name: Command_CRC_Error_Status_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_status_enable_Error_interrupt_status_enable_Command_Timeout_Error_Status_Enable:
  addr: 0xe0101034
  mask: 0x10000
  name: Command_Timeout_Error_Status_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_status_enable_Error_interrupt_status_enable_Fixed_to_0:
  addr: 0xe0101034
  mask: 0x8000
  name: Fixed_to_0
  description: |
    The HC shall control error Interrupts using the Error Interrupt Status Enable register.
ps7_sd1_Normal_interrupt_status_enable_Error_interrupt_status_enable_reserved:
  addr: 0xe0101034
  mask: 0x7800
  name: reserved
  description: |
    Reserved
ps7_sd1_Normal_interrupt_status_enable_Error_interrupt_status_enable_Boot_terminate_Interrupt_enable:
  addr: 0xe0101034
  mask: 0x400
  name: Boot_terminate_Interrupt_enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_status_enable_Error_interrupt_status_enable_Boot_ack_rcv_enable:
  addr: 0xe0101034
  mask: 0x200
  name: Boot_ack_rcv_enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_status_enable_Error_interrupt_status_enable_Card_Interrupt_Status_Enable:
  addr: 0xe0101034
  mask: 0x100
  name: Card_Interrupt_Status_Enable
  description: |
    If this bit is set to 0, the HC shall clear Interrupt request to the System. The Card Interrupt detection is stopped when this bit is cleared and restarted when this bit is set to 1. The HD should clear the Card Interrupt Status Enable before servicing the Card Interrupt and should set this bit again after all Interrupt requests from the card are cleared to prevent inadvertent Interrupts.
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_status_enable_Error_interrupt_status_enable_Card_Removal_Status_Enable:
  addr: 0xe0101034
  mask: 0x80
  name: Card_Removal_Status_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_status_enable_Error_interrupt_status_enable_Card_Insertion_Status_Enable:
  addr: 0xe0101034
  mask: 0x40
  name: Card_Insertion_Status_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_status_enable_Error_interrupt_status_enable_Buffer_Read_Ready_Status_Enable:
  addr: 0xe0101034
  mask: 0x20
  name: Buffer_Read_Ready_Status_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_status_enable_Error_interrupt_status_enable_Buffer_Write_Ready_Status_Enable:
  addr: 0xe0101034
  mask: 0x10
  name: Buffer_Write_Ready_Status_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_status_enable_Error_interrupt_status_enable_DMA_Interrupt_Status_Enable:
  addr: 0xe0101034
  mask: 0x8
  name: DMA_Interrupt_Status_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_status_enable_Error_interrupt_status_enable_Block_Gap_Event_Status_Enable:
  addr: 0xe0101034
  mask: 0x4
  name: Block_Gap_Event_Status_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_status_enable_Error_interrupt_status_enable_Transfer_Complete_Status_Enable:
  addr: 0xe0101034
  mask: 0x2
  name: Transfer_Complete_Status_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_status_enable_Error_interrupt_status_enable_Command_Complete_Status_Enable:
  addr: 0xe0101034
  mask: 0x1
  name: Command_Complete_Status_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Ceata_Error_Signal_Enable:
  addr: 0xe0101038
  mask: 0x20000000
  name: Ceata_Error_Signal_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Target_Response_Error_Signal_Enable:
  addr: 0xe0101038
  mask: 0x10000000
  name: Target_Response_Error_Signal_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_reserved_1:
  addr: 0xe0101038
  mask: 0xc000000
  name: reserved_1
  description: |
    Reserved
ps7_sd1_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_ADMA_Error_Signal_Enable:
  addr: 0xe0101038
  mask: 0x2000000
  name: ADMA_Error_Signal_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Auto_CMD12_Error_Signal_Enable:
  addr: 0xe0101038
  mask: 0x1000000
  name: Auto_CMD12_Error_Signal_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Current_Limit_Error_Signal_Enable:
  addr: 0xe0101038
  mask: 0x800000
  name: Current_Limit_Error_Signal_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Data_End_Bit_Error_Signal_Enable:
  addr: 0xe0101038
  mask: 0x400000
  name: Data_End_Bit_Error_Signal_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Data_CRC_Error_Signal_Enable:
  addr: 0xe0101038
  mask: 0x200000
  name: Data_CRC_Error_Signal_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Data_Timeout_Error_Signal_Enable:
  addr: 0xe0101038
  mask: 0x100000
  name: Data_Timeout_Error_Signal_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Command_Index_Error_Signal_Enable:
  addr: 0xe0101038
  mask: 0x80000
  name: Command_Index_Error_Signal_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Command_End_Bit_Error_Signal_Enable:
  addr: 0xe0101038
  mask: 0x40000
  name: Command_End_Bit_Error_Signal_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Command_CRC_Error_Signal_Enable:
  addr: 0xe0101038
  mask: 0x20000
  name: Command_CRC_Error_Signal_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Command_Timeout_Error_Signal_Enable:
  addr: 0xe0101038
  mask: 0x10000
  name: Command_Timeout_Error_Signal_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Fixed_to_0:
  addr: 0xe0101038
  mask: 0x8000
  name: Fixed_to_0
  description: |
    The HD shall control error Interrupts using the Error Interrupt Signal Enable register.
ps7_sd1_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_reserved:
  addr: 0xe0101038
  mask: 0x7800
  name: reserved
  description: |
    Reserved
ps7_sd1_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Boot_terminate_Interrupt_signal_enable:
  addr: 0xe0101038
  mask: 0x400
  name: Boot_terminate_Interrupt_signal_enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Boot_ack_rcv_signal_enable:
  addr: 0xe0101038
  mask: 0x200
  name: Boot_ack_rcv_signal_enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Card_Interrupt_Signal_Enable:
  addr: 0xe0101038
  mask: 0x100
  name: Card_Interrupt_Signal_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Card_Removal_Signal_Enable:
  addr: 0xe0101038
  mask: 0x80
  name: Card_Removal_Signal_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Card_Insertion_Signal_Enable:
  addr: 0xe0101038
  mask: 0x40
  name: Card_Insertion_Signal_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Buffer_Read_Ready_Signal_Enable:
  addr: 0xe0101038
  mask: 0x20
  name: Buffer_Read_Ready_Signal_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Buffer_Write_Ready_Signal_Enable:
  addr: 0xe0101038
  mask: 0x10
  name: Buffer_Write_Ready_Signal_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_DMA_Interrupt_Signal_Enable:
  addr: 0xe0101038
  mask: 0x8
  name: DMA_Interrupt_Signal_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Block_Gap_Event_Signal_Enable:
  addr: 0xe0101038
  mask: 0x4
  name: Block_Gap_Event_Signal_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Transfer_Complete_Signal_Enable:
  addr: 0xe0101038
  mask: 0x2
  name: Transfer_Complete_Signal_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Command_Complete_Signal_Enable:
  addr: 0xe0101038
  mask: 0x1
  name: Command_Complete_Signal_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd1_Auto_CMD12_error_status_Command_Not_Issued_By_Auto_CMD12_Error:
  addr: 0xe010103c
  mask: 0x80
  name: Command_Not_Issued_By_Auto_CMD12_Error
  description: |
    Setting this bit to 1 means CMD_wo_DAT is not executed due to an Auto CMD12 error (D04 - D01) in this register.
    0 - No Error
    1 - Not Issued
ps7_sd1_Auto_CMD12_error_status_reserved:
  addr: 0xe010103c
  mask: 0x60
  name: reserved
  description: |
    Reserved
ps7_sd1_Auto_CMD12_error_status_Auto_CMD12_Index_Error:
  addr: 0xe010103c
  mask: 0x10
  name: Auto_CMD12_Index_Error
  description: |
    Occurs if the Command Index error occurs in response to a command.
    0 - No Error
    1 - Error
ps7_sd1_Auto_CMD12_error_status_Auto_CMD12_End_Bit_Error:
  addr: 0xe010103c
  mask: 0x8
  name: Auto_CMD12_End_Bit_Error
  description: |
    Occurs when detecting that the end bit of command response is 0.
    0 - No Error
    1 - End Bit Error Generated
ps7_sd1_Auto_CMD12_error_status_Auto_CMD12_CRC_Error:
  addr: 0xe010103c
  mask: 0x4
  name: Auto_CMD12_CRC_Error
  description: |
    Occurs when detecting a CRC error in the command response.
    0 - No Error
    1 - CRC Error Generated
ps7_sd1_Auto_CMD12_error_status_Auto_CMD12_Timeout_Error:
  addr: 0xe010103c
  mask: 0x2
  name: Auto_CMD12_Timeout_Error
  description: |
    Occurs if the no response is returned within 64 SDCLK cycles from the end bit of the command. If this bit is set to 1, the other error status bits (D04 - D02) are meaningless.
    0 - No Error
    1 - Timeout
ps7_sd1_Auto_CMD12_error_status_Auto_CMD12_not_Executed:
  addr: 0xe010103c
  mask: 0x1
  name: Auto_CMD12_not_Executed
  description: |
    If memory multiple block data transfer is not started due to command
    error, this bit is not set because it is not necessary to issue Auto CMD12. Setting this bit to 1 means the HC cannot issue Auto CMD12 to stop memory multiple block transfer due to some error. If this bit is set to 1, other error status bits (D04 - D01) are meaningless.
    0 - Executed
    1 - Not Executed
ps7_sd1_Capabilities_Spi_block_mode:
  addr: 0xe0101040
  mask: 0x40000000
  name: Spi_block_mode
  description: |
    Spi block mode
    0 - Not Supported
    1 - Supported
ps7_sd1_Capabilities_Spi_mode:
  addr: 0xe0101040
  mask: 0x20000000
  name: Spi_mode
  description: |
    Spi mode
    0 - Not Supported
    1 - Supported
ps7_sd1_Capabilities_n64_bit_System_Bus_Support:
  addr: 0xe0101040
  mask: 0x10000000
  name: n64_bit_System_Bus_Support
  description: |
    1 - supports 64 bit system address
    0 - Does not support 64 bit system
    address
ps7_sd1_Capabilities_Interrupt_mode:
  addr: 0xe0101040
  mask: 0x8000000
  name: Interrupt_mode
  description: |
    Interrupt mode
    0 - Not Supported
    1 - Supported
ps7_sd1_Capabilities_Voltage_Support_1_8_V:
  addr: 0xe0101040
  mask: 0x4000000
  name: Voltage_Support_1_8_V
  description: |
    0 - 1.8 V Not Supported
    1 - 1.8 V Supported
ps7_sd1_Capabilities_Voltage_Support_3_0_V:
  addr: 0xe0101040
  mask: 0x2000000
  name: Voltage_Support_3_0_V
  description: |
    0 - 3.0 V Not Supported
    1 - 3.0 V Supported
ps7_sd1_Capabilities_Voltage_Support_3_3_V:
  addr: 0xe0101040
  mask: 0x1000000
  name: Voltage_Support_3_3_V
  description: |
    0 - 3.3 V Not Supported
    1 - 3.3 V Supported
ps7_sd1_Capabilities_Suspend_Resume_Support:
  addr: 0xe0101040
  mask: 0x800000
  name: Suspend_Resume_Support
  description: |
    This bit indicates whether the HC supports Suspend / Resume functionality. If this bit is 0, the Suspend and Resume mechanism are not supported and the HD shall not issue either Suspend / Resume commands.
    0 - Not Supported
    1 - Supported
ps7_sd1_Capabilities_SDMA_Support:
  addr: 0xe0101040
  mask: 0x400000
  name: SDMA_Support
  description: |
    This bit indicates whether the HC is capable of using DMA to transfer data between system memory and the HC directly.
    0 - SDMA Not Supported
    1 - SDMA Supported.
ps7_sd1_Capabilities_High_Speed_Support:
  addr: 0xe0101040
  mask: 0x200000
  name: High_Speed_Support
  description: |
    This bit indicates whether the HC and the Host System support High Speed mode and they can supply SD Clock frequency from 25Mhz to 50 MHz (for SD)/ 20MHz to 52MHz (for MMC).
    0 - High Speed Not Supported
    1 - High Speed Supported
ps7_sd1_Capabilities_reserved_2:
  addr: 0xe0101040
  mask: 0x100000
  name: reserved_2
  description: |
    Reserved
ps7_sd1_Capabilities_ADMA2_Support:
  addr: 0xe0101040
  mask: 0x80000
  name: ADMA2_Support
  description: |
    1 - ADMA2 support.
    0 - ADMA2 not support
ps7_sd1_Capabilities_Extended_Media_Bus_Support:
  addr: 0xe0101040
  mask: 0x40000
  name: Extended_Media_Bus_Support
  description: |
    This bit indicates whether the Host Controller is capable bus.
    1 - Extended Media Bus Supported
    0 - Extended Media Bus not Supported
ps7_sd1_Capabilities_Max_Block_Length:
  addr: 0xe0101040
  mask: 0x30000
  name: Max_Block_Length
  description: |
    This value indicates the maximum block size that the HD can read and write to the buffer in the HC. The buffer shall transfer this block size without wait cycles. Three sizes can be defined as indicated below.
    00 - 512 byte
    01 - 1024 byte
    10 - 2048 byte
    11 - 4096 byte
ps7_sd1_Capabilities_reserved_1:
  addr: 0xe0101040
  mask: 0xc000
  name: reserved_1
  description: |
    Reserved
ps7_sd1_Capabilities_reserved_Base_Clock_Frequency_for_SD_Clock:
  addr: 0xe0101040
  mask: 0x3f00
  name: reserved_Base_Clock_Frequency_for_SD_Clock
  description: |
    Reserved. Do not modify.
ps7_sd1_Capabilities_Timeout_Clock_Unit:
  addr: 0xe0101040
  mask: 0x80
  name: Timeout_Clock_Unit
  description: |
    This bit shows the unit of base clock frequency used to detect Data Timeout Error.
    0 - KHz
    1 - MHz
ps7_sd1_Capabilities_reserved:
  addr: 0xe0101040
  mask: 0x40
  name: reserved
  description: |
    Reserved
ps7_sd1_Capabilities_reserved_Timeout_Clock_Frequency:
  addr: 0xe0101040
  mask: 0x3f
  name: reserved_Timeout_Clock_Frequency
  description: |
    Reserved. Do not modify.
ps7_sd1_Maximum_current_capabilities_Maximum_Current_for_1_8V:
  addr: 0xe0101048
  mask: 0xff0000
  name: Maximum_Current_for_1_8V
  description: |
    Maximum Current for 1.8V
ps7_sd1_Maximum_current_capabilities_Maximum_Current_for_3_0V:
  addr: 0xe0101048
  mask: 0xff00
  name: Maximum_Current_for_3_0V
  description: |
    Maximum Current for 3.0V
ps7_sd1_Maximum_current_capabilities_Maximum_Current_for_3_3V:
  addr: 0xe0101048
  mask: 0xff
  name: Maximum_Current_for_3_3V
  description: |
    Maximum Current for 3.3V
ps7_sd1_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Vendor_Specific_Error_Status:
  addr: 0xe0101050
  mask: 0xc0000000
  name: Force_Event_for_Vendor_Specific_Error_Status
  description: |
    Additional status bits can be defined in
    this register by the vendor.
    1 - Interrupt is generated
    0 - No interrupt
ps7_sd1_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Ceata_error:
  addr: 0xe0101050
  mask: 0x20000000
  name: Force_Event_for_Ceata_error
  description: |
    Force Event for Ceata Error
    1 - Interrupt is generated
    0 - No interrupt
ps7_sd1_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_event_for_Target_Response_error:
  addr: 0xe0101050
  mask: 0x10000000
  name: Force_event_for_Target_Response_error
  description: |
    Force Event for Target Response Error
    1 - Interrupt is generated
    0 - No interrupt
ps7_sd1_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_reserved_2:
  addr: 0xe0101050
  mask: 0xc000000
  name: reserved_2
  description: |
    Reserved
ps7_sd1_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_ADMA_Error:
  addr: 0xe0101050
  mask: 0x2000000
  name: Force_Event_for_ADMA_Error
  description: |
    Force Event for ADMA Error
    1 - Interrupt is generated
    0 - No interrupt
ps7_sd1_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Auto_CMD12_Error:
  addr: 0xe0101050
  mask: 0x1000000
  name: Force_Event_for_Auto_CMD12_Error
  description: |
    Force Event for Auto CMD12 Error
    1 - Interrupt is generated
    0 - No interrupt
ps7_sd1_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Current_Limit_Error:
  addr: 0xe0101050
  mask: 0x800000
  name: Force_Event_for_Current_Limit_Error
  description: |
    Force Event for Current Limit Error
    1 - Interrupt is generated
    0 - No interrupt
ps7_sd1_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Data_End_Bit_Error:
  addr: 0xe0101050
  mask: 0x400000
  name: Force_Event_for_Data_End_Bit_Error
  description: |
    Force Event for Data End Bit Error
    1 - Interrupt is generated
    0 - No interrupt
ps7_sd1_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Data_CRC_Error:
  addr: 0xe0101050
  mask: 0x200000
  name: Force_Event_for_Data_CRC_Error
  description: |
    Force Event for Data CRC Error
    1 - Interrupt is generated
    0 - No interrupt
ps7_sd1_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Data__Timeout_Error:
  addr: 0xe0101050
  mask: 0x100000
  name: Force_Event_for_Data__Timeout_Error
  description: |
    Force Event for Data Timeout Error
    1 - Interrupt is generated
    0 - No interrupt
ps7_sd1_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Command_Index_Error:
  addr: 0xe0101050
  mask: 0x80000
  name: Force_Event_for_Command_Index_Error
  description: |
    Force Event for Command Index Error
    1 - Interrupt is generated
    0 - No interrupt
ps7_sd1_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Command_End_Bit_Error:
  addr: 0xe0101050
  mask: 0x40000
  name: Force_Event_for_Command_End_Bit_Error
  description: |
    Force Event for Command End Bit Error
    1 - Interrupt is generated
    0 - No interrupt
ps7_sd1_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Command_CRC_Error:
  addr: 0xe0101050
  mask: 0x20000
  name: Force_Event_for_Command_CRC_Error
  description: |
    Force Event for Command CRC Error
    1 - Interrupt is generated
    0 - No interrupt
ps7_sd1_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Command_Timeout_Error:
  addr: 0xe0101050
  mask: 0x10000
  name: Force_Event_for_Command_Timeout_Error
  description: |
    Force Event for Command Timeout Error
    1 - Interrupt is generated
    0 - No interrupt
ps7_sd1_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_reserved_1:
  addr: 0xe0101050
  mask: 0xff00
  name: reserved_1
  description: |
    Reserved
ps7_sd1_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_command_not_issued_by_Auto_CMD12_Error:
  addr: 0xe0101050
  mask: 0x80
  name: Force_Event_for_command_not_issued_by_Auto_CMD12_Error
  description: |
    1 - Interrupt is generated
    0 - no interrupt
ps7_sd1_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_reserved:
  addr: 0xe0101050
  mask: 0x60
  name: reserved
  description: |
    Reserved
ps7_sd1_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Auto_CMD12_Index_Error:
  addr: 0xe0101050
  mask: 0x10
  name: Force_Event_for_Auto_CMD12_Index_Error
  description: |
    1 - Interrupt is generated
    0 - no interrupt
ps7_sd1_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Auto_CMD12_End_bit_Error:
  addr: 0xe0101050
  mask: 0x8
  name: Force_Event_for_Auto_CMD12_End_bit_Error
  description: |
    1 - Interrupt is generated
    0 - no interrupt
ps7_sd1_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Auto_CMD12_CRC_Error:
  addr: 0xe0101050
  mask: 0x4
  name: Force_Event_for_Auto_CMD12_CRC_Error
  description: |
    1 - Interrupt is generated
    0 - no interrupt
ps7_sd1_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Auto_CMD12_timeout_Error:
  addr: 0xe0101050
  mask: 0x2
  name: Force_Event_for_Auto_CMD12_timeout_Error
  description: |
    1 - Interrupt is generated
    0 - no interrupt
ps7_sd1_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Auto_CMD12_NOT_Executed:
  addr: 0xe0101050
  mask: 0x1
  name: Force_Event_for_Auto_CMD12_NOT_Executed
  description: |
    1 - Interrupt is generated
    0 - no interrupt
ps7_sd1_ADMA_error_status_ADMA_Length_Mismatch_Error:
  addr: 0xe0101054
  mask: 0x4
  name: ADMA_Length_Mismatch_Error
  description: |
    This error occurs in the following 2 cases.
    1. While Block Count Enable being set, the total
    data length specified by the
    Descriptor table is different from that specified by
    the Block Count and
    Block Length.
    2. Total data length can not be divided by the block
    length.
    1 - Error
    0 - No error
ps7_sd1_ADMA_error_status_ADMA_Error_State:
  addr: 0xe0101054
  mask: 0x3
  name: ADMA_Error_State
  description: |
    This field indicates the state of ADMA when error is occurred during ADMA data transfer. This field never indicates "10" because ADMA never stops in this state.
    D01 - D00 : ADMA Error State when
    error is occurred
    Contents of SYS_SDR register
    00 - ST_STOP (Stop DMA) Points next of the error
    descriptor
    01 - ST_FDS (Fetch Descriptor) Points the error
    descriptor
    10 - Never set this state (Not used)
    11 - ST_TFR (Transfer Data) Points the next of the
    error descriptor
ps7_sd1_ADMA_system_address_ADMA_System_Address:
  addr: 0xe0101058
  mask: 0xffffffff
  name: ADMA_System_Address
  description: |
    This register holds byte address of executing
    command of the Descriptor table.
    32-bit Address Descriptor uses lower 32-
    bit of this register. At the start of ADMA,
    the Host Driver shall set start address of
    the Descriptor table. The ADMA
    increments this register address, which
    points to next line, when every fetching a
    Descriptor line. When the ADMA Error
    Interrupt is generated, this register shall
    hold valid Descriptor address depending
    on the ADMA state. The Host Driver shall
    program Descriptor Table on 32-bit
    boundary and set 32-bit boundary
    address to this register. ADMA2 ignores
    lower 2-bit of this register and assumes it
    to be 00b.
    32-bit Address ADMA Register Value 32-
    bit System Address
    0x00000000 0x00000000
    0x00000004 0x00000004
    to
    0xFFFFFFFC 0xFFFFFFFC
ps7_sd1_Boot_Timeout_control_Boot_Data_Timeout_Counter_Value:
  addr: 0xe0101060
  mask: 0xffffffff
  name: Boot_Data_Timeout_Counter_Value
  description: |
    This value determines the interval by
    which DAT line time-outs are detected
    during boot operation for MMC3.31
    card.
    The value is in number of sd clock.
ps7_sd1_Debug_Selection_Debug_sel:
  addr: 0xe0101064
  mask: 0x1
  name: Debug_sel
  description: |
    1- cmd register, Interrupt status, transmitter
    module, ahb_iface module and clk
    sdcard signals are probed out.
    0 - receiver module and fifo_ctrl module
    signals are probed out
ps7_sd1_SPI_interrupt_support_SPI_INT_SUPPORT:
  addr: 0xe01010f0
  mask: 0xff
  name: SPI_INT_SUPPORT
  description: |
    This bit is set to indicate the assertion of interrupts in the SPI mode at any time, irrespective of the status of the card select (CS) line. If this bit is zero,
    then SDIO card can only assert the interrupt line in the SPI mode when the CS line is asserted.
ps7_sd1_Slot_interrupt_status_Host_controller_version_Vendor_Version_Number:
  addr: 0xe01010fc
  mask: 0xff000000
  name: Vendor_Version_Number
  description: |
    This status is reserved for the vendor version number. The HD should not use this status.
ps7_sd1_Slot_interrupt_status_Host_controller_version_Specification_Version_Number:
  addr: 0xe01010fc
  mask: 0xff0000
  name: Specification_Version_Number
  description: |
    This status indicates the Host Controller Spec. Version. The upper and lower 4-bits indicate the version. 00 - SD Host Specification version 1.0
    01 - SD Host Specification version 2.00 including only the feature of the Test Register
    others - Reserved
ps7_sd1_Slot_interrupt_status_Host_controller_version_reserved:
  addr: 0xe01010fc
  mask: 0xff00
  name: reserved
  description: |
    Reserved
ps7_sd1_Slot_interrupt_status_Host_controller_version_Interrupt_Signal_for_Each_Slot:
  addr: 0xe01010fc
  mask: 0xff
  name: Interrupt_Signal_for_Each_Slot
  description: |
    These status bit indicate the logical OR of Interrupt signal and Wakeup signal for each slot. A maximum of 8 slots can be defined. If one interrupt signal is associated with multiple slots. the HD can know which interrupt is generated by reading these status bits. By a power on reset or by Software Reset For All, the Interrupt signal shall be de asserted and this status shall read 00h.
    Bit 00 - Slot 1
    Bit 01 - Slot 2
    Bit 02 - Slot 3
    ----- -----
    Bit 07 - Slot 8
ps7_sd0_SDMA_system_address_register_SDMA_System_Address:
  addr: 0xe0100000
  mask: 0xffffffff
  name: SDMA_System_Address
  description: |
    Watchdog enable - if set, the watchdog is enabled and can generate any signals that are enabled.
ps7_sd0_Block_Size_Block_Count_Blocks_Count_for_Current_Transfer:
  addr: 0xe0100004
  mask: 0xffff0000
  name: Blocks_Count_for_Current_Transfer
  description: |
    This register is enabled when Block Count Enable in the Transfer
    Mode register is set to 1 and is valid only for multiple block transfers. The HC decrements the block count after each block transfer and stops when the count reaches zero. It can be accessed only if no transaction is
    executing (i.e. after a transaction has stopped). Read operations
    during transfer return an invalid value and write operations shall
    be ignored. When saving transfer context as a result of Suspend command, the number of blocks yet to be transferred can be determined
    by reading this register. When restoring transfer context prior to
    issuing a Resume command, the HD shall restore the previously
    save block count.
    0000h - Stop Count
    0001h - 1 block
    0002h - 2 blocks
    --- ---
    FFFFh - 65535 blocks
ps7_sd0_Block_Size_Block_Count_reserved:
  addr: 0xe0100004
  mask: 0x8000
  name: reserved
  description: |
    Reserved
ps7_sd0_Block_Size_Block_Count_Host_SDMA_Buffer_Size:
  addr: 0xe0100004
  mask: 0x7000
  name: Host_SDMA_Buffer_Size
  description: |
    To perform long DMA transfer, the System Address register shall be updated at every system boundary during a DMA transfer. These bits specify the size of contiguous buffer in the system memory. The DMA transfer shall wait at every boundary specified by these fields and the HC generates the DMA Interrupt to request the HD to update the System Address register.
    These bits shall support when the DMA Support in the Capabilities register is set to 1 and this function is active when the DMA Enable in the Transfer Mode register is set to 1.
    000b - 4KB(Detects A11 Carry out)
    001b - 8KB(Detects A12 Carry out)
    010b - 16KB(Detects A13 Carry out)
    011b - 32KB(Detects A14 Carry out)
    100b - 64KB(Detects A15 Carry out)
    101b -128KB(Detects A16 Carry out)
    110b - 256KB(Detects A17 Carry out)
    111b - 512KB(Detects A18 Carry out)
ps7_sd0_Block_Size_Block_Count_Transfer_Block_Size:
  addr: 0xe0100004
  mask: 0xfff
  name: Transfer_Block_Size
  description: |
    This register specifies the block size for block data transfers for CMD17, CMD18, CMD24, CMD25, and CMD53. It can be accessed only if no transaction is executing (i.e. after a transaction has stopped). Read operations during transfer return an invalid value and write operations shall be ignored.
    0000h - No Data Transfer
    0001h - 1 Byte
    0002h - 2 Bytes
    0003h - 3 Bytes
    0004h - 4 Bytes
    --- ---
    01FFh - 511 Bytes
    0200h - 512 Bytes
    --- ---
    0800h - 2048 Bytes
ps7_sd0_Argument_Command_Argument:
  addr: 0xe0100008
  mask: 0xffffffff
  name: Command_Argument
  description: |
    The SD Command Argument is specified as bit 39-8 of Command-Format.
ps7_sd0_Transfer_Mode_Command_reserved_3:
  addr: 0xe010000c
  mask: 0xc0000000
  name: reserved_3
  description: |
    Reserved
ps7_sd0_Transfer_Mode_Command_Command_Index:
  addr: 0xe010000c
  mask: 0x3f000000
  name: Command_Index
  description: |
    This bit shall be set to the command number (CMD0-63, ACMD0-63).
ps7_sd0_Transfer_Mode_Command_Command_Type:
  addr: 0xe010000c
  mask: 0xc00000
  name: Command_Type
  description: |
    There are three types of special commands. Suspend, Resume and Abort. These bits shall bet set to 00b for all other commands. Suspend Command If the Suspend command succeeds, the HC shall assume the SD Bus has been released and that it is possible to issue the next command which uses the DAT line. The HC shall de-assert Read Wait for read transactions and stop checking busy for write transactions. The Interrupt cycle shall start, in 4-bit mode. If the Suspend command fails, the HC shall maintain its current state. and the HD shall restart the transfer by setting Continue Request in the Block Gap Control Register. Resume Command The HD re-starts the data transfer by restoring the registers in the range of 000-00Dh. The HC shall check for busy before starting write transfers. Abort Command If this command is set when executing a read transfer, the HC shall stop reads to the buffer. If this command is set when executing a write transfer, the HC shall stop driving the DAT line. After issuing the Abort command, the HD should issue a software reset
    00b - Normal
    01b - Suspend
    10b - Resume
    11b - Abort
ps7_sd0_Transfer_Mode_Command_Data_Present_Select:
  addr: 0xe010000c
  mask: 0x200000
  name: Data_Present_Select
  description: |
    This bit is set to 1 to indicate that data is present and shall be transferred using the DAT line. If is set to 0 for the following:
    1. Commands using only CMD line (ex. CMD52)
    2. Commands with no data transfer but using busy signal on DAT[0]
    line (R1b or R5b ex. CMD38)
    3. Resume Command
    0 - No Data Present
    1 - Data Present
ps7_sd0_Transfer_Mode_Command_Command_Index_Check_Enable:
  addr: 0xe010000c
  mask: 0x100000
  name: Command_Index_Check_Enable
  description: |
    If this bit is set to 1, the HC shall check the index field in the response to see if it has the same value as the command index. If it is not, it is reported as a Command Index Error. If this bit is set to 0, the Index field is not checked.
    0 - Disable
    1 - Enable
ps7_sd0_Transfer_Mode_Command_Command_CRC_Check_Enable:
  addr: 0xe010000c
  mask: 0x80000
  name: Command_CRC_Check_Enable
  description: |
    If this bit is set to 1, the HC shall check the CRC field in the response. If an error is detected, it is reported as a Command CRC Error. If this bit is set to 0, the CRC field is not checked.
    0 - Disable
    1 - Enable
ps7_sd0_Transfer_Mode_Command_reserved_2:
  addr: 0xe010000c
  mask: 0x40000
  name: reserved_2
  description: |
    Reserved
ps7_sd0_Transfer_Mode_Command_Response_Type_Select:
  addr: 0xe010000c
  mask: 0x30000
  name: Response_Type_Select
  description: |
    Response Type Select
    00 - No Response
    01 - Response length 136
    10 - Response length 48
    11 - Response length 48 check
    Busy after response
ps7_sd0_Transfer_Mode_Command_reserved_1:
  addr: 0xe010000c
  mask: 0xffc0
  name: reserved_1
  description: |
    Reserved
ps7_sd0_Transfer_Mode_Command_Multi_Single_Block_Select:
  addr: 0xe010000c
  mask: 0x20
  name: Multi_Single_Block_Select
  description: |
    This bit enables multiple block DAT line data transfers.
    0 - Single Block
    1 - Multiple Block
ps7_sd0_Transfer_Mode_Command_Data_Transfer_Direction_Select:
  addr: 0xe010000c
  mask: 0x10
  name: Data_Transfer_Direction_Select
  description: |
    This bit defines the direction of DAT line data transfers.
    0 - Write (Host to Card)
    1 - Read (Card to Host)
ps7_sd0_Transfer_Mode_Command_reserved:
  addr: 0xe010000c
  mask: 0x8
  name: reserved
  description: |
    Reserved
ps7_sd0_Transfer_Mode_Command_Auto_CMD12_Enable:
  addr: 0xe010000c
  mask: 0x4
  name: Auto_CMD12_Enable
  description: |
    Multiple block transfers for memory require CMD12 to stop the transaction. When this bit is set to 1, the HC shall issue CMD12 automatically when last block transfer is completed. The HD shall not set this bit to issue commands that do not require CMD12 to stop data transfer.
    0 - Disable
    1 - Enable
ps7_sd0_Transfer_Mode_Command_Block_Count_Enable:
  addr: 0xe010000c
  mask: 0x2
  name: Block_Count_Enable
  description: |
    This bit is used to enable the Block count register, which is only relevant for multiple block transfers. When this bit is 0, the Block Count register is disabled, which is useful in executing an infinite transfer.
    0 - Disable
    1 - Enable
ps7_sd0_Transfer_Mode_Command_DMA_Enable:
  addr: 0xe010000c
  mask: 0x1
  name: DMA_Enable
  description: |
    DMA can be enabled only if DMA Support bit in the Capabilities register is set. If this bit is set to 1, a DMA operation shall begin when the HD writes to the upper byte of Command register (00Fh).
    0 - Disable
    1 - Enable
ps7_sd0_Response0_Command_Response:
  addr: 0xe0100010
  mask: 0xffffffff
  name: Command_Response
  description: |
    command responses registers
ps7_sd0_Response1_Command_Response:
  addr: 0xe0100014
  mask: 0xffffffff
  name: Command_Response
  description: |
    command responses registers
ps7_sd0_Response2_Command_Response:
  addr: 0xe0100018
  mask: 0xffffffff
  name: Command_Response
  description: |
    command responses registers
ps7_sd0_Response3_Command_Response:
  addr: 0xe010001c
  mask: 0xffffffff
  name: Command_Response
  description: |
    command responses registers
ps7_sd0_Buffer_Data_Port_Buffer_Data:
  addr: 0xe0100020
  mask: 0xffffffff
  name: Buffer_Data
  description: |
    The Host Controller Buffer can be accessed through this 32-bit Data Port Register.
ps7_sd0_Present_State_CMD_Line_Signal_Level:
  addr: 0xe0100024
  mask: 0x1000000
  name: CMD_Line_Signal_Level
  description: |
    This status is used to check CMD line level to recover from errors, and for debugging.
ps7_sd0_Present_State_DAT_Bit3_Bit0_Line_Signal_Level:
  addr: 0xe0100024
  mask: 0xf00000
  name: DAT_Bit3_Bit0_Line_Signal_Level
  description: |
    This status is used to check DAT line level to recover from errors, and for debugging. This is especially useful in detecting the busy signal level from DAT[0].
    D23 - DAT[3]
    D22 - DAT[2]
    D21 - DAT[1]
    D20 - DAT[0]
ps7_sd0_Present_State_Write_Protect_Switch_Pin_Level:
  addr: 0xe0100024
  mask: 0x80000
  name: Write_Protect_Switch_Pin_Level
  description: |
    The Write Protect Switch is supported for memory and combo cards. This bit reflects the SDWP# pin.
    0 - Write protected (SDWP# = 1)
    1 - Write enabled (SDWP# = 0)
ps7_sd0_Present_State_Card_Detect_Pin_Level:
  addr: 0xe0100024
  mask: 0x40000
  name: Card_Detect_Pin_Level
  description: |
    This bit reflects the inverse value of the SDCD# pin.
    0 - No Card present (SDCD# = 1)
    1 - Card present (SDCD# = 0)
ps7_sd0_Present_State_Card_State_Stable:
  addr: 0xe0100024
  mask: 0x20000
  name: Card_State_Stable
  description: |
    This bit is used for testing. If it is 0, the Card Detect Pin Level is not stable. If this bit is set to 1, it means the Card Detect Pin Level is stable. The Software Reset For All in the Software Reset Register shall not affect this bit.
    0 - Reset of Debouncing
    1 - No Card or Inserted
ps7_sd0_Present_State_Card_Inserted:
  addr: 0xe0100024
  mask: 0x10000
  name: Card_Inserted
  description: |
    This bit indicates whether a card has been inserted. Changing from 0 to 1 generates a Card Insertion interrupt in the Normal Interrupt Status register and changing from 1 to 0 generates a Card Removal Interrupt in the Normal Interrupt Status register. The Software Reset For All in the Software Reset register shall not affect this bit. If a Card is removed while its power is on and its clock is oscillating, the HC shall clear SD Bus Power in the Power Control register and SD Clock Enable in the Clock control register. In addition the HD should clear the HC by the Software Reset For All in Software register. The card detect is active regardless of the SD Bus Power.
    0 - Reset or Debouncing or No Card
    1 - Card Inserted
ps7_sd0_Present_State_reserved_1:
  addr: 0xe0100024
  mask: 0xf000
  name: reserved_1
  description: |
    Reserved
ps7_sd0_Present_State_Buffer_Read_Enable:
  addr: 0xe0100024
  mask: 0x800
  name: Buffer_Read_Enable
  description: |
    This status is used for non-DMA read transfers. This read only flag indicates that valid data exists in the host side buffer status. If this bit is 1, readable data exists in the buffer. A change of this bit from 1 to 0 occurs when all the block data is read from the buffer. A change of this bit from 0 to 1 occurs when all the block data is ready in the buffer and generates the Buffer Read Ready Interrupt.
    0 - Read Disable
    1 - Read Enable.
ps7_sd0_Present_State_Buffer_Write_Enable:
  addr: 0xe0100024
  mask: 0x400
  name: Buffer_Write_Enable
  description: |
    This status is used for non-DMA write transfers. This read only flag indicates if space is available for write data. If this bit is 1, data can be written to the buffer. A change of this bit from 1 to 0 occurs when all the block data is written to the buffer. A change of this bit from 0 to 1 occurs when top of block data can be written to the buffer and generates the Buffer Write Ready Interrupt.
    0 - Write Disable
    1 - Write Enable.
ps7_sd0_Present_State_Read_Transfer_Active:
  addr: 0xe0100024
  mask: 0x200
  name: Read_Transfer_Active
  description: |
    This status is used for detecting completion of a read transfer.
    This bit is set to 1 for either of the following conditions:
    1. After the end bit of the read command
    2. When writing a 1 to continue Request in the Block Gap Control register to restart a read transfer
    This bit is cleared to 0 for either of the following
    conditions:
    1. When the last data block as specified by block length is transferred to the system.
    2. When all valid data blocks have been transferred to the system and no current block transfers are being sent as a result of the Stop At Block Gap Request set to 1. A transfer complete interrupt is generated when this bit changes to 0.
    1 - Transferring data
    0 - No valid data
ps7_sd0_Present_State_Write_Transfer_Active:
  addr: 0xe0100024
  mask: 0x100
  name: Write_Transfer_Active
  description: |
    This status indicates a write transfer is active. If this bit is 0, it means no valid write data exists in the HC. This bit is set in either of the following cases:
    1. After the end bit of the write command.
    2. When writing a 1 to Continue Request in the Block Gap Control register to restart a write transfer.
    This bit is cleared in either of the following cases:
    1. After getting the CRC status of the last data block as specified by the transfer count (Single or Multiple)
    2. After getting a CRC status of any block where data transmission is about to be stopped by a Stop At Block Gap Request.
    During a write transaction, a Block Gap Event interrupt is generated when this bit is changed to 0, as a result of the Stop At Block Gap Request being set. This status is useful for the HD in determining when to issue commands during write busy.
    1 - transferring data
    0 - No valid data
ps7_sd0_Present_State_reserved:
  addr: 0xe0100024
  mask: 0xf8
  name: reserved
  description: |
    Reserved
ps7_sd0_Present_State_DAT_Line_Active:
  addr: 0xe0100024
  mask: 0x4
  name: DAT_Line_Active
  description: |
    This bit indicates whether one of the DAT line on SD bus is in use.
    1 - DAT line active
    0 - DAT line inactive
ps7_sd0_Present_State_Command_Inhibit_DAT:
  addr: 0xe0100024
  mask: 0x2
  name: Command_Inhibit_DAT
  description: |
    This status bit is generated if either the DAT Line Active or the Read transfer Active is set to 1. If this bit is 0, it indicates the HC can issue the next SD command. Commands with busy signal belong to Command Inhibit (DAT) (ex. R1b, R5b type). Changing from 1 to 0 generates a Transfer Complete interrupt in the Normal interrupt status register.
    Note: The SD Host Driver can save registers in the range of 000-00Dh for a suspend transaction after this bit has changed from 1 to 0.
    1 - cannot issue command which uses the DAT line
    0 - Can issue command which uses the DAT line
ps7_sd0_Present_State_Command_Inhibit_CMD:
  addr: 0xe0100024
  mask: 0x1
  name: Command_Inhibit_CMD
  description: |
    If this bit is 0, it indicates the CMD line is not in use and the HC can issue a SD command using the CMD line. This bit is set immediately after the Command register (00Fh) is written. This bit is cleared when the command response is received. Even if the Command Inhibit (DAT) is set to 1, Commands using only the CMD line can be issued if this bit is 0. Changing from 1 to 0 generates a Command complete interrupt in the Normal Interrupt Status register. If the HC cannot issue the command because of a command conflict error or because of Command Not Issued By Auto CMD12 Error, this bit shall remain 1 and the Command Complete is not set. Status issuing Auto CMD12 is not read from this bit. Note: The SD host controller requires couple of clocks to update this register bit after the command is posted to command register.
ps7_sd0_Host_control_Power_control_Block_Gap_Control_Wakeup_control_reserved_3:
  addr: 0xe0100028
  mask: 0xf8000000
  name: reserved_3
  description: |
    Reserved
ps7_sd0_Host_control_Power_control_Block_Gap_Control_Wakeup_control_Wakeup_Event_Enable_On_SD_Card_Removal:
  addr: 0xe0100028
  mask: 0x4000000
  name: Wakeup_Event_Enable_On_SD_Card_Removal
  description: |
    This bit enables wakeup event via
    Card Removal assertion in the
    Normal Interrupt Status register.
    FN_WUS (Wake up Support) in
    CIS does not affect this bit.
    1 - Enable
    0 - Disable
ps7_sd0_Host_control_Power_control_Block_Gap_Control_Wakeup_control_Wakeup_Event_Enable_On_SD_Card_Insertion:
  addr: 0xe0100028
  mask: 0x2000000
  name: Wakeup_Event_Enable_On_SD_Card_Insertion
  description: |
    This bit enables wakeup event via Card Insertion assertion in the Normal Interrupt Status register. FN_WUS (Wake up Support) in CIS does not affect this bit.
    1 - Enable
    0 - Disable
ps7_sd0_Host_control_Power_control_Block_Gap_Control_Wakeup_control_Wakeup_Event_Enable_On_Card_Interrupt:
  addr: 0xe0100028
  mask: 0x1000000
  name: Wakeup_Event_Enable_On_Card_Interrupt
  description: |
    This bit enables wakeup event via
    Card Interrupt assertion in the
    Normal Interrupt Status register.
    This bit can be set to 1 if FN_WUS
    (Wake Up Support) in CIS is set to
    1.
    1 - Enable
    0 - Disable
ps7_sd0_Host_control_Power_control_Block_Gap_Control_Wakeup_control_reserved_2:
  addr: 0xe0100028
  mask: 0xf00000
  name: reserved_2
  description: |
    Reserved
ps7_sd0_Host_control_Power_control_Block_Gap_Control_Wakeup_control_Interrupt_At_Block_Gap:
  addr: 0xe0100028
  mask: 0x80000
  name: Interrupt_At_Block_Gap
  description: |
    This bit is valid only in 4-bit mode of the SDIO
    card and selects a sample point in the interrupt
    cycle. Setting to 1 enables interrupt detection at
    the block gap for a multiple block transfer. If the
    SD card cannot signal an interrupt during a multiple
    block transfer, this bit should be set to 0.
    When the HD detects an SD card insertion, it shall
    set this bit according to the CCCR of the SDIO
    card.
ps7_sd0_Host_control_Power_control_Block_Gap_Control_Wakeup_control_Read_Wait_Control:
  addr: 0xe0100028
  mask: 0x40000
  name: Read_Wait_Control
  description: |
    The read wait function is optional for SDIO cards.
    If the card supports read wait, set this bit to
    enable use of the read wait protocol to stop read
    data using DAT[2] line. Otherwise the HC has to
    stop the SD clock to hold read data, which
    restricts commands generation. When the HD
    detects an SD card insertion, it shall set this bit
    according to the CCCR of the SDIO card. If the
    card does not support read wait, this bit shall
    never be set to 1 otherwise DAT line conflict may
    occur. If this bit is set to 0, Suspend / Resume
    cannot be supported
    1 - Enable Read Wait Control
    0 - Disable Read Wait Control
ps7_sd0_Host_control_Power_control_Block_Gap_Control_Wakeup_control_Continue_Request:
  addr: 0xe0100028
  mask: 0x20000
  name: Continue_Request
  description: |
    This bit is used to restart a transaction which was stopped using the Stop At Block Gap Request. To
    cancel stop at the block gap, set Stop At block
    Gap Request to 0 and set this bit to restart the
    transfer.
    The HC automatically clears this bit in either of
    the following cases:
    1) In the case of a read transaction, the DAT Line
    Active changes from 0 to 1 as a read transaction
    restarts.
    2) In the case of a write transaction, the Write
    transfer active changes from 0 to 1 as the write
    transaction restarts.
    Therefore it is not necessary for Host driver to set
    this bit to 0. If Stop At Block Gap Request is set to
    1, any write to this bit is ignored.
    1 - Restart
    0 - Ignored
ps7_sd0_Host_control_Power_control_Block_Gap_Control_Wakeup_control_Stop_At_Block_Gap_Request:
  addr: 0xe0100028
  mask: 0x10000
  name: Stop_At_Block_Gap_Request
  description: |
    This bit is used to stop executing a transaction at the next block gap for non- DMA,SDMA and ADMA transfers. Until the transfer complete is set
    to 1, indicating a transfer completion the HD shall leave this bit set to 1. Clearing both the Stop At Block Gap Request and Continue Request shall not cause the transaction to restart. Read Wait is used to stop the read transaction at the block gap. The HC shall honor Stop At Block Gap Request for write transfers, but for read transfers it requires that the SD card support Read Wait. Therefore the HD shall not set this bit during read transfers unless the SD card supports Read Wait and has set Read Wait Control to 1. In case of write transfers in which the HD writes data to the Buffer Data Port register, the HD shall set this bit after all block data is written. If this bit is set to 1, the HD shall not write data to Buffer data port register. This bit affects Read Transfer Active, Write Transfer Active, DAT line active and Command Inhibit (DAT) in the Present State register.
    1 - Stop
    0 - Transfer
ps7_sd0_Host_control_Power_control_Block_Gap_Control_Wakeup_control_reserved_1:
  addr: 0xe0100028
  mask: 0xf000
  name: reserved_1
  description: |
    Reserved
ps7_sd0_Host_control_Power_control_Block_Gap_Control_Wakeup_control_SD_Bus_Voltage_Select:
  addr: 0xe0100028
  mask: 0xe00
  name: SD_Bus_Voltage_Select
  description: |
    By setting these bits, the HD selects the voltage level for the SD card. Before setting this register, the HD shall check the voltage support bits
    in the capabilities register. If an unsupported voltage is selected, the
    Host System shall not supply SD bus voltage
    111b - 3.3 Flattop.)
    110b - 3.0 V(Typ.)
    101b - 1.8 V(Typ.)
    100b - 000b - Reserved
ps7_sd0_Host_control_Power_control_Block_Gap_Control_Wakeup_control_SD_Bus_Power:
  addr: 0xe0100028
  mask: 0x100
  name: SD_Bus_Power
  description: |
    Before setting this bit, the SD host driver shall set SD Bus Voltage Select. If the HC detects the No Card State, this bit shall be cleared.
    1 - Power on
    0 - Power off
ps7_sd0_Host_control_Power_control_Block_Gap_Control_Wakeup_control_Card_detect_signal_detetction:
  addr: 0xe0100028
  mask: 0x80
  name: Card_detect_signal_detetction
  description: |
    This bit selects source for card detection.
    1- The card detect test level is selected
    0 -SDCD# is selected (for normal use)
ps7_sd0_Host_control_Power_control_Block_Gap_Control_Wakeup_control_Card_Detect_Test_Level:
  addr: 0xe0100028
  mask: 0x40
  name: Card_Detect_Test_Level
  description: |
    This bit is enabled while the Card Detect Signal Selection is set to 1 and it
    indicates card inserted or not. Generates (card ins or card removal) interrupt when the normal int sts enable bit is set.
    1 - Card Inserted
    0 - No Card
ps7_sd0_Host_control_Power_control_Block_Gap_Control_Wakeup_control_reserved:
  addr: 0xe0100028
  mask: 0x20
  name: reserved
  description: |
    Reserved
ps7_sd0_Host_control_Power_control_Block_Gap_Control_Wakeup_control_DMA_Select:
  addr: 0xe0100028
  mask: 0x18
  name: DMA_Select
  description: |
    One of supported DMA modes can be selected. The host driver shall check support of DMA modes by referring the Capabilities register.
    00 - SDMA is selected
    01 - 32-bit Address ADMA1 is selected
    10 -32-bit Address ADMA2 is selected
    11 - 64-bit Address ADMA2 is selected
ps7_sd0_Host_control_Power_control_Block_Gap_Control_Wakeup_control_High_Speed_Enable:
  addr: 0xe0100028
  mask: 0x4
  name: High_Speed_Enable
  description: |
    This bit is optional. Before setting this bit, the HD shall check the High Speed Support in the capabilities register. If this bit is set to 0 (default), the HC outputs CMD line and DAT lines at the falling edge of the SD clock (up to 25 MHz/20 MHz for MMC). If this bit is set to 1, the HC outputs CMD line and DAT lines at the rising edge of the SD clock (up to 50 MHz for SD/52 MHz for MMC)
    1 - High Speed Mode
    0 - Normal Speed Mode
ps7_sd0_Host_control_Power_control_Block_Gap_Control_Wakeup_control_Data_Transfer_Width_SD1_or_SD4:
  addr: 0xe0100028
  mask: 0x2
  name: Data_Transfer_Width_SD1_or_SD4
  description: |
    This bit selects the data width of the HC. The HD shall select it to match the data width of the SD card.
    1 - 4 bit mode
    0 - 1 bit mode
ps7_sd0_Host_control_Power_control_Block_Gap_Control_Wakeup_control_LED_Control:
  addr: 0xe0100028
  mask: 0x1
  name: LED_Control
  description: |
    This bit is used to caution the user not to remove the card while the SD card is being accessed. If the software is going to issue multiple SD commands, this bit can be set during all transactions. It is not necessary to change for each transaction.
    1 - LED on
    0 - LED off
ps7_sd0_Clock_Control_Timeout_control_Software_reset_Software_Reset_for_DAT_Line:
  addr: 0xe010002c
  mask: 0x4000000
  name: Software_Reset_for_DAT_Line
  description: |
    Only part of data circuit is reset. The following registers and bits are cleared by this bit:
    Buffer Data Port Register
    Buffer is cleared and Initialized.
    Present State register
    Buffer read Enable
    Buffer write Enable
    Read Transfer Active
    Write Transfer Active
    DAT Line Active
    Command Inhibit (DAT)
    Block Gap Control register
    Continue Request
    Stop At Block Gap Request
    Normal Interrupt Status register
    Buffer Read Ready
    Buffer Write Ready
    Block Gap Event
    Transfer Complete
    1 - Reset
    0 - Work
ps7_sd0_Clock_Control_Timeout_control_Software_reset_Software_Reset_for_CMD_Line:
  addr: 0xe010002c
  mask: 0x2000000
  name: Software_Reset_for_CMD_Line
  description: |
    Only part of command circuit is reset. The following registers and bits are cleared by this bit:
    Present State register
    Command Inhibit (CMD)
    Normal Interrupt Status register
    Command Complete
    1 - Reset
    0 - Work
ps7_sd0_Clock_Control_Timeout_control_Software_reset_Software_Reset_for_All:
  addr: 0xe010002c
  mask: 0x1000000
  name: Software_Reset_for_All
  description: |
    This reset affects the entire HC except for the card detection circuit. Register bits of type ROC, RW, RW1C, RWAC are cleared to 0. During its initialization, the HD shall set this bit to 1 to reset the HC. The HC shall reset this bit to 0 when capabilities registers are valid and the HD
    can read them. Additional use of Software Reset For All may not affect the value of the Capabilities registers. If this bit is set to 1, the SD card shall reset itself and must be re initialized by the HD.
    1 - Reset
    0 - Work
ps7_sd0_Clock_Control_Timeout_control_Software_reset_reserved_1:
  addr: 0xe010002c
  mask: 0xf00000
  name: reserved_1
  description: |
    Reserved
ps7_sd0_Clock_Control_Timeout_control_Software_reset_Data_Timeout_Counter_Value_:
  addr: 0xe010002c
  mask: 0xf0000
  name: Data_Timeout_Counter_Value_
  description: |
    This value determines the interval by which DAT line time-outs are detected. Refer to the Data Timeout Error in the Error Interrupt Status register for information on factors that dictate Timeout generation. Timeout clock frequency will be generated by dividing the sdclockTMCLK by this value. When setting this register, prevent inadvertent Timeout events by clearing the Data
    Time-out Error Status Enable (in the Error Interrupt Status Enable register)
    1111 - Reserved
    1110 - TMCLK * 2^27
    ------------------------------
    ------------------------------
    0001 - TMCLK * 2^14
    0000 - TMCLK * 2^13
ps7_sd0_Clock_Control_Timeout_control_Software_reset_SDCLK_Frequency_Select:
  addr: 0xe010002c
  mask: 0xff00
  name: SDCLK_Frequency_Select
  description: |
    This register is used to select the frequency of the SDCLK pin. The frequency is not programmed directly; rather this register holds the divisor of the Base Clock Frequency For SD clock in the capabilities register. Only the following settings are allowed.
    80h - base clock divided by 256
    40h - base clock divided by 128
    20h - base clock divided by 64
    10h - base clock divided by 32
    08h - base clock divided by 16
    04h - base clock divided by 8
    02h - base clock divided by 4
    01h - base clock divided by 2
    00h - base clock(10MHz-63MHz)
    Setting 00h specifies the highest frequency of the SD Clock. When setting multiple bits, the most significant bit is used as the divisor. But multiple bits should not be set. The two default divider values can be calculated by the frequency that is defined by the Base Clock Frequency For SD Clock in the Capabilities register.
    1) 25 MHz divider value
    2) 400 KHz divider value
    The frequency of the SDCLK is set by the following formula:
    Clock Frequency = (Baseclock) / divisor.
    Thus choose the smallest possible divisor which results in a clock frequency that is less than or equal to the target frequency.
    Maximum Frequency for SD = 50Mhz (base clock)
    Maximum Frequency for MMC = 52Mhz (base clock)
    Minimum Frequency = 195.3125Khz (50Mhz / 256), same calc for MMC also
ps7_sd0_Clock_Control_Timeout_control_Software_reset_reserved:
  addr: 0xe010002c
  mask: 0xf8
  name: reserved
  description: |
    Reserved
ps7_sd0_Clock_Control_Timeout_control_Software_reset_SD_Clock_Enable:
  addr: 0xe010002c
  mask: 0x4
  name: SD_Clock_Enable
  description: |
    The HC shall stop SDCLK when writing this bit to 0. SDCLK frequency Select can be changed when this bit is 0. Then, the HC shall maintain the same clock frequency until SDCLK is stopped (Stop at SDCLK = 0). If the HC detects the No Card state, this bit shall be cleared.
    1 - Enable
    0 - Disable
ps7_sd0_Clock_Control_Timeout_control_Software_reset_Internal_Clock_Stable:
  addr: 0xe010002c
  mask: 0x2
  name: Internal_Clock_Stable
  description: |
    This bit is set to 1 when SD clock is stable after writing to Internal Clock Enable in this register to 1. The SD Host Driver shall wait to set SD Clock Enable until this bit is set to 1.
    Note: This is useful when using PLL for a clock oscillator that requires setup time.
    1 - Ready
    0 - Not Ready
ps7_sd0_Clock_Control_Timeout_control_Software_reset_Internal_Clock_Enable:
  addr: 0xe010002c
  mask: 0x1
  name: Internal_Clock_Enable
  description: |
    This bit is set to 0 when the HD is not using the HC or the HC awaits a wakeup event. The HC should stop its internal clock to go very low power state. Still, registers shall be able to be read and written. Clock starts to oscillate when this bit is set to 1. When clock oscillation is stable, the HC shall set Internal Clock Stable in this register to 1. This bit shall not affect card detection.
    1 - Oscillate
    0 - Stop
ps7_sd0_Normal_interrupt_status_Error_interrupt_status_Ceata_Error_Status:
  addr: 0xe0100030
  mask: 0x20000000
  name: Ceata_Error_Status
  description: |
    Occurs when ATA command termination has occurred due to an error condition the device has encountered.
    0 - no error
    1 - error
ps7_sd0_Normal_interrupt_status_Error_interrupt_status_Target_Response_error:
  addr: 0xe0100030
  mask: 0x10000000
  name: Target_Response_error
  description: |
    Occurs when detecting ERROR in m_hresp(dma transaction)
    0 - no error
    1 - error
ps7_sd0_Normal_interrupt_status_Error_interrupt_status_reserved_1:
  addr: 0xe0100030
  mask: 0xc000000
  name: reserved_1
  description: |
    Reserved
ps7_sd0_Normal_interrupt_status_Error_interrupt_status_ADMA_Error:
  addr: 0xe0100030
  mask: 0x2000000
  name: ADMA_Error
  description: |
    This bit is set when the Host Controller detects errors during ADMA based data transfer. The state of the ADMA at an error occurrence is saved in the ADMA Error Status Register.
    1- Error
    0 -No error
ps7_sd0_Normal_interrupt_status_Error_interrupt_status_Auto_CMD12_Error:
  addr: 0xe0100030
  mask: 0x1000000
  name: Auto_CMD12_Error
  description: |
    Occurs when detecting that one of the bits in Auto CMD12 Error Status register has changed from 0 to 1. This bit is set to 1 also when Auto CMD12 is not executed due to the previous command error.
    0 - No Error
    1 - Error
ps7_sd0_Normal_interrupt_status_Error_interrupt_status_Current_Limit_Error:
  addr: 0xe0100030
  mask: 0x800000
  name: Current_Limit_Error
  description: |
    By setting the SD Bus Power bit in the Power Control Register, the HC is requested to supply power for the SD Bus. If the HC supports the Current Limit Function, it can be protected from an Illegal card by stopping power supply to the card in which case this bit indicates a failure status. Reading 1 means the HC is not supplying power to SD card due to some failure. Reading 0 means that the HC is supplying power and no error has occurred. This bit shall always set to be 0, if the HC does not support this function.
    0 - No Error
    1 - Power Fail
ps7_sd0_Normal_interrupt_status_Error_interrupt_status_Data_End_Bit_Error:
  addr: 0xe0100030
  mask: 0x400000
  name: Data_End_Bit_Error
  description: |
    Occurs when detecting 0 at the end bit position of read data which uses the DAT line or the end bit position of the CRC status.
    0 - No Error
    1 - Error
ps7_sd0_Normal_interrupt_status_Error_interrupt_status_Data_CRC_Error:
  addr: 0xe0100030
  mask: 0x200000
  name: Data_CRC_Error
  description: |
    Occurs when detecting CRC error when transferring read data which uses the DAT line or when detecting the Write CRC Status having a value of other than '010'.
    0 - No Error
    1 - Error
ps7_sd0_Normal_interrupt_status_Error_interrupt_status_Data_Timeout_Error:
  addr: 0xe0100030
  mask: 0x100000
  name: Data_Timeout_Error
  description: |
    Occurs when detecting one of following timeout conditions.
    1. Busy Timeout for R1b, R5b type.
    2. Busy Timeout after Write CRC status
    3. Write CRC status Timeout
    4. Read Data Timeout
    0 - No Error
    1 - Timeout
ps7_sd0_Normal_interrupt_status_Error_interrupt_status_Command_Index_Error:
  addr: 0xe0100030
  mask: 0x80000
  name: Command_Index_Error
  description: |
    Occurs if a Command Index error occurs in the Command Response.
    0 - No Error
    1 - Error
ps7_sd0_Normal_interrupt_status_Error_interrupt_status_Command_End_Bit_Error:
  addr: 0xe0100030
  mask: 0x40000
  name: Command_End_Bit_Error
  description: |
    Occurs when detecting that the end bit of a command response is 0.
    0 - No Error
    1 - End Bit Error Generated
ps7_sd0_Normal_interrupt_status_Error_interrupt_status_Command_CRC_Error:
  addr: 0xe0100030
  mask: 0x20000
  name: Command_CRC_Error
  description: |
    Command CRC Error is generated in two cases.
    1. If a response is returned and the Command Timeout Error is set to 0, this bit is set to 1 when detecting a CRT error in the command response
    2. The HC detects a CMD line conflict by monitoring the CMD line when a command is issued. If the HC drives the CMD line to 1 level, but detects 0 level on the CMD line at the next SDCLK edge, then the HC shall abort the command (Stop driving CMD line) and set this bit to 1. The Command Timeout Error shall also be set to 1 to distinguish CMD line conflict.
    0 - No Error
    1 - CRC Error Generated
ps7_sd0_Normal_interrupt_status_Error_interrupt_status_Command_Timeout_Error:
  addr: 0xe0100030
  mask: 0x10000
  name: Command_Timeout_Error
  description: |
    Occurs only if the no response is returned within 64 SDCLK cycles from the end bit of the command. If the HC detects a CMD line conflict, in which case Command CRC Error shall also be set. This bit shall be set without waiting for 64 SDCLK cycles because the command will be aborted by the HC.
    0 - No Error
    1 - Timeout
ps7_sd0_Normal_interrupt_status_Error_interrupt_status_Error_Interrupt:
  addr: 0xe0100030
  mask: 0x8000
  name: Error_Interrupt
  description: |
    If any of the bits in the Error Interrupt Status Register are set, then this bit is set. Therefore the HD can test for an error by checking this bit first.
    0 - No Error.
    1 - Error.
ps7_sd0_Normal_interrupt_status_Error_interrupt_status_reserved:
  addr: 0xe0100030
  mask: 0x7800
  name: reserved
  description: |
    Reserved
ps7_sd0_Normal_interrupt_status_Error_interrupt_status_Boot_terminate_Interrupt:
  addr: 0xe0100030
  mask: 0x400
  name: Boot_terminate_Interrupt
  description: |
    This status is set if the boot operation get terminated
    0 - Boot operation is not terminated.
    1 - Boot operation is terminated
ps7_sd0_Normal_interrupt_status_Error_interrupt_status_Boot_ack_rcv:
  addr: 0xe0100030
  mask: 0x200
  name: Boot_ack_rcv
  description: |
    This status is set if the boot acknowledge is received from device.
    0 - Boot ack is not received.
    1 - Boot ack is received.
ps7_sd0_Normal_interrupt_status_Error_interrupt_status_Card_Interrupt:
  addr: 0xe0100030
  mask: 0x100
  name: Card_Interrupt
  description: |
    Writing this bit to 1 does not clear this bit. It is cleared by resetting the SD card interrupt factor. In 1-bit mode, the HC shall detect the Card Interrupt without SD Clock to support wakeup. In 4-bit mode, the card interrupt signal is sampled during the interrupt cycle, so there are some sample delays between the interrupt signal from the card and the interrupt to the Host system.
    when this status has been set and the HD needs to start this interrupt service, Card Interrupt Status Enable in the Normal Interrupt Status register shall be set to 0 in order to clear the card interrupt statuses latched in the HC and stop driving the Host System. After completion of the card interrupt service (the reset factor in the SD card and the interrupt signal may not be asserted), set Card Interrupt Status Enable to 1 and start sampling the interrupt signal again.
    0 - No Card Interrupt
    1 - Generate Card Interrupt
ps7_sd0_Normal_interrupt_status_Error_interrupt_status_Card_Removal:
  addr: 0xe0100030
  mask: 0x80
  name: Card_Removal
  description: |
    This status is set if the Card Inserted in the Present State register changes from 1 to 0. When the HD writes this bit to 1 to clear this status the status of the Card Inserted in the Present State register should be confirmed.
    Because the card detect may possibly be changed when the HD clear this bit an Interrupt event may not be generated.
    0 - Card State Stable or Debouncing
    1 - Card Removed
ps7_sd0_Normal_interrupt_status_Error_interrupt_status_Card_Insertion:
  addr: 0xe0100030
  mask: 0x40
  name: Card_Insertion
  description: |
    This status is set if the Card Inserted in the Present State register changes from 0 to 1. When the HD writes this bit to 1 to clear this status the status of the Card Inserted in the Present State register should be confirmed.
    Because the card detect may possibly be changed when the HD clear this bit an Interrupt event may not be generated.
    0 - Card State Stable or Debouncing
    1 - Card Inserted
ps7_sd0_Normal_interrupt_status_Error_interrupt_status_Buffer_Read_Ready:
  addr: 0xe0100030
  mask: 0x20
  name: Buffer_Read_Ready
  description: |
    This status is set if the Buffer Read Enable
    changes from 0 to 1.
    0 - Not Ready to read Buffer.
    1 - Ready to read Buffer.
ps7_sd0_Normal_interrupt_status_Error_interrupt_status_Buffer_Write_Ready:
  addr: 0xe0100030
  mask: 0x10
  name: Buffer_Write_Ready
  description: |
    This status is set if the Buffer Write Enable
    changes from 0 to 1.
    0 - Not Ready to Write Buffer.
    1 - Ready to Write Buffer.
ps7_sd0_Normal_interrupt_status_Error_interrupt_status_DMA_Interrupt:
  addr: 0xe0100030
  mask: 0x8
  name: DMA_Interrupt
  description: |
    This status is set if the HC detects the Host
    DMA Buffer Boundary in the Block Size
    register.
    0 - No DMA Interrupt
    1 - DMA Interrupt is Generated
ps7_sd0_Normal_interrupt_status_Error_interrupt_status_Block_Gap_Event:
  addr: 0xe0100030
  mask: 0x4
  name: Block_Gap_Event
  description: |
    If the Stop At Block Gap Request in the Block
    Gap Control Register is set, this bit is set.
    Read Transaction:
    This bit is set at the falling edge of the DAT
    Line Active Status (When the transaction is
    stopped at SD Bus timing. The Read Wait
    must be supported in order to use this function).
    Write Transaction:
    This bit is set at the falling edge of Write
    Transfer Active Status (After getting CRC status
    at SD Bus timing).
    0 - No Block Gap Event
    1 - Transaction stopped at Block
    Gap
ps7_sd0_Normal_interrupt_status_Error_interrupt_status_Transfer_Complete:
  addr: 0xe0100030
  mask: 0x2
  name: Transfer_Complete
  description: |
    This bit is set when a read / write transaction is completed.
    Read Transaction:
    This bit is set at the falling edge of Read Transfer Active Status.
    There are two cases in which the Interrupt is generated. The first is when a data transfer is completed as specified by data length (After the last data has been read to the Host System). The second is when data has stopped at the block gap and completed the data transfer by setting the Stop At Block Gap Request in the Block Gap Control Register (After valid
    data has been read to the Host System).
    Write Transaction:
    This bit is set at the falling edge of the DAT
    Line Active Status.
    There are two cases in which the Interrupt is generated. The first is when the last data is written to the card as specified by data length and Busy signal is released. The second is when data transfers are stopped at the block gap by setting Stop At Block Gap Request in the Block Gap Control Register and data transfers completed. (After valid data is written to the SD card and the busy signal is released).
    Note: Transfer Complete has higher priority than Data Timeout Error. If both bits are set to 1, the data transfer can be considered complete
    0 - No Data Transfer Complete
    1 - Data Transfer Complete
ps7_sd0_Normal_interrupt_status_Error_interrupt_status_Command_Complete:
  addr: 0xe0100030
  mask: 0x1
  name: Command_Complete
  description: |
    This bit is set when get the end bit of the command response (Except Auto CMD12).
    Note: Command Timeout Error has higher priority than Command Complete. If both are set to 1, it can be considered that the response was not received correctly.
    0 - No Command Complete
    1 - Command Complete
ps7_sd0_Normal_interrupt_status_enable_Error_interrupt_status_enable_Ceata_Error_Status_Enable:
  addr: 0xe0100034
  mask: 0x20000000
  name: Ceata_Error_Status_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_status_enable_Error_interrupt_status_enable_Target_Response_Error_Status_Enable:
  addr: 0xe0100034
  mask: 0x10000000
  name: Target_Response_Error_Status_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_status_enable_Error_interrupt_status_enable_reserved_1:
  addr: 0xe0100034
  mask: 0xc000000
  name: reserved_1
  description: |
    Reserved
ps7_sd0_Normal_interrupt_status_enable_Error_interrupt_status_enable_ADMA_Error_Status_Enable:
  addr: 0xe0100034
  mask: 0x2000000
  name: ADMA_Error_Status_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_status_enable_Error_interrupt_status_enable_Auto_CMD12_Error_Status_Enable:
  addr: 0xe0100034
  mask: 0x1000000
  name: Auto_CMD12_Error_Status_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_status_enable_Error_interrupt_status_enable_Current_Limit_Error_Status_Enable:
  addr: 0xe0100034
  mask: 0x800000
  name: Current_Limit_Error_Status_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_status_enable_Error_interrupt_status_enable_Data_End_Bit_Error_Status_Enable:
  addr: 0xe0100034
  mask: 0x400000
  name: Data_End_Bit_Error_Status_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_status_enable_Error_interrupt_status_enable_Data_CRC_Error_Status_Enable:
  addr: 0xe0100034
  mask: 0x200000
  name: Data_CRC_Error_Status_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_status_enable_Error_interrupt_status_enable_Data_Timeout_Error_Status_Enable:
  addr: 0xe0100034
  mask: 0x100000
  name: Data_Timeout_Error_Status_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_status_enable_Error_interrupt_status_enable_Command_Index_Error_Status_Enable:
  addr: 0xe0100034
  mask: 0x80000
  name: Command_Index_Error_Status_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_status_enable_Error_interrupt_status_enable_Command_End_Bit_Error_Status_Enable:
  addr: 0xe0100034
  mask: 0x40000
  name: Command_End_Bit_Error_Status_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_status_enable_Error_interrupt_status_enable_Command_CRC_Error_Status_Enable:
  addr: 0xe0100034
  mask: 0x20000
  name: Command_CRC_Error_Status_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_status_enable_Error_interrupt_status_enable_Command_Timeout_Error_Status_Enable:
  addr: 0xe0100034
  mask: 0x10000
  name: Command_Timeout_Error_Status_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_status_enable_Error_interrupt_status_enable_Fixed_to_0:
  addr: 0xe0100034
  mask: 0x8000
  name: Fixed_to_0
  description: |
    The HC shall control error Interrupts using the Error Interrupt Status Enable register.
ps7_sd0_Normal_interrupt_status_enable_Error_interrupt_status_enable_reserved:
  addr: 0xe0100034
  mask: 0x7800
  name: reserved
  description: |
    Reserved
ps7_sd0_Normal_interrupt_status_enable_Error_interrupt_status_enable_Boot_terminate_Interrupt_enable:
  addr: 0xe0100034
  mask: 0x400
  name: Boot_terminate_Interrupt_enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_status_enable_Error_interrupt_status_enable_Boot_ack_rcv_enable:
  addr: 0xe0100034
  mask: 0x200
  name: Boot_ack_rcv_enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_status_enable_Error_interrupt_status_enable_Card_Interrupt_Status_Enable:
  addr: 0xe0100034
  mask: 0x100
  name: Card_Interrupt_Status_Enable
  description: |
    If this bit is set to 0, the HC shall clear Interrupt request to the System. The Card Interrupt detection is stopped when this bit is cleared and restarted when this bit is set to 1. The HD should clear the Card Interrupt Status Enable before servicing the Card Interrupt and should set this bit again after all Interrupt requests from the card are cleared to prevent inadvertent Interrupts.
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_status_enable_Error_interrupt_status_enable_Card_Removal_Status_Enable:
  addr: 0xe0100034
  mask: 0x80
  name: Card_Removal_Status_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_status_enable_Error_interrupt_status_enable_Card_Insertion_Status_Enable:
  addr: 0xe0100034
  mask: 0x40
  name: Card_Insertion_Status_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_status_enable_Error_interrupt_status_enable_Buffer_Read_Ready_Status_Enable:
  addr: 0xe0100034
  mask: 0x20
  name: Buffer_Read_Ready_Status_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_status_enable_Error_interrupt_status_enable_Buffer_Write_Ready_Status_Enable:
  addr: 0xe0100034
  mask: 0x10
  name: Buffer_Write_Ready_Status_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_status_enable_Error_interrupt_status_enable_DMA_Interrupt_Status_Enable:
  addr: 0xe0100034
  mask: 0x8
  name: DMA_Interrupt_Status_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_status_enable_Error_interrupt_status_enable_Block_Gap_Event_Status_Enable:
  addr: 0xe0100034
  mask: 0x4
  name: Block_Gap_Event_Status_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_status_enable_Error_interrupt_status_enable_Transfer_Complete_Status_Enable:
  addr: 0xe0100034
  mask: 0x2
  name: Transfer_Complete_Status_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_status_enable_Error_interrupt_status_enable_Command_Complete_Status_Enable:
  addr: 0xe0100034
  mask: 0x1
  name: Command_Complete_Status_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Ceata_Error_Signal_Enable:
  addr: 0xe0100038
  mask: 0x20000000
  name: Ceata_Error_Signal_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Target_Response_Error_Signal_Enable:
  addr: 0xe0100038
  mask: 0x10000000
  name: Target_Response_Error_Signal_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_reserved_1:
  addr: 0xe0100038
  mask: 0xc000000
  name: reserved_1
  description: |
    Reserved
ps7_sd0_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_ADMA_Error_Signal_Enable:
  addr: 0xe0100038
  mask: 0x2000000
  name: ADMA_Error_Signal_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Auto_CMD12_Error_Signal_Enable:
  addr: 0xe0100038
  mask: 0x1000000
  name: Auto_CMD12_Error_Signal_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Current_Limit_Error_Signal_Enable:
  addr: 0xe0100038
  mask: 0x800000
  name: Current_Limit_Error_Signal_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Data_End_Bit_Error_Signal_Enable:
  addr: 0xe0100038
  mask: 0x400000
  name: Data_End_Bit_Error_Signal_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Data_CRC_Error_Signal_Enable:
  addr: 0xe0100038
  mask: 0x200000
  name: Data_CRC_Error_Signal_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Data_Timeout_Error_Signal_Enable:
  addr: 0xe0100038
  mask: 0x100000
  name: Data_Timeout_Error_Signal_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Command_Index_Error_Signal_Enable:
  addr: 0xe0100038
  mask: 0x80000
  name: Command_Index_Error_Signal_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Command_End_Bit_Error_Signal_Enable:
  addr: 0xe0100038
  mask: 0x40000
  name: Command_End_Bit_Error_Signal_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Command_CRC_Error_Signal_Enable:
  addr: 0xe0100038
  mask: 0x20000
  name: Command_CRC_Error_Signal_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Command_Timeout_Error_Signal_Enable:
  addr: 0xe0100038
  mask: 0x10000
  name: Command_Timeout_Error_Signal_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Fixed_to_0:
  addr: 0xe0100038
  mask: 0x8000
  name: Fixed_to_0
  description: |
    The HD shall control error Interrupts using the Error Interrupt Signal Enable register.
ps7_sd0_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_reserved:
  addr: 0xe0100038
  mask: 0x7800
  name: reserved
  description: |
    Reserved
ps7_sd0_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Boot_terminate_Interrupt_signal_enable:
  addr: 0xe0100038
  mask: 0x400
  name: Boot_terminate_Interrupt_signal_enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Boot_ack_rcv_signal_enable:
  addr: 0xe0100038
  mask: 0x200
  name: Boot_ack_rcv_signal_enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Card_Interrupt_Signal_Enable:
  addr: 0xe0100038
  mask: 0x100
  name: Card_Interrupt_Signal_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Card_Removal_Signal_Enable:
  addr: 0xe0100038
  mask: 0x80
  name: Card_Removal_Signal_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Card_Insertion_Signal_Enable:
  addr: 0xe0100038
  mask: 0x40
  name: Card_Insertion_Signal_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Buffer_Read_Ready_Signal_Enable:
  addr: 0xe0100038
  mask: 0x20
  name: Buffer_Read_Ready_Signal_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Buffer_Write_Ready_Signal_Enable:
  addr: 0xe0100038
  mask: 0x10
  name: Buffer_Write_Ready_Signal_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_DMA_Interrupt_Signal_Enable:
  addr: 0xe0100038
  mask: 0x8
  name: DMA_Interrupt_Signal_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Block_Gap_Event_Signal_Enable:
  addr: 0xe0100038
  mask: 0x4
  name: Block_Gap_Event_Signal_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Transfer_Complete_Signal_Enable:
  addr: 0xe0100038
  mask: 0x2
  name: Transfer_Complete_Signal_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Normal_interrupt_signal_enable_Error_interrupt_signal_enable_Command_Complete_Signal_Enable:
  addr: 0xe0100038
  mask: 0x1
  name: Command_Complete_Signal_Enable
  description: |
    0 - Masked
    1 - Enabled
ps7_sd0_Auto_CMD12_error_status_Command_Not_Issued_By_Auto_CMD12_Error:
  addr: 0xe010003c
  mask: 0x80
  name: Command_Not_Issued_By_Auto_CMD12_Error
  description: |
    Setting this bit to 1 means CMD_wo_DAT is not executed due to an Auto CMD12 error (D04 - D01) in this register.
    0 - No Error
    1 - Not Issued
ps7_sd0_Auto_CMD12_error_status_reserved:
  addr: 0xe010003c
  mask: 0x60
  name: reserved
  description: |
    Reserved
ps7_sd0_Auto_CMD12_error_status_Auto_CMD12_Index_Error:
  addr: 0xe010003c
  mask: 0x10
  name: Auto_CMD12_Index_Error
  description: |
    Occurs if the Command Index error occurs in response to a command.
    0 - No Error
    1 - Error
ps7_sd0_Auto_CMD12_error_status_Auto_CMD12_End_Bit_Error:
  addr: 0xe010003c
  mask: 0x8
  name: Auto_CMD12_End_Bit_Error
  description: |
    Occurs when detecting that the end bit of command response is 0.
    0 - No Error
    1 - End Bit Error Generated
ps7_sd0_Auto_CMD12_error_status_Auto_CMD12_CRC_Error:
  addr: 0xe010003c
  mask: 0x4
  name: Auto_CMD12_CRC_Error
  description: |
    Occurs when detecting a CRC error in the command response.
    0 - No Error
    1 - CRC Error Generated
ps7_sd0_Auto_CMD12_error_status_Auto_CMD12_Timeout_Error:
  addr: 0xe010003c
  mask: 0x2
  name: Auto_CMD12_Timeout_Error
  description: |
    Occurs if the no response is returned within 64 SDCLK cycles from the end bit of the command. If this bit is set to 1, the other error status bits (D04 - D02) are meaningless.
    0 - No Error
    1 - Timeout
ps7_sd0_Auto_CMD12_error_status_Auto_CMD12_not_Executed:
  addr: 0xe010003c
  mask: 0x1
  name: Auto_CMD12_not_Executed
  description: |
    If memory multiple block data transfer is not started due to command
    error, this bit is not set because it is not necessary to issue Auto CMD12. Setting this bit to 1 means the HC cannot issue Auto CMD12 to stop memory multiple block transfer due to some error. If this bit is set to 1, other error status bits (D04 - D01) are meaningless.
    0 - Executed
    1 - Not Executed
ps7_sd0_Capabilities_Spi_block_mode:
  addr: 0xe0100040
  mask: 0x40000000
  name: Spi_block_mode
  description: |
    Spi block mode
    0 - Not Supported
    1 - Supported
ps7_sd0_Capabilities_Spi_mode:
  addr: 0xe0100040
  mask: 0x20000000
  name: Spi_mode
  description: |
    Spi mode
    0 - Not Supported
    1 - Supported
ps7_sd0_Capabilities_n64_bit_System_Bus_Support:
  addr: 0xe0100040
  mask: 0x10000000
  name: n64_bit_System_Bus_Support
  description: |
    1 - supports 64 bit system address
    0 - Does not support 64 bit system
    address
ps7_sd0_Capabilities_Interrupt_mode:
  addr: 0xe0100040
  mask: 0x8000000
  name: Interrupt_mode
  description: |
    Interrupt mode
    0 - Not Supported
    1 - Supported
ps7_sd0_Capabilities_Voltage_Support_1_8_V:
  addr: 0xe0100040
  mask: 0x4000000
  name: Voltage_Support_1_8_V
  description: |
    0 - 1.8 V Not Supported
    1 - 1.8 V Supported
ps7_sd0_Capabilities_Voltage_Support_3_0_V:
  addr: 0xe0100040
  mask: 0x2000000
  name: Voltage_Support_3_0_V
  description: |
    0 - 3.0 V Not Supported
    1 - 3.0 V Supported
ps7_sd0_Capabilities_Voltage_Support_3_3_V:
  addr: 0xe0100040
  mask: 0x1000000
  name: Voltage_Support_3_3_V
  description: |
    0 - 3.3 V Not Supported
    1 - 3.3 V Supported
ps7_sd0_Capabilities_Suspend_Resume_Support:
  addr: 0xe0100040
  mask: 0x800000
  name: Suspend_Resume_Support
  description: |
    This bit indicates whether the HC supports Suspend / Resume functionality. If this bit is 0, the Suspend and Resume mechanism are not supported and the HD shall not issue either Suspend / Resume commands.
    0 - Not Supported
    1 - Supported
ps7_sd0_Capabilities_SDMA_Support:
  addr: 0xe0100040
  mask: 0x400000
  name: SDMA_Support
  description: |
    This bit indicates whether the HC is capable of using DMA to transfer data between system memory and the HC directly.
    0 - SDMA Not Supported
    1 - SDMA Supported.
ps7_sd0_Capabilities_High_Speed_Support:
  addr: 0xe0100040
  mask: 0x200000
  name: High_Speed_Support
  description: |
    This bit indicates whether the HC and the Host System support High Speed mode and they can supply SD Clock frequency from 25Mhz to 50 MHz (for SD)/ 20MHz to 52MHz (for MMC).
    0 - High Speed Not Supported
    1 - High Speed Supported
ps7_sd0_Capabilities_reserved_2:
  addr: 0xe0100040
  mask: 0x100000
  name: reserved_2
  description: |
    Reserved
ps7_sd0_Capabilities_ADMA2_Support:
  addr: 0xe0100040
  mask: 0x80000
  name: ADMA2_Support
  description: |
    1 - ADMA2 support.
    0 - ADMA2 not support
ps7_sd0_Capabilities_Extended_Media_Bus_Support:
  addr: 0xe0100040
  mask: 0x40000
  name: Extended_Media_Bus_Support
  description: |
    This bit indicates whether the Host Controller is capable bus.
    1 - Extended Media Bus Supported
    0 - Extended Media Bus not Supported
ps7_sd0_Capabilities_Max_Block_Length:
  addr: 0xe0100040
  mask: 0x30000
  name: Max_Block_Length
  description: |
    This value indicates the maximum block size that the HD can read and write to the buffer in the HC. The buffer shall transfer this block size without wait cycles. Three sizes can be defined as indicated below.
    00 - 512 byte
    01 - 1024 byte
    10 - 2048 byte
    11 - 4096 byte
ps7_sd0_Capabilities_reserved_1:
  addr: 0xe0100040
  mask: 0xc000
  name: reserved_1
  description: |
    Reserved
ps7_sd0_Capabilities_reserved_Base_Clock_Frequency_for_SD_Clock:
  addr: 0xe0100040
  mask: 0x3f00
  name: reserved_Base_Clock_Frequency_for_SD_Clock
  description: |
    Reserved. Do not modify.
ps7_sd0_Capabilities_Timeout_Clock_Unit:
  addr: 0xe0100040
  mask: 0x80
  name: Timeout_Clock_Unit
  description: |
    This bit shows the unit of base clock frequency used to detect Data Timeout Error.
    0 - KHz
    1 - MHz
ps7_sd0_Capabilities_reserved:
  addr: 0xe0100040
  mask: 0x40
  name: reserved
  description: |
    Reserved
ps7_sd0_Capabilities_reserved_Timeout_Clock_Frequency:
  addr: 0xe0100040
  mask: 0x3f
  name: reserved_Timeout_Clock_Frequency
  description: |
    Reserved. Do not modify.
ps7_sd0_Maximum_current_capabilities_Maximum_Current_for_1_8V:
  addr: 0xe0100048
  mask: 0xff0000
  name: Maximum_Current_for_1_8V
  description: |
    Maximum Current for 1.8V
ps7_sd0_Maximum_current_capabilities_Maximum_Current_for_3_0V:
  addr: 0xe0100048
  mask: 0xff00
  name: Maximum_Current_for_3_0V
  description: |
    Maximum Current for 3.0V
ps7_sd0_Maximum_current_capabilities_Maximum_Current_for_3_3V:
  addr: 0xe0100048
  mask: 0xff
  name: Maximum_Current_for_3_3V
  description: |
    Maximum Current for 3.3V
ps7_sd0_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Vendor_Specific_Error_Status:
  addr: 0xe0100050
  mask: 0xc0000000
  name: Force_Event_for_Vendor_Specific_Error_Status
  description: |
    Additional status bits can be defined in
    this register by the vendor.
    1 - Interrupt is generated
    0 - No interrupt
ps7_sd0_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Ceata_error:
  addr: 0xe0100050
  mask: 0x20000000
  name: Force_Event_for_Ceata_error
  description: |
    Force Event for Ceata Error
    1 - Interrupt is generated
    0 - No interrupt
ps7_sd0_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_event_for_Target_Response_error:
  addr: 0xe0100050
  mask: 0x10000000
  name: Force_event_for_Target_Response_error
  description: |
    Force Event for Target Response Error
    1 - Interrupt is generated
    0 - No interrupt
ps7_sd0_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_reserved_2:
  addr: 0xe0100050
  mask: 0xc000000
  name: reserved_2
  description: |
    Reserved
ps7_sd0_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_ADMA_Error:
  addr: 0xe0100050
  mask: 0x2000000
  name: Force_Event_for_ADMA_Error
  description: |
    Force Event for ADMA Error
    1 - Interrupt is generated
    0 - No interrupt
ps7_sd0_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Auto_CMD12_Error:
  addr: 0xe0100050
  mask: 0x1000000
  name: Force_Event_for_Auto_CMD12_Error
  description: |
    Force Event for Auto CMD12 Error
    1 - Interrupt is generated
    0 - No interrupt
ps7_sd0_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Current_Limit_Error:
  addr: 0xe0100050
  mask: 0x800000
  name: Force_Event_for_Current_Limit_Error
  description: |
    Force Event for Current Limit Error
    1 - Interrupt is generated
    0 - No interrupt
ps7_sd0_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Data_End_Bit_Error:
  addr: 0xe0100050
  mask: 0x400000
  name: Force_Event_for_Data_End_Bit_Error
  description: |
    Force Event for Data End Bit Error
    1 - Interrupt is generated
    0 - No interrupt
ps7_sd0_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Data_CRC_Error:
  addr: 0xe0100050
  mask: 0x200000
  name: Force_Event_for_Data_CRC_Error
  description: |
    Force Event for Data CRC Error
    1 - Interrupt is generated
    0 - No interrupt
ps7_sd0_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Data__Timeout_Error:
  addr: 0xe0100050
  mask: 0x100000
  name: Force_Event_for_Data__Timeout_Error
  description: |
    Force Event for Data Timeout Error
    1 - Interrupt is generated
    0 - No interrupt
ps7_sd0_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Command_Index_Error:
  addr: 0xe0100050
  mask: 0x80000
  name: Force_Event_for_Command_Index_Error
  description: |
    Force Event for Command Index Error
    1 - Interrupt is generated
    0 - No interrupt
ps7_sd0_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Command_End_Bit_Error:
  addr: 0xe0100050
  mask: 0x40000
  name: Force_Event_for_Command_End_Bit_Error
  description: |
    Force Event for Command End Bit Error
    1 - Interrupt is generated
    0 - No interrupt
ps7_sd0_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Command_CRC_Error:
  addr: 0xe0100050
  mask: 0x20000
  name: Force_Event_for_Command_CRC_Error
  description: |
    Force Event for Command CRC Error
    1 - Interrupt is generated
    0 - No interrupt
ps7_sd0_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Command_Timeout_Error:
  addr: 0xe0100050
  mask: 0x10000
  name: Force_Event_for_Command_Timeout_Error
  description: |
    Force Event for Command Timeout Error
    1 - Interrupt is generated
    0 - No interrupt
ps7_sd0_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_reserved_1:
  addr: 0xe0100050
  mask: 0xff00
  name: reserved_1
  description: |
    Reserved
ps7_sd0_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_command_not_issued_by_Auto_CMD12_Error:
  addr: 0xe0100050
  mask: 0x80
  name: Force_Event_for_command_not_issued_by_Auto_CMD12_Error
  description: |
    1 - Interrupt is generated
    0 - no interrupt
ps7_sd0_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_reserved:
  addr: 0xe0100050
  mask: 0x60
  name: reserved
  description: |
    Reserved
ps7_sd0_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Auto_CMD12_Index_Error:
  addr: 0xe0100050
  mask: 0x10
  name: Force_Event_for_Auto_CMD12_Index_Error
  description: |
    1 - Interrupt is generated
    0 - no interrupt
ps7_sd0_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Auto_CMD12_End_bit_Error:
  addr: 0xe0100050
  mask: 0x8
  name: Force_Event_for_Auto_CMD12_End_bit_Error
  description: |
    1 - Interrupt is generated
    0 - no interrupt
ps7_sd0_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Auto_CMD12_CRC_Error:
  addr: 0xe0100050
  mask: 0x4
  name: Force_Event_for_Auto_CMD12_CRC_Error
  description: |
    1 - Interrupt is generated
    0 - no interrupt
ps7_sd0_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Auto_CMD12_timeout_Error:
  addr: 0xe0100050
  mask: 0x2
  name: Force_Event_for_Auto_CMD12_timeout_Error
  description: |
    1 - Interrupt is generated
    0 - no interrupt
ps7_sd0_Force_event_for_AutoCmd12_Error_Status_Force_event_register_for_error_interrupt_status_Force_Event_for_Auto_CMD12_NOT_Executed:
  addr: 0xe0100050
  mask: 0x1
  name: Force_Event_for_Auto_CMD12_NOT_Executed
  description: |
    1 - Interrupt is generated
    0 - no interrupt
ps7_sd0_ADMA_error_status_ADMA_Length_Mismatch_Error:
  addr: 0xe0100054
  mask: 0x4
  name: ADMA_Length_Mismatch_Error
  description: |
    This error occurs in the following 2 cases.
    1. While Block Count Enable being set, the total
    data length specified by the
    Descriptor table is different from that specified by
    the Block Count and
    Block Length.
    2. Total data length can not be divided by the block
    length.
    1 - Error
    0 - No error
ps7_sd0_ADMA_error_status_ADMA_Error_State:
  addr: 0xe0100054
  mask: 0x3
  name: ADMA_Error_State
  description: |
    This field indicates the state of ADMA when error is occurred during ADMA data transfer. This field never indicates "10" because ADMA never stops in this state.
    D01 - D00 : ADMA Error State when
    error is occurred
    Contents of SYS_SDR register
    00 - ST_STOP (Stop DMA) Points next of the error
    descriptor
    01 - ST_FDS (Fetch Descriptor) Points the error
    descriptor
    10 - Never set this state (Not used)
    11 - ST_TFR (Transfer Data) Points the next of the
    error descriptor
ps7_sd0_ADMA_system_address_ADMA_System_Address:
  addr: 0xe0100058
  mask: 0xffffffff
  name: ADMA_System_Address
  description: |
    This register holds byte address of executing
    command of the Descriptor table.
    32-bit Address Descriptor uses lower 32-
    bit of this register. At the start of ADMA,
    the Host Driver shall set start address of
    the Descriptor table. The ADMA
    increments this register address, which
    points to next line, when every fetching a
    Descriptor line. When the ADMA Error
    Interrupt is generated, this register shall
    hold valid Descriptor address depending
    on the ADMA state. The Host Driver shall
    program Descriptor Table on 32-bit
    boundary and set 32-bit boundary
    address to this register. ADMA2 ignores
    lower 2-bit of this register and assumes it
    to be 00b.
    32-bit Address ADMA Register Value 32-
    bit System Address
    0x00000000 0x00000000
    0x00000004 0x00000004
    to
    0xFFFFFFFC 0xFFFFFFFC
ps7_sd0_Boot_Timeout_control_Boot_Data_Timeout_Counter_Value:
  addr: 0xe0100060
  mask: 0xffffffff
  name: Boot_Data_Timeout_Counter_Value
  description: |
    This value determines the interval by
    which DAT line time-outs are detected
    during boot operation for MMC3.31
    card.
    The value is in number of sd clock.
ps7_sd0_Debug_Selection_Debug_sel:
  addr: 0xe0100064
  mask: 0x1
  name: Debug_sel
  description: |
    1- cmd register, Interrupt status, transmitter
    module, ahb_iface module and clk
    sdcard signals are probed out.
    0 - receiver module and fifo_ctrl module
    signals are probed out
ps7_sd0_SPI_interrupt_support_SPI_INT_SUPPORT:
  addr: 0xe01000f0
  mask: 0xff
  name: SPI_INT_SUPPORT
  description: |
    This bit is set to indicate the assertion of interrupts in the SPI mode at any time, irrespective of the status of the card select (CS) line. If this bit is zero,
    then SDIO card can only assert the interrupt line in the SPI mode when the CS line is asserted.
ps7_sd0_Slot_interrupt_status_Host_controller_version_Vendor_Version_Number:
  addr: 0xe01000fc
  mask: 0xff000000
  name: Vendor_Version_Number
  description: |
    This status is reserved for the vendor version number. The HD should not use this status.
ps7_sd0_Slot_interrupt_status_Host_controller_version_Specification_Version_Number:
  addr: 0xe01000fc
  mask: 0xff0000
  name: Specification_Version_Number
  description: |
    This status indicates the Host Controller Spec. Version. The upper and lower 4-bits indicate the version. 00 - SD Host Specification version 1.0
    01 - SD Host Specification version 2.00 including only the feature of the Test Register
    others - Reserved
ps7_sd0_Slot_interrupt_status_Host_controller_version_reserved:
  addr: 0xe01000fc
  mask: 0xff00
  name: reserved
  description: |
    Reserved
ps7_sd0_Slot_interrupt_status_Host_controller_version_Interrupt_Signal_for_Each_Slot:
  addr: 0xe01000fc
  mask: 0xff
  name: Interrupt_Signal_for_Each_Slot
  description: |
    These status bit indicate the logical OR of Interrupt signal and Wakeup signal for each slot. A maximum of 8 slots can be defined. If one interrupt signal is associated with multiple slots. the HD can know which interrupt is generated by reading these status bits. By a power on reset or by Software Reset For All, the Interrupt signal shall be de asserted and this status shall read 00h.
    Bit 00 - Slot 1
    Bit 01 - Slot 2
    Bit 02 - Slot 3
    ----- -----
    Bit 07 - Slot 8
ps7_debug_tpiu_SuppSize_a:
  addr: 0xf8803000
  mask: 0xffffffff
  name: a
  description: |
    Each bit location represents a single port size that is
    supported on the device, that is, 32-1 in bit locations [31:0].
ps7_debug_tpiu_CurrentSize_a:
  addr: 0xf8803004
  mask: 0xffffffff
  name: a
  description: |
    The Current Port Size Register has the same format as the Supported Port Sizes register but only one bit is set, and all others must be zero. Writing values with more than one bit set or setting a bit that is not indicated as supported is not supported and causes unpredictable behavior.
ps7_debug_tpiu_SuppTrigMode_TrgRun:
  addr: 0xf8803100
  mask: 0x20000
  name: TrgRun
  description: |
    Trigger Counter running. A trigger has occurred but the counter is not at zero.
ps7_debug_tpiu_SuppTrigMode_Triggered:
  addr: 0xf8803100
  mask: 0x10000
  name: Triggered
  description: |
    A trigger has occurred and the counter has reached zero.
ps7_debug_tpiu_SuppTrigMode_reserved:
  addr: 0xf8803100
  mask: 0xfe00
  name: reserved
  description: |
    Reserved
ps7_debug_tpiu_SuppTrigMode_TCount8:
  addr: 0xf8803100
  mask: 0x100
  name: TCount8
  description: |
    8-bit wide counter register implemented.
ps7_debug_tpiu_SuppTrigMode_reserved_1:
  addr: 0xf8803100
  mask: 0xe0
  name: reserved_1
  description: |
    Reserved
ps7_debug_tpiu_SuppTrigMode_Mult64k:
  addr: 0xf8803100
  mask: 0x10
  name: Mult64k
  description: |
    Multiply the Trigger Counter by 65536 supported.
ps7_debug_tpiu_SuppTrigMode_Mult256:
  addr: 0xf8803100
  mask: 0x8
  name: Mult256
  description: |
    Multiply the Trigger Counter by 256 supported.
ps7_debug_tpiu_SuppTrigMode_Mult16:
  addr: 0xf8803100
  mask: 0x4
  name: Mult16
  description: |
    Multiply the Trigger Counter by 16 supported.
ps7_debug_tpiu_SuppTrigMode_Mult4:
  addr: 0xf8803100
  mask: 0x2
  name: Mult4
  description: |
    Multiply the Trigger Counter by 4 supported.
ps7_debug_tpiu_SuppTrigMode_Mult2:
  addr: 0xf8803100
  mask: 0x1
  name: Mult2
  description: |
    Multiply the Trigger Counter by 2 supported.
ps7_debug_tpiu_TrigCount_TrigCount:
  addr: 0xf8803104
  mask: 0xff
  name: TrigCount
  description: |
    8-bit counter value for the number of words to be output from the formatter before a trigger is inserted.
ps7_debug_tpiu_TrigMult_Mult64k:
  addr: 0xf8803108
  mask: 0x10
  name: Mult64k
  description: |
    Multiply the Trigger Counter by 65536.
ps7_debug_tpiu_TrigMult_Mult256:
  addr: 0xf8803108
  mask: 0x8
  name: Mult256
  description: |
    Multiply the Trigger Counter by 256.
ps7_debug_tpiu_TrigMult_Mult16:
  addr: 0xf8803108
  mask: 0x4
  name: Mult16
  description: |
    Multiply the Trigger Counter by 16.
ps7_debug_tpiu_TrigMult_Mult4:
  addr: 0xf8803108
  mask: 0x2
  name: Mult4
  description: |
    Multiply the Trigger Counter by 4.
ps7_debug_tpiu_TrigMult_Mult2:
  addr: 0xf8803108
  mask: 0x1
  name: Mult2
  description: |
    Multiply the Trigger Counter by 2.
ps7_debug_tpiu_SuppTest_PContEn:
  addr: 0xf8803200
  mask: 0x20000
  name: PContEn
  description: |
    Continuous mode.
ps7_debug_tpiu_SuppTest_PTimeEn:
  addr: 0xf8803200
  mask: 0x10000
  name: PTimeEn
  description: |
    Timed mode.
ps7_debug_tpiu_SuppTest_reserved:
  addr: 0xf8803200
  mask: 0xfff0
  name: reserved
  description: |
    Reserved
ps7_debug_tpiu_SuppTest_PatF0:
  addr: 0xf8803200
  mask: 0x8
  name: PatF0
  description: |
    FF/00 Pattern
ps7_debug_tpiu_SuppTest_PatA5:
  addr: 0xf8803200
  mask: 0x4
  name: PatA5
  description: |
    AA/55 Pattern
ps7_debug_tpiu_SuppTest_PatW0:
  addr: 0xf8803200
  mask: 0x2
  name: PatW0
  description: |
    Walking 0s Pattern
ps7_debug_tpiu_SuppTest_PatW1:
  addr: 0xf8803200
  mask: 0x1
  name: PatW1
  description: |
    Walking 1s Pattern
ps7_debug_tpiu_CurrentTest_PContEn:
  addr: 0xf8803204
  mask: 0x20000
  name: PContEn
  description: |
    Continuous mode.
ps7_debug_tpiu_CurrentTest_PTimeEn:
  addr: 0xf8803204
  mask: 0x10000
  name: PTimeEn
  description: |
    Timed mode.
ps7_debug_tpiu_CurrentTest_reserved:
  addr: 0xf8803204
  mask: 0xfff0
  name: reserved
  description: |
    Reserved
ps7_debug_tpiu_CurrentTest_PatF0:
  addr: 0xf8803204
  mask: 0x8
  name: PatF0
  description: |
    FF/00 Pattern
ps7_debug_tpiu_CurrentTest_PatA5:
  addr: 0xf8803204
  mask: 0x4
  name: PatA5
  description: |
    AA/55 Pattern
ps7_debug_tpiu_CurrentTest_PatW0:
  addr: 0xf8803204
  mask: 0x2
  name: PatW0
  description: |
    Walking 0s Pattern
ps7_debug_tpiu_CurrentTest_PatW1:
  addr: 0xf8803204
  mask: 0x1
  name: PatW1
  description: |
    Walking 1s Pattern
ps7_debug_tpiu_TestRepeatCount_PattCount:
  addr: 0xf8803208
  mask: 0xff
  name: PattCount
  description: |
    8-bit counter value to indicate the number of TRACECLKIN cycles that a pattern runs for before switching to the next pattern.
ps7_debug_tpiu_FFSR_TCPresent:
  addr: 0xf8803300
  mask: 0x4
  name: TCPresent
  description: |
    If this bit is set then TRACECTL is present.
ps7_debug_tpiu_FFSR_FtStopped:
  addr: 0xf8803300
  mask: 0x2
  name: FtStopped
  description: |
    Formatter stopped.
    The formatter has received a stop request signal and all trace data and post-amble has been output. Any more trace data on the ATB interface is ignored and ATREADYS goes HIGH.
ps7_debug_tpiu_FFSR_FlInProg:
  addr: 0xf8803300
  mask: 0x1
  name: FlInProg
  description: |
    Flush In Progress. This is an indication of the current state of AFVALIDS.
ps7_debug_tpiu_FFCR_StopTrig:
  addr: 0xf8803304
  mask: 0x2000
  name: StopTrig
  description: |
    Stop the formatter after a Trigger Event is observed.
ps7_debug_tpiu_FFCR_StopFl:
  addr: 0xf8803304
  mask: 0x1000
  name: StopFl
  description: |
    Stop the formatter after a flush completes (return of AFREADYS). This forces the FIFO to drain off any part-completed packets.
ps7_debug_tpiu_FFCR_reserved:
  addr: 0xf8803304
  mask: 0x800
  name: reserved
  description: |
    Reserved
ps7_debug_tpiu_FFCR_TrigFl:
  addr: 0xf8803304
  mask: 0x400
  name: TrigFl
  description: |
    Indicates a trigger on Flush completion on AFREADYS being returned.
ps7_debug_tpiu_FFCR_TrigEvt:
  addr: 0xf8803304
  mask: 0x200
  name: TrigEvt
  description: |
    Indicates a trigger on a Trigger Event.
ps7_debug_tpiu_FFCR_TrigIn:
  addr: 0xf8803304
  mask: 0x100
  name: TrigIn
  description: |
    Indicates a trigger on TRIGIN being asserted.
ps7_debug_tpiu_FFCR_reserved_1:
  addr: 0xf8803304
  mask: 0x80
  name: reserved_1
  description: |
    Reserved
ps7_debug_tpiu_FFCR_FOnMan:
  addr: 0xf8803304
  mask: 0x40
  name: FOnMan
  description: |
    Manually generate a flush of the system. Setting this bit causes a flush to be generated. This is cleared when this flush has been serviced.
ps7_debug_tpiu_FFCR_FOnTrig:
  addr: 0xf8803304
  mask: 0x20
  name: FOnTrig
  description: |
    Generate a flush using Trigger event.
    Set this bit to cause a flush of data in the system when a Trigger Event occurs.
ps7_debug_tpiu_FFCR_FOnFlIn:
  addr: 0xf8803304
  mask: 0x10
  name: FOnFlIn
  description: |
    Generate flush using the FLUSHIN interface. Set this bit to enable use of the FLUSHIN connection.
ps7_debug_tpiu_FFCR_reserved_2:
  addr: 0xf8803304
  mask: 0xc
  name: reserved_2
  description: |
    Reserved
ps7_debug_tpiu_FFCR_EnFCont:
  addr: 0xf8803304
  mask: 0x2
  name: EnFCont
  description: |
    Continuous Formatting, no TRACECTL. Embed in trigger packets and indicate null cycles using Sync packets. Can only be changed when FtStopped is HIGH.
ps7_debug_tpiu_FFCR_EnFTC:
  addr: 0xf8803304
  mask: 0x1
  name: EnFTC
  description: |
    Enable Formatting. Do not embed Triggers into the formatted stream. Trace disable cycles and triggers are indicated by TRACECTL, where fitted. Can only be changed when FtStopped is HIGH.
ps7_debug_tpiu_FormatSyncCount_CycCount:
  addr: 0xf8803308
  mask: 0xfff
  name: CycCount
  description: |
    12-bit counter value to indicate the number of complete frames between full synchronization packets.
ps7_debug_tpiu_EXTCTLIn_a:
  addr: 0xf8803400
  mask: 0xff
  name: a
  description: |
    Tied to 0
ps7_debug_tpiu_EXTCTLOut_a:
  addr: 0xf8803404
  mask: 0xff
  name: a
  description: |
    Output not connected
ps7_debug_tpiu_ITTRFLINACK_FLUSHINACK:
  addr: 0xf8803ee4
  mask: 0x2
  name: FLUSHINACK
  description: |
    Set the value of FLUSHINACK
ps7_debug_tpiu_ITTRFLINACK_TRIGINACK:
  addr: 0xf8803ee4
  mask: 0x1
  name: TRIGINACK
  description: |
    Set the value of TRIGINACK
ps7_debug_tpiu_ITTRFLIN_FLUSHIN:
  addr: 0xf8803ee8
  mask: 0x2
  name: FLUSHIN
  description: |
    Read the value of FLUSHIN
ps7_debug_tpiu_ITTRFLIN_TRIGIN:
  addr: 0xf8803ee8
  mask: 0x1
  name: TRIGIN
  description: |
    Read the value of TRIGIN
ps7_debug_tpiu_ITATBDATA0_ATDATA31:
  addr: 0xf8803eec
  mask: 0x10
  name: ATDATA31
  description: |
    Read the value of ATDATAS[31]
ps7_debug_tpiu_ITATBDATA0_ATDATA23:
  addr: 0xf8803eec
  mask: 0x8
  name: ATDATA23
  description: |
    Read the value of ATDATAS[23]
ps7_debug_tpiu_ITATBDATA0_ATDATA15:
  addr: 0xf8803eec
  mask: 0x4
  name: ATDATA15
  description: |
    Read the value of ATDATAS[15]
ps7_debug_tpiu_ITATBDATA0_ATDATA7:
  addr: 0xf8803eec
  mask: 0x2
  name: ATDATA7
  description: |
    Read the value of ATDATAS[7]
ps7_debug_tpiu_ITATBDATA0_ATDATA0:
  addr: 0xf8803eec
  mask: 0x1
  name: ATDATA0
  description: |
    Read the value of ATDATAS[0]
ps7_debug_tpiu_ITATBCTR2_AFVALID:
  addr: 0xf8803ef0
  mask: 0x2
  name: AFVALID
  description: |
    Set the value of AFVALIDS
ps7_debug_tpiu_ITATBCTR2_ATREADY:
  addr: 0xf8803ef0
  mask: 0x1
  name: ATREADY
  description: |
    Set the value of ATREADYS
ps7_debug_tpiu_ITATBCTR1_ATID:
  addr: 0xf8803ef4
  mask: 0x7f
  name: ATID
  description: |
    Read the value of ATIDS
ps7_debug_tpiu_ITATBCTR0_ATBYTES:
  addr: 0xf8803ef8
  mask: 0x300
  name: ATBYTES
  description: |
    Read the value of ATBYTESS
ps7_debug_tpiu_ITATBCTR0_reserved:
  addr: 0xf8803ef8
  mask: 0xfc
  name: reserved
  description: |
    Reserved
ps7_debug_tpiu_ITATBCTR0_AFREADY:
  addr: 0xf8803ef8
  mask: 0x2
  name: AFREADY
  description: |
    Read the value of AFREADYS
ps7_debug_tpiu_ITATBCTR0_ATVALID:
  addr: 0xf8803ef8
  mask: 0x1
  name: ATVALID
  description: |
    Read the value of ATVALIDS
ps7_debug_tpiu_IMCR_a:
  addr: 0xf8803f00
  mask: 0x1
  name: a
  description: |
    Enable Integration Test registers
ps7_debug_tpiu_CTSR_a:
  addr: 0xf8803fa0
  mask: 0xf
  name: a
  description: |
    The claim tag register is used for any interrogating tools to determine if the device is being programmed or has been programmed.
    Read:
    1= Claim tag is implemented, 0 = Claim tag is not implemented
    Write:
    1= Set claim tag bit, 0= No effect
ps7_debug_tpiu_CTCR_a:
  addr: 0xf8803fa4
  mask: 0xf
  name: a
  description: |
    The claim tag register is used for any interrogating tools to determine if the device is being programmed or has been programmed.
    Read: Current value of claim tag.
    Write: 1= Clear claim tag bit, 0= No effect
ps7_debug_tpiu_LAR_a:
  addr: 0xf8803fb0
  mask: 0xffffffff
  name: a
  description: |
    Write Access Code.
    Write behavior depends on PADDRDBG31 pin:
    - PADDRDBG31=0 (lower 2GB):
    After reset (via PRESETDBGn), TPIU is locked, i.e., writes to all other registers using lower 2GB addresses are ignored.
    To unlock, 0xC5ACCE55 must be written this register.
    After the required registers are written, to lock again, write a value other than 0xC5ACCE55 to this register.
    - PADDRDBG31=1 (upper 2GB):
    TPIU is unlocked when upper 2GB addresses are used to write to all the registers.
    However, write to this register is ignored using a upper 2GB address!
    Note: read from this register always returns 0, regardless of PADDRDBG31.
ps7_debug_tpiu_LSR_n8BIT:
  addr: 0xf8803fb4
  mask: 0x4
  name: n8BIT
  description: |
    Set to 0 since TPIU implements a 32-bit lock access register
ps7_debug_tpiu_LSR_STATUS:
  addr: 0xf8803fb4
  mask: 0x2
  name: STATUS
  description: |
    Read behavior depends on PADDRDBG31 pin:
    - PADDRDBG31=0 (lower 2GB):
    When a lower 2GB address is used to read this register, this bit indicates whether TPIU is in locked state
    (1= locked, 0= unlocked).
    - PADDRDBG31=1 (upper 2GB):
    always returns 0.
ps7_debug_tpiu_LSR_IMP:
  addr: 0xf8803fb4
  mask: 0x1
  name: IMP
  description: |
    Read behavior depends on PADDRDBG31 pin:
    - PADDRDBG31=0 (lower 2GB):
    always returns 1, meaning lock mechanism are implemented.
    - PADDRDBG31=1 (upper 2GB):
    always returns 0, meaning lock mechanism is NOT implemented.
ps7_debug_tpiu_ASR_a:
  addr: 0xf8803fb8
  mask: 0xff
  name: a
  description: |
    Indicates functionality not implemented
ps7_debug_tpiu_DEVID_UartNRZ:
  addr: 0xf8803fc8
  mask: 0x800
  name: UartNRZ
  description: |
    UART/NRZ not supported
ps7_debug_tpiu_DEVID_Manchester:
  addr: 0xf8803fc8
  mask: 0x400
  name: Manchester
  description: |
    Manchester not support
ps7_debug_tpiu_DEVID_ClockData:
  addr: 0xf8803fc8
  mask: 0x200
  name: ClockData
  description: |
    Trace clock + data is supported
ps7_debug_tpiu_DEVID_FifoSize:
  addr: 0xf8803fc8
  mask: 0x1c0
  name: FifoSize
  description: |
    FIFO size is 4
ps7_debug_tpiu_DEVID_AsyncClock:
  addr: 0xf8803fc8
  mask: 0x20
  name: AsyncClock
  description: |
    ATCLK and TRACECLKIN is asynchronous
ps7_debug_tpiu_DEVID_InputMux:
  addr: 0xf8803fc8
  mask: 0x1f
  name: InputMux
  description: |
    No input multiplexing
ps7_debug_tpiu_DTIR_a:
  addr: 0xf8803fcc
  mask: 0xff
  name: a
  description: |
    A trace sink and specifically a TPIU
ps7_debug_tpiu_PERIPHID4_n4KB_count:
  addr: 0xf8803fd0
  mask: 0xf0
  name: n4KB_count
  description: |
    4KB Count, set to 0
ps7_debug_tpiu_PERIPHID4_JEP106ID:
  addr: 0xf8803fd0
  mask: 0xf
  name: JEP106ID
  description: |
    JEP106 continuation code
ps7_debug_tpiu_PERIPHID5_a:
  addr: 0xf8803fd4
  mask: 0xff
  name: a
  description: |
    reserved
ps7_debug_tpiu_PERIPHID6_a:
  addr: 0xf8803fd8
  mask: 0xff
  name: a
  description: |
    reserved
ps7_debug_tpiu_PERIPHID7_a:
  addr: 0xf8803fdc
  mask: 0xff
  name: a
  description: |
    reserved
ps7_debug_tpiu_PERIPHID0_a:
  addr: 0xf8803fe0
  mask: 0xff
  name: a
  description: |
    PartNumber0
ps7_debug_tpiu_PERIPHID1_JEP106ID:
  addr: 0xf8803fe4
  mask: 0xf0
  name: JEP106ID
  description: |
    JEP106 Identity Code [3:0]
ps7_debug_tpiu_PERIPHID1_PartNumber1:
  addr: 0xf8803fe4
  mask: 0xf
  name: PartNumber1
  description: |
    PartNumber1
ps7_debug_tpiu_PERIPHID2_RevNum:
  addr: 0xf8803fe8
  mask: 0xf0
  name: RevNum
  description: |
    Revision number of Peripheral
ps7_debug_tpiu_PERIPHID2_JEDEC:
  addr: 0xf8803fe8
  mask: 0x8
  name: JEDEC
  description: |
    Indicates that a JEDEC assigned value is used
ps7_debug_tpiu_PERIPHID2_JEP106ID:
  addr: 0xf8803fe8
  mask: 0x7
  name: JEP106ID
  description: |
    JEP106 Identity Code [6:4]
ps7_debug_tpiu_PERIPHID3_RevAnd:
  addr: 0xf8803fec
  mask: 0xf0
  name: RevAnd
  description: |
    RevAnd, at top level
ps7_debug_tpiu_PERIPHID3_CustMod:
  addr: 0xf8803fec
  mask: 0xf
  name: CustMod
  description: |
    Customer Modified
ps7_debug_tpiu_COMPID0_a:
  addr: 0xf8803ff0
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_debug_tpiu_COMPID1_a:
  addr: 0xf8803ff4
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_debug_tpiu_COMPID2_a:
  addr: 0xf8803ff8
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_debug_tpiu_COMPID3_a:
  addr: 0xf8803ffc
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_debug_ftm_FTMGLBCTRL_FTMENABLE:
  addr: 0xf880b000
  mask: 0x1
  name: FTMENABLE
  description: |
    Enable FTM
ps7_debug_ftm_FTMSTATUS_IDLE:
  addr: 0xf880b004
  mask: 0x80
  name: IDLE
  description: |
    FTM IDLE Status
ps7_debug_ftm_FTMSTATUS_SPIDEN:
  addr: 0xf880b004
  mask: 0x40
  name: SPIDEN
  description: |
    Trustzone SPIDEN signal status
ps7_debug_ftm_FTMSTATUS_DBGEN:
  addr: 0xf880b004
  mask: 0x20
  name: DBGEN
  description: |
    Trustzone DBGEN signal status
ps7_debug_ftm_FTMSTATUS_SPNIDEN:
  addr: 0xf880b004
  mask: 0x10
  name: SPNIDEN
  description: |
    Trustzone SPNIDEN signal status
ps7_debug_ftm_FTMSTATUS_NIDEN:
  addr: 0xf880b004
  mask: 0x8
  name: NIDEN
  description: |
    Trustzone NIDEN signal status
ps7_debug_ftm_FTMSTATUS_FIFOFULL:
  addr: 0xf880b004
  mask: 0x4
  name: FIFOFULL
  description: |
    1 = FIFO is full
ps7_debug_ftm_FTMSTATUS_FIFOEMPTY:
  addr: 0xf880b004
  mask: 0x2
  name: FIFOEMPTY
  description: |
    1 = FIFO is empty
ps7_debug_ftm_FTMSTATUS_LOCKED:
  addr: 0xf880b004
  mask: 0x1
  name: LOCKED
  description: |
    Always read as zero
ps7_debug_ftm_FTMCONTROL_CYCEN:
  addr: 0xf880b008
  mask: 0x4
  name: CYCEN
  description: |
    Enable Cycle Count packets
ps7_debug_ftm_FTMCONTROL_TRACEN:
  addr: 0xf880b008
  mask: 0x2
  name: TRACEN
  description: |
    Enable Trace packets
ps7_debug_ftm_FTMCONTROL_PROG:
  addr: 0xf880b008
  mask: 0x1
  name: PROG
  description: |
    Not used
ps7_debug_ftm_FTMP2FDBG0_PSS2FPGA:
  addr: 0xf880b00c
  mask: 0xff
  name: PSS2FPGA
  description: |
    Signals presented to the fabric. These signals do not affect the FTM, they are provided for user specific debug. To modify the contents of this register, the SPIDEN pin must be asserted.
ps7_debug_ftm_FTMP2FDBG1_PSS2FPGA:
  addr: 0xf880b010
  mask: 0xff
  name: PSS2FPGA
  description: |
    Signals presented to the fabric. These signals do not affect the FTM, they are provided for user specific debug. To modify the contents of this register, the SPIDEN pin must be asserted.
ps7_debug_ftm_FTMP2FDBG2_PSS2FPGA:
  addr: 0xf880b014
  mask: 0xff
  name: PSS2FPGA
  description: |
    Signals presented to the fabric. These signals do not affect the FTM, they are provided for user specific debug. To modify the contents of this register, the SPIDEN pin must be asserted.
ps7_debug_ftm_FTMP2FDBG3_PSS2FPGA:
  addr: 0xf880b018
  mask: 0xff
  name: PSS2FPGA
  description: |
    Signals presented to the fabric. These signals do not affect the FTM, they are provided for user specific debug. To modify the contents of this register, the SPIDEN pin must be asserted.
ps7_debug_ftm_FTMF2PDBG0_FPGA2PSS:
  addr: 0xf880b01c
  mask: 0xff
  name: FPGA2PSS
  description: |
    Signals that are presented to the PSS from the Fabric.
ps7_debug_ftm_FTMF2PDBG1_FPGA2PSS:
  addr: 0xf880b020
  mask: 0xff
  name: FPGA2PSS
  description: |
    Signals that are presented to the PSS from the Fabric.
ps7_debug_ftm_FTMF2PDBG2_FPGA2PSS:
  addr: 0xf880b024
  mask: 0xff
  name: FPGA2PSS
  description: |
    Signals that are presented to the PSS from the Fabric.
ps7_debug_ftm_FTMF2PDBG3_FPGA2PSS:
  addr: 0xf880b028
  mask: 0xff
  name: FPGA2PSS
  description: |
    Signals that are presented to the PSS from the Fabric.
ps7_debug_ftm_CYCOUNTPRE_PRESCALE:
  addr: 0xf880b02c
  mask: 0xf
  name: PRESCALE
  description: |
    The incoming clock is divided by 2^ PRESCALE. For example: PRESCALE = 15 indicates that the Cycle Counter runs at the AXI clock divided by 2^15 = 32,768 (PRESCALE = 0 indicates no clock scaling)
ps7_debug_ftm_FTMSYNCRELOAD_SYNCCOUNTTERM:
  addr: 0xf880b030
  mask: 0xfff
  name: SYNCCOUNTTERM
  description: |
    Reset FTM Synchronization packet counter when this number of packets has been transmitted. THIS NUMBER HAS A MINIMUM VALUE of 12.
ps7_debug_ftm_FTMSYNCCOUT_SYNCCOUT:
  addr: 0xf880b034
  mask: 0xfff
  name: SYNCCOUT
  description: |
    Current value of the Synchronization packet counter. The initial value is zero. The counter value increments every time a packet is issued by the FTM. When the counter reaches SYNCCOUNTTERM, a Synchronization packet is emitted.
ps7_debug_ftm_FTMATID_ATID:
  addr: 0xf880b400
  mask: 0x7f
  name: ATID
  description: |
    ATID value supplied to ATB bus. The upper three bits, ATID[6:4], are directly driven from this register. The lower four bits, ATID[3:0], are OR-ed with the FPGAATID[3:0] pins.
ps7_debug_ftm_FTMITTRIGOUTACK_TRIGACK:
  addr: 0xf880bed0
  mask: 0xf
  name: TRIGACK
  description: |
    Read the current value of the FTMTrigOutAck[3:0] inputs
ps7_debug_ftm_FTMITTRIGGER_TRIGGER:
  addr: 0xf880bed4
  mask: 0xf
  name: TRIGGER
  description: |
    When ITEN is 1, this field determines the FTMTrigOut[3:0]
ps7_debug_ftm_FTMITTRACEDIS_TRACEDIS:
  addr: 0xf880bed8
  mask: 0x1
  name: TRACEDIS
  description: |
    Always read as zero.
ps7_debug_ftm_FTMITCYCCOUNT_FTMCYCCOUNT:
  addr: 0xf880bedc
  mask: 0xffffffff
  name: FTMCYCCOUNT
  description: |
    Read/write the value of the cycle counter
ps7_debug_ftm_FTMITATBDATA0_ATDATA31:
  addr: 0xf880beec
  mask: 0x10
  name: ATDATA31
  description: |
    When ITEN is 1, this value determines the ATDATAM[31] output
ps7_debug_ftm_FTMITATBDATA0_ATDATA23:
  addr: 0xf880beec
  mask: 0x8
  name: ATDATA23
  description: |
    When ITEN is 1, this value determines the ATDATAM[23] output
ps7_debug_ftm_FTMITATBDATA0_ATDATA15:
  addr: 0xf880beec
  mask: 0x4
  name: ATDATA15
  description: |
    When ITEN is 1, this value determines the ATDATAM[15] output
ps7_debug_ftm_FTMITATBDATA0_ATDATA7:
  addr: 0xf880beec
  mask: 0x2
  name: ATDATA7
  description: |
    When ITEN is 1, this value determines the ATDATAM[7] output
ps7_debug_ftm_FTMITATBDATA0_ATDATA0:
  addr: 0xf880beec
  mask: 0x1
  name: ATDATA0
  description: |
    When ITEN is 1, this value determines the ATDATAM[0] output
ps7_debug_ftm_FTMITATBCTR2_AFVALID:
  addr: 0xf880bef0
  mask: 0x2
  name: AFVALID
  description: |
    Read the current value of the AFVALIDM input
ps7_debug_ftm_FTMITATBCTR2_ATREADY:
  addr: 0xf880bef0
  mask: 0x1
  name: ATREADY
  description: |
    Read the current value of the ATREADYM input
ps7_debug_ftm_FTMITATBCTR1_ATID_test:
  addr: 0xf880bef4
  mask: 0x7f
  name: ATID_test
  description: |
    When ITEN is 1, this value determines the ATID output
ps7_debug_ftm_FTMITATBCTR0_ATBYTES:
  addr: 0xf880bef8
  mask: 0x300
  name: ATBYTES
  description: |
    When ITEN is 1, this value determines the ATBYTESM[1:0] output
ps7_debug_ftm_FTMITATBCTR0_reserved:
  addr: 0xf880bef8
  mask: 0xfc
  name: reserved
  description: |
    Reserved
ps7_debug_ftm_FTMITATBCTR0_AFREADY:
  addr: 0xf880bef8
  mask: 0x2
  name: AFREADY
  description: |
    When ITEN is 1, this value determines the AFREADY output
ps7_debug_ftm_FTMITATBCTR0_ATVALID:
  addr: 0xf880bef8
  mask: 0x1
  name: ATVALID
  description: |
    When ITEN is 1, this value determines the ATVALID output
ps7_debug_ftm_FTMITCR_ITEN:
  addr: 0xf880bf00
  mask: 0x1
  name: ITEN
  description: |
    Integration Test Enable
ps7_debug_ftm_CLAIMTAGSET_CLAIMTAGSETVAL:
  addr: 0xf880bfa0
  mask: 0xff
  name: CLAIMTAGSETVAL
  description: |
    Read: 1 = Claim tag implemented, 0 = not implemented
    Write: 1 = Set claim tag bit, 0 = no effect
ps7_debug_ftm_CLAIMTAGCLR_CLAIMTAGCLRVAL:
  addr: 0xf880bfa4
  mask: 0xff
  name: CLAIMTAGCLRVAL
  description: |
    Read: value of CLAIMTAGSETVAL
    Write: 1 = Clear claim tag bit, 0 = no effect
ps7_debug_ftm_LOCK_ACCESS_LOCKACCESS:
  addr: 0xf880bfb0
  mask: 0xffffffff
  name: LOCKACCESS
  description: |
    A value of 0xC5ACCE55 allows write access to FTM, any other value blocks write access
ps7_debug_ftm_LOCK_STATUS_n8BITACCESS:
  addr: 0xf880bfb4
  mask: 0x4
  name: n8BITACCESS
  description: |
    8-bit lock access is not used
ps7_debug_ftm_LOCK_STATUS_LOCKSTATUS:
  addr: 0xf880bfb4
  mask: 0x2
  name: LOCKSTATUS
  description: |
    1:Access Locked, 0:Access OK
ps7_debug_ftm_LOCK_STATUS_LOCKIMP:
  addr: 0xf880bfb4
  mask: 0x1
  name: LOCKIMP
  description: |
    1:Lock exists if PADDRDBG31 is low, else 0
ps7_debug_ftm_FTMAUTHSTATUS_AUTH_SPNIDEN:
  addr: 0xf880bfb8
  mask: 0xc0
  name: AUTH_SPNIDEN
  description: |
    Secure Non-Invasive Debug
ps7_debug_ftm_FTMAUTHSTATUS_reserved:
  addr: 0xf880bfb8
  mask: 0x30
  name: reserved
  description: |
    Secure Invasive Debug
ps7_debug_ftm_FTMAUTHSTATUS_AUTH_NIDEN:
  addr: 0xf880bfb8
  mask: 0xc
  name: AUTH_NIDEN
  description: |
    Non-Secure Non-Invasive Debug
ps7_debug_ftm_FTMAUTHSTATUS_reserved_1:
  addr: 0xf880bfb8
  mask: 0x3
  name: reserved_1
  description: |
    Non-Secure Invasive Debug
ps7_debug_ftm_FTMDEVID_reserved:
  addr: 0xf880bfc8
  mask: 0x1
  name: reserved
  description: |
    Reserved
ps7_debug_ftm_FTMDEV_TYPE_SubType:
  addr: 0xf880bfcc
  mask: 0xf0
  name: SubType
  description: |
    Sub Type: Associated with a Data Engine or Co-processor
ps7_debug_ftm_FTMDEV_TYPE_MajorType:
  addr: 0xf880bfcc
  mask: 0xf
  name: MajorType
  description: |
    Major Type: Trace Source
ps7_debug_ftm_FTMPERIPHID4_n4KBCount:
  addr: 0xf880bfd0
  mask: 0xf0
  name: n4KBCount
  description: |
    4KB Count
ps7_debug_ftm_FTMPERIPHID4_JEP106:
  addr: 0xf880bfd0
  mask: 0xf
  name: JEP106
  description: |
    JEP106 Continuation Code
ps7_debug_ftm_FTMPERIPHID5_reserved:
  addr: 0xf880bfd4
  mask: 0xff
  name: reserved
  description: |
    Reserved
ps7_debug_ftm_FTMPERIPHID6_reserved:
  addr: 0xf880bfd8
  mask: 0xff
  name: reserved
  description: |
    Reserved
ps7_debug_ftm_FTMPERIPHID7_reserved:
  addr: 0xf880bfdc
  mask: 0xff
  name: reserved
  description: |
    Reserved
ps7_debug_ftm_FTMPERIPHID0_PARTNUMLOWER:
  addr: 0xf880bfe0
  mask: 0xff
  name: PARTNUMLOWER
  description: |
    Part Number Lower
ps7_debug_ftm_FTMPERIPHID1_JEP106:
  addr: 0xf880bfe4
  mask: 0xf0
  name: JEP106
  description: |
    JEP106 identity bits [3:0]
ps7_debug_ftm_FTMPERIPHID1_PARTNUMUPPER:
  addr: 0xf880bfe4
  mask: 0xf
  name: PARTNUMUPPER
  description: |
    Part Number Upper [11:8]
ps7_debug_ftm_FTMPERIPHID2_REVISION:
  addr: 0xf880bfe8
  mask: 0xf0
  name: REVISION
  description: |
    Revision
ps7_debug_ftm_FTMPERIPHID2_JEDEC:
  addr: 0xf880bfe8
  mask: 0x8
  name: JEDEC
  description: |
    JEDEC used
ps7_debug_ftm_FTMPERIPHID2_JEP106:
  addr: 0xf880bfe8
  mask: 0x7
  name: JEP106
  description: |
    JEP106 Identity [6:4]
ps7_debug_ftm_FTMPERIPHID3_RevAnd:
  addr: 0xf880bfec
  mask: 0xf0
  name: RevAnd
  description: |
    RevAnd
ps7_debug_ftm_FTMPERIPHID3_CustMod:
  addr: 0xf880bfec
  mask: 0xf
  name: CustMod
  description: |
    Customer Modified
ps7_debug_ftm_FTMCOMPONID0_Preamble:
  addr: 0xf880bff0
  mask: 0xff
  name: Preamble
  description: |
    Preamble
ps7_debug_ftm_FTMCOMPONID1_CompClass:
  addr: 0xf880bff4
  mask: 0xf0
  name: CompClass
  description: |
    Component Class :CoreSight Component
ps7_debug_ftm_FTMCOMPONID1_Preamble:
  addr: 0xf880bff4
  mask: 0xf
  name: Preamble
  description: |
    Preamble
ps7_debug_ftm_FTMCOMPONID2_Preamble:
  addr: 0xf880bff8
  mask: 0xff
  name: Preamble
  description: |
    Preamble
ps7_debug_ftm_FTMCOMPONID3_Preamble:
  addr: 0xf880bffc
  mask: 0xff
  name: Preamble
  description: |
    Preamble
ps7_afi2_AFI_RDCHAN_CTRL_reserved:
  addr: 0xf800a000
  mask: 0xfffffff0
  name: reserved
  description: |
    Return 0 when read
ps7_afi2_AFI_RDCHAN_CTRL_QosHeadOfCmdQEn:
  addr: 0xf800a000
  mask: 0x8
  name: QosHeadOfCmdQEn
  description: |
    When set, allows the priority of a transaction at the head of the RdCmdQ to be promoted if higher priority transactions are backed up behind it. The entire RdCmdQ will therefore be promoted when the fabric RdQos signal is promoted.
    When disabled, only the new read commands issued will receive the promotion.
ps7_afi2_AFI_RDCHAN_CTRL_FabricOutCmdEn:
  addr: 0xf800a000
  mask: 0x4
  name: FabricOutCmdEn
  description: |
    Enable control of outstanding read commands from the fabric
    0: The maximum number of outstanding read commands is always taken from APB register field, rdIssueCap0
    1: The maximum outstanding number of
    read commands is selected from the fabric input, axds_rdissuecap1_en, as follows:
    Max Outstanding Read Commands =
    axds_rdissuecap1_en ? rdIssueCap1 : rdIssueCap0
ps7_afi2_AFI_RDCHAN_CTRL_FabricQosEn:
  addr: 0xf800a000
  mask: 0x2
  name: FabricQosEn
  description: |
    Enable control of qos from the fabric
    0: The qos bits are derived from APB register, AFI_RDQOS.staticQos
    1: The qos bits are dynamically driven from the fabric input, axds_arqos[3:0]
ps7_afi2_AFI_RDCHAN_CTRL_n32BitEn:
  addr: 0xf800a000
  mask: 0x1
  name: n32BitEn
  description: |
    Configures the Read Channel as a 32-bit interface.
    1: 32-bit enabled
    0: 64-bit enabled
ps7_afi2_AFI_RDCHAN_ISSUINGCAP_reserved_1:
  addr: 0xf800a004
  mask: 0xffffff80
  name: reserved_1
  description: |
    Return 0 when read
ps7_afi2_AFI_RDCHAN_ISSUINGCAP_rdIssueCap1:
  addr: 0xf800a004
  mask: 0x70
  name: rdIssueCap1
  description: |
    Max number of outstanding read commands (Read Issuing Capability) field 1:
    3'b000: 1 command
    3'b001: 2 commands' ' '3'b111: 8 commands
ps7_afi2_AFI_RDCHAN_ISSUINGCAP_reserved:
  addr: 0xf800a004
  mask: 0x8
  name: reserved
  description: |
    Return 0 when read
ps7_afi2_AFI_RDCHAN_ISSUINGCAP_rdIssueCap0:
  addr: 0xf800a004
  mask: 0x7
  name: rdIssueCap0
  description: |
    Max number of outstanding read commands (Read Issuing Capability) field 0:
    3'b000: 1 command
    3'b001: 2 commands' ' '3'b111: 8 commands
ps7_afi2_AFI_RDQOS_reserved:
  addr: 0xf800a008
  mask: 0xfffffff0
  name: reserved
  description: |
    Return 0 when read
ps7_afi2_AFI_RDQOS_staticQos:
  addr: 0xf800a008
  mask: 0xf
  name: staticQos
  description: |
    Sets the level of the Qos field to be used for the read channel
    4'b0000: Lowest Priority' ' '4'b1111: Highest Priority
ps7_afi2_AFI_RDDATAFIFO_LEVEL_reserved:
  addr: 0xf800a00c
  mask: 0xffffff00
  name: reserved
  description: |
    Return 0 when read
ps7_afi2_AFI_RDDATAFIFO_LEVEL_FifoLevel:
  addr: 0xf800a00c
  mask: 0xff
  name: FifoLevel
  description: |
    Returns the level measured in Dwords (64-bits) of the Read Data FIFO
    8'h00: 0 Entries
    8'h01: 1 Entry' ' '8'h8F: 128 Entries
ps7_afi2_AFI_RDDEBUG_reserved:
  addr: 0xf800a010
  mask: 0xffffffe0
  name: reserved
  description: |
    Return 0 when read
ps7_afi2_AFI_RDDEBUG_OutRdCmds:
  addr: 0xf800a010
  mask: 0x1e
  name: OutRdCmds
  description: |
    Returns the number of read commands in flight between the AXI_HP and the SAM switch
    4'h0: 0
    4'h1: 1
    etc
ps7_afi2_AFI_RDDEBUG_RdDataFifoOverflow:
  addr: 0xf800a010
  mask: 0x1
  name: RdDataFifoOverflow
  description: |
    Bit is set if the RdDataFIFO overflows
ps7_afi2_AFI_WRCHAN_CTRL_reserved_1:
  addr: 0xf800a014
  mask: 0xfffff000
  name: reserved_1
  description: |
    Return 0 when read
ps7_afi2_AFI_WRCHAN_CTRL_WrDataThreshold:
  addr: 0xf800a014
  mask: 0xf00
  name: WrDataThreshold
  description: |
    Sets the threshold at which to send the write command. Note that this is measured in data beats, and is therefore dependent on the '32bitEn' field.
    4'b0000: Send Write Command When 1 data beat is pushed into the Write Data FIFO
    4'b0001: Send Write Command When 2 data beats are pushed into the Write Data FIFO' ' '4'b1111: Send Write Command When 16 data beats are pushed into the Write Data FIFO
    Note: If this field is programmed to be less than the actual burst length of the write command, the 'Wlast' will take priority. For example, if 'WrDataThreshold' is set to 4'b1111 (indicates 16 beats), and a Wlast is received after 8 beats, the write command is sent.
ps7_afi2_AFI_WRCHAN_CTRL_reserved:
  addr: 0xf800a014
  mask: 0xc0
  name: reserved
  description: |
    Return 0 when read
ps7_afi2_AFI_WRCHAN_CTRL_WrCmdReleaseMode:
  addr: 0xf800a014
  mask: 0x30
  name: WrCmdReleaseMode
  description: |
    Mode of Write Command Release.
    2'b00: Release Wr Command on 'Wlast' enqueue into Write Data FIFO
    2'b01: Release Wr Command on a particular threshold being reached on the enqueue into Write Data FIFO. The 'WrDataThreshold' field is used to program the actual threshold.
    2'b10: Reserved
    2'b11: Reserved
ps7_afi2_AFI_WRCHAN_CTRL_QosHeadOfCmdQEn:
  addr: 0xf800a014
  mask: 0x8
  name: QosHeadOfCmdQEn
  description: |
    When set, allows the priority of a transaction at the head of the WrCmdQ to be promoted if higher priority transactions are backed up behind it. The entire WrCmdQ will therefore be 'promoted' when the fabric 'WrQos' signal is promoted.
    When disabled, only the new write commands issued will receive the 'promotion'.
ps7_afi2_AFI_WRCHAN_CTRL_FabricOutCmdEn:
  addr: 0xf800a014
  mask: 0x4
  name: FabricOutCmdEn
  description: |
    Enable control of outstanding write commands from the fabric
    0: The maximum number of outstanding write commands is always taken from APB register field, 'wrIssueCap0'1: The maximum outstanding number of
    write commands is selected from the fabric input, 'axds_wrissuecap1_en', as follows:
    Max Outstanding Write Commands =
    axds_wrissuecap1_en ? wrIssueCap1 : wrIssueCap0
ps7_afi2_AFI_WRCHAN_CTRL_FabricQosEn:
  addr: 0xf800a014
  mask: 0x2
  name: FabricQosEn
  description: |
    Enable control of qos from the fabric
    0: The qos bits are derived from APB register, 'AFI_WRQOS.staticQos'1: The qos bits are dynamically driven from the fabric input, 'axds_awqos[3:0]'
ps7_afi2_AFI_WRCHAN_CTRL_n32BitEn:
  addr: 0xf800a014
  mask: 0x1
  name: n32BitEn
  description: |
    Configures the Write Channel as a 32-bit interface.
    1: 32-bit enabled
    0: 64-bit enabled
ps7_afi2_AFI_WRCHAN_ISSUINGCAP_reserved_1:
  addr: 0xf800a018
  mask: 0xffffff80
  name: reserved_1
  description: |
    Return 0 when read
ps7_afi2_AFI_WRCHAN_ISSUINGCAP_wrIssueCap1:
  addr: 0xf800a018
  mask: 0x70
  name: wrIssueCap1
  description: |
    Max number of outstanding write commands (Write Issuing Capability) field 1:
    3'b000: 1 command
    3'b001: 2 commands' ' '3'b111: 8 commands
ps7_afi2_AFI_WRCHAN_ISSUINGCAP_reserved:
  addr: 0xf800a018
  mask: 0x8
  name: reserved
  description: |
    Return 0 when read
ps7_afi2_AFI_WRCHAN_ISSUINGCAP_wrIssueCap0:
  addr: 0xf800a018
  mask: 0x7
  name: wrIssueCap0
  description: |
    Max number of outstanding write commands (Write Issuing Capability) field 0:
    3'b000: 1 command
    3'b001: 2 commands' ' '3'b111: 8 commands
ps7_afi2_AFI_WRQOS_reserved:
  addr: 0xf800a01c
  mask: 0xfffffff0
  name: reserved
  description: |
    Return 0 when read
ps7_afi2_AFI_WRQOS_staticQos:
  addr: 0xf800a01c
  mask: 0xf
  name: staticQos
  description: |
    Sets the level of the Qos field to be used for the write channel
    4'b0000: Lowest Priority' ' '4'b1111: Highest Priority
ps7_afi2_AFI_WRDATAFIFO_LEVEL_reserved:
  addr: 0xf800a020
  mask: 0xffffff00
  name: reserved
  description: |
    Return 0 when read
ps7_afi2_AFI_WRDATAFIFO_LEVEL_FifoLevel:
  addr: 0xf800a020
  mask: 0xff
  name: FifoLevel
  description: |
    Returns the level measured in Dwords (64-bits) of the Write Data FIFO
    8'h00: 0 Entries
    8'h01: 1 Entry' ' '8'h8F: 128 Entries
ps7_afi2_AFI_WRDEBUG_reserved:
  addr: 0xf800a024
  mask: 0xffffffe0
  name: reserved
  description: |
    Return 0 when read
ps7_afi2_AFI_WRDEBUG_OutWrCmds:
  addr: 0xf800a024
  mask: 0x1e
  name: OutWrCmds
  description: |
    Returns the number of write commands in flight between the AXI_HP and the SAM switch
    4'h0: 0
    4'h1: 1
    etc
ps7_afi2_AFI_WRDEBUG_WrDataFifoOverflow:
  addr: 0xf800a024
  mask: 0x1
  name: WrDataFifoOverflow
  description: |
    Bit is set if the WrDataFIFO overflows
ps7_afi1_AFI_RDCHAN_CTRL_reserved:
  addr: 0xf8009000
  mask: 0xfffffff0
  name: reserved
  description: |
    Return 0 when read
ps7_afi1_AFI_RDCHAN_CTRL_QosHeadOfCmdQEn:
  addr: 0xf8009000
  mask: 0x8
  name: QosHeadOfCmdQEn
  description: |
    When set, allows the priority of a transaction at the head of the RdCmdQ to be promoted if higher priority transactions are backed up behind it. The entire RdCmdQ will therefore be promoted when the fabric RdQos signal is promoted.
    When disabled, only the new read commands issued will receive the promotion.
ps7_afi1_AFI_RDCHAN_CTRL_FabricOutCmdEn:
  addr: 0xf8009000
  mask: 0x4
  name: FabricOutCmdEn
  description: |
    Enable control of outstanding read commands from the fabric
    0: The maximum number of outstanding read commands is always taken from APB register field, rdIssueCap0
    1: The maximum outstanding number of
    read commands is selected from the fabric input, axds_rdissuecap1_en, as follows:
    Max Outstanding Read Commands =
    axds_rdissuecap1_en ? rdIssueCap1 : rdIssueCap0
ps7_afi1_AFI_RDCHAN_CTRL_FabricQosEn:
  addr: 0xf8009000
  mask: 0x2
  name: FabricQosEn
  description: |
    Enable control of qos from the fabric
    0: The qos bits are derived from APB register, AFI_RDQOS.staticQos
    1: The qos bits are dynamically driven from the fabric input, axds_arqos[3:0]
ps7_afi1_AFI_RDCHAN_CTRL_n32BitEn:
  addr: 0xf8009000
  mask: 0x1
  name: n32BitEn
  description: |
    Configures the Read Channel as a 32-bit interface.
    1: 32-bit enabled
    0: 64-bit enabled
ps7_afi1_AFI_RDCHAN_ISSUINGCAP_reserved_1:
  addr: 0xf8009004
  mask: 0xffffff80
  name: reserved_1
  description: |
    Return 0 when read
ps7_afi1_AFI_RDCHAN_ISSUINGCAP_rdIssueCap1:
  addr: 0xf8009004
  mask: 0x70
  name: rdIssueCap1
  description: |
    Max number of outstanding read commands (Read Issuing Capability) field 1:
    3'b000: 1 command
    3'b001: 2 commands' ' '3'b111: 8 commands
ps7_afi1_AFI_RDCHAN_ISSUINGCAP_reserved:
  addr: 0xf8009004
  mask: 0x8
  name: reserved
  description: |
    Return 0 when read
ps7_afi1_AFI_RDCHAN_ISSUINGCAP_rdIssueCap0:
  addr: 0xf8009004
  mask: 0x7
  name: rdIssueCap0
  description: |
    Max number of outstanding read commands (Read Issuing Capability) field 0:
    3'b000: 1 command
    3'b001: 2 commands' ' '3'b111: 8 commands
ps7_afi1_AFI_RDQOS_reserved:
  addr: 0xf8009008
  mask: 0xfffffff0
  name: reserved
  description: |
    Return 0 when read
ps7_afi1_AFI_RDQOS_staticQos:
  addr: 0xf8009008
  mask: 0xf
  name: staticQos
  description: |
    Sets the level of the Qos field to be used for the read channel
    4'b0000: Lowest Priority' ' '4'b1111: Highest Priority
ps7_afi1_AFI_RDDATAFIFO_LEVEL_reserved:
  addr: 0xf800900c
  mask: 0xffffff00
  name: reserved
  description: |
    Return 0 when read
ps7_afi1_AFI_RDDATAFIFO_LEVEL_FifoLevel:
  addr: 0xf800900c
  mask: 0xff
  name: FifoLevel
  description: |
    Returns the level measured in Dwords (64-bits) of the Read Data FIFO
    8'h00: 0 Entries
    8'h01: 1 Entry' ' '8'h8F: 128 Entries
ps7_afi1_AFI_RDDEBUG_reserved:
  addr: 0xf8009010
  mask: 0xffffffe0
  name: reserved
  description: |
    Return 0 when read
ps7_afi1_AFI_RDDEBUG_OutRdCmds:
  addr: 0xf8009010
  mask: 0x1e
  name: OutRdCmds
  description: |
    Returns the number of read commands in flight between the AXI_HP and the SAM switch
    4'h0: 0
    4'h1: 1
    etc
ps7_afi1_AFI_RDDEBUG_RdDataFifoOverflow:
  addr: 0xf8009010
  mask: 0x1
  name: RdDataFifoOverflow
  description: |
    Bit is set if the RdDataFIFO overflows
ps7_afi1_AFI_WRCHAN_CTRL_reserved_1:
  addr: 0xf8009014
  mask: 0xfffff000
  name: reserved_1
  description: |
    Return 0 when read
ps7_afi1_AFI_WRCHAN_CTRL_WrDataThreshold:
  addr: 0xf8009014
  mask: 0xf00
  name: WrDataThreshold
  description: |
    Sets the threshold at which to send the write command. Note that this is measured in data beats, and is therefore dependent on the '32bitEn' field.
    4'b0000: Send Write Command When 1 data beat is pushed into the Write Data FIFO
    4'b0001: Send Write Command When 2 data beats are pushed into the Write Data FIFO' ' '4'b1111: Send Write Command When 16 data beats are pushed into the Write Data FIFO
    Note: If this field is programmed to be less than the actual burst length of the write command, the 'Wlast' will take priority. For example, if 'WrDataThreshold' is set to 4'b1111 (indicates 16 beats), and a Wlast is received after 8 beats, the write command is sent.
ps7_afi1_AFI_WRCHAN_CTRL_reserved:
  addr: 0xf8009014
  mask: 0xc0
  name: reserved
  description: |
    Return 0 when read
ps7_afi1_AFI_WRCHAN_CTRL_WrCmdReleaseMode:
  addr: 0xf8009014
  mask: 0x30
  name: WrCmdReleaseMode
  description: |
    Mode of Write Command Release.
    2'b00: Release Wr Command on 'Wlast' enqueue into Write Data FIFO
    2'b01: Release Wr Command on a particular threshold being reached on the enqueue into Write Data FIFO. The 'WrDataThreshold' field is used to program the actual threshold.
    2'b10: Reserved
    2'b11: Reserved
ps7_afi1_AFI_WRCHAN_CTRL_QosHeadOfCmdQEn:
  addr: 0xf8009014
  mask: 0x8
  name: QosHeadOfCmdQEn
  description: |
    When set, allows the priority of a transaction at the head of the WrCmdQ to be promoted if higher priority transactions are backed up behind it. The entire WrCmdQ will therefore be 'promoted' when the fabric 'WrQos' signal is promoted.
    When disabled, only the new write commands issued will receive the 'promotion'.
ps7_afi1_AFI_WRCHAN_CTRL_FabricOutCmdEn:
  addr: 0xf8009014
  mask: 0x4
  name: FabricOutCmdEn
  description: |
    Enable control of outstanding write commands from the fabric
    0: The maximum number of outstanding write commands is always taken from APB register field, 'wrIssueCap0'1: The maximum outstanding number of
    write commands is selected from the fabric input, 'axds_wrissuecap1_en', as follows:
    Max Outstanding Write Commands =
    axds_wrissuecap1_en ? wrIssueCap1 : wrIssueCap0
ps7_afi1_AFI_WRCHAN_CTRL_FabricQosEn:
  addr: 0xf8009014
  mask: 0x2
  name: FabricQosEn
  description: |
    Enable control of qos from the fabric
    0: The qos bits are derived from APB register, 'AFI_WRQOS.staticQos'1: The qos bits are dynamically driven from the fabric input, 'axds_awqos[3:0]'
ps7_afi1_AFI_WRCHAN_CTRL_n32BitEn:
  addr: 0xf8009014
  mask: 0x1
  name: n32BitEn
  description: |
    Configures the Write Channel as a 32-bit interface.
    1: 32-bit enabled
    0: 64-bit enabled
ps7_afi1_AFI_WRCHAN_ISSUINGCAP_reserved_1:
  addr: 0xf8009018
  mask: 0xffffff80
  name: reserved_1
  description: |
    Return 0 when read
ps7_afi1_AFI_WRCHAN_ISSUINGCAP_wrIssueCap1:
  addr: 0xf8009018
  mask: 0x70
  name: wrIssueCap1
  description: |
    Max number of outstanding write commands (Write Issuing Capability) field 1:
    3'b000: 1 command
    3'b001: 2 commands' ' '3'b111: 8 commands
ps7_afi1_AFI_WRCHAN_ISSUINGCAP_reserved:
  addr: 0xf8009018
  mask: 0x8
  name: reserved
  description: |
    Return 0 when read
ps7_afi1_AFI_WRCHAN_ISSUINGCAP_wrIssueCap0:
  addr: 0xf8009018
  mask: 0x7
  name: wrIssueCap0
  description: |
    Max number of outstanding write commands (Write Issuing Capability) field 0:
    3'b000: 1 command
    3'b001: 2 commands' ' '3'b111: 8 commands
ps7_afi1_AFI_WRQOS_reserved:
  addr: 0xf800901c
  mask: 0xfffffff0
  name: reserved
  description: |
    Return 0 when read
ps7_afi1_AFI_WRQOS_staticQos:
  addr: 0xf800901c
  mask: 0xf
  name: staticQos
  description: |
    Sets the level of the Qos field to be used for the write channel
    4'b0000: Lowest Priority' ' '4'b1111: Highest Priority
ps7_afi1_AFI_WRDATAFIFO_LEVEL_reserved:
  addr: 0xf8009020
  mask: 0xffffff00
  name: reserved
  description: |
    Return 0 when read
ps7_afi1_AFI_WRDATAFIFO_LEVEL_FifoLevel:
  addr: 0xf8009020
  mask: 0xff
  name: FifoLevel
  description: |
    Returns the level measured in Dwords (64-bits) of the Write Data FIFO
    8'h00: 0 Entries
    8'h01: 1 Entry' ' '8'h8F: 128 Entries
ps7_afi1_AFI_WRDEBUG_reserved:
  addr: 0xf8009024
  mask: 0xffffffe0
  name: reserved
  description: |
    Return 0 when read
ps7_afi1_AFI_WRDEBUG_OutWrCmds:
  addr: 0xf8009024
  mask: 0x1e
  name: OutWrCmds
  description: |
    Returns the number of write commands in flight between the AXI_HP and the SAM switch
    4'h0: 0
    4'h1: 1
    etc
ps7_afi1_AFI_WRDEBUG_WrDataFifoOverflow:
  addr: 0xf8009024
  mask: 0x1
  name: WrDataFifoOverflow
  description: |
    Bit is set if the WrDataFIFO overflows
ps7_afi3_AFI_RDCHAN_CTRL_reserved:
  addr: 0xf800b000
  mask: 0xfffffff0
  name: reserved
  description: |
    Return 0 when read
ps7_afi3_AFI_RDCHAN_CTRL_QosHeadOfCmdQEn:
  addr: 0xf800b000
  mask: 0x8
  name: QosHeadOfCmdQEn
  description: |
    When set, allows the priority of a transaction at the head of the RdCmdQ to be promoted if higher priority transactions are backed up behind it. The entire RdCmdQ will therefore be promoted when the fabric RdQos signal is promoted.
    When disabled, only the new read commands issued will receive the promotion.
ps7_afi3_AFI_RDCHAN_CTRL_FabricOutCmdEn:
  addr: 0xf800b000
  mask: 0x4
  name: FabricOutCmdEn
  description: |
    Enable control of outstanding read commands from the fabric
    0: The maximum number of outstanding read commands is always taken from APB register field, rdIssueCap0
    1: The maximum outstanding number of
    read commands is selected from the fabric input, axds_rdissuecap1_en, as follows:
    Max Outstanding Read Commands =
    axds_rdissuecap1_en ? rdIssueCap1 : rdIssueCap0
ps7_afi3_AFI_RDCHAN_CTRL_FabricQosEn:
  addr: 0xf800b000
  mask: 0x2
  name: FabricQosEn
  description: |
    Enable control of qos from the fabric
    0: The qos bits are derived from APB register, AFI_RDQOS.staticQos
    1: The qos bits are dynamically driven from the fabric input, axds_arqos[3:0]
ps7_afi3_AFI_RDCHAN_CTRL_n32BitEn:
  addr: 0xf800b000
  mask: 0x1
  name: n32BitEn
  description: |
    Configures the Read Channel as a 32-bit interface.
    1: 32-bit enabled
    0: 64-bit enabled
ps7_afi3_AFI_RDCHAN_ISSUINGCAP_reserved_1:
  addr: 0xf800b004
  mask: 0xffffff80
  name: reserved_1
  description: |
    Return 0 when read
ps7_afi3_AFI_RDCHAN_ISSUINGCAP_rdIssueCap1:
  addr: 0xf800b004
  mask: 0x70
  name: rdIssueCap1
  description: |
    Max number of outstanding read commands (Read Issuing Capability) field 1:
    3'b000: 1 command
    3'b001: 2 commands' ' '3'b111: 8 commands
ps7_afi3_AFI_RDCHAN_ISSUINGCAP_reserved:
  addr: 0xf800b004
  mask: 0x8
  name: reserved
  description: |
    Return 0 when read
ps7_afi3_AFI_RDCHAN_ISSUINGCAP_rdIssueCap0:
  addr: 0xf800b004
  mask: 0x7
  name: rdIssueCap0
  description: |
    Max number of outstanding read commands (Read Issuing Capability) field 0:
    3'b000: 1 command
    3'b001: 2 commands' ' '3'b111: 8 commands
ps7_afi3_AFI_RDQOS_reserved:
  addr: 0xf800b008
  mask: 0xfffffff0
  name: reserved
  description: |
    Return 0 when read
ps7_afi3_AFI_RDQOS_staticQos:
  addr: 0xf800b008
  mask: 0xf
  name: staticQos
  description: |
    Sets the level of the Qos field to be used for the read channel
    4'b0000: Lowest Priority' ' '4'b1111: Highest Priority
ps7_afi3_AFI_RDDATAFIFO_LEVEL_reserved:
  addr: 0xf800b00c
  mask: 0xffffff00
  name: reserved
  description: |
    Return 0 when read
ps7_afi3_AFI_RDDATAFIFO_LEVEL_FifoLevel:
  addr: 0xf800b00c
  mask: 0xff
  name: FifoLevel
  description: |
    Returns the level measured in Dwords (64-bits) of the Read Data FIFO
    8'h00: 0 Entries
    8'h01: 1 Entry' ' '8'h8F: 128 Entries
ps7_afi3_AFI_RDDEBUG_reserved:
  addr: 0xf800b010
  mask: 0xffffffe0
  name: reserved
  description: |
    Return 0 when read
ps7_afi3_AFI_RDDEBUG_OutRdCmds:
  addr: 0xf800b010
  mask: 0x1e
  name: OutRdCmds
  description: |
    Returns the number of read commands in flight between the AXI_HP and the SAM switch
    4'h0: 0
    4'h1: 1
    etc
ps7_afi3_AFI_RDDEBUG_RdDataFifoOverflow:
  addr: 0xf800b010
  mask: 0x1
  name: RdDataFifoOverflow
  description: |
    Bit is set if the RdDataFIFO overflows
ps7_afi3_AFI_WRCHAN_CTRL_reserved_1:
  addr: 0xf800b014
  mask: 0xfffff000
  name: reserved_1
  description: |
    Return 0 when read
ps7_afi3_AFI_WRCHAN_CTRL_WrDataThreshold:
  addr: 0xf800b014
  mask: 0xf00
  name: WrDataThreshold
  description: |
    Sets the threshold at which to send the write command. Note that this is measured in data beats, and is therefore dependent on the '32bitEn' field.
    4'b0000: Send Write Command When 1 data beat is pushed into the Write Data FIFO
    4'b0001: Send Write Command When 2 data beats are pushed into the Write Data FIFO' ' '4'b1111: Send Write Command When 16 data beats are pushed into the Write Data FIFO
    Note: If this field is programmed to be less than the actual burst length of the write command, the 'Wlast' will take priority. For example, if 'WrDataThreshold' is set to 4'b1111 (indicates 16 beats), and a Wlast is received after 8 beats, the write command is sent.
ps7_afi3_AFI_WRCHAN_CTRL_reserved:
  addr: 0xf800b014
  mask: 0xc0
  name: reserved
  description: |
    Return 0 when read
ps7_afi3_AFI_WRCHAN_CTRL_WrCmdReleaseMode:
  addr: 0xf800b014
  mask: 0x30
  name: WrCmdReleaseMode
  description: |
    Mode of Write Command Release.
    2'b00: Release Wr Command on 'Wlast' enqueue into Write Data FIFO
    2'b01: Release Wr Command on a particular threshold being reached on the enqueue into Write Data FIFO. The 'WrDataThreshold' field is used to program the actual threshold.
    2'b10: Reserved
    2'b11: Reserved
ps7_afi3_AFI_WRCHAN_CTRL_QosHeadOfCmdQEn:
  addr: 0xf800b014
  mask: 0x8
  name: QosHeadOfCmdQEn
  description: |
    When set, allows the priority of a transaction at the head of the WrCmdQ to be promoted if higher priority transactions are backed up behind it. The entire WrCmdQ will therefore be 'promoted' when the fabric 'WrQos' signal is promoted.
    When disabled, only the new write commands issued will receive the 'promotion'.
ps7_afi3_AFI_WRCHAN_CTRL_FabricOutCmdEn:
  addr: 0xf800b014
  mask: 0x4
  name: FabricOutCmdEn
  description: |
    Enable control of outstanding write commands from the fabric
    0: The maximum number of outstanding write commands is always taken from APB register field, 'wrIssueCap0'1: The maximum outstanding number of
    write commands is selected from the fabric input, 'axds_wrissuecap1_en', as follows:
    Max Outstanding Write Commands =
    axds_wrissuecap1_en ? wrIssueCap1 : wrIssueCap0
ps7_afi3_AFI_WRCHAN_CTRL_FabricQosEn:
  addr: 0xf800b014
  mask: 0x2
  name: FabricQosEn
  description: |
    Enable control of qos from the fabric
    0: The qos bits are derived from APB register, 'AFI_WRQOS.staticQos'1: The qos bits are dynamically driven from the fabric input, 'axds_awqos[3:0]'
ps7_afi3_AFI_WRCHAN_CTRL_n32BitEn:
  addr: 0xf800b014
  mask: 0x1
  name: n32BitEn
  description: |
    Configures the Write Channel as a 32-bit interface.
    1: 32-bit enabled
    0: 64-bit enabled
ps7_afi3_AFI_WRCHAN_ISSUINGCAP_reserved_1:
  addr: 0xf800b018
  mask: 0xffffff80
  name: reserved_1
  description: |
    Return 0 when read
ps7_afi3_AFI_WRCHAN_ISSUINGCAP_wrIssueCap1:
  addr: 0xf800b018
  mask: 0x70
  name: wrIssueCap1
  description: |
    Max number of outstanding write commands (Write Issuing Capability) field 1:
    3'b000: 1 command
    3'b001: 2 commands' ' '3'b111: 8 commands
ps7_afi3_AFI_WRCHAN_ISSUINGCAP_reserved:
  addr: 0xf800b018
  mask: 0x8
  name: reserved
  description: |
    Return 0 when read
ps7_afi3_AFI_WRCHAN_ISSUINGCAP_wrIssueCap0:
  addr: 0xf800b018
  mask: 0x7
  name: wrIssueCap0
  description: |
    Max number of outstanding write commands (Write Issuing Capability) field 0:
    3'b000: 1 command
    3'b001: 2 commands' ' '3'b111: 8 commands
ps7_afi3_AFI_WRQOS_reserved:
  addr: 0xf800b01c
  mask: 0xfffffff0
  name: reserved
  description: |
    Return 0 when read
ps7_afi3_AFI_WRQOS_staticQos:
  addr: 0xf800b01c
  mask: 0xf
  name: staticQos
  description: |
    Sets the level of the Qos field to be used for the write channel
    4'b0000: Lowest Priority' ' '4'b1111: Highest Priority
ps7_afi3_AFI_WRDATAFIFO_LEVEL_reserved:
  addr: 0xf800b020
  mask: 0xffffff00
  name: reserved
  description: |
    Return 0 when read
ps7_afi3_AFI_WRDATAFIFO_LEVEL_FifoLevel:
  addr: 0xf800b020
  mask: 0xff
  name: FifoLevel
  description: |
    Returns the level measured in Dwords (64-bits) of the Write Data FIFO
    8'h00: 0 Entries
    8'h01: 1 Entry' ' '8'h8F: 128 Entries
ps7_afi3_AFI_WRDEBUG_reserved:
  addr: 0xf800b024
  mask: 0xffffffe0
  name: reserved
  description: |
    Return 0 when read
ps7_afi3_AFI_WRDEBUG_OutWrCmds:
  addr: 0xf800b024
  mask: 0x1e
  name: OutWrCmds
  description: |
    Returns the number of write commands in flight between the AXI_HP and the SAM switch
    4'h0: 0
    4'h1: 1
    etc
ps7_afi3_AFI_WRDEBUG_WrDataFifoOverflow:
  addr: 0xf800b024
  mask: 0x1
  name: WrDataFifoOverflow
  description: |
    Bit is set if the WrDataFIFO overflows
ps7_afi0_AFI_RDCHAN_CTRL_reserved:
  addr: 0xf8008000
  mask: 0xfffffff0
  name: reserved
  description: |
    Return 0 when read
ps7_afi0_AFI_RDCHAN_CTRL_QosHeadOfCmdQEn:
  addr: 0xf8008000
  mask: 0x8
  name: QosHeadOfCmdQEn
  description: |
    When set, allows the priority of a transaction at the head of the RdCmdQ to be promoted if higher priority transactions are backed up behind it. The entire RdCmdQ will therefore be promoted when the fabric RdQos signal is promoted.
    When disabled, only the new read commands issued will receive the promotion.
ps7_afi0_AFI_RDCHAN_CTRL_FabricOutCmdEn:
  addr: 0xf8008000
  mask: 0x4
  name: FabricOutCmdEn
  description: |
    Enable control of outstanding read commands from the fabric
    0: The maximum number of outstanding read commands is always taken from APB register field, rdIssueCap0
    1: The maximum outstanding number of
    read commands is selected from the fabric input, axds_rdissuecap1_en, as follows:
    Max Outstanding Read Commands =
    axds_rdissuecap1_en ? rdIssueCap1 : rdIssueCap0
ps7_afi0_AFI_RDCHAN_CTRL_FabricQosEn:
  addr: 0xf8008000
  mask: 0x2
  name: FabricQosEn
  description: |
    Enable control of qos from the fabric
    0: The qos bits are derived from APB register, AFI_RDQOS.staticQos
    1: The qos bits are dynamically driven from the fabric input, axds_arqos[3:0]
ps7_afi0_AFI_RDCHAN_CTRL_n32BitEn:
  addr: 0xf8008000
  mask: 0x1
  name: n32BitEn
  description: |
    Configures the Read Channel as a 32-bit interface.
    1: 32-bit enabled
    0: 64-bit enabled
ps7_afi0_AFI_RDCHAN_ISSUINGCAP_reserved_1:
  addr: 0xf8008004
  mask: 0xffffff80
  name: reserved_1
  description: |
    Return 0 when read
ps7_afi0_AFI_RDCHAN_ISSUINGCAP_rdIssueCap1:
  addr: 0xf8008004
  mask: 0x70
  name: rdIssueCap1
  description: |
    Max number of outstanding read commands (Read Issuing Capability) field 1:
    3'b000: 1 command
    3'b001: 2 commands' ' '3'b111: 8 commands
ps7_afi0_AFI_RDCHAN_ISSUINGCAP_reserved:
  addr: 0xf8008004
  mask: 0x8
  name: reserved
  description: |
    Return 0 when read
ps7_afi0_AFI_RDCHAN_ISSUINGCAP_rdIssueCap0:
  addr: 0xf8008004
  mask: 0x7
  name: rdIssueCap0
  description: |
    Max number of outstanding read commands (Read Issuing Capability) field 0:
    3'b000: 1 command
    3'b001: 2 commands' ' '3'b111: 8 commands
ps7_afi0_AFI_RDQOS_reserved:
  addr: 0xf8008008
  mask: 0xfffffff0
  name: reserved
  description: |
    Return 0 when read
ps7_afi0_AFI_RDQOS_staticQos:
  addr: 0xf8008008
  mask: 0xf
  name: staticQos
  description: |
    Sets the level of the Qos field to be used for the read channel
    4'b0000: Lowest Priority' ' '4'b1111: Highest Priority
ps7_afi0_AFI_RDDATAFIFO_LEVEL_reserved:
  addr: 0xf800800c
  mask: 0xffffff00
  name: reserved
  description: |
    Return 0 when read
ps7_afi0_AFI_RDDATAFIFO_LEVEL_FifoLevel:
  addr: 0xf800800c
  mask: 0xff
  name: FifoLevel
  description: |
    Returns the level measured in Dwords (64-bits) of the Read Data FIFO
    8'h00: 0 Entries
    8'h01: 1 Entry' ' '8'h8F: 128 Entries
ps7_afi0_AFI_RDDEBUG_reserved:
  addr: 0xf8008010
  mask: 0xffffffe0
  name: reserved
  description: |
    Return 0 when read
ps7_afi0_AFI_RDDEBUG_OutRdCmds:
  addr: 0xf8008010
  mask: 0x1e
  name: OutRdCmds
  description: |
    Returns the number of read commands in flight between the AXI_HP and the SAM switch
    4'h0: 0
    4'h1: 1
    etc
ps7_afi0_AFI_RDDEBUG_RdDataFifoOverflow:
  addr: 0xf8008010
  mask: 0x1
  name: RdDataFifoOverflow
  description: |
    Bit is set if the RdDataFIFO overflows
ps7_afi0_AFI_WRCHAN_CTRL_reserved_1:
  addr: 0xf8008014
  mask: 0xfffff000
  name: reserved_1
  description: |
    Return 0 when read
ps7_afi0_AFI_WRCHAN_CTRL_WrDataThreshold:
  addr: 0xf8008014
  mask: 0xf00
  name: WrDataThreshold
  description: |
    Sets the threshold at which to send the write command. Note that this is measured in data beats, and is therefore dependent on the '32bitEn' field.
    4'b0000: Send Write Command When 1 data beat is pushed into the Write Data FIFO
    4'b0001: Send Write Command When 2 data beats are pushed into the Write Data FIFO' ' '4'b1111: Send Write Command When 16 data beats are pushed into the Write Data FIFO
    Note: If this field is programmed to be less than the actual burst length of the write command, the 'Wlast' will take priority. For example, if 'WrDataThreshold' is set to 4'b1111 (indicates 16 beats), and a Wlast is received after 8 beats, the write command is sent.
ps7_afi0_AFI_WRCHAN_CTRL_reserved:
  addr: 0xf8008014
  mask: 0xc0
  name: reserved
  description: |
    Return 0 when read
ps7_afi0_AFI_WRCHAN_CTRL_WrCmdReleaseMode:
  addr: 0xf8008014
  mask: 0x30
  name: WrCmdReleaseMode
  description: |
    Mode of Write Command Release.
    2'b00: Release Wr Command on 'Wlast' enqueue into Write Data FIFO
    2'b01: Release Wr Command on a particular threshold being reached on the enqueue into Write Data FIFO. The 'WrDataThreshold' field is used to program the actual threshold.
    2'b10: Reserved
    2'b11: Reserved
ps7_afi0_AFI_WRCHAN_CTRL_QosHeadOfCmdQEn:
  addr: 0xf8008014
  mask: 0x8
  name: QosHeadOfCmdQEn
  description: |
    When set, allows the priority of a transaction at the head of the WrCmdQ to be promoted if higher priority transactions are backed up behind it. The entire WrCmdQ will therefore be 'promoted' when the fabric 'WrQos' signal is promoted.
    When disabled, only the new write commands issued will receive the 'promotion'.
ps7_afi0_AFI_WRCHAN_CTRL_FabricOutCmdEn:
  addr: 0xf8008014
  mask: 0x4
  name: FabricOutCmdEn
  description: |
    Enable control of outstanding write commands from the fabric
    0: The maximum number of outstanding write commands is always taken from APB register field, 'wrIssueCap0'1: The maximum outstanding number of
    write commands is selected from the fabric input, 'axds_wrissuecap1_en', as follows:
    Max Outstanding Write Commands =
    axds_wrissuecap1_en ? wrIssueCap1 : wrIssueCap0
ps7_afi0_AFI_WRCHAN_CTRL_FabricQosEn:
  addr: 0xf8008014
  mask: 0x2
  name: FabricQosEn
  description: |
    Enable control of qos from the fabric
    0: The qos bits are derived from APB register, 'AFI_WRQOS.staticQos'1: The qos bits are dynamically driven from the fabric input, 'axds_awqos[3:0]'
ps7_afi0_AFI_WRCHAN_CTRL_n32BitEn:
  addr: 0xf8008014
  mask: 0x1
  name: n32BitEn
  description: |
    Configures the Write Channel as a 32-bit interface.
    1: 32-bit enabled
    0: 64-bit enabled
ps7_afi0_AFI_WRCHAN_ISSUINGCAP_reserved_1:
  addr: 0xf8008018
  mask: 0xffffff80
  name: reserved_1
  description: |
    Return 0 when read
ps7_afi0_AFI_WRCHAN_ISSUINGCAP_wrIssueCap1:
  addr: 0xf8008018
  mask: 0x70
  name: wrIssueCap1
  description: |
    Max number of outstanding write commands (Write Issuing Capability) field 1:
    3'b000: 1 command
    3'b001: 2 commands' ' '3'b111: 8 commands
ps7_afi0_AFI_WRCHAN_ISSUINGCAP_reserved:
  addr: 0xf8008018
  mask: 0x8
  name: reserved
  description: |
    Return 0 when read
ps7_afi0_AFI_WRCHAN_ISSUINGCAP_wrIssueCap0:
  addr: 0xf8008018
  mask: 0x7
  name: wrIssueCap0
  description: |
    Max number of outstanding write commands (Write Issuing Capability) field 0:
    3'b000: 1 command
    3'b001: 2 commands' ' '3'b111: 8 commands
ps7_afi0_AFI_WRQOS_reserved:
  addr: 0xf800801c
  mask: 0xfffffff0
  name: reserved
  description: |
    Return 0 when read
ps7_afi0_AFI_WRQOS_staticQos:
  addr: 0xf800801c
  mask: 0xf
  name: staticQos
  description: |
    Sets the level of the Qos field to be used for the write channel
    4'b0000: Lowest Priority' ' '4'b1111: Highest Priority
ps7_afi0_AFI_WRDATAFIFO_LEVEL_reserved:
  addr: 0xf8008020
  mask: 0xffffff00
  name: reserved
  description: |
    Return 0 when read
ps7_afi0_AFI_WRDATAFIFO_LEVEL_FifoLevel:
  addr: 0xf8008020
  mask: 0xff
  name: FifoLevel
  description: |
    Returns the level measured in Dwords (64-bits) of the Write Data FIFO
    8'h00: 0 Entries
    8'h01: 1 Entry' ' '8'h8F: 128 Entries
ps7_afi0_AFI_WRDEBUG_reserved:
  addr: 0xf8008024
  mask: 0xffffffe0
  name: reserved
  description: |
    Return 0 when read
ps7_afi0_AFI_WRDEBUG_OutWrCmds:
  addr: 0xf8008024
  mask: 0x1e
  name: OutWrCmds
  description: |
    Returns the number of write commands in flight between the AXI_HP and the SAM switch
    4'h0: 0
    4'h1: 1
    etc
ps7_afi0_AFI_WRDEBUG_WrDataFifoOverflow:
  addr: 0xf8008024
  mask: 0x1
  name: WrDataFifoOverflow
  description: |
    Bit is set if the WrDataFIFO overflows
ps7_usb0_ID_CIVERSION:
  addr: 0xe0002000
  mask: 0xe0000000
  name: CIVERSION
  description: |
    Identifies the CI version
ps7_usb0_ID_VERSION:
  addr: 0xe0002000
  mask: 0x1e000000
  name: VERSION
  description: |
    Identifies the version of the core
ps7_usb0_ID_REVISION:
  addr: 0xe0002000
  mask: 0x1e00000
  name: REVISION
  description: |
    Revision number of the core
ps7_usb0_ID_TAG:
  addr: 0xe0002000
  mask: 0x1f0000
  name: TAG
  description: |
    Identifies the tag of the core ; Current 2.20a version
ps7_usb0_ID_reserved:
  addr: 0xe0002000
  mask: 0xc000
  name: reserved
  description: |
    RESERVED. Writes are ignored
ps7_usb0_ID_NID:
  addr: 0xe0002000
  mask: 0x3f00
  name: NID
  description: |
    NID Complement of ID; Ones complement version of ID
ps7_usb0_ID_reserved_1:
  addr: 0xe0002000
  mask: 0xc0
  name: reserved_1
  description: |
    RESERVED. Writes are ignored, read data is always zero.
ps7_usb0_ID_ID:
  addr: 0xe0002000
  mask: 0x3f
  name: ID
  description: |
    ID Configuration number ; This number indicates the type of the USB-HS 2.0 core.
ps7_usb0_HWGENERAL_SM:
  addr: 0xe0002004
  mask: 0xc00
  name: SM
  description: |
    VUSB_HS_PHY_SERIAL - This constant selects that the serial engine is used or not.
    0 - No Serial Engine- Always use parallel signaling
ps7_usb0_HWGENERAL_PHYM:
  addr: 0xe0002004
  mask: 0x3c0
  name: PHYM
  description: |
    VUSB_HS_PHY_TYPE
    - PHY interface type.
    2 = ULPI
ps7_usb0_HWGENERAL_PHYW:
  addr: 0xe0002004
  mask: 0x30
  name: PHYW
  description: |
    VUSB_HS_PHY16_8 - This constant selects which phy is being used.
    0 = 8 bit wide data bus [60MHz clock from the transceiver]
ps7_usb0_HWGENERAL_BWT:
  addr: 0xe0002004
  mask: 0x8
  name: BWT
  description: |
    RESERVED.
ps7_usb0_HWGENERAL_CLKC:
  addr: 0xe0002004
  mask: 0x6
  name: CLKC
  description: |
    VUSB_HS_CLOCK_CONFIGURATION - constant determines the clocking used in the core.
    1 = xcvr_clk_0 < pe_clk = clk
ps7_usb0_HWGENERAL_RT:
  addr: 0xe0002004
  mask: 0x1
  name: RT
  description: |
    VUSB_HS_RESET_TYPE - Reset Type.
    1 = Use Asynchronous Resets
ps7_usb0_HWHOST_TTPER:
  addr: 0xe0002008
  mask: 0xff000000
  name: TTPER
  description: |
    VUSB_HS_TT_PERIODIC_CONTEXTS
ps7_usb0_HWHOST_TTASY:
  addr: 0xe0002008
  mask: 0xff0000
  name: TTASY
  description: |
    VUSB_HS_TT_ASYNC_CONTEXTS
ps7_usb0_HWHOST_a:
  addr: 0xe0002008
  mask: 0xfff0
  name: a
  description: |
    RESERVED
ps7_usb0_HWHOST_NPORT:
  addr: 0xe0002008
  mask: 0xe
  name: NPORT
  description: |
    VUSB_HS_NUM_PORT-1.
    1- The VUSB_HS_NUM_PORT constant specifies the number of downstream ports by host port
ps7_usb0_HWHOST_HC:
  addr: 0xe0002008
  mask: 0x1
  name: HC
  description: |
    VUSB_HS_HOST
ps7_usb0_HWDEVICE_DEVEP:
  addr: 0xe000200c
  mask: 0x3e
  name: DEVEP
  description: |
    VUSB_HS_DEV_EP - Number of endpoints.
    12 = VUSB_HS_DEV_EP constant represents the 12 number of endpoints
ps7_usb0_HWDEVICE_DC:
  addr: 0xe000200c
  mask: 0x1
  name: DC
  description: |
    Device capable
ps7_usb0_HWTXBUF_reserved_1:
  addr: 0xe0002010
  mask: 0x80000000
  name: reserved_1
  description: |
    RESERVED
ps7_usb0_HWTXBUF_reserved:
  addr: 0xe0002010
  mask: 0x7f000000
  name: reserved
  description: |
    RESERVED
ps7_usb0_HWTXBUF_TXCHANADD:
  addr: 0xe0002010
  mask: 0xff0000
  name: TXCHANADD
  description: |
    VUSB_HS_TX_CHAN_ADD - Address bits for each Endpoint; 64 words buffer for each end point.
    6 - To address 64 depth TX buffer for each end point
ps7_usb0_HWTXBUF_TXADD:
  addr: 0xe0002010
  mask: 0xff00
  name: TXADD
  description: |
    VUSB_HS_TX_ADD ; 768 Depth TX buffer.
    10- Address of the depth of TX buffer
ps7_usb0_HWTXBUF_TXBURST:
  addr: 0xe0002010
  mask: 0xff
  name: TXBURST
  description: |
    VUSB_HS_TX_BURST. Burst size for Memory To TX Buffer Transfers
ps7_usb0_HWRXBUF_a:
  addr: 0xe0002014
  mask: 0xff000000
  name: a
  description: |
    RESERVED
ps7_usb0_HWRXBUF_RXADD:
  addr: 0xe0002014
  mask: 0xff00
  name: RXADD
  description: |
    VUSB_HS_RX_ADD ; 768 Depth TX buffer.
    10- Address of the depth of TX buffer
ps7_usb0_HWRXBUF_RXBURST:
  addr: 0xe0002014
  mask: 0xff
  name: RXBURST
  description: |
    VUSB_HS_RX_BURST.
    16 = Burst size of 16 for Memory To TX Buffer Transfers
ps7_usb0_GPTIMER0LD_GPTLD:
  addr: 0xe0002080
  mask: 0xffffff
  name: GPTLD
  description: |
    General Purpose Timer Load Value register.
    This field is the value to be loaded into the GPTCNT countdown timer on a reset action. The value in this register represents the time in microseconds minus 1 for the timer duration.
    Example: for a one millisecond timer, load 1000-1=999 or 0x0003E7.
    Note: Max value is 0xFFFFFF or 16.777215 seconds
ps7_usb0_GPTIMER0CTRL_GPTRUN:
  addr: 0xe0002084
  mask: 0x80000000
  name: GPTRUN
  description: |
    General Purpose Timer Run. This bit enables the general-purpose timer to run. Setting or clearing this bit will not have an effect on the GPTCNT counter value.
ps7_usb0_GPTIMER0CTRL_GPTRST:
  addr: 0xe0002084
  mask: 0x40000000
  name: GPTRST
  description: |
    General Purpose Timer Reset. Writing a one to this bit will reload the GPTCNT with the value in GPTLD.
ps7_usb0_GPTIMER0CTRL_a:
  addr: 0xe0002084
  mask: 0x3e000000
  name: a
  description: |
    reserved
ps7_usb0_GPTIMER0CTRL_GPTMODE:
  addr: 0xe0002084
  mask: 0x1000000
  name: GPTMODE
  description: |
    0b' - One Shot; '1b' - Repeat. This bit selects between a single timer countdown and a looped countdown. In one-shot mode, the timer will count down to zero, generate an interrupt and stop until the counter is reset by software. In repeat mode, the timer will count down to zero, generate an interrupt and automatically reload the counter to begin again.
ps7_usb0_GPTIMER0CTRL_GPTCNT:
  addr: 0xe0002084
  mask: 0xffffff
  name: GPTCNT
  description: |
    General Purpose Timer Counter.
    This field is the value of the running timer.
ps7_usb0_GPTIMER1LD_GPTLD:
  addr: 0xe0002088
  mask: 0xffffff
  name: GPTLD
  description: |
    General Purpose Timer Load Value register.
    This field is the value to be loaded into the GPTCNT countdown timer on a reset action. The value in this register represents the time in microseconds minus 1 for the timer duration.
    Example: for a one millisecond timer, load 1000-1=999 or 0x0003E7.
    Note: Max value is 0xFFFFFF or 16.777215 seconds
ps7_usb0_GPTIMER1CTRL_GPTRUN:
  addr: 0xe000208c
  mask: 0x80000000
  name: GPTRUN
  description: |
    General Purpose Timer Run. This bit enables the general-purpose timer to run. Setting or clearing this bit will not have an effect on the GPTCNT counter value.
ps7_usb0_GPTIMER1CTRL_GPTRST:
  addr: 0xe000208c
  mask: 0x40000000
  name: GPTRST
  description: |
    General Purpose Timer Reset. Writing a one to this bit will reload the GPTCNT with the value in GPTLD.
ps7_usb0_GPTIMER1CTRL_a:
  addr: 0xe000208c
  mask: 0x3e000000
  name: a
  description: |
    reserved
ps7_usb0_GPTIMER1CTRL_GPTMODE:
  addr: 0xe000208c
  mask: 0x1000000
  name: GPTMODE
  description: |
    0b' - One Shot; '1b' - Repeat. This bit selects between a single timer countdown and a looped countdown. In one-shot mode, the timer will count down to zero, generate an interrupt and stop until the counter is reset by software. In repeat mode, the timer will count down to zero, generate an interrupt and automatically reload the counter to begin again.
ps7_usb0_GPTIMER1CTRL_GPTCNT:
  addr: 0xe000208c
  mask: 0xffffff
  name: GPTCNT
  description: |
    General Purpose Timer Counter.
    This field is the value of the running timer.
ps7_usb0_SBUSCFG_AHBBRST:
  addr: 0xe0002090
  mask: 0x7
  name: AHBBRST
  description: |
    VUSB_HS_RX_BURST
    0: incremental bursts of unspecified length
    1: INCR4, non multiple transfers of 4 are decomposed to singles
    2: INCR8, non multiple transfers of 8 are decomposed to INCR4 or singles
    3: INCR16, non multiple transfers of 16 are decomposed to INCR8, INCR4 or singles
    4: Do not use this value!
    5: INCR4, non multiple transfers of 4 are decomposed to INCR of unspecified length
    6: INCR8, non multiple transfers of 8 are decomposed to INCR4 or INCR of unspecified length
    7: INCR16, non multiple transfers of 16 are decomposed to INCR8, INCR4 or INCR of unspecified length
ps7_usb0_CAPLENGTH_HCIVERSION_HCIVERSION:
  addr: 0xe0002100
  mask: 0xffff0000
  name: HCIVERSION
  description: |
    This is a two-byte register containing a BCD encoding of the EHCI revision number supported by this host controller. The most significant byte of this register represents a major revision and the least significant byte is the minor revision.
ps7_usb0_CAPLENGTH_HCIVERSION_CAPLENGTH:
  addr: 0xe0002100
  mask: 0xffff
  name: CAPLENGTH
  description: |
    This register indicates capability register length. This register is used to indicate which offset to add to the register base address at the beginning of the Operational Register
ps7_usb0_HCSPARAMS_N_TT:
  addr: 0xe0002104
  mask: 0xf000000
  name: N_TT
  description: |
    This field indicates the number of embedded transaction translators associated with the USB2.0 host controller. For Multi-Port Host this field will always be equal to '0001b'. For all other implementation, N_TT = '0000b'.
    This field will always be '0'
ps7_usb0_HCSPARAMS_N_PTT:
  addr: 0xe0002104
  mask: 0xf00000
  name: N_PTT
  description: |
    Number of Ports per Transaction Translator. This field indicates the number of ports assigned to each transaction translator within the USB2.0 host controller.
    For Multi-Port Host this field will always equal N_PORTS. For all other implementations, N_PTT = '0000b'.
    This in a non-EHCI field to support embedded TT.
ps7_usb0_HCSPARAMS_reserved_1:
  addr: 0xe0002104
  mask: 0xe0000
  name: reserved_1
  description: |
    RESERVED
ps7_usb0_HCSPARAMS_PI:
  addr: 0xe0002104
  mask: 0x10000
  name: PI
  description: |
    Port indicator. This bit indicates whether the ports support port indicator control. When set to one, the
    port status and control registers include a read/writable field for controlling the state of
    the port indicator. This field will always be '1'
ps7_usb0_HCSPARAMS_N_CC:
  addr: 0xe0002104
  mask: 0xf000
  name: N_CC
  description: |
    This field indicates the number of companion controllers associated with this USB2.0 host controller. A zero in this field indicates there are no internal Companion Controllers. Port ownership
    hand-off is not supported. A value larger than zero in this field indicates there are companion USB1.1 host controller(s). Port-ownership hand-offs are supported. High, Full and Low speed devices are supported on the host controller root ports.
ps7_usb0_HCSPARAMS_N_PCC:
  addr: 0xe0002104
  mask: 0xf00
  name: N_PCC
  description: |
    This field indicates the number of ports supported per internal Companion Controller. It is used to indicate the port routing configuration to the system software.
ps7_usb0_HCSPARAMS_reserved:
  addr: 0xe0002104
  mask: 0xe0
  name: reserved
  description: |
    RESERVED
ps7_usb0_HCSPARAMS_PPC:
  addr: 0xe0002104
  mask: 0x10
  name: PPC
  description: |
    Port Power Control. This field indicates whether the host controller implementation includes port power control.
    1 =indicates the ports have port power switches.
    0 = indicates the ports do not have port power switches.
ps7_usb0_HCSPARAMS_N_PORTS:
  addr: 0xe0002104
  mask: 0xf
  name: N_PORTS
  description: |
    Number of downstream ports supported by the host controller
ps7_usb0_HCCPARAMS_EECP:
  addr: 0xe0002108
  mask: 0xff00
  name: EECP
  description: |
    No Description
ps7_usb0_HCCPARAMS_IST:
  addr: 0xe0002108
  mask: 0xf0
  name: IST
  description: |
    Isochronous Scheduling Threshold.
    This field indicates, relative to the current position of the executing host controller, where software can reliably update the isochronous schedule. When bit [7] is zero, the value of the least significant 3 bits indicates the number of micro-frames a host controller can hold a set of isochronous data structures (one or more) before flushing the state. When bit [7] is a one, then host software assumes the host controller may cache an isochronous data structure for an entire frame.
    This field will always be 4'b0
ps7_usb0_HCCPARAMS_a:
  addr: 0xe0002108
  mask: 0x8
  name: a
  description: |
    reserved
ps7_usb0_HCCPARAMS_ASP:
  addr: 0xe0002108
  mask: 0x4
  name: ASP
  description: |
    Asynchronous Schedule Park Capability. If this bit is set to a one, then the host controller supports the park feature for high speed queue heads in the Asynchronous Schedule. The feature can be disabled or enabled and set to a specific level by using the Asynchronous Schedule Park Mode
    Enable and Asynchronous Schedule Park Mode Count fields in the USBCMD register.
    This field will always be '1'
ps7_usb0_HCCPARAMS_PFL:
  addr: 0xe0002108
  mask: 0x2
  name: PFL
  description: |
    If this bit is set to zero, then the system software must use a frame list length of 1024 elements with this host controller. The USBCMD register Frame List Size field is a read-only register and must be set to zero.
    If set to a one, then the system software can specify and use a smaller frame list and configure the host controller via the USBCMD register Frame List Size field. The frame list must always be aligned on a 4K-page boundary. This field will always be '1'
ps7_usb0_HCCPARAMS_ADC:
  addr: 0xe0002108
  mask: 0x1
  name: ADC
  description: |
    64-bit Addressing Capability. For this controller its always 0
ps7_usb0_DCIVERSION_DCIVERSION:
  addr: 0xe0002120
  mask: 0xffff
  name: DCIVERSION
  description: |
    The device controller interface conforms to the two-byte BCD encoding of the interface version number
    contained in this register
ps7_usb0_DCCPARAMS_HC:
  addr: 0xe0002124
  mask: 0x100
  name: HC
  description: |
    Host Capable. When this bit is 1, this controller is capable of operating as an EHCI compatible USB
    2.0 host controller
    1= The controller is USB 2.0 host controller capable
ps7_usb0_DCCPARAMS_DC:
  addr: 0xe0002124
  mask: 0x80
  name: DC
  description: |
    Device Capable register. When this bit is 1, this controller is capable of operating as a USB 2.0 device.
    1= The controller is USB 2.0 device capable
ps7_usb0_DCCPARAMS_a:
  addr: 0xe0002124
  mask: 0x60
  name: a
  description: |
    reserved
ps7_usb0_DCCPARAMS_DEN:
  addr: 0xe0002124
  mask: 0x1f
  name: DEN
  description: |
    This field indicates the number of endpoints built into the device controller.
    12 = 12 endpoints are supported
ps7_usb0_USBCMD_ITC:
  addr: 0xe0002140
  mask: 0xff0000
  name: ITC
  description: |
    Interrupt Threshold Control. The system software uses this field to set the maximum rate at which the host/device controller will issue interrupts.
    00h Immediate (no threshold)
    01h 1 micro-frame
    02h 2 micro-frames
    04h 4 micro-frames
    08h 8 micro-frames
    10h 16 micro-frames
    20h 32 micro-frames
    40h 64 micro-frames
ps7_usb0_USBCMD_FS2:
  addr: 0xe0002140
  mask: 0x8000
  name: FS2
  description: |
    MSB bit of FS field.
ps7_usb0_USBCMD_ATDTW:
  addr: 0xe0002140
  mask: 0x4000
  name: ATDTW
  description: |
    This bit is used as a semaphore to ensure the proper addition of a new dTD to an active (primed) endpoint's linked list.
ps7_usb0_USBCMD_SUTW:
  addr: 0xe0002140
  mask: 0x2000
  name: SUTW
  description: |
    Setup TripWire. This bit is used as a semaphore to ensure that the setup data payload of 8 bytes is
    extracted from a QH by the DCD without being corrupted. If the setup lockout mode is off (See USBMODE register) then there exists a hazard when new setup data arrives while the DCD is copying the setup data payload from the QH for a previous setup packet. This bit is set and cleared by software and will be cleared by hardware when a hazard exists.
    Used only in device Mode
ps7_usb0_USBCMD_reserved:
  addr: 0xe0002140
  mask: 0x1000
  name: reserved
  description: |
    RESERVED
ps7_usb0_USBCMD_ASPE:
  addr: 0xe0002140
  mask: 0x800
  name: ASPE
  description: |
    If the Asynchronous Park Capability bit in the HCCPARAMS register is a one, then this bit defaults to a 1b and is R/W. Otherwise the bit must be a zero and is RO. Software uses this bit to enable or disable Park mode. When this bit is one, Park mode is enabled. When this bit is a zero, Park mode is disabled.
    This field is set to '1'b in this implementation. Only used in host mode.
ps7_usb0_USBCMD_reserved_1:
  addr: 0xe0002140
  mask: 0x400
  name: reserved_1
  description: |
    RESERVED
ps7_usb0_USBCMD_ASP:
  addr: 0xe0002140
  mask: 0x300
  name: ASP
  description: |
    If the Asynchronous Park Capability bit in the HCCPARAMS register is a one, then this field defaults to 3h and is R/W. Otherwise it defaults to zero and is RO. It contains a count of the number of successive transactions the host controller is allowed to execute from a high-speed queue head on the Asynchronous schedule before
    continuing traversal of the Asynchronous schedule.
    This field is set to 3h in this implementation.
    Only used in host mode.
ps7_usb0_USBCMD_LR:
  addr: 0xe0002140
  mask: 0x80
  name: LR
  description: |
    Light Host/Device Controller Reset. This field will always be '0b'.
ps7_usb0_USBCMD_IAA:
  addr: 0xe0002140
  mask: 0x40
  name: IAA
  description: |
    This bit is used as a doorbell by software to tell the host controller to issue an interrupt the next time it advances the asynchronous schedule. Software must write a '1b' to this bit to ring the doorbell. This is used only in Host mode
ps7_usb0_USBCMD_ASE:
  addr: 0xe0002140
  mask: 0x20
  name: ASE
  description: |
    This bit controls whether the host controller skips processing the Asynchronous Schedule.
    Values Meaning :
    0- Do not process the Asynchronous Schedule.
    1- Use the ASYNCLISTADDR register to access the Asynchronous Schedule.
    Only used in host mode.
ps7_usb0_USBCMD_PSE:
  addr: 0xe0002140
  mask: 0x10
  name: PSE
  description: |
    This bit controls whether the host controller skips processing the Periodic Schedule. Values Meaning
    0 -> Do not process the Periodic Schedule
    1 -> Use the PERIODICLISTBASE register to access the Periodic Schedule.
    Only used in host mode.
ps7_usb0_USBCMD_FS0:
  addr: 0xe0002140
  mask: 0xc
  name: FS0
  description: |
    reserved
    0 -> 1024 elements (4096 bytes)
    1 -> 512 elements (2048 bytes)
    2 -> 256 elements (1024 bytes)
    3 -> 128 elements (512 bytes)
    4 -> 64 elements (256 bytes)
    5 -> 32 elements (128 bytes)
    6 ->16 elements (64 bytes)
    7 -> 8 elements (32 bytes)
ps7_usb0_USBCMD_RST:
  addr: 0xe0002140
  mask: 0x2
  name: RST
  description: |
    Software uses this bit to reset the controller. This bit is set to zero by the Controller when the reset process is complete. Software cannot terminate the reset process early by writing a zero to this register.
ps7_usb0_USBCMD_RS:
  addr: 0xe0002140
  mask: 0x1
  name: RS
  description: |
    Run/Stop bit , When set to a 1, the Controller proceeds with the execution of the schedule.
ps7_usb0_USBSTS_TI1:
  addr: 0xe0002144
  mask: 0x2000000
  name: TI1
  description: |
    This bit is set when the counter in the GPTIMER1CTRL register transitions to zero. Writing a one to this bit will clear it.
ps7_usb0_USBSTS_TI0:
  addr: 0xe0002144
  mask: 0x1000000
  name: TI0
  description: |
    This bit is set when the counter in the GPTIMER0CTRL register transitions to zero.
    Writing a one to this bit will clear it.
ps7_usb0_USBSTS_reserved:
  addr: 0xe0002144
  mask: 0xf00000
  name: reserved
  description: |
    T
ps7_usb0_USBSTS_UPI:
  addr: 0xe0002144
  mask: 0x80000
  name: UPI
  description: |
    This bit is set by the Host Controller when the cause of an interrupt is a completion of a USB transaction where the Transfer Descriptor (TD) has an interrupt on complete (IOC) bit set and the TD was from the periodic schedule.
    This bit is also set by the Host Controller when a short packet is detected and the packet is on the periodic schedule. A short packet is when the actual number of bytes received was less than expected.
    This bit is not used by the device controller and will always be zero.
ps7_usb0_USBSTS_UAI:
  addr: 0xe0002144
  mask: 0x40000
  name: UAI
  description: |
    USB Host Asynchronous Interrupt . This bit is set by the Host Controller when the cause of an interrupt is a completion of a USB transaction where the Transfer Descriptor (TD) has an interrupt on complete (IOC) bit set AND the TD was from the asynchronous schedule.
    This bit is also set by the Host when a short packet is detected and the packet is on the asynchronous schedule. A short packet is when the actual number of bytes received was less than expected.
    This bit is not used by the device controller and will always be zero.
ps7_usb0_USBSTS_reserved_1:
  addr: 0xe0002144
  mask: 0x20000
  name: reserved_1
  description: |
    RESERVED
ps7_usb0_USBSTS_NAKI:
  addr: 0xe0002144
  mask: 0x10000
  name: NAKI
  description: |
    NAK Interrupt. This bit is read-only. It is set by hardware when for a particular endpoint both the TX/RX Endpoint NAK bit and the corresponding TX/RX Endpoint NAK Enable bit are set. This bit is automatically cleared by hardware when the all the enabled TX/RX Endpoint NAK bits are cleared. This bit is not used by the host controller and will always be zero.
ps7_usb0_USBSTS_AS:
  addr: 0xe0002144
  mask: 0x8000
  name: AS
  description: |
    This bit reports the current real status of the Asynchronous Schedule. When set to zero the asynchronous schedule status is disabled and if set to one the status is enabled.
    The Controller is not required to immediately disable or enable the Asynchronous Schedule when software transitions the Asynchronous Schedule Enable bit in the USBCMD register. When this bit and the Asynchronous Schedule Enable bit are the same value, the Asynchronous Schedule is either enabled (1) or disabled (0).
    Only used in host mode.
ps7_usb0_USBSTS_PS:
  addr: 0xe0002144
  mask: 0x4000
  name: PS
  description: |
    Periodic Schedule Status. This bit reports the current real status of the Periodic Schedule. When set to zero the
    periodic schedule is disabled, and if set to one the status is enabled. The Controller is not required to immediately disable or enable the Periodic Schedule when software
    transitions the Periodic Schedule Enable bit in the USBCMD register. When this bit and the Periodic Schedule Enable bit are the same value, the Periodic Schedule is either enabled (1) or disabled (0).
    Only used in host mode.
ps7_usb0_USBSTS_RCL:
  addr: 0xe0002144
  mask: 0x2000
  name: RCL
  description: |
    Reclamation. This is a read-only status bit used to detect an empty asynchronous schedule. Used in Host mode only
ps7_usb0_USBSTS_HCH:
  addr: 0xe0002144
  mask: 0x1000
  name: HCH
  description: |
    HCHaIted. This bit is a zero whenever the Run/Stop bit is a one. The Controller sets this bit to one after it has stopped executing because of the Run/Stop bit being set to 0, either by software or by the Controller hardware (e.g. internal error).
    Only used in host mode.
ps7_usb0_USBSTS_reserved_2:
  addr: 0xe0002144
  mask: 0x800
  name: reserved_2
  description: |
    RESERVED
ps7_usb0_USBSTS_ULPII:
  addr: 0xe0002144
  mask: 0x400
  name: ULPII
  description: |
    ULPI Interrupt. When the ULPI Viewport is present in the design, an event completion will set this interrupt.
ps7_usb0_USBSTS_reserved_3:
  addr: 0xe0002144
  mask: 0x200
  name: reserved_3
  description: |
    RESERVED
ps7_usb0_USBSTS_SLI:
  addr: 0xe0002144
  mask: 0x100
  name: SLI
  description: |
    DCSuspend. When a device controller enters a suspend state from an active state, this bit will be set to a one. This bit is only cleared by software writing a 1 to it.
    Only used in device mode.
ps7_usb0_USBSTS_SRI:
  addr: 0xe0002144
  mask: 0x80
  name: SRI
  description: |
    SOF Received. When the device controller detects a Start Of (u)Frame, this bit will be set to a one.
    When a SOF is extremely late, the Controller, when in device mode, will automatically set this bit to indicate that an SOF was expected. Therefore, this bit will be set roughly every 1ms in FS mode and every 125us in HS mode and will be synchronized to the actual SOF that is received.
    Since the Controller when in device mode is initialized to FS before connect, this bit will be set at an interval of 1ms during the prelude to connect and chirp.
    In host mode, this bit will be set every 125us and can be used by host controller driver as a time base.
    Software writes a 1 to this bit to clear it.
ps7_usb0_USBSTS_URI:
  addr: 0xe0002144
  mask: 0x40
  name: URI
  description: |
    USB Reset Received. When the Controller detects a USB Reset and enters the default state, this bit will be set to a one. Software can write a 1 to this bit to clear the USB Reset Received status bit.
    Only used in device mode.
ps7_usb0_USBSTS_AAI:
  addr: 0xe0002144
  mask: 0x20
  name: AAI
  description: |
    Interrupt on Async Advance. System software can force the host controller to issue an interrupt the next time the host controller advances the asynchronous schedule by writing a one to the Interrupt on Async Advance Doorbell bit in the USBCMD register. This status bit indicates the
    assertion of that interrupt source.
    Only used in host mode.
ps7_usb0_USBSTS_SEI:
  addr: 0xe0002144
  mask: 0x10
  name: SEI
  description: |
    System Error. In the BVCI implementation of the USBHS core, this bit is not used, and will always be
    cleared to '0b'. In the AMBA implementation, this bit will be set to '1b' when an Error response is seen by the master interface
ps7_usb0_USBSTS_FRI:
  addr: 0xe0002144
  mask: 0x8
  name: FRI
  description: |
    Frame List Rollover
    The Controller sets this bit to a one when the Frame List Index rolls over from its maximum value to zero. The exact value at which the rollover occurs depends on the frame list size. For example, if the frame list size (as programmed in the Frame List Size field of the USBCMD register) is 1024, the Frame Index Register rolls over every time FRINDEX[13] toggles. Similarly, if the size is 512, the Controller sets this bit to a one every time FRINDEX[12] toggles. Only used in host mode.
ps7_usb0_USBSTS_PCI:
  addr: 0xe0002144
  mask: 0x4
  name: PCI
  description: |
    Port Change Detect. The Controller in host mode sets this bit to a one when on any port a Connect Status occurs, a Port Enable/Disable Change occurs, or the Force Port Resume bit is set as the result of a J-K transition on the suspended port.
    The Controller in device mode sets this bit to a one when it detects resume signaling or the port controller enters the full or high-speed operational state. When the port controller exits the full or high-speed operation states due to Reset or Suspend events, the notification mechanisms are the USB Reset Received bit and the DCSuspend bits respectively.
ps7_usb0_USBSTS_UEI:
  addr: 0xe0002144
  mask: 0x2
  name: UEI
  description: |
    USB Error Interrupt. When completion of a USB transaction results in an error condition, this bit is set by the Controller
ps7_usb0_USBSTS_UI:
  addr: 0xe0002144
  mask: 0x1
  name: UI
  description: |
    This bit is set by the Controller when the cause of an interrupt is a completion of a USB transaction where the Transfer Descriptor (TD) has an interrupt on complete (IOC) bit set.
    This bit is also set by the Host Controller when a short packet is detected. A short packet is when the actual number of bytes received was less than expected.
ps7_usb0_USBINTR_TIE1:
  addr: 0xe0002148
  mask: 0x2000000
  name: TIE1
  description: |
    General Purpose Timer Interrupt Enable 1
    When this bit is a one, and the TI1 bit in the EXTSTS register is a one, the controller will issue an interrupt. The interrupt is acknowledged by software clearing the TI1 bit.
ps7_usb0_USBINTR_TIE0:
  addr: 0xe0002148
  mask: 0x1000000
  name: TIE0
  description: |
    General Purpose Timer Interrupt Enable 0
    When this bit is a one, and the TI1 bit in the EXTSTS register is a one, the controller will issue an interrupt. The interrupt is acknowledged by software clearing the TI0 bit.
ps7_usb0_USBINTR_reserved:
  addr: 0xe0002148
  mask: 0xf00000
  name: reserved
  description: |
    Reserved
ps7_usb0_USBINTR_UPEI:
  addr: 0xe0002148
  mask: 0x80000
  name: UPEI
  description: |
    USB Host Periodic Interrupt Enable.
    When this bit is a one, and the UPI bit in the EXTSTS register is a one, the host controller will issue an interrupt at the next interrupt threshold. The interrupt is acknowledged by software clearing the UPI bit.
ps7_usb0_USBINTR_UAEI:
  addr: 0xe0002148
  mask: 0x40000
  name: UAEI
  description: |
    USB Host Asynchronous Interrupt Enable
    When this bit is a one, and the UAI bit in the EXTSTS register is a one, the host controller will issue an interrupt at the next interrupt threshold. The interrupt is acknowledged by software clearing the UAI bit.
ps7_usb0_USBINTR_reserved_1:
  addr: 0xe0002148
  mask: 0x20000
  name: reserved_1
  description: |
    RESERVED
ps7_usb0_USBINTR_NAKEI:
  addr: 0xe0002148
  mask: 0x10000
  name: NAKEI
  description: |
    NAK Interrupt Enable
    when this bit is a one, and the NAKI bit in the EXTSTS register is a one, the controller will issue an interrupt. The interrupt is acknowledged by software clearing the NAKI bit.
ps7_usb0_USBINTR_reserved_2:
  addr: 0xe0002148
  mask: 0x800
  name: reserved_2
  description: |
    RESERVED
ps7_usb0_USBINTR_ULPIE:
  addr: 0xe0002148
  mask: 0x400
  name: ULPIE
  description: |
    ULPI Interrupt enable. When this bit is a one, and the ULPI Interrupt bit in the USBSTS register transitions, the Controller will issue and interrupt. The interrupt is acknowledged by software writing a one to the ULPI Interrupt bit.
ps7_usb0_USBINTR_reserved_3:
  addr: 0xe0002148
  mask: 0x200
  name: reserved_3
  description: |
    RESERVED
ps7_usb0_USBINTR_SLE:
  addr: 0xe0002148
  mask: 0x100
  name: SLE
  description: |
    DCSuspend Interrupt Enable.
    When this bit is a one, and the SLI bit in the USBSTS register transitions, the Controller will issue an interrupt. The interrupt is acknowledged by software writing a one to the SLI bit.
    Only used in device mode.
ps7_usb0_USBINTR_SRE:
  addr: 0xe0002148
  mask: 0x80
  name: SRE
  description: |
    USB Reset Received Interrupt Enable
    When this bit is a one, and the SRI bit in the USBSTS register is a one, the Controller will issue an interrupt. The interrupt is acknowledged by software clearing the SRI bit.
ps7_usb0_USBINTR_URE:
  addr: 0xe0002148
  mask: 0x40
  name: URE
  description: |
    USB Reset Received. When the Controller detects a USB Reset and enters the default state, this bit will be set to a one. Software can write a 1 to this bit to clear the USB Reset Received status bit.
    Only used in device mode.
ps7_usb0_USBINTR_AAE:
  addr: 0xe0002148
  mask: 0x20
  name: AAE
  description: |
    Interrupt on Async Advance Enable. When this bit is a one, and the AAI bit in the USBSTS register is a one, the Controller will issue an interrupt at the next interrupt threshold. The interrupt is acknowledged by software clearing the Interrupt on AAI bit.
    Only used in host mode.
ps7_usb0_USBINTR_SEE:
  addr: 0xe0002148
  mask: 0x10
  name: SEE
  description: |
    System Error Interrupt Enable. When this bit is a one, and the SEI bit in the USBSTS register is a one, the Controller will issue an interrupt. The interrupt is acknowledged by software clearing the SSI bit.
ps7_usb0_USBINTR_FRE:
  addr: 0xe0002148
  mask: 0x8
  name: FRE
  description: |
    Frame List Rollover Interrupt Enable
    When this bit is a one, and the FRI bit in the USBSTS register is a one, the Controller will issue an interrupt. The interrupt is acknowledged by software clearing the FRI bit. Only used in host mode.
ps7_usb0_USBINTR_PCE:
  addr: 0xe0002148
  mask: 0x4
  name: PCE
  description: |
    Port Change Detect Interrupt Enable
    When this bit is a one, and the PCI bit in the USBSTS register is a one, the Controller will issue an interrupt. The interrupt is acknowledged by software clearing the PCI bit.
ps7_usb0_USBINTR_UEE:
  addr: 0xe0002148
  mask: 0x2
  name: UEE
  description: |
    USB Error Interrupt
    When this bit is a one, and the UEI bit in the USBSTS register is a one, the Controller will issue an interrupt at the next interrupt threshold. The interrupt is acknowledged by
    software clearing the UEI bit in the USBSTS register.
ps7_usb0_USBINTR_UE:
  addr: 0xe0002148
  mask: 0x1
  name: UE
  description: |
    When this bit is a one, and the UI bit in the USBSTS register is a one, the Controller will issue an interrupt at the next interrupt threshold. The interrupt is acknowledged by
    software clearing the UI bit.
ps7_usb0_FRINDEX_FRINDEX:
  addr: 0xe000214c
  mask: 0x3fff
  name: FRINDEX
  description: |
    The value, in this register, increments at the end of each time frame (e.g. micro-frame). Bits [N:3] are used for the Frame List current index. This means that each location of the frame list is accessed 8 times (frames or micro-frames) before moving to the next index. The following illustrates values of N based on the value of the Frame List Size field in the USBCMD register, when used in host mode.
    usbcmd-> Frame List-> Size
    000b ->(1024) -> 12
    001b ->(512) ->11
    010b ->(256)->10
    011b ->(128) -> 9
    100b ->(64) -> 8
    101b ->(32) -> 7
    110b ->(16) ->6
    111b ->(8) ->5
    In device mode the value is the current frame number of the last frame transmitted. It is not used as an index.
    This register is read-only in device mode.
ps7_usb0_PERIODICLISTBASE_DEVICEADDR_PERBASE_USBADRA:
  addr: 0xe0002154
  mask: 0xfe000000
  name: PERBASE_USBADRA
  description: |
    In host mode: Periodic List Base Address:
    These bits correspond to memory address signals [31:12], respectively.
    In Device Mode:
    Device address advance
    When this bit is '0b', any writes to USBADR are instantaneous. When this bit is written to a '1' at the same time or before USBADR is written, the write to the USBADR field is staged and held in a hidden register. After an IN occurs on endpoint 0 and is ACKed, USBADR will be loaded from the hidden register.
    Hardware will automatically clear this bit on the following conditions:
    1) IN is ACKed to endpoint 0. (USBADR is updated from hidden register).
    2) OUT/SETUP occur to endpoint 0. (USBADR is not updated).
    3) Device Reset occurs (USBADR is reset to 0).
ps7_usb0_PERIODICLISTBASE_DEVICEADDR_PERBASE_USBADR:
  addr: 0xe0002154
  mask: 0x1000000
  name: PERBASE_USBADR
  description: |
    In host mode: Periodic List Base Address:
    These bits correspond to memory address signals [31:12], respectively.
    In device Mode: USB Device address
    These bits correspond to the USB device address
ps7_usb0_PERIODICLISTBASE_DEVICEADDR_PERBASE_Reserved:
  addr: 0xe0002154
  mask: 0xfff000
  name: PERBASE_Reserved
  description: |
    In host mode: Periodic List Base Address:
    These bits correspond to memory address signals [31:12], respectively.
    In Device Mode: Reserved
ps7_usb0_PERIODICLISTBASE_DEVICEADDR_reserved:
  addr: 0xe0002154
  mask: 0xfff
  name: reserved
  description: |
    RESERVED
ps7_usb0_ASYNCLISTADDR_ENDPOINTLISTADDR_ASYBASE_EPBASE:
  addr: 0xe0002158
  mask: 0xfffff800
  name: ASYBASE_EPBASE
  description: |
    In host mode: Asynchronous List Base Address:
    These bits correspond to memory address signals [31:5], respectively. This field may only reference a Queue Head (QH).
    In Device Mode:
    Endpoint List Base Address
    These bits correspond to memory address signals [31:11], respectively. This field will reference a list of up to 32 Queue Heads (QH). (i.e. one queue head per endpoint ANDdirection).
ps7_usb0_ASYNCLISTADDR_ENDPOINTLISTADDR_ASYBASE:
  addr: 0xe0002158
  mask: 0x7e0
  name: ASYBASE
  description: |
    In host mode: Asynchronous List Base Address:
    These bits correspond to memory address signals [31:5], respectively. This field may only reference a Queue Head (QH).
    In Device Mode: Reserved
ps7_usb0_ASYNCLISTADDR_ENDPOINTLISTADDR_reserved:
  addr: 0xe0002158
  mask: 0x1f
  name: reserved
  description: |
    RESERVED
ps7_usb0_TTCTRL_reserved:
  addr: 0xe000215c
  mask: 0x80000000
  name: reserved
  description: |
    RESERVED
ps7_usb0_TTCTRL_TTHA:
  addr: 0xe000215c
  mask: 0x7f000000
  name: TTHA
  description: |
    Internal TT Hub Address Representation.
    This field is used to match against the Hub Address field in QH AND siTD to determine if the packet is routed to the internal TT for directly attached FS/LS devices. If the Hub
    Address in the QH or siTD does not match this address then the packet will be broadcast on the High Speed ports destined for a downstream High Speed hub with the
    address in the QH/siTD.
ps7_usb0_TTCTRL_reserved_1:
  addr: 0xe000215c
  mask: 0xfffffc
  name: reserved_1
  description: |
    RESERVED
ps7_usb0_TTCTRL_TTAS:
  addr: 0xe000215c
  mask: 0x2
  name: TTAS
  description: |
    Embedded TT Asynchronous Buffers Clear. This field will clear all pending transactions in the embedded TT Asynchronous Buffer(s). The clear will take as much time as necessary to clear buffer without
    interfering with a transaction in progress. TTAC will return to zero after being set by software only after the actual clear occurs.
ps7_usb0_TTCTRL_TTAC:
  addr: 0xe000215c
  mask: 0x1
  name: TTAC
  description: |
    Embedded TT Async Buffers Status. This read only bit will be '1' if one or more transactions are being held in the embedded TT Asynchronous Buffers. When this bit is a zero, then all outstanding transactions in the embedded TT have been flushed.
ps7_usb0_BURSTSIZE_TXPBURST:
  addr: 0xe0002160
  mask: 0x1ff00
  name: TXPBURST
  description: |
    Programmable TX Burst Length.
    Default is the constant VUSB_HS_TX_BURST. This register represents the maximum length of a burst in 32-bit words while moving data from system memory to the USB bus.
    If field AHBBRST of register SBUSCFG is different from zero, this field TXPBURST will return the value of the INCRx length.
    Supported values are integer values from 4 to 128. It is recommended to set this value to a integer sub-multiple of VUSB_HS_TX_CHAN. Different values will not use all the available buffer space, preventing proper TX endpoint priming in stream disable mode (SDIS bit of USBMODE register set to '1').
ps7_usb0_BURSTSIZE_RXPBURST:
  addr: 0xe0002160
  mask: 0xff
  name: RXPBURST
  description: |
    Programmable RX Burst Length. Default is the constant VUSB_HS_RX_BURST. This register represents the maximum length of a burst in 32-bit words while moving data from the USB bus to system memory. If field AHBBRST of register SBUSCFG is different from zero, this field RXPBRUST will return the value of the INCRx length.
    The supported values are integer values from 4 to 128. It is recommended to set this value to a integer sub-multiple of VUSB_HS_RX_DEPTH.
ps7_usb0_TXFILLTUNING_TXFIFOTHRES:
  addr: 0xe0002164
  mask: 0x3f0000
  name: TXFIFOTHRES
  description: |
    FIFO Burst Threshold:
    This register controls the number of data bursts that are posted to the TX latency FIFO in host mode before the packet begins on to the bus. The minimum value is 2 and this value should be a low as possible to maximize USB performance. A higher value can be used in systems with unpredictable latency and/or insufficient bandwidth, where the FIFO may under run because the data transferred from the latency FIFO to USB occurs before it can be replenished from system memory. This value is ignored if the Stream Disable bit in USBMODE register is set (SDIS).
ps7_usb0_TXFILLTUNING_reserved:
  addr: 0xe0002164
  mask: 0xe000
  name: reserved
  description: |
    RESERVED
ps7_usb0_TXFILLTUNING_TXSCHEALTH:
  addr: 0xe0002164
  mask: 0x1f00
  name: TXSCHEALTH
  description: |
    Scheduler Health Counter.
    This register increments when the Controller fails to fill the TX latency FIFO to the level programmed by TXFIFOTHRES before running out of time to send the packet before the next Start-Of-Frame.
    This health counter measures the number of times this occurs to provide feedback to selecting a proper TXSCHOH. Writing to this register will clear the counter. This counter will max. at 31.
ps7_usb0_TXFILLTUNING_reserved_1:
  addr: 0xe0002164
  mask: 0x80
  name: reserved_1
  description: |
    RESERVED
ps7_usb0_TXFILLTUNING_TXSCHOH:
  addr: 0xe0002164
  mask: 0x7f
  name: TXSCHOH
  description: |
    Scheduler Overhead.
    This register adds an additional fixed offset to the schedule time estimator described above as Tff. As an approximation, the value chosen for this register should limit the number of back-off events captured in the TXSCHHEALTH to less than 10 per second in a highly utilized bus. Choosing a value that is too high for this register is not desired as it can needlessly reduce USB utilization.
    The time unit represented in this register is 1.267us when a device is connected in High-Speed Mode for OTG(on the go) AND SPH(single port host) implementations.
    The time unit represented in this register is 6.333us when a device is connected in Low/Full Speed Mode for OTG AND SPH implementations. The time unit represented in this register is always 1.267us for the MPH implementation
ps7_usb0_TXTTFILLTUNING_TXTTSCHHEALTH:
  addr: 0xe0002168
  mask: 0x1f00
  name: TXTTSCHHEALTH
  description: |
    TT Scheduler Health Counter
    Same description as TXSCHHEALTH
ps7_usb0_TXTTFILLTUNING_reserved:
  addr: 0xe0002168
  mask: 0xe0
  name: reserved
  description: |
    RESERVED
ps7_usb0_TXTTFILLTUNING_TXTTSCHOH:
  addr: 0xe0002168
  mask: 0x1f
  name: TXTTSCHOH
  description: |
    TT Scheduler Overhead
    Same description as TXSCHOH.
    The time unit represented in this register is 6.333us.
ps7_usb0_IC_USB_IC8:
  addr: 0xe000216c
  mask: 0x80000000
  name: IC8
  description: |
    Inter-Chip transceiver enable 8. These bits enables the Inter-Chip transceiver for each port (for the MPH case). To enable the interface, the bits PTS must be set to '011b' in the PORTSC8. Writing a '1' to each bit selects the IC_USB interface for that port.
ps7_usb0_IC_USB_IC_VDD8:
  addr: 0xe000216c
  mask: 0x70000000
  name: IC_VDD8
  description: |
    Inter-Chip voltage selection 8
    It selects which voltage is being supplied to the peripheral through each port This field is read-only and set to '000b' in case of device mode operation.
    This field is read-only and set to '000b' in case of Single port host controller.
ps7_usb0_IC_USB_IC7:
  addr: 0xe000216c
  mask: 0x8000000
  name: IC7
  description: |
    Inter-Chip transceiver enable 7. These bits enables the Inter-Chip transceiver for each port (for the MPH case). To enable the interface, the bits PTS must be set to '011b' in the PORTSC7. Writing a '1' to each bit selects the IC_USB interface for that port.
ps7_usb0_IC_USB_IC_VDD7:
  addr: 0xe000216c
  mask: 0x7000000
  name: IC_VDD7
  description: |
    Inter-Chip voltage selection 7
    It selects which voltage is being supplied to the peripheral through each port This field is read-only and set to '000b' in case of device mode operation.
    This field is read-only and set to '000b' in case of Single port host controller.
ps7_usb0_IC_USB_IC6:
  addr: 0xe000216c
  mask: 0x800000
  name: IC6
  description: |
    Inter-Chip transceiver enable 6. These bits enables the Inter-Chip transceiver for each port (for the MPH case). To enable the interface, the bits PTS must be set to '011b' in the PORTSC6. Writing a '1' to each bit selects the IC_USB interface for that port.
ps7_usb0_IC_USB_IC_VDD6:
  addr: 0xe000216c
  mask: 0x700000
  name: IC_VDD6
  description: |
    Inter-Chip voltage selection 6
    It selects which voltage is being supplied to the peripheral through each port This field is read-only and set to '000b' in case of device mode operation.
    This field is read-only and set to '000b' in case of Single port host controller.
ps7_usb0_IC_USB_IC5:
  addr: 0xe000216c
  mask: 0x80000
  name: IC5
  description: |
    Inter-Chip transceiver enable 5. These bits enables the Inter-Chip transceiver for each port (for the MPH case). To enable the interface, the bits PTS must be set to '011b' in the PORTSC5. Writing a '1' to each bit selects the IC_USB interface for that port.
ps7_usb0_IC_USB_IC_VDD5:
  addr: 0xe000216c
  mask: 0x70000
  name: IC_VDD5
  description: |
    Inter-Chip voltage selection 5
    It selects which voltage is being supplied to the peripheral through each port This field is read-only and set to '000b' in case of device mode operation.
    This field is read-only and set to '000b' in case of Single port host controller.
ps7_usb0_IC_USB_IC4:
  addr: 0xe000216c
  mask: 0x8000
  name: IC4
  description: |
    Inter-Chip transceiver enable 4. These bits enables the Inter-Chip transceiver for each port (for the MPH case). To enable the interface, the bits PTS must be set to '011b' in the PORTSC4. Writing a '1' to each bit selects the IC_USB interface for that port.
ps7_usb0_IC_USB_IC_VDD4:
  addr: 0xe000216c
  mask: 0x7000
  name: IC_VDD4
  description: |
    Inter-Chip voltage selection 4
    It selects which voltage is being supplied to the peripheral through each port This field is read-only and set to '000b' in case of device mode operation.
    This field is read-only and set to '000b' in case of Single port host controller.
ps7_usb0_IC_USB_IC3:
  addr: 0xe000216c
  mask: 0x800
  name: IC3
  description: |
    Inter-Chip transceiver enable 3. These bits enables the Inter-Chip transceiver for each port (for the MPH case). To enable the interface, the bits PTS must be set to '011b' in the PORTSC3. Writing a '1' to each bit selects the IC_USB interface for that port.
ps7_usb0_IC_USB_IC_VDD3:
  addr: 0xe000216c
  mask: 0x700
  name: IC_VDD3
  description: |
    Inter-Chip voltage selection 3
    It selects which voltage is being supplied to the peripheral through each port. This field is read-only and set to '000b' in case of device mode operation.
    This field is read-only and set to '000b' in case of Single port host controller.
ps7_usb0_IC_USB_IC2:
  addr: 0xe000216c
  mask: 0x80
  name: IC2
  description: |
    Inter-Chip transceiver enable 2. These bits enables the Inter-Chip transceiver for each port (for the MPH case). To enable the interface, the bits PTS must be set to '011b' in the PORTSC2. Writing a '1' to each bit selects the IC_USB interface for that port.
ps7_usb0_IC_USB_IC_VDD2:
  addr: 0xe000216c
  mask: 0x70
  name: IC_VDD2
  description: |
    Inter-Chip voltage selection 2
    It selects which voltage is being supplied to the peripheral through each port. This field is read-only and set to '000b' in case of device mode operation.
    This field is read-only and set to '000b' in case of Single port host controller.
ps7_usb0_IC_USB_IC1:
  addr: 0xe000216c
  mask: 0x8
  name: IC1
  description: |
    Inter-Chip transceiver enable 1. These bits enables the Inter-Chip transceiver for each port (for the MPH case). To enable the interface, the bits PTS must be set to '011b' in the PORTSC1. Writing a '1' to each bit selects the IC_USB interface for that port. If the Controller is not a MPH
    implementation, IC8 to IC2 will be '0' and Read-Only.
ps7_usb0_IC_USB_IC_VDD1:
  addr: 0xe000216c
  mask: 0x7
  name: IC_VDD1
  description: |
    Inter-Chip voltage selection 1
    It selects which voltage is being supplied to the peripheral through each port
    000 - No voltage
    001 - 1.0V
    010 - 1.2V
    011 - 1.5V
    100 - 1.8V
    101 - 3.0V
    110 - Reserved
    111 - Reserved
    This field is read-only and set to '000b' in case of device mode operation.
    The voltage negotiation should happen between enabling port power (PP) in PORTSC1 register and asserting the run/stop bit in USBCMD register.
ps7_usb0_ULPI_VIEWPORT_ULPIWU:
  addr: 0xe0002170
  mask: 0x80000000
  name: ULPIWU
  description: |
    ULPI Wakeup.
    Writing the '1' to this bit will begin the wakeup operation. The bit will automatically transition to '0' after the wakeup is complete. Once this bit is set, the driver can not set it back to '0'.
    Note: The driver must never execute a wakeup and a read/write operation at the same time.
ps7_usb0_ULPI_VIEWPORT_ULPIRUN:
  addr: 0xe0002170
  mask: 0x40000000
  name: ULPIRUN
  description: |
    ULPIRUN
    Writing the '1' to this bit will begin the read/write operation. The bit will automatically transition to '0' after the read/write is complete. Once this bit is set, the driver can not set it back to '0'.
    Note: The driver must never execute a wakeup and a read/write operation at the same time.
ps7_usb0_ULPI_VIEWPORT_ULPIRW:
  addr: 0xe0002170
  mask: 0x20000000
  name: ULPIRW
  description: |
    ULPI Read/Write Control'0' - Read.'1' - Write.
    This bit selects between running a read or write operation.
ps7_usb0_ULPI_VIEWPORT_reserved:
  addr: 0xe0002170
  mask: 0x10000000
  name: reserved
  description: |
    Reserved
ps7_usb0_ULPI_VIEWPORT_ULPISS:
  addr: 0xe0002170
  mask: 0x8000000
  name: ULPISS
  description: |
    ULPI Synchronous State
    0: In another state (i.e. carkit, serial, low power).
    1: Normal synchronous state.
    This bit represents the state of the ULPI interface. Before reading this bit, the ULPIPORT field should be set accordingly if used in a MPH implementation.
ps7_usb0_ULPI_VIEWPORT_ULPIPORT:
  addr: 0xe0002170
  mask: 0x7000000
  name: ULPIPORT
  description: |
    ULPI Port Number.
    For the wakeup or read/write operation to be executed, this value selects the port number to which a ULPI PHY is attached. The range is 0 to 7. This field should always be written '000b' for non MPH implementations.
ps7_usb0_ULPI_VIEWPORT_ULPIADDR:
  addr: 0xe0002170
  mask: 0xff0000
  name: ULPIADDR
  description: |
    ULPI Data Address. When a read or write operation is commanded, the address of the operation is written to this field.
ps7_usb0_ULPI_VIEWPORT_ULPIDATRD:
  addr: 0xe0002170
  mask: 0xff00
  name: ULPIDATRD
  description: |
    ULPI Data Read.
    After a read operation completes, the result is placed in this field.
ps7_usb0_ULPI_VIEWPORT_ULPIDATWR:
  addr: 0xe0002170
  mask: 0xff
  name: ULPIDATWR
  description: |
    ULPI Data Write. When a write operation is commanded, the data to be sent is written to this field
ps7_usb0_ENDPTNAK_EPTN:
  addr: 0xe0002178
  mask: 0xffff0000
  name: EPTN
  description: |
    TX Endpoint NAK
    Each TX endpoint has 1 bit in this field. The bit is set when the Controller sends a NAK handshake on a received IN token for the corresponding endpoint.
    Bit 15 - Endpoint #15
    ...
    Bit 1 - Endpoint #1
    Bit 0 - Endpoint #0
    Only used in device mode.
ps7_usb0_ENDPTNAK_EPRN:
  addr: 0xe0002178
  mask: 0xffff
  name: EPRN
  description: |
    RX Endpoint NAK
    Each RX endpoint has 1 bit in this field. The bit is set when the Controller sends a NAK handshake on a received OUT or PING token for the corresponding endpoint.
    Bit 15 - Endpoint #15
    ...
    Bit 1 - Endpoint #1
    Bit 0 - Endpoint #0
    Only used in device mode.
ps7_usb0_ENDPTNAKEN_EPTNE:
  addr: 0xe000217c
  mask: 0xffff0000
  name: EPTNE
  description: |
    TX Endpoint NAK enable
    Each bit is an enable bit for the corresponding TX Endpoint NAK bit. If this bit is set and the corresponding TX Endpoint NAK bit is set, the NAK Interrupt bit is set.
    Bit 15 - Endpoint #15
    ...
    Bit 1 - Endpoint #1
    Bit 0 - Endpoint #0
    Only used in device mode.
ps7_usb0_ENDPTNAKEN_EPRNE:
  addr: 0xe000217c
  mask: 0xffff
  name: EPRNE
  description: |
    RX Endpoint NAK enable
    Each bit is an enable bit for the corresponding RX Endpoint NAK bit. If this bit is set and the corresponding RX Endpoint NAK bit is set, the NAK Interrupt bit is set.
    Bit 15 - Endpoint #15
    ...
    Bit 1 - Endpoint #1
    Bit 0 - Endpoint #0
    Only used in device mode.
ps7_usb0_CONFIGFLAG_reserved:
  addr: 0xe0002180
  mask: 0xffffffff
  name: reserved
  description: |
    RESERVED
ps7_usb0_PORTSC1_PTS:
  addr: 0xe0002184
  mask: 0xc0000000
  name: PTS
  description: |
    This register bit pair is used in conjunction with the configuration constant VUSB_HS_PHY_TYPE to control which parallel transceiver interface is selected'010b' -> 2, 6 - ULPI
    Note that this field is made up from PORTSCx bits 25, 30 and 31.
ps7_usb0_PORTSC1_STS:
  addr: 0xe0002184
  mask: 0x20000000
  name: STS
  description: |
    Serial Transceiver Select
    This register bit is used in conjunction with the configuration constant VUSB_HS_PHY_SERIAL to control whether the parallel or serial transceiver interface is selected for FS and LS operation. The Serial Interface Engine can be used in
    combination with the UTMI+ physical interface to provide FS/LS signaling instead of the parallel interface. If VUSB_HS_PHY_SERIAL is set for 0 or 1 then this bit is read only. If VUSB_HS_PHY_SERIAL is 2 or 3 then this bit is read/write.
    This bit has no effect unless Parallel Transceiver Select is set to UTMI+. The Serial/1.1 and IC_USB physical interface will use the Serial Interface Engine for FS/LS signaling
    regardless of this bit value.
ps7_usb0_PORTSC1_PTW:
  addr: 0xe0002184
  mask: 0x10000000
  name: PTW
  description: |
    Parallel Transceiver Width. Writing this bit to '0' selects the 8-bit [60MHz] UTMI+ interface.
ps7_usb0_PORTSC1_PSPD:
  addr: 0xe0002184
  mask: 0xc000000
  name: PSPD
  description: |
    Port Speed - RO. Default = 11b.
    This register field indicates the speed at which the port is operating.'00b' -> Full Speed'01b' -> Low Speed'10b' -> High Speed'11b' -> Not connected
ps7_usb0_PORTSC1_PTS2:
  addr: 0xe0002184
  mask: 0x2000000
  name: PTS2
  description: |
    Parallel Transceiver Select - RW. Default = Implementation dependent.
    MSB bit of PTS field.
ps7_usb0_PORTSC1_PFSC:
  addr: 0xe0002184
  mask: 0x1000000
  name: PFSC
  description: |
    Port Force Full Speed Connect - RW. Default = 0b.
    Writing this bit to a '1b' will force the port to only connect at Full Speed. It disables the chirp sequence that allows the port to identify itself as High Speed. This is useful for testing FS configurations with a HS host, hub or device. This bit is for debugging purposes.
ps7_usb0_PORTSC1_PHCD:
  addr: 0xe0002184
  mask: 0x800000
  name: PHCD
  description: |
    PHY Low Power Clock Disable - RW. Default = 0b.
    Writing this bit to a '1b' will disable the PHY clock. Writing a '0b' enables it. Reading this bit will indicate the status of the PHY clock. NOTE: The PHY clock cannot be disabled if it is being used as the system clock. In device mode, the PHY can be put into Low Power Clock Disable when the device is not running (USBCMD RS=0b) or the host has signaled suspend (PORTSCx SUSP=1b).
    Low Power Clock Disable will be cleared automatically when the host has signaled resume. Before forcing a resume from the device, the Controller driver must clear this bit.
    In host mode, the PHY can be put into Low Power Suspend Clock Disable when the downstream device has been put into suspend mode or when no downstream device is
    connected. Low Power Clock Disable is completely under the control of software.
ps7_usb0_PORTSC1_WKOC:
  addr: 0xe0002184
  mask: 0x400000
  name: WKOC
  description: |
    Wake on Over-current Enable
    Writing '1' to this bit enables the port to be sensitive to over-current conditions as wakeup events.
    This field is zero if Port Power (PP) is '0' or in device mode.
    This bit is output from the controller as signal pwrctl_wake_ovrcurr_en for use by an external power control circuit. Only used in host mode.
ps7_usb0_PORTSC1_WKDS:
  addr: 0xe0002184
  mask: 0x200000
  name: WKDS
  description: |
    Wake on Disconnect Enable
    Writing this bit to a one enables the port to be sensitive to device disconnects as wakeup events. This field is zero if Port Power (PP) is '0' or in device mode. This bit is output from the controller as signal pwrctl_wake_dscnnt_en for use by an external power control circuit.
ps7_usb0_PORTSC1_WKCN:
  addr: 0xe0002184
  mask: 0x100000
  name: WKCN
  description: |
    Wake on Connect Enable
    Writing this bit to a one enables the port to be sensitive to device connects as Wakeup events. This field is zero if Port Power(PP) is '0' or in device mode. This bit is output from the controller as signal pwrctl_wake_cnnt_en for use by an external power control circuit. Only used in host mode.
ps7_usb0_PORTSC1_PTC:
  addr: 0xe0002184
  mask: 0xf0000
  name: PTC
  description: |
    Port Test Control
    Any other value than zero indicates that the port is operating in test mode.
    Value Specific Test
    0000b -> TEST_MODE_DISABLE
    0001b -> J_STATE
    0010b -> K_STATE
    0011b -> SE0 (host) / NAK (device)
    0100b -> Packet
    0101b -> FORCE_ENABLE_HS
    0110b -> FORCE_ENABLE_FS
    0111b -> FORCE_ENABLE_LS
    1000b -> Reserved
    ... Reserved
    1111b
    -> Reserved
ps7_usb0_PORTSC1_PIC:
  addr: 0xe0002184
  mask: 0xc000
  name: PIC
  description: |
    Port Indicator Control
    Writing to this field has no effect if the P_INDICATOR bit in the HCSPARAMS register is
    a zero. If P_INDICATOR bit is a one, then the bits are:
    Value Meaning
    00b -> Port indicators are off
    01b -> Amber
    10b -> Green
    11b -> Undefined
    Refer to the USB Specification Revision 2.0 for a description on how these bits are to be used. This field is output from the controller as signals port_ind_ctl_1 and port_ind_ctl_0 for
ps7_usb0_PORTSC1_PO:
  addr: 0xe0002184
  mask: 0x2000
  name: PO
  description: |
    Port Owner
    Port owner hand off is not implemented in this design, therefore this bit will always read
    back as 0b.
ps7_usb0_PORTSC1_PP:
  addr: 0xe0002184
  mask: 0x1000
  name: PP
  description: |
    Port Power
    The function of this bit depends on the value of the Port Power Switching (PPC) field in the HCSPARAMS register. The behavior is as follows:
    PPC -> PP -> Operation
    0b -> 0b -> Read Only. A Controller in device mode does not have port power control switches.
    1b -> 1b/0b -> Read/Write. A Controller in host mode requires port power control switches.
    This bit represents the current setting of the switch ('0'=off, '1'=on). When power is not available on a port (i.e. PP equals to '0'), the port is non-functional and will not report attaches, detaches, etc. When an over-current condition is detected on a powered port and PPC is a one, the PP bit in each affected port may be transitioned by the Controller driver from '1' to '0'(removing power from the port).
    In device mode port power control is not necessary, thus PPC and PP = 0.
ps7_usb0_PORTSC1_LS:
  addr: 0xe0002184
  mask: 0xc00
  name: LS
  description: |
    Line Status
    These bits reflect the current logical levels of the D+ (bit 11) and D- (bit 10) signal lines.
    The encoding of the bits are:
    00b -> SE0
    10b -> J-state
    01b -> K-state
    11b -> Undefined
    In host mode, the use of line state by the Controller driver is not necessary (unlike EHCI), because the port controller state machine and the port routing manage the connection of LS and FS.
    In device mode, the use of line state by the Controller driver is not necessary.
ps7_usb0_PORTSC1_HSP:
  addr: 0xe0002184
  mask: 0x200
  name: HSP
  description: |
    High-Speed Port
    When the bit is one, the port is in high-speed mode and if set to zero, the port is not in a high-speed mode.
    Note: HSP is redundant with PSPD but will remain in the design for compatibility.
ps7_usb0_PORTSC1_PR:
  addr: 0xe0002184
  mask: 0x100
  name: PR
  description: |
    Port Reset - RW. Default = 0b.
    This field is zero if Port Power(PP) is '0'.
    Host mode: 1=Port is in Reset. 0=Port is not in Reset.
    Device Mode: This bit is a read only status bit. Device reset from the USB bus is also indicated in the USBSTS register
ps7_usb0_PORTSC1_SUSP:
  addr: 0xe0002184
  mask: 0x80
  name: SUSP
  description: |
    Suspend
    Host mode: 1=Port in suspend state. 0=Port not in suspend state. Port Enabled bit and Suspend bit of this register define the port states as follows:
    Bits [Port Enabled, Suspend] Port State
    0x Disable
    10 Enable
    11 Suspend
    Device mode: Read Only. 1=Port in suspend state. 0=Port not in suspend state. In device mode this bit is a read only status bit.
ps7_usb0_PORTSC1_FPR:
  addr: 0xe0002184
  mask: 0x40
  name: FPR
  description: |
    Force Port Resume
    1= Resume detected/driven on port.
    0=No resume (K-state) detected/driven on port.
ps7_usb0_PORTSC1_OCC:
  addr: 0xe0002184
  mask: 0x20
  name: OCC
  description: |
    Over-current Change
    This bit gets set to '1' when there is a change to Over-current Active. Software clears this bit by writing a '1' to this bit position.
    When in host mode implementations the user can provide over-current detection to the vbus_pwr_fault input for this condition.
    For device mode this bit shall always be '0'.
ps7_usb0_PORTSC1_OCA:
  addr: 0xe0002184
  mask: 0x10
  name: OCA
  description: |
    Over-current Active
    Value Meaning'1b' -> This port currently has an over-current condition.'0b' -> This port does not have an over-current condition.
    This bit will automatically transition from '1' to '0' when the over current condition is removed.
    For host mode implementations the user can provide over-current detection to the vbus_pwr_fault input for this condition.
    For device mode implementations this bit shall always be '0'.
ps7_usb0_PORTSC1_PEC:
  addr: 0xe0002184
  mask: 0x8
  name: PEC
  description: |
    Port Enabled Change
    If set to '1' indicates a Port Enabled/Disabled status change.
    Host mode:
    For the root hub, this bit gets set to a '1' only when a port is disabled due to disconnect on the port or due to the appropriate conditions existing at the EOF2 point (See Chapter 11 of the USB Specification). Software clears this by writing a '1' to it. This field is '0' if Port Power(PP) is '0'.
    Device mode:
    The device port is always enabled. (This bit will be '0').
ps7_usb0_PORTSC1_PE:
  addr: 0xe0002184
  mask: 0x4
  name: PE
  description: |
    Port Enabled
    1 -> Enable
    0-> Disable
    Host mode:
    Ports can only be enabled by Controller as a part of the reset and enable. Software cannot enable a port by writing a '1' to this field. Ports can be disabled by either a fault condition (disconnect event or other fault condition) or by the software. This field is '0' if Port Power(PP) is '0' in host mode.
    Device mode:
    The device port is always enabled. (This bit will be always '1').
ps7_usb0_PORTSC1_CSC:
  addr: 0xe0002184
  mask: 0x2
  name: CSC
  description: |
    Connect Status Change
    If set to '1' indicates a change in Current Connect Status (CCS).
    Host mode:
    Indicates a change has occurred in the port's Current Connect Status. The Controller sets this bit for all changes to the port device connect status, even if system software
    has not cleared an existing connect status change. For example, the insertion status changes twice before system software has cleared the changed condition, hub hardware will be 'setting' an already-set bit (i.e., the bit will remain set). Software clears this bit by writing a '1' to it. This field is '0' if Port Power(PP) is '0' in host mode.
    Device mode:
    This bit is undefined in device mode.
ps7_usb0_PORTSC1_CCS:
  addr: 0xe0002184
  mask: 0x1
  name: CCS
  description: |
    Current Connect Status.
    Host mode:
    1 -> Device is present on port.
    0 -> No device is present.
    Device mode:
    1 -> Attached.
    0 -> Not Attached.
ps7_usb0_OTGSC_reserved:
  addr: 0xe00021a4
  mask: 0x80000000
  name: reserved
  description: |
    Reserved
ps7_usb0_OTGSC_DPIE:
  addr: 0xe00021a4
  mask: 0x40000000
  name: DPIE
  description: |
    Data Pulse Interrupt Enable
    This bit enables the generation of an interrupt if bit DPIS is set.
ps7_usb0_OTGSC_n1msE:
  addr: 0xe00021a4
  mask: 0x20000000
  name: n1msE
  description: |
    1 millisecond timer Interrupt Enable
    This bit enables the generation of an interrupt if bit 1msS is set.
ps7_usb0_OTGSC_BSEIE:
  addr: 0xe00021a4
  mask: 0x10000000
  name: BSEIE
  description: |
    B Session End Interrupt Enable
    This bit enables the generation of an interrupt if bit BSEIS is set
ps7_usb0_OTGSC_BSVIE:
  addr: 0xe00021a4
  mask: 0x8000000
  name: BSVIE
  description: |
    B Session Valid Interrupt Enable
    This bit enables the generation of an interrupt if bit BSVIS is set.
ps7_usb0_OTGSC_ASVIE:
  addr: 0xe00021a4
  mask: 0x4000000
  name: ASVIE
  description: |
    A Session Valid Interrupt Enable
    This bit enables the generation of an interrupt if bit ASVIS is set.
ps7_usb0_OTGSC_AVVIE:
  addr: 0xe00021a4
  mask: 0x2000000
  name: AVVIE
  description: |
    A VBus Valid Interrupt Enable
    This bit enables the generation of an interrupt if bit AVVIS is set.
ps7_usb0_OTGSC_IDIE:
  addr: 0xe00021a4
  mask: 0x1000000
  name: IDIE
  description: |
    USB ID Interrupt Enable
    This bit enables the generation of an interrupt if bit IDIS is set.
ps7_usb0_OTGSC_reserved_1:
  addr: 0xe00021a4
  mask: 0x800000
  name: reserved_1
  description: |
    Reserved
ps7_usb0_OTGSC_DPIS:
  addr: 0xe00021a4
  mask: 0x400000
  name: DPIS
  description: |
    Data Pulse Interrupt Status
    This bit is set when data bus pulsing occurs on DP or DM. Data bus pulsing is only detected when USBMODE.CM = Host ('11b') and PORTSC0.PP = Off ('0b').
    Software must write a '1' to clear this bit.
ps7_usb0_OTGSC_n1msS:
  addr: 0xe00021a4
  mask: 0x200000
  name: n1msS
  description: |
    1 millisecond timer Interrupt Status.
    This bit is set once every millisecond. Software must write a '1' to clear this bit.
ps7_usb0_OTGSC_BSEIS:
  addr: 0xe00021a4
  mask: 0x100000
  name: BSEIS
  description: |
    B Session End Interrupt Status
    This bit is set when VBus has fallen below the B session end threshold. Software must write a '1' to clear this bit.
ps7_usb0_OTGSC_BSVIS:
  addr: 0xe00021a4
  mask: 0x80000
  name: BSVIS
  description: |
    B Session Valid Interrupt Status
    This bit is set when VBus has either risen above or fallen below the B session valid threshold (0.8 VDC).
    Software must write a '1' to clear this bit.
ps7_usb0_OTGSC_ASVIS:
  addr: 0xe00021a4
  mask: 0x40000
  name: ASVIS
  description: |
    A Session Valid Interrupt Status
    This bit is set when VBus has either risen above or fallen below the A session valid threshold (0.8 VDC).
    Software must write a '1' to clear this bit.
ps7_usb0_OTGSC_AVVIS:
  addr: 0xe00021a4
  mask: 0x20000
  name: AVVIS
  description: |
    Frame Index This bit is set when VBus has either risen above or fallen below the VBus valid threshold
    (4.4 VDC) on an A device. Software must write a '1' to clear this bit.
ps7_usb0_OTGSC_IDIS:
  addr: 0xe00021a4
  mask: 0x10000
  name: IDIS
  description: |
    USB ID Interrupt Status
    This bit is set when a change on the ID input has been detected. Software must write a '1' to clear this bit.
ps7_usb0_OTGSC_reserved_2:
  addr: 0xe00021a4
  mask: 0x8000
  name: reserved_2
  description: |
    Reserved
ps7_usb0_OTGSC_DPS:
  addr: 0xe00021a4
  mask: 0x4000
  name: DPS
  description: |
    Data Bus Pulsing Status
    A '1' indicates data bus pulsing is being detected on the port.
ps7_usb0_OTGSC_n1msT:
  addr: 0xe00021a4
  mask: 0x2000
  name: n1msT
  description: |
    1 millisecond timer toggle
    This bit toggles once per millisecond.
ps7_usb0_OTGSC_BSE:
  addr: 0xe00021a4
  mask: 0x1000
  name: BSE
  description: |
    B Session End
    Indicates VBus is below the B session end threshold.
ps7_usb0_OTGSC_BSV:
  addr: 0xe00021a4
  mask: 0x800
  name: BSV
  description: |
    B Session Valid
    Indicates VBus is above the B session valid threshold.
ps7_usb0_OTGSC_ASV:
  addr: 0xe00021a4
  mask: 0x400
  name: ASV
  description: |
    A Session Valid
    Indicates VBus is above the A session valid threshold.
ps7_usb0_OTGSC_AVV:
  addr: 0xe00021a4
  mask: 0x200
  name: AVV
  description: |
    A VBus Valid.
    Indicates VBus is above the A VBus valid threshold.
ps7_usb0_OTGSC_ID:
  addr: 0xe00021a4
  mask: 0x100
  name: ID
  description: |
    USB ID'0' = A device, '1' = B device.
ps7_usb0_OTGSC_HABA:
  addr: 0xe00021a4
  mask: 0x80
  name: HABA
  description: |
    Hardware Assist B-Disconnect to A-connect'0' = Disabled, '1' = Enable automatic B-Disconnect to A-Connect sequence.
ps7_usb0_OTGSC_HADP:
  addr: 0xe00021a4
  mask: 0x40
  name: HADP
  description: |
    Hardware Assist Data-Pulse
    If set, the hardware assist data pulsing sequence starts.
ps7_usb0_OTGSC_IDPU:
  addr: 0xe00021a4
  mask: 0x20
  name: IDPU
  description: |
    ID Pullup
    This bit provide control over the ID Pullup resister.'0' = off, '1' = on. When this bit is '0' the ID input will not be sampled.
ps7_usb0_OTGSC_DP:
  addr: 0xe00021a4
  mask: 0x10
  name: DP
  description: |
    Data Pulsing
    Setting this bit causes the pullup on DP to be asserted for data pulsing during SRP.
ps7_usb0_OTGSC_OT:
  addr: 0xe00021a4
  mask: 0x8
  name: OT
  description: |
    OTG Termination
    This bit must be set when the Controller is in device mode. It controls the pulldown on DM.
ps7_usb0_OTGSC_HAAR:
  addr: 0xe00021a4
  mask: 0x4
  name: HAAR
  description: |
    Hardware Assist Auto-Reset'0' = Disabled, '1' = Enable automatic reset after connect on host port.
ps7_usb0_OTGSC_VC:
  addr: 0xe00021a4
  mask: 0x2
  name: VC
  description: |
    VBUS Charge
    Setting this bit causes the VBus line to be charged. This is used for VBus pulsing during SRP.
ps7_usb0_OTGSC_VD:
  addr: 0xe00021a4
  mask: 0x1
  name: VD
  description: |
    VBUS Discharge.
    Setting this bit causes VBus to discharge through a resistor.
ps7_usb0_USBMODE_SRT:
  addr: 0xe00021a8
  mask: 0x8000
  name: SRT
  description: |
    Shorten Reset Time
    When the Controller is in host mode, this bit enables a bypass of the Chirp J/K reset handshake, saving 6-7ms in simulation time for each reset sequence. This bit should only be used for initial system integration simulations, and should always be set to 0 for
    normal operation.
ps7_usb0_USBMODE_reserved:
  addr: 0xe00021a8
  mask: 0x7fc0
  name: reserved
  description: |
    Reserved
ps7_usb0_USBMODE_VBPS:
  addr: 0xe00021a8
  mask: 0x20
  name: VBPS
  description: |
    Vbus Power Select'0' -> Output is '0''1' -> Output is '1'This bit is connected to the vbus_pwr_select output and can be used for any generic control but is named to be used by logic that selects between an on-chip Vbus power source (charge pump) and an off-chip source in systems when both are available.
    Only used in host mode.
ps7_usb0_USBMODE_SDIS:
  addr: 0xe00021a8
  mask: 0x10
  name: SDIS
  description: |
    Stream Disable Mode'0' -> Inactive'1' -> Active
    Device mode:
    Setting to a '1' disables double priming on both RX and TX for low bandwidth systems.
    Host Mode:
    Setting to a '1' ensures that overruns/under runs of the latency FIFO are eliminated for low bandwidth systems where the RX and TX buffers are sufficient to contain the entire packet.
ps7_usb0_USBMODE_SLOM:
  addr: 0xe00021a8
  mask: 0x8
  name: SLOM
  description: |
    Setup Lockout Mode
    This bit controls behavior of the setup lock mechanism.'0' -> Setup Lockouts On.'1' -> Setup Lockouts Off (DCD requires use of Setup Data Buffer Tripwire in USBCMD).
    Only used in device mode
ps7_usb0_USBMODE_ES:
  addr: 0xe00021a8
  mask: 0x4
  name: ES
  description: |
    Endian Select
    This bit can change the byte ordering of the transfer buffers to match the host microprocessor bus architecture. The bit fields in the microprocessor interface and the DMA data structures (including the setup buffer within the device QH) are unaffected by the value of this bit, because they are based upon 32-bit words.'0' Little Endian -> first byte referenced in least significant byte of 32-bit word.'1' Big Endian -> first byte referenced in most significant byte of 32-bit word.
ps7_usb0_USBMODE_CM:
  addr: 0xe00021a8
  mask: 0x3
  name: CM
  description: |
    Controller Mode
    Controller mode is defaulted to the proper mode for host only and device only implementations. For those designs that contain both host AND device capability (OTG),
    the Controller will default to an idle state and will need to be initialized to the desired operating mode after reset. For combination host/device controllers, this register can
    only be written once after reset. If it is necessary to switch modes, software must reset the controller by writing to the RST bit in the USBCMD register before reprogramming
    this register.
    Value Meaning'00b' -> Idle (Default for combination host/device).'01b' -> Reserved.'10b' -> Controller in device mode (Default for device only controller).'11b' -> Controller in host mode (Default for host only controller).
ps7_usb0_ENDPTSETUPSTAT_ENDPTSETUPSTAT:
  addr: 0xe00021ac
  mask: 0xffff
  name: ENDPTSETUPSTAT
  description: |
    ENDPTSETUPSTATSetup Endpoint Status
    For every setup transaction that is received, the corresponding bit in this register is set to '1'. Software must clear to acknowledge the setup transfer by writing a '1' to the respective bit after it has read the setup data from Queue Head. The response to a setup packet as in the order of operations and total response time is crucial to limit bus timeouts if the setup lockout mechanism is engaged.
    Only used in device mode.
ps7_usb0_ENDPTPRIME_PETB:
  addr: 0xe00021b0
  mask: 0xffff0000
  name: PETB
  description: |
    Prime Endpoint Transmit Buffer - RWS. Default = 0000h.
    For each endpoint a corresponding bit is used to request that a buffer prepared for a transmit operation in order to respond to a USB IN/INTERRUPT transaction. Software
    should write a '1' to the corresponding bit when posting a new transfer descriptor to an endpoint. Hardware will automatically use this bit to begin parsing for a new transfer
    descriptor from the queue head and prepare a transmit buffer. Hardware will clear this bit when the associated endpoint(s) is (are) successfully primed.
    Note: These bits will be momentarily set by hardware during hardware re-priming operations when a dTD is retired, and the dQH is updated.
    Bit 15 - Endpoint #15
    ...
    Bit 1 - Endpoint #1
    Bit 0 - Endpoint #0
    Only used in device mode.
ps7_usb0_ENDPTPRIME_PERB:
  addr: 0xe00021b0
  mask: 0xffff
  name: PERB
  description: |
    Prime Endpoint Receive Buffer
    For each endpoint, a corresponding bit is used to request a buffer prepare for a receive operation for when a USB host initiates a USB OUT transaction. Software should write a '1' to the corresponding bit whenever posting a new transfer descriptor to an endpoint. Hardware will automatically use this bit to begin parsing for a new transfer descriptor from the queue head and prepare a receive buffer. Hardware will clear this bit when the associated endpoint(s) is (are) successfully primed.
    Note: These bits will be momentarily set by hardware during hardware re-priming operations when a dTD is retired, and the dQH is updated.
    Bit 15 - Endpoint #15
    ...
    Bit 1 - Endpoint #1
    Bit 0 - Endpoint #0
    Only used in device mode.
ps7_usb0_ENDPTFLUSH_FETB:
  addr: 0xe00021b4
  mask: 0xffff0000
  name: FETB
  description: |
    Flush Endpoint Transmit Buffer
    Writing a '1' to a bit(s) in this register will cause the associated endpoint(s) to clear any primed buffers. If a packet is in progress for one of the associated endpoints, then that
    transfer will continue until completion. Hardware will clear this register after the endpoint flush operation is successful.
    Bit 15 - Endpoint #15
    ...
    Bit 1 - Endpoint #1
    Bit 0 - Endpoint #0
    Only used in device mode.
ps7_usb0_ENDPTFLUSH_FERB:
  addr: 0xe00021b4
  mask: 0xffff
  name: FERB
  description: |
    Flush Endpoint Receive Buffer
    Writing a '1' to a bit(s) will cause the associated endpoint(s) to clear any primed buffers. If a packet is in progress for one of the associated endpoints, then that transfer will
    continue until completion. Hardware will clear this register after the endpoint flush operation is successful.
    Bit 15 - Endpoint #15
    ...
    Bit 1 - Endpoint #1
    Bit 0 - Endpoint #0
    Only used in device mode.
ps7_usb0_ENDPTSTAT_ETBR:
  addr: 0xe00021b8
  mask: 0xffff0000
  name: ETBR
  description: |
    Endpoint Transmit Buffer Ready
    One bit for each endpoint indicates status of the respective endpoint buffer. This bit is set to a '1' by the hardware as a response to receiving a command from a corresponding bit in the ENDPTPRIME register. There will always be a delay between setting a bit in the ENDPTPRIME register and endpoint indicating ready. This delay time varies based upon the current USB traffic and the number of bits set in the
    ENDPTPRIME register. Buffer ready is cleared by USB reset, by the USB DMA system, or through the ENDPTFLUSH register.
    Note: These bits will be momentarily cleared by hardware during hardware endpoint re-priming operations when a dTD is retired, and the dQH is updated.
    Bit 15 - Endpoint #15
    ...
    Bit 1 - Endpoint #1
    Bit 0 - Endpoint #0
    Only used in device mode.
ps7_usb0_ENDPTSTAT_ERBR:
  addr: 0xe00021b8
  mask: 0xffff
  name: ERBR
  description: |
    Endpoint Receive Buffer Ready
    One bit for each endpoint indicates status of the respective endpoint buffer. This bit is set to a '1' by the hardware as a response to receiving a command from a corresponding bit in the ENDPTPRIME register. There will always be a delay between setting a bit in the ENDPTPRIME register and endpoint indicating ready. This delay time varies based upon the current USB traffic and the number of bits set in the
    ENDPTPRIME register. Buffer ready is cleared by USB reset, by the USB DMA system, or through the ENDPTFLUSH register.
    Note: These bits will be momentarily cleared by hardware during hardware endpoint re-priming operations when a dTD is retired, and the dQH is updated.
    Bit 15 - Endpoint #15
    ...
    Bit 1 - Endpoint #1
    Bit 0 - Endpoint #0
    Only used in device mode.
ps7_usb0_ENDPTCOMPLETE_ETCE:
  addr: 0xe00021bc
  mask: 0xffff0000
  name: ETCE
  description: |
    Endpoint Transmit Complete Event
    Each bit indicates a transmit event (IN/INTERRUPT) occurred and software should read the corresponding endpoint queue to determine the endpoint status. If the
    corresponding IOC bit is set in the Transfer Descriptor, then this bit will be set simultaneously with the USBINT. Writing a '1' will clear the corresponding bit in this register.
    Bit 15 - Endpoint #15
    ...
    Bit 1 - Endpoint #1
    Bit 0 - Endpoint #0
    Only used in device mode.
ps7_usb0_ENDPTCOMPLETE_ERCE:
  addr: 0xe00021bc
  mask: 0xffff
  name: ERCE
  description: |
    Endpoint Receive Complete Event
    Each bit indicates a received event (OUT) occurred and software should read the corresponding endpoint queue to determine the transfer status. If the corresponding IOC bit is set in the Transfer Descriptor, then this bit will be set simultaneously with the USBINT. Writing a '1' will clear the corresponding bit in this register.
    Bit 15 - Endpoint #15
    ...
    Bit 1 - Endpoint #1
    Bit 0 - Endpoint #0
    Only used in device mode.
ps7_usb0_ENDPTCTRL0_TXE:
  addr: 0xe00021c0
  mask: 0x800000
  name: TXE
  description: |
    TX Endpoint Enable
    Endpoint0 is always enabled and this bit always set to '1'.
ps7_usb0_ENDPTCTRL0_reserved:
  addr: 0xe00021c0
  mask: 0x700000
  name: reserved
  description: |
    Reserved
ps7_usb0_ENDPTCTRL0_TXT:
  addr: 0xe00021c0
  mask: 0xc0000
  name: TXT
  description: |
    TX Endpoint Type
    Endpoint0 is fixed as a Control End Point and this field always set to '00'.
ps7_usb0_ENDPTCTRL0_reserved_1:
  addr: 0xe00021c0
  mask: 0x20000
  name: reserved_1
  description: |
    Reserved
ps7_usb0_ENDPTCTRL0_TXS:
  addr: 0xe00021c0
  mask: 0x10000
  name: TXS
  description: |
    TX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
ps7_usb0_ENDPTCTRL0_reserved_2:
  addr: 0xe00021c0
  mask: 0xff00
  name: reserved_2
  description: |
    Reserved
ps7_usb0_ENDPTCTRL0_RXE:
  addr: 0xe00021c0
  mask: 0x80
  name: RXE
  description: |
    RX Endpoint Enable
    Endpoint0 is always enabled and this bit always set to '1'.
ps7_usb0_ENDPTCTRL0_reserved_3:
  addr: 0xe00021c0
  mask: 0x70
  name: reserved_3
  description: |
    Reserved
ps7_usb0_ENDPTCTRL0_RXT:
  addr: 0xe00021c0
  mask: 0xc
  name: RXT
  description: |
    RX Endpoint Type
    Endpoint0 is fixed as a Control End Point and this field always set to '00'.
ps7_usb0_ENDPTCTRL0_reserved_4:
  addr: 0xe00021c0
  mask: 0x2
  name: reserved_4
  description: |
    Reserved
ps7_usb0_ENDPTCTRL0_RXS:
  addr: 0xe00021c0
  mask: 0x1
  name: RXS
  description: |
    RX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
    Software can write a one to this bit to force the endpoint to return a STALL handshake to the Host. It will continue returning STALL until the bit is cleared by software or it will automatically be cleared upon receipt of a new SETUP request.
ps7_usb0_ENDPTCTRL1_TXE:
  addr: 0xe00021c4
  mask: 0x800000
  name: TXE
  description: |
    TX Endpoint Enable
    Value Meaning'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb0_ENDPTCTRL1_TXR:
  addr: 0xe00021c4
  mask: 0x400000
  name: TXR
  description: |
    TX Data Toggle Reset
    Write '1' will reset the PID sequence. Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb0_ENDPTCTRL1_TXI:
  addr: 0xe00021c4
  mask: 0x200000
  name: TXI
  description: |
    TX Data Toggle Inhibit
    Value Meaning'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb0_ENDPTCTRL1_reserved:
  addr: 0xe00021c4
  mask: 0x100000
  name: reserved
  description: |
    Reserved
ps7_usb0_ENDPTCTRL1_TXT:
  addr: 0xe00021c4
  mask: 0xc0000
  name: TXT
  description: |
    TX Endpoint Type'00' -> Control'01' -> Isochronous'10' -> Bulk'11' -> Interrupt
ps7_usb0_ENDPTCTRL1_TXD:
  addr: 0xe00021c4
  mask: 0x20000
  name: TXD
  description: |
    TX Endpoint Data
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb0_ENDPTCTRL1_TXS:
  addr: 0xe00021c4
  mask: 0x10000
  name: TXS
  description: |
    TX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
ps7_usb0_ENDPTCTRL1_reserved_1:
  addr: 0xe00021c4
  mask: 0xff00
  name: reserved_1
  description: |
    Reserved
ps7_usb0_ENDPTCTRL1_RXE:
  addr: 0xe00021c4
  mask: 0x80
  name: RXE
  description: |
    RX Endpoint Enable'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb0_ENDPTCTRL1_RXR:
  addr: 0xe00021c4
  mask: 0x40
  name: RXR
  description: |
    RX Data Toggle Reset
    Write '1' will reset the PID sequence.
    Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb0_ENDPTCTRL1_RXI:
  addr: 0xe00021c4
  mask: 0x20
  name: RXI
  description: |
    RX Data Toggle Inhibit'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb0_ENDPTCTRL1_reserved_2:
  addr: 0xe00021c4
  mask: 0x10
  name: reserved_2
  description: |
    Reserved
ps7_usb0_ENDPTCTRL1_RXT:
  addr: 0xe00021c4
  mask: 0xc
  name: RXT
  description: |
    RX Endpoint Type
    Endpoint0 is fixed as a Control End Point and this field always set to '00'.
ps7_usb0_ENDPTCTRL1_RXD:
  addr: 0xe00021c4
  mask: 0x2
  name: RXD
  description: |
    RX Endpoint Data Sink
    Value Meaning
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb0_ENDPTCTRL1_RXS:
  addr: 0xe00021c4
  mask: 0x1
  name: RXS
  description: |
    RX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
    Software can write a one to this bit to force the endpoint to return a STALL handshake to the Host. It will continue returning STALL until the bit is cleared by software or it will automatically be cleared upon receipt of a new SETUP request.
ps7_usb0_ENDPTCTRL2_TXE:
  addr: 0xe00021c8
  mask: 0x800000
  name: TXE
  description: |
    TX Endpoint Enable
    Value Meaning'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb0_ENDPTCTRL2_TXR:
  addr: 0xe00021c8
  mask: 0x400000
  name: TXR
  description: |
    TX Data Toggle Reset
    Write '1' will reset the PID sequence. Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb0_ENDPTCTRL2_TXI:
  addr: 0xe00021c8
  mask: 0x200000
  name: TXI
  description: |
    TX Data Toggle Inhibit
    Value Meaning'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb0_ENDPTCTRL2_reserved:
  addr: 0xe00021c8
  mask: 0x100000
  name: reserved
  description: |
    Reserved
ps7_usb0_ENDPTCTRL2_TXT:
  addr: 0xe00021c8
  mask: 0xc0000
  name: TXT
  description: |
    TX Endpoint Type'00' -> Control'01' -> Isochronous'10' -> Bulk'11' -> Interrupt
ps7_usb0_ENDPTCTRL2_TXD:
  addr: 0xe00021c8
  mask: 0x20000
  name: TXD
  description: |
    TX Endpoint Data
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb0_ENDPTCTRL2_TXS:
  addr: 0xe00021c8
  mask: 0x10000
  name: TXS
  description: |
    TX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
ps7_usb0_ENDPTCTRL2_reserved_1:
  addr: 0xe00021c8
  mask: 0xff00
  name: reserved_1
  description: |
    Reserved
ps7_usb0_ENDPTCTRL2_RXE:
  addr: 0xe00021c8
  mask: 0x80
  name: RXE
  description: |
    RX Endpoint Enable'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb0_ENDPTCTRL2_RXR:
  addr: 0xe00021c8
  mask: 0x40
  name: RXR
  description: |
    RX Data Toggle Reset
    Write '1' will reset the PID sequence.
    Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb0_ENDPTCTRL2_RXI:
  addr: 0xe00021c8
  mask: 0x20
  name: RXI
  description: |
    RX Data Toggle Inhibit'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb0_ENDPTCTRL2_reserved_2:
  addr: 0xe00021c8
  mask: 0x10
  name: reserved_2
  description: |
    Reserved
ps7_usb0_ENDPTCTRL2_RXT:
  addr: 0xe00021c8
  mask: 0xc
  name: RXT
  description: |
    RX Endpoint Type
    Endpoint0 is fixed as a Control End Point and this field always set to '00'.
ps7_usb0_ENDPTCTRL2_RXD:
  addr: 0xe00021c8
  mask: 0x2
  name: RXD
  description: |
    RX Endpoint Data Sink
    Value Meaning
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb0_ENDPTCTRL2_RXS:
  addr: 0xe00021c8
  mask: 0x1
  name: RXS
  description: |
    RX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
    Software can write a one to this bit to force the endpoint to return a STALL handshake to the Host. It will continue returning STALL until the bit is cleared by software or it will automatically be cleared upon receipt of a new SETUP request.
ps7_usb0_ENDPTCTRL3_TXE:
  addr: 0xe00021cc
  mask: 0x800000
  name: TXE
  description: |
    TX Endpoint Enable
    Value Meaning'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb0_ENDPTCTRL3_TXR:
  addr: 0xe00021cc
  mask: 0x400000
  name: TXR
  description: |
    TX Data Toggle Reset
    Write '1' will reset the PID sequence. Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb0_ENDPTCTRL3_TXI:
  addr: 0xe00021cc
  mask: 0x200000
  name: TXI
  description: |
    TX Data Toggle Inhibit
    Value Meaning'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb0_ENDPTCTRL3_reserved:
  addr: 0xe00021cc
  mask: 0x100000
  name: reserved
  description: |
    Reserved
ps7_usb0_ENDPTCTRL3_TXT:
  addr: 0xe00021cc
  mask: 0xc0000
  name: TXT
  description: |
    TX Endpoint Type'00' -> Control'01' -> Isochronous'10' -> Bulk'11' -> Interrupt
ps7_usb0_ENDPTCTRL3_TXD:
  addr: 0xe00021cc
  mask: 0x20000
  name: TXD
  description: |
    TX Endpoint Data
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb0_ENDPTCTRL3_TXS:
  addr: 0xe00021cc
  mask: 0x10000
  name: TXS
  description: |
    TX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
ps7_usb0_ENDPTCTRL3_reserved_1:
  addr: 0xe00021cc
  mask: 0xff00
  name: reserved_1
  description: |
    Reserved
ps7_usb0_ENDPTCTRL3_RXE:
  addr: 0xe00021cc
  mask: 0x80
  name: RXE
  description: |
    RX Endpoint Enable'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb0_ENDPTCTRL3_RXR:
  addr: 0xe00021cc
  mask: 0x40
  name: RXR
  description: |
    RX Data Toggle Reset
    Write '1' will reset the PID sequence.
    Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb0_ENDPTCTRL3_RXI:
  addr: 0xe00021cc
  mask: 0x20
  name: RXI
  description: |
    RX Data Toggle Inhibit'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb0_ENDPTCTRL3_reserved_2:
  addr: 0xe00021cc
  mask: 0x10
  name: reserved_2
  description: |
    Reserved
ps7_usb0_ENDPTCTRL3_RXT:
  addr: 0xe00021cc
  mask: 0xc
  name: RXT
  description: |
    RX Endpoint Type
    Endpoint0 is fixed as a Control End Point and this field always set to '00'.
ps7_usb0_ENDPTCTRL3_RXD:
  addr: 0xe00021cc
  mask: 0x2
  name: RXD
  description: |
    RX Endpoint Data Sink
    Value Meaning
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb0_ENDPTCTRL3_RXS:
  addr: 0xe00021cc
  mask: 0x1
  name: RXS
  description: |
    RX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
    Software can write a one to this bit to force the endpoint to return a STALL handshake to the Host. It will continue returning STALL until the bit is cleared by software or it will automatically be cleared upon receipt of a new SETUP request.
ps7_usb0_ENDPTCTRL4_TXE:
  addr: 0xe00021d0
  mask: 0x800000
  name: TXE
  description: |
    TX Endpoint Enable
    Value Meaning'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb0_ENDPTCTRL4_TXR:
  addr: 0xe00021d0
  mask: 0x400000
  name: TXR
  description: |
    TX Data Toggle Reset
    Write '1' will reset the PID sequence. Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb0_ENDPTCTRL4_TXI:
  addr: 0xe00021d0
  mask: 0x200000
  name: TXI
  description: |
    TX Data Toggle Inhibit
    Value Meaning'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb0_ENDPTCTRL4_reserved:
  addr: 0xe00021d0
  mask: 0x100000
  name: reserved
  description: |
    Reserved
ps7_usb0_ENDPTCTRL4_TXT:
  addr: 0xe00021d0
  mask: 0xc0000
  name: TXT
  description: |
    TX Endpoint Type'00' -> Control'01' -> Isochronous'10' -> Bulk'11' -> Interrupt
ps7_usb0_ENDPTCTRL4_TXD:
  addr: 0xe00021d0
  mask: 0x20000
  name: TXD
  description: |
    TX Endpoint Data
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb0_ENDPTCTRL4_TXS:
  addr: 0xe00021d0
  mask: 0x10000
  name: TXS
  description: |
    TX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
ps7_usb0_ENDPTCTRL4_reserved_1:
  addr: 0xe00021d0
  mask: 0xff00
  name: reserved_1
  description: |
    Reserved
ps7_usb0_ENDPTCTRL4_RXE:
  addr: 0xe00021d0
  mask: 0x80
  name: RXE
  description: |
    RX Endpoint Enable'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb0_ENDPTCTRL4_RXR:
  addr: 0xe00021d0
  mask: 0x40
  name: RXR
  description: |
    RX Data Toggle Reset
    Write '1' will reset the PID sequence.
    Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb0_ENDPTCTRL4_RXI:
  addr: 0xe00021d0
  mask: 0x20
  name: RXI
  description: |
    RX Data Toggle Inhibit'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb0_ENDPTCTRL4_reserved_2:
  addr: 0xe00021d0
  mask: 0x10
  name: reserved_2
  description: |
    Reserved
ps7_usb0_ENDPTCTRL4_RXT:
  addr: 0xe00021d0
  mask: 0xc
  name: RXT
  description: |
    RX Endpoint Type
    Endpoint0 is fixed as a Control End Point and this field always set to '00'.
ps7_usb0_ENDPTCTRL4_RXD:
  addr: 0xe00021d0
  mask: 0x2
  name: RXD
  description: |
    RX Endpoint Data Sink
    Value Meaning
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb0_ENDPTCTRL4_RXS:
  addr: 0xe00021d0
  mask: 0x1
  name: RXS
  description: |
    RX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
    Software can write a one to this bit to force the endpoint to return a STALL handshake to the Host. It will continue returning STALL until the bit is cleared by software or it will automatically be cleared upon receipt of a new SETUP request.
ps7_usb0_ENDPTCTRL5_TXE:
  addr: 0xe00021d4
  mask: 0x800000
  name: TXE
  description: |
    TX Endpoint Enable
    Value Meaning'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb0_ENDPTCTRL5_TXR:
  addr: 0xe00021d4
  mask: 0x400000
  name: TXR
  description: |
    TX Data Toggle Reset
    Write '1' will reset the PID sequence. Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb0_ENDPTCTRL5_TXI:
  addr: 0xe00021d4
  mask: 0x200000
  name: TXI
  description: |
    TX Data Toggle Inhibit
    Value Meaning'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb0_ENDPTCTRL5_reserved:
  addr: 0xe00021d4
  mask: 0x100000
  name: reserved
  description: |
    Reserved
ps7_usb0_ENDPTCTRL5_TXT:
  addr: 0xe00021d4
  mask: 0xc0000
  name: TXT
  description: |
    TX Endpoint Type'00' -> Control'01' -> Isochronous'10' -> Bulk'11' -> Interrupt
ps7_usb0_ENDPTCTRL5_TXD:
  addr: 0xe00021d4
  mask: 0x20000
  name: TXD
  description: |
    TX Endpoint Data
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb0_ENDPTCTRL5_TXS:
  addr: 0xe00021d4
  mask: 0x10000
  name: TXS
  description: |
    TX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
ps7_usb0_ENDPTCTRL5_reserved_1:
  addr: 0xe00021d4
  mask: 0xff00
  name: reserved_1
  description: |
    Reserved
ps7_usb0_ENDPTCTRL5_RXE:
  addr: 0xe00021d4
  mask: 0x80
  name: RXE
  description: |
    RX Endpoint Enable'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb0_ENDPTCTRL5_RXR:
  addr: 0xe00021d4
  mask: 0x40
  name: RXR
  description: |
    RX Data Toggle Reset
    Write '1' will reset the PID sequence.
    Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb0_ENDPTCTRL5_RXI:
  addr: 0xe00021d4
  mask: 0x20
  name: RXI
  description: |
    RX Data Toggle Inhibit'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb0_ENDPTCTRL5_reserved_2:
  addr: 0xe00021d4
  mask: 0x10
  name: reserved_2
  description: |
    Reserved
ps7_usb0_ENDPTCTRL5_RXT:
  addr: 0xe00021d4
  mask: 0xc
  name: RXT
  description: |
    RX Endpoint Type
    Endpoint0 is fixed as a Control End Point and this field always set to '00'.
ps7_usb0_ENDPTCTRL5_RXD:
  addr: 0xe00021d4
  mask: 0x2
  name: RXD
  description: |
    RX Endpoint Data Sink
    Value Meaning
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb0_ENDPTCTRL5_RXS:
  addr: 0xe00021d4
  mask: 0x1
  name: RXS
  description: |
    RX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
    Software can write a one to this bit to force the endpoint to return a STALL handshake to the Host. It will continue returning STALL until the bit is cleared by software or it will automatically be cleared upon receipt of a new SETUP request.
ps7_usb0_ENDPTCTRL6_TXE:
  addr: 0xe00021d8
  mask: 0x800000
  name: TXE
  description: |
    TX Endpoint Enable
    Value Meaning'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb0_ENDPTCTRL6_TXR:
  addr: 0xe00021d8
  mask: 0x400000
  name: TXR
  description: |
    TX Data Toggle Reset
    Write '1' will reset the PID sequence. Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb0_ENDPTCTRL6_TXI:
  addr: 0xe00021d8
  mask: 0x200000
  name: TXI
  description: |
    TX Data Toggle Inhibit
    Value Meaning'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb0_ENDPTCTRL6_reserved:
  addr: 0xe00021d8
  mask: 0x100000
  name: reserved
  description: |
    Reserved
ps7_usb0_ENDPTCTRL6_TXT:
  addr: 0xe00021d8
  mask: 0xc0000
  name: TXT
  description: |
    TX Endpoint Type'00' -> Control'01' -> Isochronous'10' -> Bulk'11' -> Interrupt
ps7_usb0_ENDPTCTRL6_TXD:
  addr: 0xe00021d8
  mask: 0x20000
  name: TXD
  description: |
    TX Endpoint Data
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb0_ENDPTCTRL6_TXS:
  addr: 0xe00021d8
  mask: 0x10000
  name: TXS
  description: |
    TX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
ps7_usb0_ENDPTCTRL6_reserved_1:
  addr: 0xe00021d8
  mask: 0xff00
  name: reserved_1
  description: |
    Reserved
ps7_usb0_ENDPTCTRL6_RXE:
  addr: 0xe00021d8
  mask: 0x80
  name: RXE
  description: |
    RX Endpoint Enable'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb0_ENDPTCTRL6_RXR:
  addr: 0xe00021d8
  mask: 0x40
  name: RXR
  description: |
    RX Data Toggle Reset
    Write '1' will reset the PID sequence.
    Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb0_ENDPTCTRL6_RXI:
  addr: 0xe00021d8
  mask: 0x20
  name: RXI
  description: |
    RX Data Toggle Inhibit'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb0_ENDPTCTRL6_reserved_2:
  addr: 0xe00021d8
  mask: 0x10
  name: reserved_2
  description: |
    Reserved
ps7_usb0_ENDPTCTRL6_RXT:
  addr: 0xe00021d8
  mask: 0xc
  name: RXT
  description: |
    RX Endpoint Type
    Endpoint0 is fixed as a Control End Point and this field always set to '00'.
ps7_usb0_ENDPTCTRL6_RXD:
  addr: 0xe00021d8
  mask: 0x2
  name: RXD
  description: |
    RX Endpoint Data Sink
    Value Meaning
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb0_ENDPTCTRL6_RXS:
  addr: 0xe00021d8
  mask: 0x1
  name: RXS
  description: |
    RX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
    Software can write a one to this bit to force the endpoint to return a STALL handshake to the Host. It will continue returning STALL until the bit is cleared by software or it will automatically be cleared upon receipt of a new SETUP request.
ps7_usb0_ENDPTCTRL7_TXE:
  addr: 0xe00021dc
  mask: 0x800000
  name: TXE
  description: |
    TX Endpoint Enable
    Value Meaning'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb0_ENDPTCTRL7_TXR:
  addr: 0xe00021dc
  mask: 0x400000
  name: TXR
  description: |
    TX Data Toggle Reset
    Write '1' will reset the PID sequence. Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb0_ENDPTCTRL7_TXI:
  addr: 0xe00021dc
  mask: 0x200000
  name: TXI
  description: |
    TX Data Toggle Inhibit
    Value Meaning'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb0_ENDPTCTRL7_reserved:
  addr: 0xe00021dc
  mask: 0x100000
  name: reserved
  description: |
    Reserved
ps7_usb0_ENDPTCTRL7_TXT:
  addr: 0xe00021dc
  mask: 0xc0000
  name: TXT
  description: |
    TX Endpoint Type'00' -> Control'01' -> Isochronous'10' -> Bulk'11' -> Interrupt
ps7_usb0_ENDPTCTRL7_TXD:
  addr: 0xe00021dc
  mask: 0x20000
  name: TXD
  description: |
    TX Endpoint Data
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb0_ENDPTCTRL7_TXS:
  addr: 0xe00021dc
  mask: 0x10000
  name: TXS
  description: |
    TX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
ps7_usb0_ENDPTCTRL7_reserved_1:
  addr: 0xe00021dc
  mask: 0xff00
  name: reserved_1
  description: |
    Reserved
ps7_usb0_ENDPTCTRL7_RXE:
  addr: 0xe00021dc
  mask: 0x80
  name: RXE
  description: |
    RX Endpoint Enable'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb0_ENDPTCTRL7_RXR:
  addr: 0xe00021dc
  mask: 0x40
  name: RXR
  description: |
    RX Data Toggle Reset
    Write '1' will reset the PID sequence.
    Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb0_ENDPTCTRL7_RXI:
  addr: 0xe00021dc
  mask: 0x20
  name: RXI
  description: |
    RX Data Toggle Inhibit'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb0_ENDPTCTRL7_reserved_2:
  addr: 0xe00021dc
  mask: 0x10
  name: reserved_2
  description: |
    Reserved
ps7_usb0_ENDPTCTRL7_RXT:
  addr: 0xe00021dc
  mask: 0xc
  name: RXT
  description: |
    RX Endpoint Type
    Endpoint0 is fixed as a Control End Point and this field always set to '00'.
ps7_usb0_ENDPTCTRL7_RXD:
  addr: 0xe00021dc
  mask: 0x2
  name: RXD
  description: |
    RX Endpoint Data Sink
    Value Meaning
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb0_ENDPTCTRL7_RXS:
  addr: 0xe00021dc
  mask: 0x1
  name: RXS
  description: |
    RX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
    Software can write a one to this bit to force the endpoint to return a STALL handshake to the Host. It will continue returning STALL until the bit is cleared by software or it will automatically be cleared upon receipt of a new SETUP request.
ps7_usb0_ENDPTCTRL8_TXE:
  addr: 0xe00021e0
  mask: 0x800000
  name: TXE
  description: |
    TX Endpoint Enable
    Value Meaning'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb0_ENDPTCTRL8_TXR:
  addr: 0xe00021e0
  mask: 0x400000
  name: TXR
  description: |
    TX Data Toggle Reset
    Write '1' will reset the PID sequence. Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb0_ENDPTCTRL8_TXI:
  addr: 0xe00021e0
  mask: 0x200000
  name: TXI
  description: |
    TX Data Toggle Inhibit
    Value Meaning'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb0_ENDPTCTRL8_reserved:
  addr: 0xe00021e0
  mask: 0x100000
  name: reserved
  description: |
    Reserved
ps7_usb0_ENDPTCTRL8_TXT:
  addr: 0xe00021e0
  mask: 0xc0000
  name: TXT
  description: |
    TX Endpoint Type'00' -> Control'01' -> Isochronous'10' -> Bulk'11' -> Interrupt
ps7_usb0_ENDPTCTRL8_TXD:
  addr: 0xe00021e0
  mask: 0x20000
  name: TXD
  description: |
    TX Endpoint Data
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb0_ENDPTCTRL8_TXS:
  addr: 0xe00021e0
  mask: 0x10000
  name: TXS
  description: |
    TX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
ps7_usb0_ENDPTCTRL8_reserved_1:
  addr: 0xe00021e0
  mask: 0xff00
  name: reserved_1
  description: |
    Reserved
ps7_usb0_ENDPTCTRL8_RXE:
  addr: 0xe00021e0
  mask: 0x80
  name: RXE
  description: |
    RX Endpoint Enable'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb0_ENDPTCTRL8_RXR:
  addr: 0xe00021e0
  mask: 0x40
  name: RXR
  description: |
    RX Data Toggle Reset
    Write '1' will reset the PID sequence.
    Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb0_ENDPTCTRL8_RXI:
  addr: 0xe00021e0
  mask: 0x20
  name: RXI
  description: |
    RX Data Toggle Inhibit'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb0_ENDPTCTRL8_reserved_2:
  addr: 0xe00021e0
  mask: 0x10
  name: reserved_2
  description: |
    Reserved
ps7_usb0_ENDPTCTRL8_RXT:
  addr: 0xe00021e0
  mask: 0xc
  name: RXT
  description: |
    RX Endpoint Type
    Endpoint0 is fixed as a Control End Point and this field always set to '00'.
ps7_usb0_ENDPTCTRL8_RXD:
  addr: 0xe00021e0
  mask: 0x2
  name: RXD
  description: |
    RX Endpoint Data Sink
    Value Meaning
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb0_ENDPTCTRL8_RXS:
  addr: 0xe00021e0
  mask: 0x1
  name: RXS
  description: |
    RX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
    Software can write a one to this bit to force the endpoint to return a STALL handshake to the Host. It will continue returning STALL until the bit is cleared by software or it will automatically be cleared upon receipt of a new SETUP request.
ps7_usb0_ENDPTCTRL9_TXE:
  addr: 0xe00021e4
  mask: 0x800000
  name: TXE
  description: |
    TX Endpoint Enable
    Value Meaning'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb0_ENDPTCTRL9_TXR:
  addr: 0xe00021e4
  mask: 0x400000
  name: TXR
  description: |
    TX Data Toggle Reset
    Write '1' will reset the PID sequence. Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb0_ENDPTCTRL9_TXI:
  addr: 0xe00021e4
  mask: 0x200000
  name: TXI
  description: |
    TX Data Toggle Inhibit
    Value Meaning'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb0_ENDPTCTRL9_reserved:
  addr: 0xe00021e4
  mask: 0x100000
  name: reserved
  description: |
    Reserved
ps7_usb0_ENDPTCTRL9_TXT:
  addr: 0xe00021e4
  mask: 0xc0000
  name: TXT
  description: |
    TX Endpoint Type'00' -> Control'01' -> Isochronous'10' -> Bulk'11' -> Interrupt
ps7_usb0_ENDPTCTRL9_TXD:
  addr: 0xe00021e4
  mask: 0x20000
  name: TXD
  description: |
    TX Endpoint Data
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb0_ENDPTCTRL9_TXS:
  addr: 0xe00021e4
  mask: 0x10000
  name: TXS
  description: |
    TX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
ps7_usb0_ENDPTCTRL9_reserved_1:
  addr: 0xe00021e4
  mask: 0xff00
  name: reserved_1
  description: |
    Reserved
ps7_usb0_ENDPTCTRL9_RXE:
  addr: 0xe00021e4
  mask: 0x80
  name: RXE
  description: |
    RX Endpoint Enable'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb0_ENDPTCTRL9_RXR:
  addr: 0xe00021e4
  mask: 0x40
  name: RXR
  description: |
    RX Data Toggle Reset
    Write '1' will reset the PID sequence.
    Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb0_ENDPTCTRL9_RXI:
  addr: 0xe00021e4
  mask: 0x20
  name: RXI
  description: |
    RX Data Toggle Inhibit'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb0_ENDPTCTRL9_reserved_2:
  addr: 0xe00021e4
  mask: 0x10
  name: reserved_2
  description: |
    Reserved
ps7_usb0_ENDPTCTRL9_RXT:
  addr: 0xe00021e4
  mask: 0xc
  name: RXT
  description: |
    RX Endpoint Type
    Endpoint0 is fixed as a Control End Point and this field always set to '00'.
ps7_usb0_ENDPTCTRL9_RXD:
  addr: 0xe00021e4
  mask: 0x2
  name: RXD
  description: |
    RX Endpoint Data Sink
    Value Meaning
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb0_ENDPTCTRL9_RXS:
  addr: 0xe00021e4
  mask: 0x1
  name: RXS
  description: |
    RX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
    Software can write a one to this bit to force the endpoint to return a STALL handshake to the Host. It will continue returning STALL until the bit is cleared by software or it will automatically be cleared upon receipt of a new SETUP request.
ps7_usb0_ENDPTCTRL10_TXE:
  addr: 0xe00021e8
  mask: 0x800000
  name: TXE
  description: |
    TX Endpoint Enable
    Value Meaning'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb0_ENDPTCTRL10_TXR:
  addr: 0xe00021e8
  mask: 0x400000
  name: TXR
  description: |
    TX Data Toggle Reset
    Write '1' will reset the PID sequence. Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb0_ENDPTCTRL10_TXI:
  addr: 0xe00021e8
  mask: 0x200000
  name: TXI
  description: |
    TX Data Toggle Inhibit
    Value Meaning'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb0_ENDPTCTRL10_reserved:
  addr: 0xe00021e8
  mask: 0x100000
  name: reserved
  description: |
    Reserved
ps7_usb0_ENDPTCTRL10_TXT:
  addr: 0xe00021e8
  mask: 0xc0000
  name: TXT
  description: |
    TX Endpoint Type'00' -> Control'01' -> Isochronous'10' -> Bulk'11' -> Interrupt
ps7_usb0_ENDPTCTRL10_TXD:
  addr: 0xe00021e8
  mask: 0x20000
  name: TXD
  description: |
    TX Endpoint Data
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb0_ENDPTCTRL10_TXS:
  addr: 0xe00021e8
  mask: 0x10000
  name: TXS
  description: |
    TX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
ps7_usb0_ENDPTCTRL10_reserved_1:
  addr: 0xe00021e8
  mask: 0xff00
  name: reserved_1
  description: |
    Reserved
ps7_usb0_ENDPTCTRL10_RXE:
  addr: 0xe00021e8
  mask: 0x80
  name: RXE
  description: |
    RX Endpoint Enable'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb0_ENDPTCTRL10_RXR:
  addr: 0xe00021e8
  mask: 0x40
  name: RXR
  description: |
    RX Data Toggle Reset
    Write '1' will reset the PID sequence.
    Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb0_ENDPTCTRL10_RXI:
  addr: 0xe00021e8
  mask: 0x20
  name: RXI
  description: |
    RX Data Toggle Inhibit'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb0_ENDPTCTRL10_reserved_2:
  addr: 0xe00021e8
  mask: 0x10
  name: reserved_2
  description: |
    Reserved
ps7_usb0_ENDPTCTRL10_RXT:
  addr: 0xe00021e8
  mask: 0xc
  name: RXT
  description: |
    RX Endpoint Type
    Endpoint0 is fixed as a Control End Point and this field always set to '00'.
ps7_usb0_ENDPTCTRL10_RXD:
  addr: 0xe00021e8
  mask: 0x2
  name: RXD
  description: |
    RX Endpoint Data Sink
    Value Meaning
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb0_ENDPTCTRL10_RXS:
  addr: 0xe00021e8
  mask: 0x1
  name: RXS
  description: |
    RX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
    Software can write a one to this bit to force the endpoint to return a STALL handshake to the Host. It will continue returning STALL until the bit is cleared by software or it will automatically be cleared upon receipt of a new SETUP request.
ps7_usb0_ENDPTCTRL11_TXE:
  addr: 0xe00021ec
  mask: 0x800000
  name: TXE
  description: |
    TX Endpoint Enable
    Value Meaning'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb0_ENDPTCTRL11_TXR:
  addr: 0xe00021ec
  mask: 0x400000
  name: TXR
  description: |
    TX Data Toggle Reset
    Write '1' will reset the PID sequence. Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb0_ENDPTCTRL11_TXI:
  addr: 0xe00021ec
  mask: 0x200000
  name: TXI
  description: |
    TX Data Toggle Inhibit
    Value Meaning'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb0_ENDPTCTRL11_reserved:
  addr: 0xe00021ec
  mask: 0x100000
  name: reserved
  description: |
    Reserved
ps7_usb0_ENDPTCTRL11_TXT:
  addr: 0xe00021ec
  mask: 0xc0000
  name: TXT
  description: |
    TX Endpoint Type'00' -> Control'01' -> Isochronous'10' -> Bulk'11' -> Interrupt
ps7_usb0_ENDPTCTRL11_TXD:
  addr: 0xe00021ec
  mask: 0x20000
  name: TXD
  description: |
    TX Endpoint Data
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb0_ENDPTCTRL11_TXS:
  addr: 0xe00021ec
  mask: 0x10000
  name: TXS
  description: |
    TX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
ps7_usb0_ENDPTCTRL11_reserved_1:
  addr: 0xe00021ec
  mask: 0xff00
  name: reserved_1
  description: |
    Reserved
ps7_usb0_ENDPTCTRL11_RXE:
  addr: 0xe00021ec
  mask: 0x80
  name: RXE
  description: |
    RX Endpoint Enable'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb0_ENDPTCTRL11_RXR:
  addr: 0xe00021ec
  mask: 0x40
  name: RXR
  description: |
    RX Data Toggle Reset
    Write '1' will reset the PID sequence.
    Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb0_ENDPTCTRL11_RXI:
  addr: 0xe00021ec
  mask: 0x20
  name: RXI
  description: |
    RX Data Toggle Inhibit'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb0_ENDPTCTRL11_reserved_2:
  addr: 0xe00021ec
  mask: 0x10
  name: reserved_2
  description: |
    Reserved
ps7_usb0_ENDPTCTRL11_RXT:
  addr: 0xe00021ec
  mask: 0xc
  name: RXT
  description: |
    RX Endpoint Type
    Endpoint0 is fixed as a Control End Point and this field always set to '00'.
ps7_usb0_ENDPTCTRL11_RXD:
  addr: 0xe00021ec
  mask: 0x2
  name: RXD
  description: |
    RX Endpoint Data Sink
    Value Meaning
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb0_ENDPTCTRL11_RXS:
  addr: 0xe00021ec
  mask: 0x1
  name: RXS
  description: |
    RX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
    Software can write a one to this bit to force the endpoint to return a STALL handshake to the Host. It will continue returning STALL until the bit is cleared by software or it will automatically be cleared upon receipt of a new SETUP request.
ps7_usb0_ENDPTCTRL12_TXE:
  addr: 0xe00021f0
  mask: 0x800000
  name: TXE
  description: |
    TX Endpoint Enable
    Value Meaning'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb0_ENDPTCTRL12_TXR:
  addr: 0xe00021f0
  mask: 0x400000
  name: TXR
  description: |
    TX Data Toggle Reset
    Write '1' will reset the PID sequence. Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb0_ENDPTCTRL12_TXI:
  addr: 0xe00021f0
  mask: 0x200000
  name: TXI
  description: |
    TX Data Toggle Inhibit
    Value Meaning'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb0_ENDPTCTRL12_reserved:
  addr: 0xe00021f0
  mask: 0x100000
  name: reserved
  description: |
    Reserved
ps7_usb0_ENDPTCTRL12_TXT:
  addr: 0xe00021f0
  mask: 0xc0000
  name: TXT
  description: |
    TX Endpoint Type'00' -> Control'01' -> Isochronous'10' -> Bulk'11' -> Interrupt
ps7_usb0_ENDPTCTRL12_TXD:
  addr: 0xe00021f0
  mask: 0x20000
  name: TXD
  description: |
    TX Endpoint Data
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb0_ENDPTCTRL12_TXS:
  addr: 0xe00021f0
  mask: 0x10000
  name: TXS
  description: |
    TX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
ps7_usb0_ENDPTCTRL12_reserved_1:
  addr: 0xe00021f0
  mask: 0xff00
  name: reserved_1
  description: |
    Reserved
ps7_usb0_ENDPTCTRL12_RXE:
  addr: 0xe00021f0
  mask: 0x80
  name: RXE
  description: |
    RX Endpoint Enable'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb0_ENDPTCTRL12_RXR:
  addr: 0xe00021f0
  mask: 0x40
  name: RXR
  description: |
    RX Data Toggle Reset
    Write '1' will reset the PID sequence.
    Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb0_ENDPTCTRL12_RXI:
  addr: 0xe00021f0
  mask: 0x20
  name: RXI
  description: |
    RX Data Toggle Inhibit'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb0_ENDPTCTRL12_reserved_2:
  addr: 0xe00021f0
  mask: 0x10
  name: reserved_2
  description: |
    Reserved
ps7_usb0_ENDPTCTRL12_RXT:
  addr: 0xe00021f0
  mask: 0xc
  name: RXT
  description: |
    RX Endpoint Type
    Endpoint0 is fixed as a Control End Point and this field always set to '00'.
ps7_usb0_ENDPTCTRL12_RXD:
  addr: 0xe00021f0
  mask: 0x2
  name: RXD
  description: |
    RX Endpoint Data Sink
    Value Meaning
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb0_ENDPTCTRL12_RXS:
  addr: 0xe00021f0
  mask: 0x1
  name: RXS
  description: |
    RX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
    Software can write a one to this bit to force the endpoint to return a STALL handshake to the Host. It will continue returning STALL until the bit is cleared by software or it will automatically be cleared upon receipt of a new SETUP request.
ps7_usb1_ID_CIVERSION:
  addr: 0xe0003000
  mask: 0xe0000000
  name: CIVERSION
  description: |
    Identifies the CI version
ps7_usb1_ID_VERSION:
  addr: 0xe0003000
  mask: 0x1e000000
  name: VERSION
  description: |
    Identifies the version of the core
ps7_usb1_ID_REVISION:
  addr: 0xe0003000
  mask: 0x1e00000
  name: REVISION
  description: |
    Revision number of the core
ps7_usb1_ID_TAG:
  addr: 0xe0003000
  mask: 0x1f0000
  name: TAG
  description: |
    Identifies the tag of the core ; Current 2.20a version
ps7_usb1_ID_reserved:
  addr: 0xe0003000
  mask: 0xc000
  name: reserved
  description: |
    RESERVED. Writes are ignored
ps7_usb1_ID_NID:
  addr: 0xe0003000
  mask: 0x3f00
  name: NID
  description: |
    NID Complement of ID; Ones complement version of ID
ps7_usb1_ID_reserved_1:
  addr: 0xe0003000
  mask: 0xc0
  name: reserved_1
  description: |
    RESERVED. Writes are ignored, read data is always zero.
ps7_usb1_ID_ID:
  addr: 0xe0003000
  mask: 0x3f
  name: ID
  description: |
    ID Configuration number ; This number indicates the type of the USB-HS 2.0 core.
ps7_usb1_HWGENERAL_SM:
  addr: 0xe0003004
  mask: 0xc00
  name: SM
  description: |
    VUSB_HS_PHY_SERIAL - This constant selects that the serial engine is used or not.
    0 - No Serial Engine- Always use parallel signaling
ps7_usb1_HWGENERAL_PHYM:
  addr: 0xe0003004
  mask: 0x3c0
  name: PHYM
  description: |
    VUSB_HS_PHY_TYPE
    - PHY interface type.
    2 = ULPI
ps7_usb1_HWGENERAL_PHYW:
  addr: 0xe0003004
  mask: 0x30
  name: PHYW
  description: |
    VUSB_HS_PHY16_8 - This constant selects which phy is being used.
    0 = 8 bit wide data bus [60MHz clock from the transceiver]
ps7_usb1_HWGENERAL_BWT:
  addr: 0xe0003004
  mask: 0x8
  name: BWT
  description: |
    RESERVED.
ps7_usb1_HWGENERAL_CLKC:
  addr: 0xe0003004
  mask: 0x6
  name: CLKC
  description: |
    VUSB_HS_CLOCK_CONFIGURATION - constant determines the clocking used in the core.
    1 = xcvr_clk_0 < pe_clk = clk
ps7_usb1_HWGENERAL_RT:
  addr: 0xe0003004
  mask: 0x1
  name: RT
  description: |
    VUSB_HS_RESET_TYPE - Reset Type.
    1 = Use Asynchronous Resets
ps7_usb1_HWHOST_TTPER:
  addr: 0xe0003008
  mask: 0xff000000
  name: TTPER
  description: |
    VUSB_HS_TT_PERIODIC_CONTEXTS
ps7_usb1_HWHOST_TTASY:
  addr: 0xe0003008
  mask: 0xff0000
  name: TTASY
  description: |
    VUSB_HS_TT_ASYNC_CONTEXTS
ps7_usb1_HWHOST_a:
  addr: 0xe0003008
  mask: 0xfff0
  name: a
  description: |
    RESERVED
ps7_usb1_HWHOST_NPORT:
  addr: 0xe0003008
  mask: 0xe
  name: NPORT
  description: |
    VUSB_HS_NUM_PORT-1.
    1- The VUSB_HS_NUM_PORT constant specifies the number of downstream ports by host port
ps7_usb1_HWHOST_HC:
  addr: 0xe0003008
  mask: 0x1
  name: HC
  description: |
    VUSB_HS_HOST
ps7_usb1_HWDEVICE_DEVEP:
  addr: 0xe000300c
  mask: 0x3e
  name: DEVEP
  description: |
    VUSB_HS_DEV_EP - Number of endpoints.
    12 = VUSB_HS_DEV_EP constant represents the 12 number of endpoints
ps7_usb1_HWDEVICE_DC:
  addr: 0xe000300c
  mask: 0x1
  name: DC
  description: |
    Device capable
ps7_usb1_HWTXBUF_reserved_1:
  addr: 0xe0003010
  mask: 0x80000000
  name: reserved_1
  description: |
    RESERVED
ps7_usb1_HWTXBUF_reserved:
  addr: 0xe0003010
  mask: 0x7f000000
  name: reserved
  description: |
    RESERVED
ps7_usb1_HWTXBUF_TXCHANADD:
  addr: 0xe0003010
  mask: 0xff0000
  name: TXCHANADD
  description: |
    VUSB_HS_TX_CHAN_ADD - Address bits for each Endpoint; 64 words buffer for each end point.
    6 - To address 64 depth TX buffer for each end point
ps7_usb1_HWTXBUF_TXADD:
  addr: 0xe0003010
  mask: 0xff00
  name: TXADD
  description: |
    VUSB_HS_TX_ADD ; 768 Depth TX buffer.
    10- Address of the depth of TX buffer
ps7_usb1_HWTXBUF_TXBURST:
  addr: 0xe0003010
  mask: 0xff
  name: TXBURST
  description: |
    VUSB_HS_TX_BURST. Burst size for Memory To TX Buffer Transfers
ps7_usb1_HWRXBUF_a:
  addr: 0xe0003014
  mask: 0xff000000
  name: a
  description: |
    RESERVED
ps7_usb1_HWRXBUF_RXADD:
  addr: 0xe0003014
  mask: 0xff00
  name: RXADD
  description: |
    VUSB_HS_RX_ADD ; 768 Depth TX buffer.
    10- Address of the depth of TX buffer
ps7_usb1_HWRXBUF_RXBURST:
  addr: 0xe0003014
  mask: 0xff
  name: RXBURST
  description: |
    VUSB_HS_RX_BURST.
    16 = Burst size of 16 for Memory To TX Buffer Transfers
ps7_usb1_GPTIMER0LD_GPTLD:
  addr: 0xe0003080
  mask: 0xffffff
  name: GPTLD
  description: |
    General Purpose Timer Load Value register.
    This field is the value to be loaded into the GPTCNT countdown timer on a reset action. The value in this register represents the time in microseconds minus 1 for the timer duration.
    Example: for a one millisecond timer, load 1000-1=999 or 0x0003E7.
    Note: Max value is 0xFFFFFF or 16.777215 seconds
ps7_usb1_GPTIMER0CTRL_GPTRUN:
  addr: 0xe0003084
  mask: 0x80000000
  name: GPTRUN
  description: |
    General Purpose Timer Run. This bit enables the general-purpose timer to run. Setting or clearing this bit will not have an effect on the GPTCNT counter value.
ps7_usb1_GPTIMER0CTRL_GPTRST:
  addr: 0xe0003084
  mask: 0x40000000
  name: GPTRST
  description: |
    General Purpose Timer Reset. Writing a one to this bit will reload the GPTCNT with the value in GPTLD.
ps7_usb1_GPTIMER0CTRL_a:
  addr: 0xe0003084
  mask: 0x3e000000
  name: a
  description: |
    reserved
ps7_usb1_GPTIMER0CTRL_GPTMODE:
  addr: 0xe0003084
  mask: 0x1000000
  name: GPTMODE
  description: |
    0b' - One Shot; '1b' - Repeat. This bit selects between a single timer countdown and a looped countdown. In one-shot mode, the timer will count down to zero, generate an interrupt and stop until the counter is reset by software. In repeat mode, the timer will count down to zero, generate an interrupt and automatically reload the counter to begin again.
ps7_usb1_GPTIMER0CTRL_GPTCNT:
  addr: 0xe0003084
  mask: 0xffffff
  name: GPTCNT
  description: |
    General Purpose Timer Counter.
    This field is the value of the running timer.
ps7_usb1_GPTIMER1LD_GPTLD:
  addr: 0xe0003088
  mask: 0xffffff
  name: GPTLD
  description: |
    General Purpose Timer Load Value register.
    This field is the value to be loaded into the GPTCNT countdown timer on a reset action. The value in this register represents the time in microseconds minus 1 for the timer duration.
    Example: for a one millisecond timer, load 1000-1=999 or 0x0003E7.
    Note: Max value is 0xFFFFFF or 16.777215 seconds
ps7_usb1_GPTIMER1CTRL_GPTRUN:
  addr: 0xe000308c
  mask: 0x80000000
  name: GPTRUN
  description: |
    General Purpose Timer Run. This bit enables the general-purpose timer to run. Setting or clearing this bit will not have an effect on the GPTCNT counter value.
ps7_usb1_GPTIMER1CTRL_GPTRST:
  addr: 0xe000308c
  mask: 0x40000000
  name: GPTRST
  description: |
    General Purpose Timer Reset. Writing a one to this bit will reload the GPTCNT with the value in GPTLD.
ps7_usb1_GPTIMER1CTRL_a:
  addr: 0xe000308c
  mask: 0x3e000000
  name: a
  description: |
    reserved
ps7_usb1_GPTIMER1CTRL_GPTMODE:
  addr: 0xe000308c
  mask: 0x1000000
  name: GPTMODE
  description: |
    0b' - One Shot; '1b' - Repeat. This bit selects between a single timer countdown and a looped countdown. In one-shot mode, the timer will count down to zero, generate an interrupt and stop until the counter is reset by software. In repeat mode, the timer will count down to zero, generate an interrupt and automatically reload the counter to begin again.
ps7_usb1_GPTIMER1CTRL_GPTCNT:
  addr: 0xe000308c
  mask: 0xffffff
  name: GPTCNT
  description: |
    General Purpose Timer Counter.
    This field is the value of the running timer.
ps7_usb1_SBUSCFG_AHBBRST:
  addr: 0xe0003090
  mask: 0x7
  name: AHBBRST
  description: |
    VUSB_HS_RX_BURST
    0: incremental bursts of unspecified length
    1: INCR4, non multiple transfers of 4 are decomposed to singles
    2: INCR8, non multiple transfers of 8 are decomposed to INCR4 or singles
    3: INCR16, non multiple transfers of 16 are decomposed to INCR8, INCR4 or singles
    4: Do not use this value!
    5: INCR4, non multiple transfers of 4 are decomposed to INCR of unspecified length
    6: INCR8, non multiple transfers of 8 are decomposed to INCR4 or INCR of unspecified length
    7: INCR16, non multiple transfers of 16 are decomposed to INCR8, INCR4 or INCR of unspecified length
ps7_usb1_CAPLENGTH_HCIVERSION_HCIVERSION:
  addr: 0xe0003100
  mask: 0xffff0000
  name: HCIVERSION
  description: |
    This is a two-byte register containing a BCD encoding of the EHCI revision number supported by this host controller. The most significant byte of this register represents a major revision and the least significant byte is the minor revision.
ps7_usb1_CAPLENGTH_HCIVERSION_CAPLENGTH:
  addr: 0xe0003100
  mask: 0xffff
  name: CAPLENGTH
  description: |
    This register indicates capability register length. This register is used to indicate which offset to add to the register base address at the beginning of the Operational Register
ps7_usb1_HCSPARAMS_N_TT:
  addr: 0xe0003104
  mask: 0xf000000
  name: N_TT
  description: |
    This field indicates the number of embedded transaction translators associated with the USB2.0 host controller. For Multi-Port Host this field will always be equal to '0001b'. For all other implementation, N_TT = '0000b'.
    This field will always be '0'
ps7_usb1_HCSPARAMS_N_PTT:
  addr: 0xe0003104
  mask: 0xf00000
  name: N_PTT
  description: |
    Number of Ports per Transaction Translator. This field indicates the number of ports assigned to each transaction translator within the USB2.0 host controller.
    For Multi-Port Host this field will always equal N_PORTS. For all other implementations, N_PTT = '0000b'.
    This in a non-EHCI field to support embedded TT.
ps7_usb1_HCSPARAMS_reserved_1:
  addr: 0xe0003104
  mask: 0xe0000
  name: reserved_1
  description: |
    RESERVED
ps7_usb1_HCSPARAMS_PI:
  addr: 0xe0003104
  mask: 0x10000
  name: PI
  description: |
    Port indicator. This bit indicates whether the ports support port indicator control. When set to one, the
    port status and control registers include a read/writable field for controlling the state of
    the port indicator. This field will always be '1'
ps7_usb1_HCSPARAMS_N_CC:
  addr: 0xe0003104
  mask: 0xf000
  name: N_CC
  description: |
    This field indicates the number of companion controllers associated with this USB2.0 host controller. A zero in this field indicates there are no internal Companion Controllers. Port ownership
    hand-off is not supported. A value larger than zero in this field indicates there are companion USB1.1 host controller(s). Port-ownership hand-offs are supported. High, Full and Low speed devices are supported on the host controller root ports.
ps7_usb1_HCSPARAMS_N_PCC:
  addr: 0xe0003104
  mask: 0xf00
  name: N_PCC
  description: |
    This field indicates the number of ports supported per internal Companion Controller. It is used to indicate the port routing configuration to the system software.
ps7_usb1_HCSPARAMS_reserved:
  addr: 0xe0003104
  mask: 0xe0
  name: reserved
  description: |
    RESERVED
ps7_usb1_HCSPARAMS_PPC:
  addr: 0xe0003104
  mask: 0x10
  name: PPC
  description: |
    Port Power Control. This field indicates whether the host controller implementation includes port power control.
    1 =indicates the ports have port power switches.
    0 = indicates the ports do not have port power switches.
ps7_usb1_HCSPARAMS_N_PORTS:
  addr: 0xe0003104
  mask: 0xf
  name: N_PORTS
  description: |
    Number of downstream ports supported by the host controller
ps7_usb1_HCCPARAMS_EECP:
  addr: 0xe0003108
  mask: 0xff00
  name: EECP
  description: |
    No Description
ps7_usb1_HCCPARAMS_IST:
  addr: 0xe0003108
  mask: 0xf0
  name: IST
  description: |
    Isochronous Scheduling Threshold.
    This field indicates, relative to the current position of the executing host controller, where software can reliably update the isochronous schedule. When bit [7] is zero, the value of the least significant 3 bits indicates the number of micro-frames a host controller can hold a set of isochronous data structures (one or more) before flushing the state. When bit [7] is a one, then host software assumes the host controller may cache an isochronous data structure for an entire frame.
    This field will always be 4'b0
ps7_usb1_HCCPARAMS_a:
  addr: 0xe0003108
  mask: 0x8
  name: a
  description: |
    reserved
ps7_usb1_HCCPARAMS_ASP:
  addr: 0xe0003108
  mask: 0x4
  name: ASP
  description: |
    Asynchronous Schedule Park Capability. If this bit is set to a one, then the host controller supports the park feature for high speed queue heads in the Asynchronous Schedule. The feature can be disabled or enabled and set to a specific level by using the Asynchronous Schedule Park Mode
    Enable and Asynchronous Schedule Park Mode Count fields in the USBCMD register.
    This field will always be '1'
ps7_usb1_HCCPARAMS_PFL:
  addr: 0xe0003108
  mask: 0x2
  name: PFL
  description: |
    If this bit is set to zero, then the system software must use a frame list length of 1024 elements with this host controller. The USBCMD register Frame List Size field is a read-only register and must be set to zero.
    If set to a one, then the system software can specify and use a smaller frame list and configure the host controller via the USBCMD register Frame List Size field. The frame list must always be aligned on a 4K-page boundary. This field will always be '1'
ps7_usb1_HCCPARAMS_ADC:
  addr: 0xe0003108
  mask: 0x1
  name: ADC
  description: |
    64-bit Addressing Capability. For this controller its always 0
ps7_usb1_DCIVERSION_DCIVERSION:
  addr: 0xe0003120
  mask: 0xffff
  name: DCIVERSION
  description: |
    The device controller interface conforms to the two-byte BCD encoding of the interface version number
    contained in this register
ps7_usb1_DCCPARAMS_HC:
  addr: 0xe0003124
  mask: 0x100
  name: HC
  description: |
    Host Capable. When this bit is 1, this controller is capable of operating as an EHCI compatible USB
    2.0 host controller
    1= The controller is USB 2.0 host controller capable
ps7_usb1_DCCPARAMS_DC:
  addr: 0xe0003124
  mask: 0x80
  name: DC
  description: |
    Device Capable register. When this bit is 1, this controller is capable of operating as a USB 2.0 device.
    1= The controller is USB 2.0 device capable
ps7_usb1_DCCPARAMS_a:
  addr: 0xe0003124
  mask: 0x60
  name: a
  description: |
    reserved
ps7_usb1_DCCPARAMS_DEN:
  addr: 0xe0003124
  mask: 0x1f
  name: DEN
  description: |
    This field indicates the number of endpoints built into the device controller.
    12 = 12 endpoints are supported
ps7_usb1_USBCMD_ITC:
  addr: 0xe0003140
  mask: 0xff0000
  name: ITC
  description: |
    Interrupt Threshold Control. The system software uses this field to set the maximum rate at which the host/device controller will issue interrupts.
    00h Immediate (no threshold)
    01h 1 micro-frame
    02h 2 micro-frames
    04h 4 micro-frames
    08h 8 micro-frames
    10h 16 micro-frames
    20h 32 micro-frames
    40h 64 micro-frames
ps7_usb1_USBCMD_FS2:
  addr: 0xe0003140
  mask: 0x8000
  name: FS2
  description: |
    MSB bit of FS field.
ps7_usb1_USBCMD_ATDTW:
  addr: 0xe0003140
  mask: 0x4000
  name: ATDTW
  description: |
    This bit is used as a semaphore to ensure the proper addition of a new dTD to an active (primed) endpoint's linked list.
ps7_usb1_USBCMD_SUTW:
  addr: 0xe0003140
  mask: 0x2000
  name: SUTW
  description: |
    Setup TripWire. This bit is used as a semaphore to ensure that the setup data payload of 8 bytes is
    extracted from a QH by the DCD without being corrupted. If the setup lockout mode is off (See USBMODE register) then there exists a hazard when new setup data arrives while the DCD is copying the setup data payload from the QH for a previous setup packet. This bit is set and cleared by software and will be cleared by hardware when a hazard exists.
    Used only in device Mode
ps7_usb1_USBCMD_reserved:
  addr: 0xe0003140
  mask: 0x1000
  name: reserved
  description: |
    RESERVED
ps7_usb1_USBCMD_ASPE:
  addr: 0xe0003140
  mask: 0x800
  name: ASPE
  description: |
    If the Asynchronous Park Capability bit in the HCCPARAMS register is a one, then this bit defaults to a 1b and is R/W. Otherwise the bit must be a zero and is RO. Software uses this bit to enable or disable Park mode. When this bit is one, Park mode is enabled. When this bit is a zero, Park mode is disabled.
    This field is set to '1'b in this implementation. Only used in host mode.
ps7_usb1_USBCMD_reserved_1:
  addr: 0xe0003140
  mask: 0x400
  name: reserved_1
  description: |
    RESERVED
ps7_usb1_USBCMD_ASP:
  addr: 0xe0003140
  mask: 0x300
  name: ASP
  description: |
    If the Asynchronous Park Capability bit in the HCCPARAMS register is a one, then this field defaults to 3h and is R/W. Otherwise it defaults to zero and is RO. It contains a count of the number of successive transactions the host controller is allowed to execute from a high-speed queue head on the Asynchronous schedule before
    continuing traversal of the Asynchronous schedule.
    This field is set to 3h in this implementation.
    Only used in host mode.
ps7_usb1_USBCMD_LR:
  addr: 0xe0003140
  mask: 0x80
  name: LR
  description: |
    Light Host/Device Controller Reset. This field will always be '0b'.
ps7_usb1_USBCMD_IAA:
  addr: 0xe0003140
  mask: 0x40
  name: IAA
  description: |
    This bit is used as a doorbell by software to tell the host controller to issue an interrupt the next time it advances the asynchronous schedule. Software must write a '1b' to this bit to ring the doorbell. This is used only in Host mode
ps7_usb1_USBCMD_ASE:
  addr: 0xe0003140
  mask: 0x20
  name: ASE
  description: |
    This bit controls whether the host controller skips processing the Asynchronous Schedule.
    Values Meaning :
    0- Do not process the Asynchronous Schedule.
    1- Use the ASYNCLISTADDR register to access the Asynchronous Schedule.
    Only used in host mode.
ps7_usb1_USBCMD_PSE:
  addr: 0xe0003140
  mask: 0x10
  name: PSE
  description: |
    This bit controls whether the host controller skips processing the Periodic Schedule. Values Meaning
    0 -> Do not process the Periodic Schedule
    1 -> Use the PERIODICLISTBASE register to access the Periodic Schedule.
    Only used in host mode.
ps7_usb1_USBCMD_FS0:
  addr: 0xe0003140
  mask: 0xc
  name: FS0
  description: |
    reserved
    0 -> 1024 elements (4096 bytes)
    1 -> 512 elements (2048 bytes)
    2 -> 256 elements (1024 bytes)
    3 -> 128 elements (512 bytes)
    4 -> 64 elements (256 bytes)
    5 -> 32 elements (128 bytes)
    6 ->16 elements (64 bytes)
    7 -> 8 elements (32 bytes)
ps7_usb1_USBCMD_RST:
  addr: 0xe0003140
  mask: 0x2
  name: RST
  description: |
    Software uses this bit to reset the controller. This bit is set to zero by the Controller when the reset process is complete. Software cannot terminate the reset process early by writing a zero to this register.
ps7_usb1_USBCMD_RS:
  addr: 0xe0003140
  mask: 0x1
  name: RS
  description: |
    Run/Stop bit , When set to a 1, the Controller proceeds with the execution of the schedule.
ps7_usb1_USBSTS_TI1:
  addr: 0xe0003144
  mask: 0x2000000
  name: TI1
  description: |
    This bit is set when the counter in the GPTIMER1CTRL register transitions to zero. Writing a one to this bit will clear it.
ps7_usb1_USBSTS_TI0:
  addr: 0xe0003144
  mask: 0x1000000
  name: TI0
  description: |
    This bit is set when the counter in the GPTIMER0CTRL register transitions to zero.
    Writing a one to this bit will clear it.
ps7_usb1_USBSTS_reserved:
  addr: 0xe0003144
  mask: 0xf00000
  name: reserved
  description: |
    T
ps7_usb1_USBSTS_UPI:
  addr: 0xe0003144
  mask: 0x80000
  name: UPI
  description: |
    This bit is set by the Host Controller when the cause of an interrupt is a completion of a USB transaction where the Transfer Descriptor (TD) has an interrupt on complete (IOC) bit set and the TD was from the periodic schedule.
    This bit is also set by the Host Controller when a short packet is detected and the packet is on the periodic schedule. A short packet is when the actual number of bytes received was less than expected.
    This bit is not used by the device controller and will always be zero.
ps7_usb1_USBSTS_UAI:
  addr: 0xe0003144
  mask: 0x40000
  name: UAI
  description: |
    USB Host Asynchronous Interrupt . This bit is set by the Host Controller when the cause of an interrupt is a completion of a USB transaction where the Transfer Descriptor (TD) has an interrupt on complete (IOC) bit set AND the TD was from the asynchronous schedule.
    This bit is also set by the Host when a short packet is detected and the packet is on the asynchronous schedule. A short packet is when the actual number of bytes received was less than expected.
    This bit is not used by the device controller and will always be zero.
ps7_usb1_USBSTS_reserved_1:
  addr: 0xe0003144
  mask: 0x20000
  name: reserved_1
  description: |
    RESERVED
ps7_usb1_USBSTS_NAKI:
  addr: 0xe0003144
  mask: 0x10000
  name: NAKI
  description: |
    NAK Interrupt. This bit is read-only. It is set by hardware when for a particular endpoint both the TX/RX Endpoint NAK bit and the corresponding TX/RX Endpoint NAK Enable bit are set. This bit is automatically cleared by hardware when the all the enabled TX/RX Endpoint NAK bits are cleared. This bit is not used by the host controller and will always be zero.
ps7_usb1_USBSTS_AS:
  addr: 0xe0003144
  mask: 0x8000
  name: AS
  description: |
    This bit reports the current real status of the Asynchronous Schedule. When set to zero the asynchronous schedule status is disabled and if set to one the status is enabled.
    The Controller is not required to immediately disable or enable the Asynchronous Schedule when software transitions the Asynchronous Schedule Enable bit in the USBCMD register. When this bit and the Asynchronous Schedule Enable bit are the same value, the Asynchronous Schedule is either enabled (1) or disabled (0).
    Only used in host mode.
ps7_usb1_USBSTS_PS:
  addr: 0xe0003144
  mask: 0x4000
  name: PS
  description: |
    Periodic Schedule Status. This bit reports the current real status of the Periodic Schedule. When set to zero the
    periodic schedule is disabled, and if set to one the status is enabled. The Controller is not required to immediately disable or enable the Periodic Schedule when software
    transitions the Periodic Schedule Enable bit in the USBCMD register. When this bit and the Periodic Schedule Enable bit are the same value, the Periodic Schedule is either enabled (1) or disabled (0).
    Only used in host mode.
ps7_usb1_USBSTS_RCL:
  addr: 0xe0003144
  mask: 0x2000
  name: RCL
  description: |
    Reclamation. This is a read-only status bit used to detect an empty asynchronous schedule. Used in Host mode only
ps7_usb1_USBSTS_HCH:
  addr: 0xe0003144
  mask: 0x1000
  name: HCH
  description: |
    HCHaIted. This bit is a zero whenever the Run/Stop bit is a one. The Controller sets this bit to one after it has stopped executing because of the Run/Stop bit being set to 0, either by software or by the Controller hardware (e.g. internal error).
    Only used in host mode.
ps7_usb1_USBSTS_reserved_2:
  addr: 0xe0003144
  mask: 0x800
  name: reserved_2
  description: |
    RESERVED
ps7_usb1_USBSTS_ULPII:
  addr: 0xe0003144
  mask: 0x400
  name: ULPII
  description: |
    ULPI Interrupt. When the ULPI Viewport is present in the design, an event completion will set this interrupt.
ps7_usb1_USBSTS_reserved_3:
  addr: 0xe0003144
  mask: 0x200
  name: reserved_3
  description: |
    RESERVED
ps7_usb1_USBSTS_SLI:
  addr: 0xe0003144
  mask: 0x100
  name: SLI
  description: |
    DCSuspend. When a device controller enters a suspend state from an active state, this bit will be set to a one. This bit is only cleared by software writing a 1 to it.
    Only used in device mode.
ps7_usb1_USBSTS_SRI:
  addr: 0xe0003144
  mask: 0x80
  name: SRI
  description: |
    SOF Received. When the device controller detects a Start Of (u)Frame, this bit will be set to a one.
    When a SOF is extremely late, the Controller, when in device mode, will automatically set this bit to indicate that an SOF was expected. Therefore, this bit will be set roughly every 1ms in FS mode and every 125us in HS mode and will be synchronized to the actual SOF that is received.
    Since the Controller when in device mode is initialized to FS before connect, this bit will be set at an interval of 1ms during the prelude to connect and chirp.
    In host mode, this bit will be set every 125us and can be used by host controller driver as a time base.
    Software writes a 1 to this bit to clear it.
ps7_usb1_USBSTS_URI:
  addr: 0xe0003144
  mask: 0x40
  name: URI
  description: |
    USB Reset Received. When the Controller detects a USB Reset and enters the default state, this bit will be set to a one. Software can write a 1 to this bit to clear the USB Reset Received status bit.
    Only used in device mode.
ps7_usb1_USBSTS_AAI:
  addr: 0xe0003144
  mask: 0x20
  name: AAI
  description: |
    Interrupt on Async Advance. System software can force the host controller to issue an interrupt the next time the host controller advances the asynchronous schedule by writing a one to the Interrupt on Async Advance Doorbell bit in the USBCMD register. This status bit indicates the
    assertion of that interrupt source.
    Only used in host mode.
ps7_usb1_USBSTS_SEI:
  addr: 0xe0003144
  mask: 0x10
  name: SEI
  description: |
    System Error. In the BVCI implementation of the USBHS core, this bit is not used, and will always be
    cleared to '0b'. In the AMBA implementation, this bit will be set to '1b' when an Error response is seen by the master interface
ps7_usb1_USBSTS_FRI:
  addr: 0xe0003144
  mask: 0x8
  name: FRI
  description: |
    Frame List Rollover
    The Controller sets this bit to a one when the Frame List Index rolls over from its maximum value to zero. The exact value at which the rollover occurs depends on the frame list size. For example, if the frame list size (as programmed in the Frame List Size field of the USBCMD register) is 1024, the Frame Index Register rolls over every time FRINDEX[13] toggles. Similarly, if the size is 512, the Controller sets this bit to a one every time FRINDEX[12] toggles. Only used in host mode.
ps7_usb1_USBSTS_PCI:
  addr: 0xe0003144
  mask: 0x4
  name: PCI
  description: |
    Port Change Detect. The Controller in host mode sets this bit to a one when on any port a Connect Status occurs, a Port Enable/Disable Change occurs, or the Force Port Resume bit is set as the result of a J-K transition on the suspended port.
    The Controller in device mode sets this bit to a one when it detects resume signaling or the port controller enters the full or high-speed operational state. When the port controller exits the full or high-speed operation states due to Reset or Suspend events, the notification mechanisms are the USB Reset Received bit and the DCSuspend bits respectively.
ps7_usb1_USBSTS_UEI:
  addr: 0xe0003144
  mask: 0x2
  name: UEI
  description: |
    USB Error Interrupt. When completion of a USB transaction results in an error condition, this bit is set by the Controller
ps7_usb1_USBSTS_UI:
  addr: 0xe0003144
  mask: 0x1
  name: UI
  description: |
    This bit is set by the Controller when the cause of an interrupt is a completion of a USB transaction where the Transfer Descriptor (TD) has an interrupt on complete (IOC) bit set.
    This bit is also set by the Host Controller when a short packet is detected. A short packet is when the actual number of bytes received was less than expected.
ps7_usb1_USBINTR_TIE1:
  addr: 0xe0003148
  mask: 0x2000000
  name: TIE1
  description: |
    General Purpose Timer Interrupt Enable 1
    When this bit is a one, and the TI1 bit in the EXTSTS register is a one, the controller will issue an interrupt. The interrupt is acknowledged by software clearing the TI1 bit.
ps7_usb1_USBINTR_TIE0:
  addr: 0xe0003148
  mask: 0x1000000
  name: TIE0
  description: |
    General Purpose Timer Interrupt Enable 0
    When this bit is a one, and the TI1 bit in the EXTSTS register is a one, the controller will issue an interrupt. The interrupt is acknowledged by software clearing the TI0 bit.
ps7_usb1_USBINTR_reserved:
  addr: 0xe0003148
  mask: 0xf00000
  name: reserved
  description: |
    Reserved
ps7_usb1_USBINTR_UPEI:
  addr: 0xe0003148
  mask: 0x80000
  name: UPEI
  description: |
    USB Host Periodic Interrupt Enable.
    When this bit is a one, and the UPI bit in the EXTSTS register is a one, the host controller will issue an interrupt at the next interrupt threshold. The interrupt is acknowledged by software clearing the UPI bit.
ps7_usb1_USBINTR_UAEI:
  addr: 0xe0003148
  mask: 0x40000
  name: UAEI
  description: |
    USB Host Asynchronous Interrupt Enable
    When this bit is a one, and the UAI bit in the EXTSTS register is a one, the host controller will issue an interrupt at the next interrupt threshold. The interrupt is acknowledged by software clearing the UAI bit.
ps7_usb1_USBINTR_reserved_1:
  addr: 0xe0003148
  mask: 0x20000
  name: reserved_1
  description: |
    RESERVED
ps7_usb1_USBINTR_NAKEI:
  addr: 0xe0003148
  mask: 0x10000
  name: NAKEI
  description: |
    NAK Interrupt Enable
    when this bit is a one, and the NAKI bit in the EXTSTS register is a one, the controller will issue an interrupt. The interrupt is acknowledged by software clearing the NAKI bit.
ps7_usb1_USBINTR_reserved_2:
  addr: 0xe0003148
  mask: 0x800
  name: reserved_2
  description: |
    RESERVED
ps7_usb1_USBINTR_ULPIE:
  addr: 0xe0003148
  mask: 0x400
  name: ULPIE
  description: |
    ULPI Interrupt enable. When this bit is a one, and the ULPI Interrupt bit in the USBSTS register transitions, the Controller will issue and interrupt. The interrupt is acknowledged by software writing a one to the ULPI Interrupt bit.
ps7_usb1_USBINTR_reserved_3:
  addr: 0xe0003148
  mask: 0x200
  name: reserved_3
  description: |
    RESERVED
ps7_usb1_USBINTR_SLE:
  addr: 0xe0003148
  mask: 0x100
  name: SLE
  description: |
    DCSuspend Interrupt Enable.
    When this bit is a one, and the SLI bit in the USBSTS register transitions, the Controller will issue an interrupt. The interrupt is acknowledged by software writing a one to the SLI bit.
    Only used in device mode.
ps7_usb1_USBINTR_SRE:
  addr: 0xe0003148
  mask: 0x80
  name: SRE
  description: |
    USB Reset Received Interrupt Enable
    When this bit is a one, and the SRI bit in the USBSTS register is a one, the Controller will issue an interrupt. The interrupt is acknowledged by software clearing the SRI bit.
ps7_usb1_USBINTR_URE:
  addr: 0xe0003148
  mask: 0x40
  name: URE
  description: |
    USB Reset Received. When the Controller detects a USB Reset and enters the default state, this bit will be set to a one. Software can write a 1 to this bit to clear the USB Reset Received status bit.
    Only used in device mode.
ps7_usb1_USBINTR_AAE:
  addr: 0xe0003148
  mask: 0x20
  name: AAE
  description: |
    Interrupt on Async Advance Enable. When this bit is a one, and the AAI bit in the USBSTS register is a one, the Controller will issue an interrupt at the next interrupt threshold. The interrupt is acknowledged by software clearing the Interrupt on AAI bit.
    Only used in host mode.
ps7_usb1_USBINTR_SEE:
  addr: 0xe0003148
  mask: 0x10
  name: SEE
  description: |
    System Error Interrupt Enable. When this bit is a one, and the SEI bit in the USBSTS register is a one, the Controller will issue an interrupt. The interrupt is acknowledged by software clearing the SSI bit.
ps7_usb1_USBINTR_FRE:
  addr: 0xe0003148
  mask: 0x8
  name: FRE
  description: |
    Frame List Rollover Interrupt Enable
    When this bit is a one, and the FRI bit in the USBSTS register is a one, the Controller will issue an interrupt. The interrupt is acknowledged by software clearing the FRI bit. Only used in host mode.
ps7_usb1_USBINTR_PCE:
  addr: 0xe0003148
  mask: 0x4
  name: PCE
  description: |
    Port Change Detect Interrupt Enable
    When this bit is a one, and the PCI bit in the USBSTS register is a one, the Controller will issue an interrupt. The interrupt is acknowledged by software clearing the PCI bit.
ps7_usb1_USBINTR_UEE:
  addr: 0xe0003148
  mask: 0x2
  name: UEE
  description: |
    USB Error Interrupt
    When this bit is a one, and the UEI bit in the USBSTS register is a one, the Controller will issue an interrupt at the next interrupt threshold. The interrupt is acknowledged by
    software clearing the UEI bit in the USBSTS register.
ps7_usb1_USBINTR_UE:
  addr: 0xe0003148
  mask: 0x1
  name: UE
  description: |
    When this bit is a one, and the UI bit in the USBSTS register is a one, the Controller will issue an interrupt at the next interrupt threshold. The interrupt is acknowledged by
    software clearing the UI bit.
ps7_usb1_FRINDEX_FRINDEX:
  addr: 0xe000314c
  mask: 0x3fff
  name: FRINDEX
  description: |
    The value, in this register, increments at the end of each time frame (e.g. micro-frame). Bits [N:3] are used for the Frame List current index. This means that each location of the frame list is accessed 8 times (frames or micro-frames) before moving to the next index. The following illustrates values of N based on the value of the Frame List Size field in the USBCMD register, when used in host mode.
    usbcmd-> Frame List-> Size
    000b ->(1024) -> 12
    001b ->(512) ->11
    010b ->(256)->10
    011b ->(128) -> 9
    100b ->(64) -> 8
    101b ->(32) -> 7
    110b ->(16) ->6
    111b ->(8) ->5
    In device mode the value is the current frame number of the last frame transmitted. It is not used as an index.
    This register is read-only in device mode.
ps7_usb1_PERIODICLISTBASE_DEVICEADDR_PERBASE_USBADRA:
  addr: 0xe0003154
  mask: 0xfe000000
  name: PERBASE_USBADRA
  description: |
    In host mode: Periodic List Base Address:
    These bits correspond to memory address signals [31:12], respectively.
    In Device Mode:
    Device address advance
    When this bit is '0b', any writes to USBADR are instantaneous. When this bit is written to a '1' at the same time or before USBADR is written, the write to the USBADR field is staged and held in a hidden register. After an IN occurs on endpoint 0 and is ACKed, USBADR will be loaded from the hidden register.
    Hardware will automatically clear this bit on the following conditions:
    1) IN is ACKed to endpoint 0. (USBADR is updated from hidden register).
    2) OUT/SETUP occur to endpoint 0. (USBADR is not updated).
    3) Device Reset occurs (USBADR is reset to 0).
ps7_usb1_PERIODICLISTBASE_DEVICEADDR_PERBASE_USBADR:
  addr: 0xe0003154
  mask: 0x1000000
  name: PERBASE_USBADR
  description: |
    In host mode: Periodic List Base Address:
    These bits correspond to memory address signals [31:12], respectively.
    In device Mode: USB Device address
    These bits correspond to the USB device address
ps7_usb1_PERIODICLISTBASE_DEVICEADDR_PERBASE_Reserved:
  addr: 0xe0003154
  mask: 0xfff000
  name: PERBASE_Reserved
  description: |
    In host mode: Periodic List Base Address:
    These bits correspond to memory address signals [31:12], respectively.
    In Device Mode: Reserved
ps7_usb1_PERIODICLISTBASE_DEVICEADDR_reserved:
  addr: 0xe0003154
  mask: 0xfff
  name: reserved
  description: |
    RESERVED
ps7_usb1_ASYNCLISTADDR_ENDPOINTLISTADDR_ASYBASE_EPBASE:
  addr: 0xe0003158
  mask: 0xfffff800
  name: ASYBASE_EPBASE
  description: |
    In host mode: Asynchronous List Base Address:
    These bits correspond to memory address signals [31:5], respectively. This field may only reference a Queue Head (QH).
    In Device Mode:
    Endpoint List Base Address
    These bits correspond to memory address signals [31:11], respectively. This field will reference a list of up to 32 Queue Heads (QH). (i.e. one queue head per endpoint ANDdirection).
ps7_usb1_ASYNCLISTADDR_ENDPOINTLISTADDR_ASYBASE:
  addr: 0xe0003158
  mask: 0x7e0
  name: ASYBASE
  description: |
    In host mode: Asynchronous List Base Address:
    These bits correspond to memory address signals [31:5], respectively. This field may only reference a Queue Head (QH).
    In Device Mode: Reserved
ps7_usb1_ASYNCLISTADDR_ENDPOINTLISTADDR_reserved:
  addr: 0xe0003158
  mask: 0x1f
  name: reserved
  description: |
    RESERVED
ps7_usb1_TTCTRL_reserved:
  addr: 0xe000315c
  mask: 0x80000000
  name: reserved
  description: |
    RESERVED
ps7_usb1_TTCTRL_TTHA:
  addr: 0xe000315c
  mask: 0x7f000000
  name: TTHA
  description: |
    Internal TT Hub Address Representation.
    This field is used to match against the Hub Address field in QH AND siTD to determine if the packet is routed to the internal TT for directly attached FS/LS devices. If the Hub
    Address in the QH or siTD does not match this address then the packet will be broadcast on the High Speed ports destined for a downstream High Speed hub with the
    address in the QH/siTD.
ps7_usb1_TTCTRL_reserved_1:
  addr: 0xe000315c
  mask: 0xfffffc
  name: reserved_1
  description: |
    RESERVED
ps7_usb1_TTCTRL_TTAS:
  addr: 0xe000315c
  mask: 0x2
  name: TTAS
  description: |
    Embedded TT Asynchronous Buffers Clear. This field will clear all pending transactions in the embedded TT Asynchronous Buffer(s). The clear will take as much time as necessary to clear buffer without
    interfering with a transaction in progress. TTAC will return to zero after being set by software only after the actual clear occurs.
ps7_usb1_TTCTRL_TTAC:
  addr: 0xe000315c
  mask: 0x1
  name: TTAC
  description: |
    Embedded TT Async Buffers Status. This read only bit will be '1' if one or more transactions are being held in the embedded TT Asynchronous Buffers. When this bit is a zero, then all outstanding transactions in the embedded TT have been flushed.
ps7_usb1_BURSTSIZE_TXPBURST:
  addr: 0xe0003160
  mask: 0x1ff00
  name: TXPBURST
  description: |
    Programmable TX Burst Length.
    Default is the constant VUSB_HS_TX_BURST. This register represents the maximum length of a burst in 32-bit words while moving data from system memory to the USB bus.
    If field AHBBRST of register SBUSCFG is different from zero, this field TXPBURST will return the value of the INCRx length.
    Supported values are integer values from 4 to 128. It is recommended to set this value to a integer sub-multiple of VUSB_HS_TX_CHAN. Different values will not use all the available buffer space, preventing proper TX endpoint priming in stream disable mode (SDIS bit of USBMODE register set to '1').
ps7_usb1_BURSTSIZE_RXPBURST:
  addr: 0xe0003160
  mask: 0xff
  name: RXPBURST
  description: |
    Programmable RX Burst Length. Default is the constant VUSB_HS_RX_BURST. This register represents the maximum length of a burst in 32-bit words while moving data from the USB bus to system memory. If field AHBBRST of register SBUSCFG is different from zero, this field RXPBRUST will return the value of the INCRx length.
    The supported values are integer values from 4 to 128. It is recommended to set this value to a integer sub-multiple of VUSB_HS_RX_DEPTH.
ps7_usb1_TXFILLTUNING_TXFIFOTHRES:
  addr: 0xe0003164
  mask: 0x3f0000
  name: TXFIFOTHRES
  description: |
    FIFO Burst Threshold:
    This register controls the number of data bursts that are posted to the TX latency FIFO in host mode before the packet begins on to the bus. The minimum value is 2 and this value should be a low as possible to maximize USB performance. A higher value can be used in systems with unpredictable latency and/or insufficient bandwidth, where the FIFO may under run because the data transferred from the latency FIFO to USB occurs before it can be replenished from system memory. This value is ignored if the Stream Disable bit in USBMODE register is set (SDIS).
ps7_usb1_TXFILLTUNING_reserved:
  addr: 0xe0003164
  mask: 0xe000
  name: reserved
  description: |
    RESERVED
ps7_usb1_TXFILLTUNING_TXSCHEALTH:
  addr: 0xe0003164
  mask: 0x1f00
  name: TXSCHEALTH
  description: |
    Scheduler Health Counter.
    This register increments when the Controller fails to fill the TX latency FIFO to the level programmed by TXFIFOTHRES before running out of time to send the packet before the next Start-Of-Frame.
    This health counter measures the number of times this occurs to provide feedback to selecting a proper TXSCHOH. Writing to this register will clear the counter. This counter will max. at 31.
ps7_usb1_TXFILLTUNING_reserved_1:
  addr: 0xe0003164
  mask: 0x80
  name: reserved_1
  description: |
    RESERVED
ps7_usb1_TXFILLTUNING_TXSCHOH:
  addr: 0xe0003164
  mask: 0x7f
  name: TXSCHOH
  description: |
    Scheduler Overhead.
    This register adds an additional fixed offset to the schedule time estimator described above as Tff. As an approximation, the value chosen for this register should limit the number of back-off events captured in the TXSCHHEALTH to less than 10 per second in a highly utilized bus. Choosing a value that is too high for this register is not desired as it can needlessly reduce USB utilization.
    The time unit represented in this register is 1.267us when a device is connected in High-Speed Mode for OTG(on the go) AND SPH(single port host) implementations.
    The time unit represented in this register is 6.333us when a device is connected in Low/Full Speed Mode for OTG AND SPH implementations. The time unit represented in this register is always 1.267us for the MPH implementation
ps7_usb1_TXTTFILLTUNING_TXTTSCHHEALTH:
  addr: 0xe0003168
  mask: 0x1f00
  name: TXTTSCHHEALTH
  description: |
    TT Scheduler Health Counter
    Same description as TXSCHHEALTH
ps7_usb1_TXTTFILLTUNING_reserved:
  addr: 0xe0003168
  mask: 0xe0
  name: reserved
  description: |
    RESERVED
ps7_usb1_TXTTFILLTUNING_TXTTSCHOH:
  addr: 0xe0003168
  mask: 0x1f
  name: TXTTSCHOH
  description: |
    TT Scheduler Overhead
    Same description as TXSCHOH.
    The time unit represented in this register is 6.333us.
ps7_usb1_IC_USB_IC8:
  addr: 0xe000316c
  mask: 0x80000000
  name: IC8
  description: |
    Inter-Chip transceiver enable 8. These bits enables the Inter-Chip transceiver for each port (for the MPH case). To enable the interface, the bits PTS must be set to '011b' in the PORTSC8. Writing a '1' to each bit selects the IC_USB interface for that port.
ps7_usb1_IC_USB_IC_VDD8:
  addr: 0xe000316c
  mask: 0x70000000
  name: IC_VDD8
  description: |
    Inter-Chip voltage selection 8
    It selects which voltage is being supplied to the peripheral through each port This field is read-only and set to '000b' in case of device mode operation.
    This field is read-only and set to '000b' in case of Single port host controller.
ps7_usb1_IC_USB_IC7:
  addr: 0xe000316c
  mask: 0x8000000
  name: IC7
  description: |
    Inter-Chip transceiver enable 7. These bits enables the Inter-Chip transceiver for each port (for the MPH case). To enable the interface, the bits PTS must be set to '011b' in the PORTSC7. Writing a '1' to each bit selects the IC_USB interface for that port.
ps7_usb1_IC_USB_IC_VDD7:
  addr: 0xe000316c
  mask: 0x7000000
  name: IC_VDD7
  description: |
    Inter-Chip voltage selection 7
    It selects which voltage is being supplied to the peripheral through each port This field is read-only and set to '000b' in case of device mode operation.
    This field is read-only and set to '000b' in case of Single port host controller.
ps7_usb1_IC_USB_IC6:
  addr: 0xe000316c
  mask: 0x800000
  name: IC6
  description: |
    Inter-Chip transceiver enable 6. These bits enables the Inter-Chip transceiver for each port (for the MPH case). To enable the interface, the bits PTS must be set to '011b' in the PORTSC6. Writing a '1' to each bit selects the IC_USB interface for that port.
ps7_usb1_IC_USB_IC_VDD6:
  addr: 0xe000316c
  mask: 0x700000
  name: IC_VDD6
  description: |
    Inter-Chip voltage selection 6
    It selects which voltage is being supplied to the peripheral through each port This field is read-only and set to '000b' in case of device mode operation.
    This field is read-only and set to '000b' in case of Single port host controller.
ps7_usb1_IC_USB_IC5:
  addr: 0xe000316c
  mask: 0x80000
  name: IC5
  description: |
    Inter-Chip transceiver enable 5. These bits enables the Inter-Chip transceiver for each port (for the MPH case). To enable the interface, the bits PTS must be set to '011b' in the PORTSC5. Writing a '1' to each bit selects the IC_USB interface for that port.
ps7_usb1_IC_USB_IC_VDD5:
  addr: 0xe000316c
  mask: 0x70000
  name: IC_VDD5
  description: |
    Inter-Chip voltage selection 5
    It selects which voltage is being supplied to the peripheral through each port This field is read-only and set to '000b' in case of device mode operation.
    This field is read-only and set to '000b' in case of Single port host controller.
ps7_usb1_IC_USB_IC4:
  addr: 0xe000316c
  mask: 0x8000
  name: IC4
  description: |
    Inter-Chip transceiver enable 4. These bits enables the Inter-Chip transceiver for each port (for the MPH case). To enable the interface, the bits PTS must be set to '011b' in the PORTSC4. Writing a '1' to each bit selects the IC_USB interface for that port.
ps7_usb1_IC_USB_IC_VDD4:
  addr: 0xe000316c
  mask: 0x7000
  name: IC_VDD4
  description: |
    Inter-Chip voltage selection 4
    It selects which voltage is being supplied to the peripheral through each port This field is read-only and set to '000b' in case of device mode operation.
    This field is read-only and set to '000b' in case of Single port host controller.
ps7_usb1_IC_USB_IC3:
  addr: 0xe000316c
  mask: 0x800
  name: IC3
  description: |
    Inter-Chip transceiver enable 3. These bits enables the Inter-Chip transceiver for each port (for the MPH case). To enable the interface, the bits PTS must be set to '011b' in the PORTSC3. Writing a '1' to each bit selects the IC_USB interface for that port.
ps7_usb1_IC_USB_IC_VDD3:
  addr: 0xe000316c
  mask: 0x700
  name: IC_VDD3
  description: |
    Inter-Chip voltage selection 3
    It selects which voltage is being supplied to the peripheral through each port. This field is read-only and set to '000b' in case of device mode operation.
    This field is read-only and set to '000b' in case of Single port host controller.
ps7_usb1_IC_USB_IC2:
  addr: 0xe000316c
  mask: 0x80
  name: IC2
  description: |
    Inter-Chip transceiver enable 2. These bits enables the Inter-Chip transceiver for each port (for the MPH case). To enable the interface, the bits PTS must be set to '011b' in the PORTSC2. Writing a '1' to each bit selects the IC_USB interface for that port.
ps7_usb1_IC_USB_IC_VDD2:
  addr: 0xe000316c
  mask: 0x70
  name: IC_VDD2
  description: |
    Inter-Chip voltage selection 2
    It selects which voltage is being supplied to the peripheral through each port. This field is read-only and set to '000b' in case of device mode operation.
    This field is read-only and set to '000b' in case of Single port host controller.
ps7_usb1_IC_USB_IC1:
  addr: 0xe000316c
  mask: 0x8
  name: IC1
  description: |
    Inter-Chip transceiver enable 1. These bits enables the Inter-Chip transceiver for each port (for the MPH case). To enable the interface, the bits PTS must be set to '011b' in the PORTSC1. Writing a '1' to each bit selects the IC_USB interface for that port. If the Controller is not a MPH
    implementation, IC8 to IC2 will be '0' and Read-Only.
ps7_usb1_IC_USB_IC_VDD1:
  addr: 0xe000316c
  mask: 0x7
  name: IC_VDD1
  description: |
    Inter-Chip voltage selection 1
    It selects which voltage is being supplied to the peripheral through each port
    000 - No voltage
    001 - 1.0V
    010 - 1.2V
    011 - 1.5V
    100 - 1.8V
    101 - 3.0V
    110 - Reserved
    111 - Reserved
    This field is read-only and set to '000b' in case of device mode operation.
    The voltage negotiation should happen between enabling port power (PP) in PORTSC1 register and asserting the run/stop bit in USBCMD register.
ps7_usb1_ULPI_VIEWPORT_ULPIWU:
  addr: 0xe0003170
  mask: 0x80000000
  name: ULPIWU
  description: |
    ULPI Wakeup.
    Writing the '1' to this bit will begin the wakeup operation. The bit will automatically transition to '0' after the wakeup is complete. Once this bit is set, the driver can not set it back to '0'.
    Note: The driver must never execute a wakeup and a read/write operation at the same time.
ps7_usb1_ULPI_VIEWPORT_ULPIRUN:
  addr: 0xe0003170
  mask: 0x40000000
  name: ULPIRUN
  description: |
    ULPIRUN
    Writing the '1' to this bit will begin the read/write operation. The bit will automatically transition to '0' after the read/write is complete. Once this bit is set, the driver can not set it back to '0'.
    Note: The driver must never execute a wakeup and a read/write operation at the same time.
ps7_usb1_ULPI_VIEWPORT_ULPIRW:
  addr: 0xe0003170
  mask: 0x20000000
  name: ULPIRW
  description: |
    ULPI Read/Write Control'0' - Read.'1' - Write.
    This bit selects between running a read or write operation.
ps7_usb1_ULPI_VIEWPORT_reserved:
  addr: 0xe0003170
  mask: 0x10000000
  name: reserved
  description: |
    Reserved
ps7_usb1_ULPI_VIEWPORT_ULPISS:
  addr: 0xe0003170
  mask: 0x8000000
  name: ULPISS
  description: |
    ULPI Synchronous State
    0: In another state (i.e. carkit, serial, low power).
    1: Normal synchronous state.
    This bit represents the state of the ULPI interface. Before reading this bit, the ULPIPORT field should be set accordingly if used in a MPH implementation.
ps7_usb1_ULPI_VIEWPORT_ULPIPORT:
  addr: 0xe0003170
  mask: 0x7000000
  name: ULPIPORT
  description: |
    ULPI Port Number.
    For the wakeup or read/write operation to be executed, this value selects the port number to which a ULPI PHY is attached. The range is 0 to 7. This field should always be written '000b' for non MPH implementations.
ps7_usb1_ULPI_VIEWPORT_ULPIADDR:
  addr: 0xe0003170
  mask: 0xff0000
  name: ULPIADDR
  description: |
    ULPI Data Address. When a read or write operation is commanded, the address of the operation is written to this field.
ps7_usb1_ULPI_VIEWPORT_ULPIDATRD:
  addr: 0xe0003170
  mask: 0xff00
  name: ULPIDATRD
  description: |
    ULPI Data Read.
    After a read operation completes, the result is placed in this field.
ps7_usb1_ULPI_VIEWPORT_ULPIDATWR:
  addr: 0xe0003170
  mask: 0xff
  name: ULPIDATWR
  description: |
    ULPI Data Write. When a write operation is commanded, the data to be sent is written to this field
ps7_usb1_ENDPTNAK_EPTN:
  addr: 0xe0003178
  mask: 0xffff0000
  name: EPTN
  description: |
    TX Endpoint NAK
    Each TX endpoint has 1 bit in this field. The bit is set when the Controller sends a NAK handshake on a received IN token for the corresponding endpoint.
    Bit 15 - Endpoint #15
    ...
    Bit 1 - Endpoint #1
    Bit 0 - Endpoint #0
    Only used in device mode.
ps7_usb1_ENDPTNAK_EPRN:
  addr: 0xe0003178
  mask: 0xffff
  name: EPRN
  description: |
    RX Endpoint NAK
    Each RX endpoint has 1 bit in this field. The bit is set when the Controller sends a NAK handshake on a received OUT or PING token for the corresponding endpoint.
    Bit 15 - Endpoint #15
    ...
    Bit 1 - Endpoint #1
    Bit 0 - Endpoint #0
    Only used in device mode.
ps7_usb1_ENDPTNAKEN_EPTNE:
  addr: 0xe000317c
  mask: 0xffff0000
  name: EPTNE
  description: |
    TX Endpoint NAK enable
    Each bit is an enable bit for the corresponding TX Endpoint NAK bit. If this bit is set and the corresponding TX Endpoint NAK bit is set, the NAK Interrupt bit is set.
    Bit 15 - Endpoint #15
    ...
    Bit 1 - Endpoint #1
    Bit 0 - Endpoint #0
    Only used in device mode.
ps7_usb1_ENDPTNAKEN_EPRNE:
  addr: 0xe000317c
  mask: 0xffff
  name: EPRNE
  description: |
    RX Endpoint NAK enable
    Each bit is an enable bit for the corresponding RX Endpoint NAK bit. If this bit is set and the corresponding RX Endpoint NAK bit is set, the NAK Interrupt bit is set.
    Bit 15 - Endpoint #15
    ...
    Bit 1 - Endpoint #1
    Bit 0 - Endpoint #0
    Only used in device mode.
ps7_usb1_CONFIGFLAG_reserved:
  addr: 0xe0003180
  mask: 0xffffffff
  name: reserved
  description: |
    RESERVED
ps7_usb1_PORTSC1_PTS:
  addr: 0xe0003184
  mask: 0xc0000000
  name: PTS
  description: |
    This register bit pair is used in conjunction with the configuration constant VUSB_HS_PHY_TYPE to control which parallel transceiver interface is selected'010b' -> 2, 6 - ULPI
    Note that this field is made up from PORTSCx bits 25, 30 and 31.
ps7_usb1_PORTSC1_STS:
  addr: 0xe0003184
  mask: 0x20000000
  name: STS
  description: |
    Serial Transceiver Select
    This register bit is used in conjunction with the configuration constant VUSB_HS_PHY_SERIAL to control whether the parallel or serial transceiver interface is selected for FS and LS operation. The Serial Interface Engine can be used in
    combination with the UTMI+ physical interface to provide FS/LS signaling instead of the parallel interface. If VUSB_HS_PHY_SERIAL is set for 0 or 1 then this bit is read only. If VUSB_HS_PHY_SERIAL is 2 or 3 then this bit is read/write.
    This bit has no effect unless Parallel Transceiver Select is set to UTMI+. The Serial/1.1 and IC_USB physical interface will use the Serial Interface Engine for FS/LS signaling
    regardless of this bit value.
ps7_usb1_PORTSC1_PTW:
  addr: 0xe0003184
  mask: 0x10000000
  name: PTW
  description: |
    Parallel Transceiver Width. Writing this bit to '0' selects the 8-bit [60MHz] UTMI+ interface.
ps7_usb1_PORTSC1_PSPD:
  addr: 0xe0003184
  mask: 0xc000000
  name: PSPD
  description: |
    Port Speed - RO. Default = 11b.
    This register field indicates the speed at which the port is operating.'00b' -> Full Speed'01b' -> Low Speed'10b' -> High Speed'11b' -> Not connected
ps7_usb1_PORTSC1_PTS2:
  addr: 0xe0003184
  mask: 0x2000000
  name: PTS2
  description: |
    Parallel Transceiver Select - RW. Default = Implementation dependent.
    MSB bit of PTS field.
ps7_usb1_PORTSC1_PFSC:
  addr: 0xe0003184
  mask: 0x1000000
  name: PFSC
  description: |
    Port Force Full Speed Connect - RW. Default = 0b.
    Writing this bit to a '1b' will force the port to only connect at Full Speed. It disables the chirp sequence that allows the port to identify itself as High Speed. This is useful for testing FS configurations with a HS host, hub or device. This bit is for debugging purposes.
ps7_usb1_PORTSC1_PHCD:
  addr: 0xe0003184
  mask: 0x800000
  name: PHCD
  description: |
    PHY Low Power Clock Disable - RW. Default = 0b.
    Writing this bit to a '1b' will disable the PHY clock. Writing a '0b' enables it. Reading this bit will indicate the status of the PHY clock. NOTE: The PHY clock cannot be disabled if it is being used as the system clock. In device mode, the PHY can be put into Low Power Clock Disable when the device is not running (USBCMD RS=0b) or the host has signaled suspend (PORTSCx SUSP=1b).
    Low Power Clock Disable will be cleared automatically when the host has signaled resume. Before forcing a resume from the device, the Controller driver must clear this bit.
    In host mode, the PHY can be put into Low Power Suspend Clock Disable when the downstream device has been put into suspend mode or when no downstream device is
    connected. Low Power Clock Disable is completely under the control of software.
ps7_usb1_PORTSC1_WKOC:
  addr: 0xe0003184
  mask: 0x400000
  name: WKOC
  description: |
    Wake on Over-current Enable
    Writing '1' to this bit enables the port to be sensitive to over-current conditions as wakeup events.
    This field is zero if Port Power (PP) is '0' or in device mode.
    This bit is output from the controller as signal pwrctl_wake_ovrcurr_en for use by an external power control circuit. Only used in host mode.
ps7_usb1_PORTSC1_WKDS:
  addr: 0xe0003184
  mask: 0x200000
  name: WKDS
  description: |
    Wake on Disconnect Enable
    Writing this bit to a one enables the port to be sensitive to device disconnects as wakeup events. This field is zero if Port Power (PP) is '0' or in device mode. This bit is output from the controller as signal pwrctl_wake_dscnnt_en for use by an external power control circuit.
ps7_usb1_PORTSC1_WKCN:
  addr: 0xe0003184
  mask: 0x100000
  name: WKCN
  description: |
    Wake on Connect Enable
    Writing this bit to a one enables the port to be sensitive to device connects as Wakeup events. This field is zero if Port Power(PP) is '0' or in device mode. This bit is output from the controller as signal pwrctl_wake_cnnt_en for use by an external power control circuit. Only used in host mode.
ps7_usb1_PORTSC1_PTC:
  addr: 0xe0003184
  mask: 0xf0000
  name: PTC
  description: |
    Port Test Control
    Any other value than zero indicates that the port is operating in test mode.
    Value Specific Test
    0000b -> TEST_MODE_DISABLE
    0001b -> J_STATE
    0010b -> K_STATE
    0011b -> SE0 (host) / NAK (device)
    0100b -> Packet
    0101b -> FORCE_ENABLE_HS
    0110b -> FORCE_ENABLE_FS
    0111b -> FORCE_ENABLE_LS
    1000b -> Reserved
    ... Reserved
    1111b
    -> Reserved
ps7_usb1_PORTSC1_PIC:
  addr: 0xe0003184
  mask: 0xc000
  name: PIC
  description: |
    Port Indicator Control
    Writing to this field has no effect if the P_INDICATOR bit in the HCSPARAMS register is
    a zero. If P_INDICATOR bit is a one, then the bits are:
    Value Meaning
    00b -> Port indicators are off
    01b -> Amber
    10b -> Green
    11b -> Undefined
    Refer to the USB Specification Revision 2.0 for a description on how these bits are to be used. This field is output from the controller as signals port_ind_ctl_1 and port_ind_ctl_0 for
ps7_usb1_PORTSC1_PO:
  addr: 0xe0003184
  mask: 0x2000
  name: PO
  description: |
    Port Owner
    Port owner hand off is not implemented in this design, therefore this bit will always read
    back as 0b.
ps7_usb1_PORTSC1_PP:
  addr: 0xe0003184
  mask: 0x1000
  name: PP
  description: |
    Port Power
    The function of this bit depends on the value of the Port Power Switching (PPC) field in the HCSPARAMS register. The behavior is as follows:
    PPC -> PP -> Operation
    0b -> 0b -> Read Only. A Controller in device mode does not have port power control switches.
    1b -> 1b/0b -> Read/Write. A Controller in host mode requires port power control switches.
    This bit represents the current setting of the switch ('0'=off, '1'=on). When power is not available on a port (i.e. PP equals to '0'), the port is non-functional and will not report attaches, detaches, etc. When an over-current condition is detected on a powered port and PPC is a one, the PP bit in each affected port may be transitioned by the Controller driver from '1' to '0'(removing power from the port).
    In device mode port power control is not necessary, thus PPC and PP = 0.
ps7_usb1_PORTSC1_LS:
  addr: 0xe0003184
  mask: 0xc00
  name: LS
  description: |
    Line Status
    These bits reflect the current logical levels of the D+ (bit 11) and D- (bit 10) signal lines.
    The encoding of the bits are:
    00b -> SE0
    10b -> J-state
    01b -> K-state
    11b -> Undefined
    In host mode, the use of line state by the Controller driver is not necessary (unlike EHCI), because the port controller state machine and the port routing manage the connection of LS and FS.
    In device mode, the use of line state by the Controller driver is not necessary.
ps7_usb1_PORTSC1_HSP:
  addr: 0xe0003184
  mask: 0x200
  name: HSP
  description: |
    High-Speed Port
    When the bit is one, the port is in high-speed mode and if set to zero, the port is not in a high-speed mode.
    Note: HSP is redundant with PSPD but will remain in the design for compatibility.
ps7_usb1_PORTSC1_PR:
  addr: 0xe0003184
  mask: 0x100
  name: PR
  description: |
    Port Reset - RW. Default = 0b.
    This field is zero if Port Power(PP) is '0'.
    Host mode: 1=Port is in Reset. 0=Port is not in Reset.
    Device Mode: This bit is a read only status bit. Device reset from the USB bus is also indicated in the USBSTS register
ps7_usb1_PORTSC1_SUSP:
  addr: 0xe0003184
  mask: 0x80
  name: SUSP
  description: |
    Suspend
    Host mode: 1=Port in suspend state. 0=Port not in suspend state. Port Enabled bit and Suspend bit of this register define the port states as follows:
    Bits [Port Enabled, Suspend] Port State
    0x Disable
    10 Enable
    11 Suspend
    Device mode: Read Only. 1=Port in suspend state. 0=Port not in suspend state. In device mode this bit is a read only status bit.
ps7_usb1_PORTSC1_FPR:
  addr: 0xe0003184
  mask: 0x40
  name: FPR
  description: |
    Force Port Resume
    1= Resume detected/driven on port.
    0=No resume (K-state) detected/driven on port.
ps7_usb1_PORTSC1_OCC:
  addr: 0xe0003184
  mask: 0x20
  name: OCC
  description: |
    Over-current Change
    This bit gets set to '1' when there is a change to Over-current Active. Software clears this bit by writing a '1' to this bit position.
    When in host mode implementations the user can provide over-current detection to the vbus_pwr_fault input for this condition.
    For device mode this bit shall always be '0'.
ps7_usb1_PORTSC1_OCA:
  addr: 0xe0003184
  mask: 0x10
  name: OCA
  description: |
    Over-current Active
    Value Meaning'1b' -> This port currently has an over-current condition.'0b' -> This port does not have an over-current condition.
    This bit will automatically transition from '1' to '0' when the over current condition is removed.
    For host mode implementations the user can provide over-current detection to the vbus_pwr_fault input for this condition.
    For device mode implementations this bit shall always be '0'.
ps7_usb1_PORTSC1_PEC:
  addr: 0xe0003184
  mask: 0x8
  name: PEC
  description: |
    Port Enabled Change
    If set to '1' indicates a Port Enabled/Disabled status change.
    Host mode:
    For the root hub, this bit gets set to a '1' only when a port is disabled due to disconnect on the port or due to the appropriate conditions existing at the EOF2 point (See Chapter 11 of the USB Specification). Software clears this by writing a '1' to it. This field is '0' if Port Power(PP) is '0'.
    Device mode:
    The device port is always enabled. (This bit will be '0').
ps7_usb1_PORTSC1_PE:
  addr: 0xe0003184
  mask: 0x4
  name: PE
  description: |
    Port Enabled
    1 -> Enable
    0-> Disable
    Host mode:
    Ports can only be enabled by Controller as a part of the reset and enable. Software cannot enable a port by writing a '1' to this field. Ports can be disabled by either a fault condition (disconnect event or other fault condition) or by the software. This field is '0' if Port Power(PP) is '0' in host mode.
    Device mode:
    The device port is always enabled. (This bit will be always '1').
ps7_usb1_PORTSC1_CSC:
  addr: 0xe0003184
  mask: 0x2
  name: CSC
  description: |
    Connect Status Change
    If set to '1' indicates a change in Current Connect Status (CCS).
    Host mode:
    Indicates a change has occurred in the port's Current Connect Status. The Controller sets this bit for all changes to the port device connect status, even if system software
    has not cleared an existing connect status change. For example, the insertion status changes twice before system software has cleared the changed condition, hub hardware will be 'setting' an already-set bit (i.e., the bit will remain set). Software clears this bit by writing a '1' to it. This field is '0' if Port Power(PP) is '0' in host mode.
    Device mode:
    This bit is undefined in device mode.
ps7_usb1_PORTSC1_CCS:
  addr: 0xe0003184
  mask: 0x1
  name: CCS
  description: |
    Current Connect Status.
    Host mode:
    1 -> Device is present on port.
    0 -> No device is present.
    Device mode:
    1 -> Attached.
    0 -> Not Attached.
ps7_usb1_OTGSC_reserved:
  addr: 0xe00031a4
  mask: 0x80000000
  name: reserved
  description: |
    Reserved
ps7_usb1_OTGSC_DPIE:
  addr: 0xe00031a4
  mask: 0x40000000
  name: DPIE
  description: |
    Data Pulse Interrupt Enable
    This bit enables the generation of an interrupt if bit DPIS is set.
ps7_usb1_OTGSC_n1msE:
  addr: 0xe00031a4
  mask: 0x20000000
  name: n1msE
  description: |
    1 millisecond timer Interrupt Enable
    This bit enables the generation of an interrupt if bit 1msS is set.
ps7_usb1_OTGSC_BSEIE:
  addr: 0xe00031a4
  mask: 0x10000000
  name: BSEIE
  description: |
    B Session End Interrupt Enable
    This bit enables the generation of an interrupt if bit BSEIS is set
ps7_usb1_OTGSC_BSVIE:
  addr: 0xe00031a4
  mask: 0x8000000
  name: BSVIE
  description: |
    B Session Valid Interrupt Enable
    This bit enables the generation of an interrupt if bit BSVIS is set.
ps7_usb1_OTGSC_ASVIE:
  addr: 0xe00031a4
  mask: 0x4000000
  name: ASVIE
  description: |
    A Session Valid Interrupt Enable
    This bit enables the generation of an interrupt if bit ASVIS is set.
ps7_usb1_OTGSC_AVVIE:
  addr: 0xe00031a4
  mask: 0x2000000
  name: AVVIE
  description: |
    A VBus Valid Interrupt Enable
    This bit enables the generation of an interrupt if bit AVVIS is set.
ps7_usb1_OTGSC_IDIE:
  addr: 0xe00031a4
  mask: 0x1000000
  name: IDIE
  description: |
    USB ID Interrupt Enable
    This bit enables the generation of an interrupt if bit IDIS is set.
ps7_usb1_OTGSC_reserved_1:
  addr: 0xe00031a4
  mask: 0x800000
  name: reserved_1
  description: |
    Reserved
ps7_usb1_OTGSC_DPIS:
  addr: 0xe00031a4
  mask: 0x400000
  name: DPIS
  description: |
    Data Pulse Interrupt Status
    This bit is set when data bus pulsing occurs on DP or DM. Data bus pulsing is only detected when USBMODE.CM = Host ('11b') and PORTSC0.PP = Off ('0b').
    Software must write a '1' to clear this bit.
ps7_usb1_OTGSC_n1msS:
  addr: 0xe00031a4
  mask: 0x200000
  name: n1msS
  description: |
    1 millisecond timer Interrupt Status.
    This bit is set once every millisecond. Software must write a '1' to clear this bit.
ps7_usb1_OTGSC_BSEIS:
  addr: 0xe00031a4
  mask: 0x100000
  name: BSEIS
  description: |
    B Session End Interrupt Status
    This bit is set when VBus has fallen below the B session end threshold. Software must write a '1' to clear this bit.
ps7_usb1_OTGSC_BSVIS:
  addr: 0xe00031a4
  mask: 0x80000
  name: BSVIS
  description: |
    B Session Valid Interrupt Status
    This bit is set when VBus has either risen above or fallen below the B session valid threshold (0.8 VDC).
    Software must write a '1' to clear this bit.
ps7_usb1_OTGSC_ASVIS:
  addr: 0xe00031a4
  mask: 0x40000
  name: ASVIS
  description: |
    A Session Valid Interrupt Status
    This bit is set when VBus has either risen above or fallen below the A session valid threshold (0.8 VDC).
    Software must write a '1' to clear this bit.
ps7_usb1_OTGSC_AVVIS:
  addr: 0xe00031a4
  mask: 0x20000
  name: AVVIS
  description: |
    Frame Index This bit is set when VBus has either risen above or fallen below the VBus valid threshold
    (4.4 VDC) on an A device. Software must write a '1' to clear this bit.
ps7_usb1_OTGSC_IDIS:
  addr: 0xe00031a4
  mask: 0x10000
  name: IDIS
  description: |
    USB ID Interrupt Status
    This bit is set when a change on the ID input has been detected. Software must write a '1' to clear this bit.
ps7_usb1_OTGSC_reserved_2:
  addr: 0xe00031a4
  mask: 0x8000
  name: reserved_2
  description: |
    Reserved
ps7_usb1_OTGSC_DPS:
  addr: 0xe00031a4
  mask: 0x4000
  name: DPS
  description: |
    Data Bus Pulsing Status
    A '1' indicates data bus pulsing is being detected on the port.
ps7_usb1_OTGSC_n1msT:
  addr: 0xe00031a4
  mask: 0x2000
  name: n1msT
  description: |
    1 millisecond timer toggle
    This bit toggles once per millisecond.
ps7_usb1_OTGSC_BSE:
  addr: 0xe00031a4
  mask: 0x1000
  name: BSE
  description: |
    B Session End
    Indicates VBus is below the B session end threshold.
ps7_usb1_OTGSC_BSV:
  addr: 0xe00031a4
  mask: 0x800
  name: BSV
  description: |
    B Session Valid
    Indicates VBus is above the B session valid threshold.
ps7_usb1_OTGSC_ASV:
  addr: 0xe00031a4
  mask: 0x400
  name: ASV
  description: |
    A Session Valid
    Indicates VBus is above the A session valid threshold.
ps7_usb1_OTGSC_AVV:
  addr: 0xe00031a4
  mask: 0x200
  name: AVV
  description: |
    A VBus Valid.
    Indicates VBus is above the A VBus valid threshold.
ps7_usb1_OTGSC_ID:
  addr: 0xe00031a4
  mask: 0x100
  name: ID
  description: |
    USB ID'0' = A device, '1' = B device.
ps7_usb1_OTGSC_HABA:
  addr: 0xe00031a4
  mask: 0x80
  name: HABA
  description: |
    Hardware Assist B-Disconnect to A-connect'0' = Disabled, '1' = Enable automatic B-Disconnect to A-Connect sequence.
ps7_usb1_OTGSC_HADP:
  addr: 0xe00031a4
  mask: 0x40
  name: HADP
  description: |
    Hardware Assist Data-Pulse
    If set, the hardware assist data pulsing sequence starts.
ps7_usb1_OTGSC_IDPU:
  addr: 0xe00031a4
  mask: 0x20
  name: IDPU
  description: |
    ID Pullup
    This bit provide control over the ID Pullup resister.'0' = off, '1' = on. When this bit is '0' the ID input will not be sampled.
ps7_usb1_OTGSC_DP:
  addr: 0xe00031a4
  mask: 0x10
  name: DP
  description: |
    Data Pulsing
    Setting this bit causes the pullup on DP to be asserted for data pulsing during SRP.
ps7_usb1_OTGSC_OT:
  addr: 0xe00031a4
  mask: 0x8
  name: OT
  description: |
    OTG Termination
    This bit must be set when the Controller is in device mode. It controls the pulldown on DM.
ps7_usb1_OTGSC_HAAR:
  addr: 0xe00031a4
  mask: 0x4
  name: HAAR
  description: |
    Hardware Assist Auto-Reset'0' = Disabled, '1' = Enable automatic reset after connect on host port.
ps7_usb1_OTGSC_VC:
  addr: 0xe00031a4
  mask: 0x2
  name: VC
  description: |
    VBUS Charge
    Setting this bit causes the VBus line to be charged. This is used for VBus pulsing during SRP.
ps7_usb1_OTGSC_VD:
  addr: 0xe00031a4
  mask: 0x1
  name: VD
  description: |
    VBUS Discharge.
    Setting this bit causes VBus to discharge through a resistor.
ps7_usb1_USBMODE_SRT:
  addr: 0xe00031a8
  mask: 0x8000
  name: SRT
  description: |
    Shorten Reset Time
    When the Controller is in host mode, this bit enables a bypass of the Chirp J/K reset handshake, saving 6-7ms in simulation time for each reset sequence. This bit should only be used for initial system integration simulations, and should always be set to 0 for
    normal operation.
ps7_usb1_USBMODE_reserved:
  addr: 0xe00031a8
  mask: 0x7fc0
  name: reserved
  description: |
    Reserved
ps7_usb1_USBMODE_VBPS:
  addr: 0xe00031a8
  mask: 0x20
  name: VBPS
  description: |
    Vbus Power Select'0' -> Output is '0''1' -> Output is '1'This bit is connected to the vbus_pwr_select output and can be used for any generic control but is named to be used by logic that selects between an on-chip Vbus power source (charge pump) and an off-chip source in systems when both are available.
    Only used in host mode.
ps7_usb1_USBMODE_SDIS:
  addr: 0xe00031a8
  mask: 0x10
  name: SDIS
  description: |
    Stream Disable Mode'0' -> Inactive'1' -> Active
    Device mode:
    Setting to a '1' disables double priming on both RX and TX for low bandwidth systems.
    Host Mode:
    Setting to a '1' ensures that overruns/under runs of the latency FIFO are eliminated for low bandwidth systems where the RX and TX buffers are sufficient to contain the entire packet.
ps7_usb1_USBMODE_SLOM:
  addr: 0xe00031a8
  mask: 0x8
  name: SLOM
  description: |
    Setup Lockout Mode
    This bit controls behavior of the setup lock mechanism.'0' -> Setup Lockouts On.'1' -> Setup Lockouts Off (DCD requires use of Setup Data Buffer Tripwire in USBCMD).
    Only used in device mode
ps7_usb1_USBMODE_ES:
  addr: 0xe00031a8
  mask: 0x4
  name: ES
  description: |
    Endian Select
    This bit can change the byte ordering of the transfer buffers to match the host microprocessor bus architecture. The bit fields in the microprocessor interface and the DMA data structures (including the setup buffer within the device QH) are unaffected by the value of this bit, because they are based upon 32-bit words.'0' Little Endian -> first byte referenced in least significant byte of 32-bit word.'1' Big Endian -> first byte referenced in most significant byte of 32-bit word.
ps7_usb1_USBMODE_CM:
  addr: 0xe00031a8
  mask: 0x3
  name: CM
  description: |
    Controller Mode
    Controller mode is defaulted to the proper mode for host only and device only implementations. For those designs that contain both host AND device capability (OTG),
    the Controller will default to an idle state and will need to be initialized to the desired operating mode after reset. For combination host/device controllers, this register can
    only be written once after reset. If it is necessary to switch modes, software must reset the controller by writing to the RST bit in the USBCMD register before reprogramming
    this register.
    Value Meaning'00b' -> Idle (Default for combination host/device).'01b' -> Reserved.'10b' -> Controller in device mode (Default for device only controller).'11b' -> Controller in host mode (Default for host only controller).
ps7_usb1_ENDPTSETUPSTAT_ENDPTSETUPSTAT:
  addr: 0xe00031ac
  mask: 0xffff
  name: ENDPTSETUPSTAT
  description: |
    ENDPTSETUPSTATSetup Endpoint Status
    For every setup transaction that is received, the corresponding bit in this register is set to '1'. Software must clear to acknowledge the setup transfer by writing a '1' to the respective bit after it has read the setup data from Queue Head. The response to a setup packet as in the order of operations and total response time is crucial to limit bus timeouts if the setup lockout mechanism is engaged.
    Only used in device mode.
ps7_usb1_ENDPTPRIME_PETB:
  addr: 0xe00031b0
  mask: 0xffff0000
  name: PETB
  description: |
    Prime Endpoint Transmit Buffer - RWS. Default = 0000h.
    For each endpoint a corresponding bit is used to request that a buffer prepared for a transmit operation in order to respond to a USB IN/INTERRUPT transaction. Software
    should write a '1' to the corresponding bit when posting a new transfer descriptor to an endpoint. Hardware will automatically use this bit to begin parsing for a new transfer
    descriptor from the queue head and prepare a transmit buffer. Hardware will clear this bit when the associated endpoint(s) is (are) successfully primed.
    Note: These bits will be momentarily set by hardware during hardware re-priming operations when a dTD is retired, and the dQH is updated.
    Bit 15 - Endpoint #15
    ...
    Bit 1 - Endpoint #1
    Bit 0 - Endpoint #0
    Only used in device mode.
ps7_usb1_ENDPTPRIME_PERB:
  addr: 0xe00031b0
  mask: 0xffff
  name: PERB
  description: |
    Prime Endpoint Receive Buffer
    For each endpoint, a corresponding bit is used to request a buffer prepare for a receive operation for when a USB host initiates a USB OUT transaction. Software should write a '1' to the corresponding bit whenever posting a new transfer descriptor to an endpoint. Hardware will automatically use this bit to begin parsing for a new transfer descriptor from the queue head and prepare a receive buffer. Hardware will clear this bit when the associated endpoint(s) is (are) successfully primed.
    Note: These bits will be momentarily set by hardware during hardware re-priming operations when a dTD is retired, and the dQH is updated.
    Bit 15 - Endpoint #15
    ...
    Bit 1 - Endpoint #1
    Bit 0 - Endpoint #0
    Only used in device mode.
ps7_usb1_ENDPTFLUSH_FETB:
  addr: 0xe00031b4
  mask: 0xffff0000
  name: FETB
  description: |
    Flush Endpoint Transmit Buffer
    Writing a '1' to a bit(s) in this register will cause the associated endpoint(s) to clear any primed buffers. If a packet is in progress for one of the associated endpoints, then that
    transfer will continue until completion. Hardware will clear this register after the endpoint flush operation is successful.
    Bit 15 - Endpoint #15
    ...
    Bit 1 - Endpoint #1
    Bit 0 - Endpoint #0
    Only used in device mode.
ps7_usb1_ENDPTFLUSH_FERB:
  addr: 0xe00031b4
  mask: 0xffff
  name: FERB
  description: |
    Flush Endpoint Receive Buffer
    Writing a '1' to a bit(s) will cause the associated endpoint(s) to clear any primed buffers. If a packet is in progress for one of the associated endpoints, then that transfer will
    continue until completion. Hardware will clear this register after the endpoint flush operation is successful.
    Bit 15 - Endpoint #15
    ...
    Bit 1 - Endpoint #1
    Bit 0 - Endpoint #0
    Only used in device mode.
ps7_usb1_ENDPTSTAT_ETBR:
  addr: 0xe00031b8
  mask: 0xffff0000
  name: ETBR
  description: |
    Endpoint Transmit Buffer Ready
    One bit for each endpoint indicates status of the respective endpoint buffer. This bit is set to a '1' by the hardware as a response to receiving a command from a corresponding bit in the ENDPTPRIME register. There will always be a delay between setting a bit in the ENDPTPRIME register and endpoint indicating ready. This delay time varies based upon the current USB traffic and the number of bits set in the
    ENDPTPRIME register. Buffer ready is cleared by USB reset, by the USB DMA system, or through the ENDPTFLUSH register.
    Note: These bits will be momentarily cleared by hardware during hardware endpoint re-priming operations when a dTD is retired, and the dQH is updated.
    Bit 15 - Endpoint #15
    ...
    Bit 1 - Endpoint #1
    Bit 0 - Endpoint #0
    Only used in device mode.
ps7_usb1_ENDPTSTAT_ERBR:
  addr: 0xe00031b8
  mask: 0xffff
  name: ERBR
  description: |
    Endpoint Receive Buffer Ready
    One bit for each endpoint indicates status of the respective endpoint buffer. This bit is set to a '1' by the hardware as a response to receiving a command from a corresponding bit in the ENDPTPRIME register. There will always be a delay between setting a bit in the ENDPTPRIME register and endpoint indicating ready. This delay time varies based upon the current USB traffic and the number of bits set in the
    ENDPTPRIME register. Buffer ready is cleared by USB reset, by the USB DMA system, or through the ENDPTFLUSH register.
    Note: These bits will be momentarily cleared by hardware during hardware endpoint re-priming operations when a dTD is retired, and the dQH is updated.
    Bit 15 - Endpoint #15
    ...
    Bit 1 - Endpoint #1
    Bit 0 - Endpoint #0
    Only used in device mode.
ps7_usb1_ENDPTCOMPLETE_ETCE:
  addr: 0xe00031bc
  mask: 0xffff0000
  name: ETCE
  description: |
    Endpoint Transmit Complete Event
    Each bit indicates a transmit event (IN/INTERRUPT) occurred and software should read the corresponding endpoint queue to determine the endpoint status. If the
    corresponding IOC bit is set in the Transfer Descriptor, then this bit will be set simultaneously with the USBINT. Writing a '1' will clear the corresponding bit in this register.
    Bit 15 - Endpoint #15
    ...
    Bit 1 - Endpoint #1
    Bit 0 - Endpoint #0
    Only used in device mode.
ps7_usb1_ENDPTCOMPLETE_ERCE:
  addr: 0xe00031bc
  mask: 0xffff
  name: ERCE
  description: |
    Endpoint Receive Complete Event
    Each bit indicates a received event (OUT) occurred and software should read the corresponding endpoint queue to determine the transfer status. If the corresponding IOC bit is set in the Transfer Descriptor, then this bit will be set simultaneously with the USBINT. Writing a '1' will clear the corresponding bit in this register.
    Bit 15 - Endpoint #15
    ...
    Bit 1 - Endpoint #1
    Bit 0 - Endpoint #0
    Only used in device mode.
ps7_usb1_ENDPTCTRL0_TXE:
  addr: 0xe00031c0
  mask: 0x800000
  name: TXE
  description: |
    TX Endpoint Enable
    Endpoint0 is always enabled and this bit always set to '1'.
ps7_usb1_ENDPTCTRL0_reserved:
  addr: 0xe00031c0
  mask: 0x700000
  name: reserved
  description: |
    Reserved
ps7_usb1_ENDPTCTRL0_TXT:
  addr: 0xe00031c0
  mask: 0xc0000
  name: TXT
  description: |
    TX Endpoint Type
    Endpoint0 is fixed as a Control End Point and this field always set to '00'.
ps7_usb1_ENDPTCTRL0_reserved_1:
  addr: 0xe00031c0
  mask: 0x20000
  name: reserved_1
  description: |
    Reserved
ps7_usb1_ENDPTCTRL0_TXS:
  addr: 0xe00031c0
  mask: 0x10000
  name: TXS
  description: |
    TX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
ps7_usb1_ENDPTCTRL0_reserved_2:
  addr: 0xe00031c0
  mask: 0xff00
  name: reserved_2
  description: |
    Reserved
ps7_usb1_ENDPTCTRL0_RXE:
  addr: 0xe00031c0
  mask: 0x80
  name: RXE
  description: |
    RX Endpoint Enable
    Endpoint0 is always enabled and this bit always set to '1'.
ps7_usb1_ENDPTCTRL0_reserved_3:
  addr: 0xe00031c0
  mask: 0x70
  name: reserved_3
  description: |
    Reserved
ps7_usb1_ENDPTCTRL0_RXT:
  addr: 0xe00031c0
  mask: 0xc
  name: RXT
  description: |
    RX Endpoint Type
    Endpoint0 is fixed as a Control End Point and this field always set to '00'.
ps7_usb1_ENDPTCTRL0_reserved_4:
  addr: 0xe00031c0
  mask: 0x2
  name: reserved_4
  description: |
    Reserved
ps7_usb1_ENDPTCTRL0_RXS:
  addr: 0xe00031c0
  mask: 0x1
  name: RXS
  description: |
    RX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
    Software can write a one to this bit to force the endpoint to return a STALL handshake to the Host. It will continue returning STALL until the bit is cleared by software or it will automatically be cleared upon receipt of a new SETUP request.
ps7_usb1_ENDPTCTRL1_TXE:
  addr: 0xe00031c4
  mask: 0x800000
  name: TXE
  description: |
    TX Endpoint Enable
    Value Meaning'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb1_ENDPTCTRL1_TXR:
  addr: 0xe00031c4
  mask: 0x400000
  name: TXR
  description: |
    TX Data Toggle Reset
    Write '1' will reset the PID sequence. Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb1_ENDPTCTRL1_TXI:
  addr: 0xe00031c4
  mask: 0x200000
  name: TXI
  description: |
    TX Data Toggle Inhibit
    Value Meaning'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb1_ENDPTCTRL1_reserved:
  addr: 0xe00031c4
  mask: 0x100000
  name: reserved
  description: |
    Reserved
ps7_usb1_ENDPTCTRL1_TXT:
  addr: 0xe00031c4
  mask: 0xc0000
  name: TXT
  description: |
    TX Endpoint Type'00' -> Control'01' -> Isochronous'10' -> Bulk'11' -> Interrupt
ps7_usb1_ENDPTCTRL1_TXD:
  addr: 0xe00031c4
  mask: 0x20000
  name: TXD
  description: |
    TX Endpoint Data
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb1_ENDPTCTRL1_TXS:
  addr: 0xe00031c4
  mask: 0x10000
  name: TXS
  description: |
    TX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
ps7_usb1_ENDPTCTRL1_reserved_1:
  addr: 0xe00031c4
  mask: 0xff00
  name: reserved_1
  description: |
    Reserved
ps7_usb1_ENDPTCTRL1_RXE:
  addr: 0xe00031c4
  mask: 0x80
  name: RXE
  description: |
    RX Endpoint Enable'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb1_ENDPTCTRL1_RXR:
  addr: 0xe00031c4
  mask: 0x40
  name: RXR
  description: |
    RX Data Toggle Reset
    Write '1' will reset the PID sequence.
    Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb1_ENDPTCTRL1_RXI:
  addr: 0xe00031c4
  mask: 0x20
  name: RXI
  description: |
    RX Data Toggle Inhibit'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb1_ENDPTCTRL1_reserved_2:
  addr: 0xe00031c4
  mask: 0x10
  name: reserved_2
  description: |
    Reserved
ps7_usb1_ENDPTCTRL1_RXT:
  addr: 0xe00031c4
  mask: 0xc
  name: RXT
  description: |
    RX Endpoint Type
    Endpoint0 is fixed as a Control End Point and this field always set to '00'.
ps7_usb1_ENDPTCTRL1_RXD:
  addr: 0xe00031c4
  mask: 0x2
  name: RXD
  description: |
    RX Endpoint Data Sink
    Value Meaning
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb1_ENDPTCTRL1_RXS:
  addr: 0xe00031c4
  mask: 0x1
  name: RXS
  description: |
    RX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
    Software can write a one to this bit to force the endpoint to return a STALL handshake to the Host. It will continue returning STALL until the bit is cleared by software or it will automatically be cleared upon receipt of a new SETUP request.
ps7_usb1_ENDPTCTRL2_TXE:
  addr: 0xe00031c8
  mask: 0x800000
  name: TXE
  description: |
    TX Endpoint Enable
    Value Meaning'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb1_ENDPTCTRL2_TXR:
  addr: 0xe00031c8
  mask: 0x400000
  name: TXR
  description: |
    TX Data Toggle Reset
    Write '1' will reset the PID sequence. Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb1_ENDPTCTRL2_TXI:
  addr: 0xe00031c8
  mask: 0x200000
  name: TXI
  description: |
    TX Data Toggle Inhibit
    Value Meaning'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb1_ENDPTCTRL2_reserved:
  addr: 0xe00031c8
  mask: 0x100000
  name: reserved
  description: |
    Reserved
ps7_usb1_ENDPTCTRL2_TXT:
  addr: 0xe00031c8
  mask: 0xc0000
  name: TXT
  description: |
    TX Endpoint Type'00' -> Control'01' -> Isochronous'10' -> Bulk'11' -> Interrupt
ps7_usb1_ENDPTCTRL2_TXD:
  addr: 0xe00031c8
  mask: 0x20000
  name: TXD
  description: |
    TX Endpoint Data
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb1_ENDPTCTRL2_TXS:
  addr: 0xe00031c8
  mask: 0x10000
  name: TXS
  description: |
    TX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
ps7_usb1_ENDPTCTRL2_reserved_1:
  addr: 0xe00031c8
  mask: 0xff00
  name: reserved_1
  description: |
    Reserved
ps7_usb1_ENDPTCTRL2_RXE:
  addr: 0xe00031c8
  mask: 0x80
  name: RXE
  description: |
    RX Endpoint Enable'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb1_ENDPTCTRL2_RXR:
  addr: 0xe00031c8
  mask: 0x40
  name: RXR
  description: |
    RX Data Toggle Reset
    Write '1' will reset the PID sequence.
    Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb1_ENDPTCTRL2_RXI:
  addr: 0xe00031c8
  mask: 0x20
  name: RXI
  description: |
    RX Data Toggle Inhibit'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb1_ENDPTCTRL2_reserved_2:
  addr: 0xe00031c8
  mask: 0x10
  name: reserved_2
  description: |
    Reserved
ps7_usb1_ENDPTCTRL2_RXT:
  addr: 0xe00031c8
  mask: 0xc
  name: RXT
  description: |
    RX Endpoint Type
    Endpoint0 is fixed as a Control End Point and this field always set to '00'.
ps7_usb1_ENDPTCTRL2_RXD:
  addr: 0xe00031c8
  mask: 0x2
  name: RXD
  description: |
    RX Endpoint Data Sink
    Value Meaning
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb1_ENDPTCTRL2_RXS:
  addr: 0xe00031c8
  mask: 0x1
  name: RXS
  description: |
    RX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
    Software can write a one to this bit to force the endpoint to return a STALL handshake to the Host. It will continue returning STALL until the bit is cleared by software or it will automatically be cleared upon receipt of a new SETUP request.
ps7_usb1_ENDPTCTRL3_TXE:
  addr: 0xe00031cc
  mask: 0x800000
  name: TXE
  description: |
    TX Endpoint Enable
    Value Meaning'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb1_ENDPTCTRL3_TXR:
  addr: 0xe00031cc
  mask: 0x400000
  name: TXR
  description: |
    TX Data Toggle Reset
    Write '1' will reset the PID sequence. Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb1_ENDPTCTRL3_TXI:
  addr: 0xe00031cc
  mask: 0x200000
  name: TXI
  description: |
    TX Data Toggle Inhibit
    Value Meaning'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb1_ENDPTCTRL3_reserved:
  addr: 0xe00031cc
  mask: 0x100000
  name: reserved
  description: |
    Reserved
ps7_usb1_ENDPTCTRL3_TXT:
  addr: 0xe00031cc
  mask: 0xc0000
  name: TXT
  description: |
    TX Endpoint Type'00' -> Control'01' -> Isochronous'10' -> Bulk'11' -> Interrupt
ps7_usb1_ENDPTCTRL3_TXD:
  addr: 0xe00031cc
  mask: 0x20000
  name: TXD
  description: |
    TX Endpoint Data
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb1_ENDPTCTRL3_TXS:
  addr: 0xe00031cc
  mask: 0x10000
  name: TXS
  description: |
    TX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
ps7_usb1_ENDPTCTRL3_reserved_1:
  addr: 0xe00031cc
  mask: 0xff00
  name: reserved_1
  description: |
    Reserved
ps7_usb1_ENDPTCTRL3_RXE:
  addr: 0xe00031cc
  mask: 0x80
  name: RXE
  description: |
    RX Endpoint Enable'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb1_ENDPTCTRL3_RXR:
  addr: 0xe00031cc
  mask: 0x40
  name: RXR
  description: |
    RX Data Toggle Reset
    Write '1' will reset the PID sequence.
    Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb1_ENDPTCTRL3_RXI:
  addr: 0xe00031cc
  mask: 0x20
  name: RXI
  description: |
    RX Data Toggle Inhibit'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb1_ENDPTCTRL3_reserved_2:
  addr: 0xe00031cc
  mask: 0x10
  name: reserved_2
  description: |
    Reserved
ps7_usb1_ENDPTCTRL3_RXT:
  addr: 0xe00031cc
  mask: 0xc
  name: RXT
  description: |
    RX Endpoint Type
    Endpoint0 is fixed as a Control End Point and this field always set to '00'.
ps7_usb1_ENDPTCTRL3_RXD:
  addr: 0xe00031cc
  mask: 0x2
  name: RXD
  description: |
    RX Endpoint Data Sink
    Value Meaning
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb1_ENDPTCTRL3_RXS:
  addr: 0xe00031cc
  mask: 0x1
  name: RXS
  description: |
    RX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
    Software can write a one to this bit to force the endpoint to return a STALL handshake to the Host. It will continue returning STALL until the bit is cleared by software or it will automatically be cleared upon receipt of a new SETUP request.
ps7_usb1_ENDPTCTRL4_TXE:
  addr: 0xe00031d0
  mask: 0x800000
  name: TXE
  description: |
    TX Endpoint Enable
    Value Meaning'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb1_ENDPTCTRL4_TXR:
  addr: 0xe00031d0
  mask: 0x400000
  name: TXR
  description: |
    TX Data Toggle Reset
    Write '1' will reset the PID sequence. Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb1_ENDPTCTRL4_TXI:
  addr: 0xe00031d0
  mask: 0x200000
  name: TXI
  description: |
    TX Data Toggle Inhibit
    Value Meaning'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb1_ENDPTCTRL4_reserved:
  addr: 0xe00031d0
  mask: 0x100000
  name: reserved
  description: |
    Reserved
ps7_usb1_ENDPTCTRL4_TXT:
  addr: 0xe00031d0
  mask: 0xc0000
  name: TXT
  description: |
    TX Endpoint Type'00' -> Control'01' -> Isochronous'10' -> Bulk'11' -> Interrupt
ps7_usb1_ENDPTCTRL4_TXD:
  addr: 0xe00031d0
  mask: 0x20000
  name: TXD
  description: |
    TX Endpoint Data
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb1_ENDPTCTRL4_TXS:
  addr: 0xe00031d0
  mask: 0x10000
  name: TXS
  description: |
    TX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
ps7_usb1_ENDPTCTRL4_reserved_1:
  addr: 0xe00031d0
  mask: 0xff00
  name: reserved_1
  description: |
    Reserved
ps7_usb1_ENDPTCTRL4_RXE:
  addr: 0xe00031d0
  mask: 0x80
  name: RXE
  description: |
    RX Endpoint Enable'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb1_ENDPTCTRL4_RXR:
  addr: 0xe00031d0
  mask: 0x40
  name: RXR
  description: |
    RX Data Toggle Reset
    Write '1' will reset the PID sequence.
    Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb1_ENDPTCTRL4_RXI:
  addr: 0xe00031d0
  mask: 0x20
  name: RXI
  description: |
    RX Data Toggle Inhibit'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb1_ENDPTCTRL4_reserved_2:
  addr: 0xe00031d0
  mask: 0x10
  name: reserved_2
  description: |
    Reserved
ps7_usb1_ENDPTCTRL4_RXT:
  addr: 0xe00031d0
  mask: 0xc
  name: RXT
  description: |
    RX Endpoint Type
    Endpoint0 is fixed as a Control End Point and this field always set to '00'.
ps7_usb1_ENDPTCTRL4_RXD:
  addr: 0xe00031d0
  mask: 0x2
  name: RXD
  description: |
    RX Endpoint Data Sink
    Value Meaning
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb1_ENDPTCTRL4_RXS:
  addr: 0xe00031d0
  mask: 0x1
  name: RXS
  description: |
    RX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
    Software can write a one to this bit to force the endpoint to return a STALL handshake to the Host. It will continue returning STALL until the bit is cleared by software or it will automatically be cleared upon receipt of a new SETUP request.
ps7_usb1_ENDPTCTRL5_TXE:
  addr: 0xe00031d4
  mask: 0x800000
  name: TXE
  description: |
    TX Endpoint Enable
    Value Meaning'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb1_ENDPTCTRL5_TXR:
  addr: 0xe00031d4
  mask: 0x400000
  name: TXR
  description: |
    TX Data Toggle Reset
    Write '1' will reset the PID sequence. Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb1_ENDPTCTRL5_TXI:
  addr: 0xe00031d4
  mask: 0x200000
  name: TXI
  description: |
    TX Data Toggle Inhibit
    Value Meaning'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb1_ENDPTCTRL5_reserved:
  addr: 0xe00031d4
  mask: 0x100000
  name: reserved
  description: |
    Reserved
ps7_usb1_ENDPTCTRL5_TXT:
  addr: 0xe00031d4
  mask: 0xc0000
  name: TXT
  description: |
    TX Endpoint Type'00' -> Control'01' -> Isochronous'10' -> Bulk'11' -> Interrupt
ps7_usb1_ENDPTCTRL5_TXD:
  addr: 0xe00031d4
  mask: 0x20000
  name: TXD
  description: |
    TX Endpoint Data
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb1_ENDPTCTRL5_TXS:
  addr: 0xe00031d4
  mask: 0x10000
  name: TXS
  description: |
    TX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
ps7_usb1_ENDPTCTRL5_reserved_1:
  addr: 0xe00031d4
  mask: 0xff00
  name: reserved_1
  description: |
    Reserved
ps7_usb1_ENDPTCTRL5_RXE:
  addr: 0xe00031d4
  mask: 0x80
  name: RXE
  description: |
    RX Endpoint Enable'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb1_ENDPTCTRL5_RXR:
  addr: 0xe00031d4
  mask: 0x40
  name: RXR
  description: |
    RX Data Toggle Reset
    Write '1' will reset the PID sequence.
    Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb1_ENDPTCTRL5_RXI:
  addr: 0xe00031d4
  mask: 0x20
  name: RXI
  description: |
    RX Data Toggle Inhibit'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb1_ENDPTCTRL5_reserved_2:
  addr: 0xe00031d4
  mask: 0x10
  name: reserved_2
  description: |
    Reserved
ps7_usb1_ENDPTCTRL5_RXT:
  addr: 0xe00031d4
  mask: 0xc
  name: RXT
  description: |
    RX Endpoint Type
    Endpoint0 is fixed as a Control End Point and this field always set to '00'.
ps7_usb1_ENDPTCTRL5_RXD:
  addr: 0xe00031d4
  mask: 0x2
  name: RXD
  description: |
    RX Endpoint Data Sink
    Value Meaning
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb1_ENDPTCTRL5_RXS:
  addr: 0xe00031d4
  mask: 0x1
  name: RXS
  description: |
    RX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
    Software can write a one to this bit to force the endpoint to return a STALL handshake to the Host. It will continue returning STALL until the bit is cleared by software or it will automatically be cleared upon receipt of a new SETUP request.
ps7_usb1_ENDPTCTRL6_TXE:
  addr: 0xe00031d8
  mask: 0x800000
  name: TXE
  description: |
    TX Endpoint Enable
    Value Meaning'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb1_ENDPTCTRL6_TXR:
  addr: 0xe00031d8
  mask: 0x400000
  name: TXR
  description: |
    TX Data Toggle Reset
    Write '1' will reset the PID sequence. Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb1_ENDPTCTRL6_TXI:
  addr: 0xe00031d8
  mask: 0x200000
  name: TXI
  description: |
    TX Data Toggle Inhibit
    Value Meaning'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb1_ENDPTCTRL6_reserved:
  addr: 0xe00031d8
  mask: 0x100000
  name: reserved
  description: |
    Reserved
ps7_usb1_ENDPTCTRL6_TXT:
  addr: 0xe00031d8
  mask: 0xc0000
  name: TXT
  description: |
    TX Endpoint Type'00' -> Control'01' -> Isochronous'10' -> Bulk'11' -> Interrupt
ps7_usb1_ENDPTCTRL6_TXD:
  addr: 0xe00031d8
  mask: 0x20000
  name: TXD
  description: |
    TX Endpoint Data
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb1_ENDPTCTRL6_TXS:
  addr: 0xe00031d8
  mask: 0x10000
  name: TXS
  description: |
    TX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
ps7_usb1_ENDPTCTRL6_reserved_1:
  addr: 0xe00031d8
  mask: 0xff00
  name: reserved_1
  description: |
    Reserved
ps7_usb1_ENDPTCTRL6_RXE:
  addr: 0xe00031d8
  mask: 0x80
  name: RXE
  description: |
    RX Endpoint Enable'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb1_ENDPTCTRL6_RXR:
  addr: 0xe00031d8
  mask: 0x40
  name: RXR
  description: |
    RX Data Toggle Reset
    Write '1' will reset the PID sequence.
    Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb1_ENDPTCTRL6_RXI:
  addr: 0xe00031d8
  mask: 0x20
  name: RXI
  description: |
    RX Data Toggle Inhibit'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb1_ENDPTCTRL6_reserved_2:
  addr: 0xe00031d8
  mask: 0x10
  name: reserved_2
  description: |
    Reserved
ps7_usb1_ENDPTCTRL6_RXT:
  addr: 0xe00031d8
  mask: 0xc
  name: RXT
  description: |
    RX Endpoint Type
    Endpoint0 is fixed as a Control End Point and this field always set to '00'.
ps7_usb1_ENDPTCTRL6_RXD:
  addr: 0xe00031d8
  mask: 0x2
  name: RXD
  description: |
    RX Endpoint Data Sink
    Value Meaning
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb1_ENDPTCTRL6_RXS:
  addr: 0xe00031d8
  mask: 0x1
  name: RXS
  description: |
    RX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
    Software can write a one to this bit to force the endpoint to return a STALL handshake to the Host. It will continue returning STALL until the bit is cleared by software or it will automatically be cleared upon receipt of a new SETUP request.
ps7_usb1_ENDPTCTRL7_TXE:
  addr: 0xe00031dc
  mask: 0x800000
  name: TXE
  description: |
    TX Endpoint Enable
    Value Meaning'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb1_ENDPTCTRL7_TXR:
  addr: 0xe00031dc
  mask: 0x400000
  name: TXR
  description: |
    TX Data Toggle Reset
    Write '1' will reset the PID sequence. Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb1_ENDPTCTRL7_TXI:
  addr: 0xe00031dc
  mask: 0x200000
  name: TXI
  description: |
    TX Data Toggle Inhibit
    Value Meaning'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb1_ENDPTCTRL7_reserved:
  addr: 0xe00031dc
  mask: 0x100000
  name: reserved
  description: |
    Reserved
ps7_usb1_ENDPTCTRL7_TXT:
  addr: 0xe00031dc
  mask: 0xc0000
  name: TXT
  description: |
    TX Endpoint Type'00' -> Control'01' -> Isochronous'10' -> Bulk'11' -> Interrupt
ps7_usb1_ENDPTCTRL7_TXD:
  addr: 0xe00031dc
  mask: 0x20000
  name: TXD
  description: |
    TX Endpoint Data
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb1_ENDPTCTRL7_TXS:
  addr: 0xe00031dc
  mask: 0x10000
  name: TXS
  description: |
    TX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
ps7_usb1_ENDPTCTRL7_reserved_1:
  addr: 0xe00031dc
  mask: 0xff00
  name: reserved_1
  description: |
    Reserved
ps7_usb1_ENDPTCTRL7_RXE:
  addr: 0xe00031dc
  mask: 0x80
  name: RXE
  description: |
    RX Endpoint Enable'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb1_ENDPTCTRL7_RXR:
  addr: 0xe00031dc
  mask: 0x40
  name: RXR
  description: |
    RX Data Toggle Reset
    Write '1' will reset the PID sequence.
    Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb1_ENDPTCTRL7_RXI:
  addr: 0xe00031dc
  mask: 0x20
  name: RXI
  description: |
    RX Data Toggle Inhibit'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb1_ENDPTCTRL7_reserved_2:
  addr: 0xe00031dc
  mask: 0x10
  name: reserved_2
  description: |
    Reserved
ps7_usb1_ENDPTCTRL7_RXT:
  addr: 0xe00031dc
  mask: 0xc
  name: RXT
  description: |
    RX Endpoint Type
    Endpoint0 is fixed as a Control End Point and this field always set to '00'.
ps7_usb1_ENDPTCTRL7_RXD:
  addr: 0xe00031dc
  mask: 0x2
  name: RXD
  description: |
    RX Endpoint Data Sink
    Value Meaning
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb1_ENDPTCTRL7_RXS:
  addr: 0xe00031dc
  mask: 0x1
  name: RXS
  description: |
    RX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
    Software can write a one to this bit to force the endpoint to return a STALL handshake to the Host. It will continue returning STALL until the bit is cleared by software or it will automatically be cleared upon receipt of a new SETUP request.
ps7_usb1_ENDPTCTRL8_TXE:
  addr: 0xe00031e0
  mask: 0x800000
  name: TXE
  description: |
    TX Endpoint Enable
    Value Meaning'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb1_ENDPTCTRL8_TXR:
  addr: 0xe00031e0
  mask: 0x400000
  name: TXR
  description: |
    TX Data Toggle Reset
    Write '1' will reset the PID sequence. Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb1_ENDPTCTRL8_TXI:
  addr: 0xe00031e0
  mask: 0x200000
  name: TXI
  description: |
    TX Data Toggle Inhibit
    Value Meaning'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb1_ENDPTCTRL8_reserved:
  addr: 0xe00031e0
  mask: 0x100000
  name: reserved
  description: |
    Reserved
ps7_usb1_ENDPTCTRL8_TXT:
  addr: 0xe00031e0
  mask: 0xc0000
  name: TXT
  description: |
    TX Endpoint Type'00' -> Control'01' -> Isochronous'10' -> Bulk'11' -> Interrupt
ps7_usb1_ENDPTCTRL8_TXD:
  addr: 0xe00031e0
  mask: 0x20000
  name: TXD
  description: |
    TX Endpoint Data
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb1_ENDPTCTRL8_TXS:
  addr: 0xe00031e0
  mask: 0x10000
  name: TXS
  description: |
    TX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
ps7_usb1_ENDPTCTRL8_reserved_1:
  addr: 0xe00031e0
  mask: 0xff00
  name: reserved_1
  description: |
    Reserved
ps7_usb1_ENDPTCTRL8_RXE:
  addr: 0xe00031e0
  mask: 0x80
  name: RXE
  description: |
    RX Endpoint Enable'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb1_ENDPTCTRL8_RXR:
  addr: 0xe00031e0
  mask: 0x40
  name: RXR
  description: |
    RX Data Toggle Reset
    Write '1' will reset the PID sequence.
    Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb1_ENDPTCTRL8_RXI:
  addr: 0xe00031e0
  mask: 0x20
  name: RXI
  description: |
    RX Data Toggle Inhibit'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb1_ENDPTCTRL8_reserved_2:
  addr: 0xe00031e0
  mask: 0x10
  name: reserved_2
  description: |
    Reserved
ps7_usb1_ENDPTCTRL8_RXT:
  addr: 0xe00031e0
  mask: 0xc
  name: RXT
  description: |
    RX Endpoint Type
    Endpoint0 is fixed as a Control End Point and this field always set to '00'.
ps7_usb1_ENDPTCTRL8_RXD:
  addr: 0xe00031e0
  mask: 0x2
  name: RXD
  description: |
    RX Endpoint Data Sink
    Value Meaning
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb1_ENDPTCTRL8_RXS:
  addr: 0xe00031e0
  mask: 0x1
  name: RXS
  description: |
    RX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
    Software can write a one to this bit to force the endpoint to return a STALL handshake to the Host. It will continue returning STALL until the bit is cleared by software or it will automatically be cleared upon receipt of a new SETUP request.
ps7_usb1_ENDPTCTRL9_TXE:
  addr: 0xe00031e4
  mask: 0x800000
  name: TXE
  description: |
    TX Endpoint Enable
    Value Meaning'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb1_ENDPTCTRL9_TXR:
  addr: 0xe00031e4
  mask: 0x400000
  name: TXR
  description: |
    TX Data Toggle Reset
    Write '1' will reset the PID sequence. Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb1_ENDPTCTRL9_TXI:
  addr: 0xe00031e4
  mask: 0x200000
  name: TXI
  description: |
    TX Data Toggle Inhibit
    Value Meaning'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb1_ENDPTCTRL9_reserved:
  addr: 0xe00031e4
  mask: 0x100000
  name: reserved
  description: |
    Reserved
ps7_usb1_ENDPTCTRL9_TXT:
  addr: 0xe00031e4
  mask: 0xc0000
  name: TXT
  description: |
    TX Endpoint Type'00' -> Control'01' -> Isochronous'10' -> Bulk'11' -> Interrupt
ps7_usb1_ENDPTCTRL9_TXD:
  addr: 0xe00031e4
  mask: 0x20000
  name: TXD
  description: |
    TX Endpoint Data
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb1_ENDPTCTRL9_TXS:
  addr: 0xe00031e4
  mask: 0x10000
  name: TXS
  description: |
    TX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
ps7_usb1_ENDPTCTRL9_reserved_1:
  addr: 0xe00031e4
  mask: 0xff00
  name: reserved_1
  description: |
    Reserved
ps7_usb1_ENDPTCTRL9_RXE:
  addr: 0xe00031e4
  mask: 0x80
  name: RXE
  description: |
    RX Endpoint Enable'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb1_ENDPTCTRL9_RXR:
  addr: 0xe00031e4
  mask: 0x40
  name: RXR
  description: |
    RX Data Toggle Reset
    Write '1' will reset the PID sequence.
    Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb1_ENDPTCTRL9_RXI:
  addr: 0xe00031e4
  mask: 0x20
  name: RXI
  description: |
    RX Data Toggle Inhibit'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb1_ENDPTCTRL9_reserved_2:
  addr: 0xe00031e4
  mask: 0x10
  name: reserved_2
  description: |
    Reserved
ps7_usb1_ENDPTCTRL9_RXT:
  addr: 0xe00031e4
  mask: 0xc
  name: RXT
  description: |
    RX Endpoint Type
    Endpoint0 is fixed as a Control End Point and this field always set to '00'.
ps7_usb1_ENDPTCTRL9_RXD:
  addr: 0xe00031e4
  mask: 0x2
  name: RXD
  description: |
    RX Endpoint Data Sink
    Value Meaning
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb1_ENDPTCTRL9_RXS:
  addr: 0xe00031e4
  mask: 0x1
  name: RXS
  description: |
    RX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
    Software can write a one to this bit to force the endpoint to return a STALL handshake to the Host. It will continue returning STALL until the bit is cleared by software or it will automatically be cleared upon receipt of a new SETUP request.
ps7_usb1_ENDPTCTRL10_TXE:
  addr: 0xe00031e8
  mask: 0x800000
  name: TXE
  description: |
    TX Endpoint Enable
    Value Meaning'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb1_ENDPTCTRL10_TXR:
  addr: 0xe00031e8
  mask: 0x400000
  name: TXR
  description: |
    TX Data Toggle Reset
    Write '1' will reset the PID sequence. Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb1_ENDPTCTRL10_TXI:
  addr: 0xe00031e8
  mask: 0x200000
  name: TXI
  description: |
    TX Data Toggle Inhibit
    Value Meaning'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb1_ENDPTCTRL10_reserved:
  addr: 0xe00031e8
  mask: 0x100000
  name: reserved
  description: |
    Reserved
ps7_usb1_ENDPTCTRL10_TXT:
  addr: 0xe00031e8
  mask: 0xc0000
  name: TXT
  description: |
    TX Endpoint Type'00' -> Control'01' -> Isochronous'10' -> Bulk'11' -> Interrupt
ps7_usb1_ENDPTCTRL10_TXD:
  addr: 0xe00031e8
  mask: 0x20000
  name: TXD
  description: |
    TX Endpoint Data
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb1_ENDPTCTRL10_TXS:
  addr: 0xe00031e8
  mask: 0x10000
  name: TXS
  description: |
    TX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
ps7_usb1_ENDPTCTRL10_reserved_1:
  addr: 0xe00031e8
  mask: 0xff00
  name: reserved_1
  description: |
    Reserved
ps7_usb1_ENDPTCTRL10_RXE:
  addr: 0xe00031e8
  mask: 0x80
  name: RXE
  description: |
    RX Endpoint Enable'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb1_ENDPTCTRL10_RXR:
  addr: 0xe00031e8
  mask: 0x40
  name: RXR
  description: |
    RX Data Toggle Reset
    Write '1' will reset the PID sequence.
    Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb1_ENDPTCTRL10_RXI:
  addr: 0xe00031e8
  mask: 0x20
  name: RXI
  description: |
    RX Data Toggle Inhibit'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb1_ENDPTCTRL10_reserved_2:
  addr: 0xe00031e8
  mask: 0x10
  name: reserved_2
  description: |
    Reserved
ps7_usb1_ENDPTCTRL10_RXT:
  addr: 0xe00031e8
  mask: 0xc
  name: RXT
  description: |
    RX Endpoint Type
    Endpoint0 is fixed as a Control End Point and this field always set to '00'.
ps7_usb1_ENDPTCTRL10_RXD:
  addr: 0xe00031e8
  mask: 0x2
  name: RXD
  description: |
    RX Endpoint Data Sink
    Value Meaning
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb1_ENDPTCTRL10_RXS:
  addr: 0xe00031e8
  mask: 0x1
  name: RXS
  description: |
    RX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
    Software can write a one to this bit to force the endpoint to return a STALL handshake to the Host. It will continue returning STALL until the bit is cleared by software or it will automatically be cleared upon receipt of a new SETUP request.
ps7_usb1_ENDPTCTRL11_TXE:
  addr: 0xe00031ec
  mask: 0x800000
  name: TXE
  description: |
    TX Endpoint Enable
    Value Meaning'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb1_ENDPTCTRL11_TXR:
  addr: 0xe00031ec
  mask: 0x400000
  name: TXR
  description: |
    TX Data Toggle Reset
    Write '1' will reset the PID sequence. Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb1_ENDPTCTRL11_TXI:
  addr: 0xe00031ec
  mask: 0x200000
  name: TXI
  description: |
    TX Data Toggle Inhibit
    Value Meaning'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb1_ENDPTCTRL11_reserved:
  addr: 0xe00031ec
  mask: 0x100000
  name: reserved
  description: |
    Reserved
ps7_usb1_ENDPTCTRL11_TXT:
  addr: 0xe00031ec
  mask: 0xc0000
  name: TXT
  description: |
    TX Endpoint Type'00' -> Control'01' -> Isochronous'10' -> Bulk'11' -> Interrupt
ps7_usb1_ENDPTCTRL11_TXD:
  addr: 0xe00031ec
  mask: 0x20000
  name: TXD
  description: |
    TX Endpoint Data
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb1_ENDPTCTRL11_TXS:
  addr: 0xe00031ec
  mask: 0x10000
  name: TXS
  description: |
    TX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
ps7_usb1_ENDPTCTRL11_reserved_1:
  addr: 0xe00031ec
  mask: 0xff00
  name: reserved_1
  description: |
    Reserved
ps7_usb1_ENDPTCTRL11_RXE:
  addr: 0xe00031ec
  mask: 0x80
  name: RXE
  description: |
    RX Endpoint Enable'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb1_ENDPTCTRL11_RXR:
  addr: 0xe00031ec
  mask: 0x40
  name: RXR
  description: |
    RX Data Toggle Reset
    Write '1' will reset the PID sequence.
    Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb1_ENDPTCTRL11_RXI:
  addr: 0xe00031ec
  mask: 0x20
  name: RXI
  description: |
    RX Data Toggle Inhibit'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb1_ENDPTCTRL11_reserved_2:
  addr: 0xe00031ec
  mask: 0x10
  name: reserved_2
  description: |
    Reserved
ps7_usb1_ENDPTCTRL11_RXT:
  addr: 0xe00031ec
  mask: 0xc
  name: RXT
  description: |
    RX Endpoint Type
    Endpoint0 is fixed as a Control End Point and this field always set to '00'.
ps7_usb1_ENDPTCTRL11_RXD:
  addr: 0xe00031ec
  mask: 0x2
  name: RXD
  description: |
    RX Endpoint Data Sink
    Value Meaning
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb1_ENDPTCTRL11_RXS:
  addr: 0xe00031ec
  mask: 0x1
  name: RXS
  description: |
    RX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
    Software can write a one to this bit to force the endpoint to return a STALL handshake to the Host. It will continue returning STALL until the bit is cleared by software or it will automatically be cleared upon receipt of a new SETUP request.
ps7_usb1_ENDPTCTRL12_TXE:
  addr: 0xe00031f0
  mask: 0x800000
  name: TXE
  description: |
    TX Endpoint Enable
    Value Meaning'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb1_ENDPTCTRL12_TXR:
  addr: 0xe00031f0
  mask: 0x400000
  name: TXR
  description: |
    TX Data Toggle Reset
    Write '1' will reset the PID sequence. Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb1_ENDPTCTRL12_TXI:
  addr: 0xe00031f0
  mask: 0x200000
  name: TXI
  description: |
    TX Data Toggle Inhibit
    Value Meaning'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb1_ENDPTCTRL12_reserved:
  addr: 0xe00031f0
  mask: 0x100000
  name: reserved
  description: |
    Reserved
ps7_usb1_ENDPTCTRL12_TXT:
  addr: 0xe00031f0
  mask: 0xc0000
  name: TXT
  description: |
    TX Endpoint Type'00' -> Control'01' -> Isochronous'10' -> Bulk'11' -> Interrupt
ps7_usb1_ENDPTCTRL12_TXD:
  addr: 0xe00031f0
  mask: 0x20000
  name: TXD
  description: |
    TX Endpoint Data
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb1_ENDPTCTRL12_TXS:
  addr: 0xe00031f0
  mask: 0x10000
  name: TXS
  description: |
    TX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
ps7_usb1_ENDPTCTRL12_reserved_1:
  addr: 0xe00031f0
  mask: 0xff00
  name: reserved_1
  description: |
    Reserved
ps7_usb1_ENDPTCTRL12_RXE:
  addr: 0xe00031f0
  mask: 0x80
  name: RXE
  description: |
    RX Endpoint Enable'0' -> Disabled'1' -> Enabled
    An endpoint should be enabled only after it has been configured.
ps7_usb1_ENDPTCTRL12_RXR:
  addr: 0xe00031f0
  mask: 0x40
  name: RXR
  description: |
    RX Data Toggle Reset
    Write '1' will reset the PID sequence.
    Whenever a configuration event is received for this Endpoint, software must write a one to this bit in order to synchronize the data PID's between the host and device.
ps7_usb1_ENDPTCTRL12_RXI:
  addr: 0xe00031f0
  mask: 0x20
  name: RXI
  description: |
    RX Data Toggle Inhibit'0' -> PID Sequencing Enabled'1' -> PID Sequencing Disabled
ps7_usb1_ENDPTCTRL12_reserved_2:
  addr: 0xe00031f0
  mask: 0x10
  name: reserved_2
  description: |
    Reserved
ps7_usb1_ENDPTCTRL12_RXT:
  addr: 0xe00031f0
  mask: 0xc
  name: RXT
  description: |
    RX Endpoint Type
    Endpoint0 is fixed as a Control End Point and this field always set to '00'.
ps7_usb1_ENDPTCTRL12_RXD:
  addr: 0xe00031f0
  mask: 0x2
  name: RXD
  description: |
    RX Endpoint Data Sink
    Value Meaning
    0 Dual Port Memory Buffer/DMA Engine
    Should always be written as '0'.
ps7_usb1_ENDPTCTRL12_RXS:
  addr: 0xe00031f0
  mask: 0x1
  name: RXS
  description: |
    RX Endpoint Stall
    Value Meaning'0' -> Endpoint OK.'1' -> Endpoint Stalled
    Software can write a one to this bit to force the endpoint to return a STALL handshake to the Host. It will continue returning STALL until the bit is cleared by software or it will automatically be cleared upon receipt of a new SETUP request.
ps7_debug_itm_StimPort00_a:
  addr: 0xf8805000
  mask: 0xffffffff
  name: a
  description: |
    Each of the 32 stimulus ports is represented by a virtual address, creating 32 stimulus registers. A write to one of these locations causes data to be written into the FIFO if the corresponding bit in the Trace Enable Register is set and ITM is enabled. Reading from any of the stimulus ports returns the FIFO status (notFull(1) / Full(0)) only if the ITM is enabled. This enables more efficient core register allocation because the stimulus
    address has already been generated.
    The ITM transmits SWIT packets using leading zero compression. Packets can be 8, 16, or 32 bits.
    The bank of 32 registers is split into a low-16 (0 to 15) and a high-16 (16 to 31). Writes to the high-16 are discarded by the ITM whenever secure non-invasive trace is disabled, regardless of how the Trace Enable Register bits [31:16] are set. Both the high-16 and
    low-16 are be disabled when non-invasive trace is disabled. When an input is disabled it must not alter the interface response and must always return an OK without stalling.
ps7_debug_itm_StimPort01_a:
  addr: 0xf8805004
  mask: 0xffffffff
  name: a
  description: |
    Each of the 32 stimulus ports is represented by a virtual address, creating 32 stimulus registers. A write to one of these locations causes data to be written into the FIFO if the corresponding bit in the Trace Enable Register is set and ITM is enabled. Reading from any of the stimulus ports returns the FIFO status (notFull(1) / Full(0)) only if the ITM is enabled. This enables more efficient core register allocation because the stimulus
    address has already been generated.
    The ITM transmits SWIT packets using leading zero compression. Packets can be 8, 16, or 32 bits.
    The bank of 32 registers is split into a low-16 (0 to 15) and a high-16 (16 to 31). Writes to the high-16 are discarded by the ITM whenever secure non-invasive trace is disabled, regardless of how the Trace Enable Register bits [31:16] are set. Both the high-16 and
    low-16 are be disabled when non-invasive trace is disabled. When an input is disabled it must not alter the interface response and must always return an OK without stalling.
ps7_debug_itm_StimPort02_a:
  addr: 0xf8805008
  mask: 0xffffffff
  name: a
  description: |
    Each of the 32 stimulus ports is represented by a virtual address, creating 32 stimulus registers. A write to one of these locations causes data to be written into the FIFO if the corresponding bit in the Trace Enable Register is set and ITM is enabled. Reading from any of the stimulus ports returns the FIFO status (notFull(1) / Full(0)) only if the ITM is enabled. This enables more efficient core register allocation because the stimulus
    address has already been generated.
    The ITM transmits SWIT packets using leading zero compression. Packets can be 8, 16, or 32 bits.
    The bank of 32 registers is split into a low-16 (0 to 15) and a high-16 (16 to 31). Writes to the high-16 are discarded by the ITM whenever secure non-invasive trace is disabled, regardless of how the Trace Enable Register bits [31:16] are set. Both the high-16 and
    low-16 are be disabled when non-invasive trace is disabled. When an input is disabled it must not alter the interface response and must always return an OK without stalling.
ps7_debug_itm_StimPort03_a:
  addr: 0xf880500c
  mask: 0xffffffff
  name: a
  description: |
    Each of the 32 stimulus ports is represented by a virtual address, creating 32 stimulus registers. A write to one of these locations causes data to be written into the FIFO if the corresponding bit in the Trace Enable Register is set and ITM is enabled. Reading from any of the stimulus ports returns the FIFO status (notFull(1) / Full(0)) only if the ITM is enabled. This enables more efficient core register allocation because the stimulus
    address has already been generated.
    The ITM transmits SWIT packets using leading zero compression. Packets can be 8, 16, or 32 bits.
    The bank of 32 registers is split into a low-16 (0 to 15) and a high-16 (16 to 31). Writes to the high-16 are discarded by the ITM whenever secure non-invasive trace is disabled, regardless of how the Trace Enable Register bits [31:16] are set. Both the high-16 and
    low-16 are be disabled when non-invasive trace is disabled. When an input is disabled it must not alter the interface response and must always return an OK without stalling.
ps7_debug_itm_StimPort04_a:
  addr: 0xf8805010
  mask: 0xffffffff
  name: a
  description: |
    Each of the 32 stimulus ports is represented by a virtual address, creating 32 stimulus registers. A write to one of these locations causes data to be written into the FIFO if the corresponding bit in the Trace Enable Register is set and ITM is enabled. Reading from any of the stimulus ports returns the FIFO status (notFull(1) / Full(0)) only if the ITM is enabled. This enables more efficient core register allocation because the stimulus
    address has already been generated.
    The ITM transmits SWIT packets using leading zero compression. Packets can be 8, 16, or 32 bits.
    The bank of 32 registers is split into a low-16 (0 to 15) and a high-16 (16 to 31). Writes to the high-16 are discarded by the ITM whenever secure non-invasive trace is disabled, regardless of how the Trace Enable Register bits [31:16] are set. Both the high-16 and
    low-16 are be disabled when non-invasive trace is disabled. When an input is disabled it must not alter the interface response and must always return an OK without stalling.
ps7_debug_itm_StimPort05_a:
  addr: 0xf8805014
  mask: 0xffffffff
  name: a
  description: |
    Each of the 32 stimulus ports is represented by a virtual address, creating 32 stimulus registers. A write to one of these locations causes data to be written into the FIFO if the corresponding bit in the Trace Enable Register is set and ITM is enabled. Reading from any of the stimulus ports returns the FIFO status (notFull(1) / Full(0)) only if the ITM is enabled. This enables more efficient core register allocation because the stimulus
    address has already been generated.
    The ITM transmits SWIT packets using leading zero compression. Packets can be 8, 16, or 32 bits.
    The bank of 32 registers is split into a low-16 (0 to 15) and a high-16 (16 to 31). Writes to the high-16 are discarded by the ITM whenever secure non-invasive trace is disabled, regardless of how the Trace Enable Register bits [31:16] are set. Both the high-16 and
    low-16 are be disabled when non-invasive trace is disabled. When an input is disabled it must not alter the interface response and must always return an OK without stalling.
ps7_debug_itm_StimPort06_a:
  addr: 0xf8805018
  mask: 0xffffffff
  name: a
  description: |
    Each of the 32 stimulus ports is represented by a virtual address, creating 32 stimulus registers. A write to one of these locations causes data to be written into the FIFO if the corresponding bit in the Trace Enable Register is set and ITM is enabled. Reading from any of the stimulus ports returns the FIFO status (notFull(1) / Full(0)) only if the ITM is enabled. This enables more efficient core register allocation because the stimulus
    address has already been generated.
    The ITM transmits SWIT packets using leading zero compression. Packets can be 8, 16, or 32 bits.
    The bank of 32 registers is split into a low-16 (0 to 15) and a high-16 (16 to 31). Writes to the high-16 are discarded by the ITM whenever secure non-invasive trace is disabled, regardless of how the Trace Enable Register bits [31:16] are set. Both the high-16 and
    low-16 are be disabled when non-invasive trace is disabled. When an input is disabled it must not alter the interface response and must always return an OK without stalling.
ps7_debug_itm_StimPort07_a:
  addr: 0xf880501c
  mask: 0xffffffff
  name: a
  description: |
    Each of the 32 stimulus ports is represented by a virtual address, creating 32 stimulus registers. A write to one of these locations causes data to be written into the FIFO if the corresponding bit in the Trace Enable Register is set and ITM is enabled. Reading from any of the stimulus ports returns the FIFO status (notFull(1) / Full(0)) only if the ITM is enabled. This enables more efficient core register allocation because the stimulus
    address has already been generated.
    The ITM transmits SWIT packets using leading zero compression. Packets can be 8, 16, or 32 bits.
    The bank of 32 registers is split into a low-16 (0 to 15) and a high-16 (16 to 31). Writes to the high-16 are discarded by the ITM whenever secure non-invasive trace is disabled, regardless of how the Trace Enable Register bits [31:16] are set. Both the high-16 and
    low-16 are be disabled when non-invasive trace is disabled. When an input is disabled it must not alter the interface response and must always return an OK without stalling.
ps7_debug_itm_StimPort08_a:
  addr: 0xf8805020
  mask: 0xffffffff
  name: a
  description: |
    Each of the 32 stimulus ports is represented by a virtual address, creating 32 stimulus registers. A write to one of these locations causes data to be written into the FIFO if the corresponding bit in the Trace Enable Register is set and ITM is enabled. Reading from any of the stimulus ports returns the FIFO status (notFull(1) / Full(0)) only if the ITM is enabled. This enables more efficient core register allocation because the stimulus
    address has already been generated.
    The ITM transmits SWIT packets using leading zero compression. Packets can be 8, 16, or 32 bits.
    The bank of 32 registers is split into a low-16 (0 to 15) and a high-16 (16 to 31). Writes to the high-16 are discarded by the ITM whenever secure non-invasive trace is disabled, regardless of how the Trace Enable Register bits [31:16] are set. Both the high-16 and
    low-16 are be disabled when non-invasive trace is disabled. When an input is disabled it must not alter the interface response and must always return an OK without stalling.
ps7_debug_itm_StimPort09_a:
  addr: 0xf8805024
  mask: 0xffffffff
  name: a
  description: |
    Each of the 32 stimulus ports is represented by a virtual address, creating 32 stimulus registers. A write to one of these locations causes data to be written into the FIFO if the corresponding bit in the Trace Enable Register is set and ITM is enabled. Reading from any of the stimulus ports returns the FIFO status (notFull(1) / Full(0)) only if the ITM is enabled. This enables more efficient core register allocation because the stimulus
    address has already been generated.
    The ITM transmits SWIT packets using leading zero compression. Packets can be 8, 16, or 32 bits.
    The bank of 32 registers is split into a low-16 (0 to 15) and a high-16 (16 to 31). Writes to the high-16 are discarded by the ITM whenever secure non-invasive trace is disabled, regardless of how the Trace Enable Register bits [31:16] are set. Both the high-16 and
    low-16 are be disabled when non-invasive trace is disabled. When an input is disabled it must not alter the interface response and must always return an OK without stalling.
ps7_debug_itm_StimPort10_a:
  addr: 0xf8805028
  mask: 0xffffffff
  name: a
  description: |
    Each of the 32 stimulus ports is represented by a virtual address, creating 32 stimulus registers. A write to one of these locations causes data to be written into the FIFO if the corresponding bit in the Trace Enable Register is set and ITM is enabled. Reading from any of the stimulus ports returns the FIFO status (notFull(1) / Full(0)) only if the ITM is enabled. This enables more efficient core register allocation because the stimulus
    address has already been generated.
    The ITM transmits SWIT packets using leading zero compression. Packets can be 8, 16, or 32 bits.
    The bank of 32 registers is split into a low-16 (0 to 15) and a high-16 (16 to 31). Writes to the high-16 are discarded by the ITM whenever secure non-invasive trace is disabled, regardless of how the Trace Enable Register bits [31:16] are set. Both the high-16 and
    low-16 are be disabled when non-invasive trace is disabled. When an input is disabled it must not alter the interface response and must always return an OK without stalling.
ps7_debug_itm_StimPort11_a:
  addr: 0xf880502c
  mask: 0xffffffff
  name: a
  description: |
    Each of the 32 stimulus ports is represented by a virtual address, creating 32 stimulus registers. A write to one of these locations causes data to be written into the FIFO if the corresponding bit in the Trace Enable Register is set and ITM is enabled. Reading from any of the stimulus ports returns the FIFO status (notFull(1) / Full(0)) only if the ITM is enabled. This enables more efficient core register allocation because the stimulus
    address has already been generated.
    The ITM transmits SWIT packets using leading zero compression. Packets can be 8, 16, or 32 bits.
    The bank of 32 registers is split into a low-16 (0 to 15) and a high-16 (16 to 31). Writes to the high-16 are discarded by the ITM whenever secure non-invasive trace is disabled, regardless of how the Trace Enable Register bits [31:16] are set. Both the high-16 and
    low-16 are be disabled when non-invasive trace is disabled. When an input is disabled it must not alter the interface response and must always return an OK without stalling.
ps7_debug_itm_StimPort12_a:
  addr: 0xf8805030
  mask: 0xffffffff
  name: a
  description: |
    Each of the 32 stimulus ports is represented by a virtual address, creating 32 stimulus registers. A write to one of these locations causes data to be written into the FIFO if the corresponding bit in the Trace Enable Register is set and ITM is enabled. Reading from any of the stimulus ports returns the FIFO status (notFull(1) / Full(0)) only if the ITM is enabled. This enables more efficient core register allocation because the stimulus
    address has already been generated.
    The ITM transmits SWIT packets using leading zero compression. Packets can be 8, 16, or 32 bits.
    The bank of 32 registers is split into a low-16 (0 to 15) and a high-16 (16 to 31). Writes to the high-16 are discarded by the ITM whenever secure non-invasive trace is disabled, regardless of how the Trace Enable Register bits [31:16] are set. Both the high-16 and
    low-16 are be disabled when non-invasive trace is disabled. When an input is disabled it must not alter the interface response and must always return an OK without stalling.
ps7_debug_itm_StimPort13_a:
  addr: 0xf8805034
  mask: 0xffffffff
  name: a
  description: |
    Each of the 32 stimulus ports is represented by a virtual address, creating 32 stimulus registers. A write to one of these locations causes data to be written into the FIFO if the corresponding bit in the Trace Enable Register is set and ITM is enabled. Reading from any of the stimulus ports returns the FIFO status (notFull(1) / Full(0)) only if the ITM is enabled. This enables more efficient core register allocation because the stimulus
    address has already been generated.
    The ITM transmits SWIT packets using leading zero compression. Packets can be 8, 16, or 32 bits.
    The bank of 32 registers is split into a low-16 (0 to 15) and a high-16 (16 to 31). Writes to the high-16 are discarded by the ITM whenever secure non-invasive trace is disabled, regardless of how the Trace Enable Register bits [31:16] are set. Both the high-16 and
    low-16 are be disabled when non-invasive trace is disabled. When an input is disabled it must not alter the interface response and must always return an OK without stalling.
ps7_debug_itm_StimPort14_a:
  addr: 0xf8805038
  mask: 0xffffffff
  name: a
  description: |
    Each of the 32 stimulus ports is represented by a virtual address, creating 32 stimulus registers. A write to one of these locations causes data to be written into the FIFO if the corresponding bit in the Trace Enable Register is set and ITM is enabled. Reading from any of the stimulus ports returns the FIFO status (notFull(1) / Full(0)) only if the ITM is enabled. This enables more efficient core register allocation because the stimulus
    address has already been generated.
    The ITM transmits SWIT packets using leading zero compression. Packets can be 8, 16, or 32 bits.
    The bank of 32 registers is split into a low-16 (0 to 15) and a high-16 (16 to 31). Writes to the high-16 are discarded by the ITM whenever secure non-invasive trace is disabled, regardless of how the Trace Enable Register bits [31:16] are set. Both the high-16 and
    low-16 are be disabled when non-invasive trace is disabled. When an input is disabled it must not alter the interface response and must always return an OK without stalling.
ps7_debug_itm_StimPort15_a:
  addr: 0xf880503c
  mask: 0xffffffff
  name: a
  description: |
    Each of the 32 stimulus ports is represented by a virtual address, creating 32 stimulus registers. A write to one of these locations causes data to be written into the FIFO if the corresponding bit in the Trace Enable Register is set and ITM is enabled. Reading from any of the stimulus ports returns the FIFO status (notFull(1) / Full(0)) only if the ITM is enabled. This enables more efficient core register allocation because the stimulus
    address has already been generated.
    The ITM transmits SWIT packets using leading zero compression. Packets can be 8, 16, or 32 bits.
    The bank of 32 registers is split into a low-16 (0 to 15) and a high-16 (16 to 31). Writes to the high-16 are discarded by the ITM whenever secure non-invasive trace is disabled, regardless of how the Trace Enable Register bits [31:16] are set. Both the high-16 and
    low-16 are be disabled when non-invasive trace is disabled. When an input is disabled it must not alter the interface response and must always return an OK without stalling.
ps7_debug_itm_StimPort16_a:
  addr: 0xf8805040
  mask: 0xffffffff
  name: a
  description: |
    Each of the 32 stimulus ports is represented by a virtual address, creating 32 stimulus registers. A write to one of these locations causes data to be written into the FIFO if the corresponding bit in the Trace Enable Register is set and ITM is enabled. Reading from any of the stimulus ports returns the FIFO status (notFull(1) / Full(0)) only if the ITM is enabled. This enables more efficient core register allocation because the stimulus
    address has already been generated.
    The ITM transmits SWIT packets using leading zero compression. Packets can be 8, 16, or 32 bits.
    The bank of 32 registers is split into a low-16 (0 to 15) and a high-16 (16 to 31). Writes to the high-16 are discarded by the ITM whenever secure non-invasive trace is disabled, regardless of how the Trace Enable Register bits [31:16] are set. Both the high-16 and
    low-16 are be disabled when non-invasive trace is disabled. When an input is disabled it must not alter the interface response and must always return an OK without stalling.
ps7_debug_itm_StimPort17_a:
  addr: 0xf8805044
  mask: 0xffffffff
  name: a
  description: |
    Each of the 32 stimulus ports is represented by a virtual address, creating 32 stimulus registers. A write to one of these locations causes data to be written into the FIFO if the corresponding bit in the Trace Enable Register is set and ITM is enabled. Reading from any of the stimulus ports returns the FIFO status (notFull(1) / Full(0)) only if the ITM is enabled. This enables more efficient core register allocation because the stimulus
    address has already been generated.
    The ITM transmits SWIT packets using leading zero compression. Packets can be 8, 16, or 32 bits.
    The bank of 32 registers is split into a low-16 (0 to 15) and a high-16 (16 to 31). Writes to the high-16 are discarded by the ITM whenever secure non-invasive trace is disabled, regardless of how the Trace Enable Register bits [31:16] are set. Both the high-16 and
    low-16 are be disabled when non-invasive trace is disabled. When an input is disabled it must not alter the interface response and must always return an OK without stalling.
ps7_debug_itm_StimPort18_a:
  addr: 0xf8805048
  mask: 0xffffffff
  name: a
  description: |
    Each of the 32 stimulus ports is represented by a virtual address, creating 32 stimulus registers. A write to one of these locations causes data to be written into the FIFO if the corresponding bit in the Trace Enable Register is set and ITM is enabled. Reading from any of the stimulus ports returns the FIFO status (notFull(1) / Full(0)) only if the ITM is enabled. This enables more efficient core register allocation because the stimulus
    address has already been generated.
    The ITM transmits SWIT packets using leading zero compression. Packets can be 8, 16, or 32 bits.
    The bank of 32 registers is split into a low-16 (0 to 15) and a high-16 (16 to 31). Writes to the high-16 are discarded by the ITM whenever secure non-invasive trace is disabled, regardless of how the Trace Enable Register bits [31:16] are set. Both the high-16 and
    low-16 are be disabled when non-invasive trace is disabled. When an input is disabled it must not alter the interface response and must always return an OK without stalling.
ps7_debug_itm_StimPort19_a:
  addr: 0xf880504c
  mask: 0xffffffff
  name: a
  description: |
    Each of the 32 stimulus ports is represented by a virtual address, creating 32 stimulus registers. A write to one of these locations causes data to be written into the FIFO if the corresponding bit in the Trace Enable Register is set and ITM is enabled. Reading from any of the stimulus ports returns the FIFO status (notFull(1) / Full(0)) only if the ITM is enabled. This enables more efficient core register allocation because the stimulus
    address has already been generated.
    The ITM transmits SWIT packets using leading zero compression. Packets can be 8, 16, or 32 bits.
    The bank of 32 registers is split into a low-16 (0 to 15) and a high-16 (16 to 31). Writes to the high-16 are discarded by the ITM whenever secure non-invasive trace is disabled, regardless of how the Trace Enable Register bits [31:16] are set. Both the high-16 and
    low-16 are be disabled when non-invasive trace is disabled. When an input is disabled it must not alter the interface response and must always return an OK without stalling.
ps7_debug_itm_StimPort20_a:
  addr: 0xf8805050
  mask: 0xffffffff
  name: a
  description: |
    Each of the 32 stimulus ports is represented by a virtual address, creating 32 stimulus registers. A write to one of these locations causes data to be written into the FIFO if the corresponding bit in the Trace Enable Register is set and ITM is enabled. Reading from any of the stimulus ports returns the FIFO status (notFull(1) / Full(0)) only if the ITM is enabled. This enables more efficient core register allocation because the stimulus
    address has already been generated.
    The ITM transmits SWIT packets using leading zero compression. Packets can be 8, 16, or 32 bits.
    The bank of 32 registers is split into a low-16 (0 to 15) and a high-16 (16 to 31). Writes to the high-16 are discarded by the ITM whenever secure non-invasive trace is disabled, regardless of how the Trace Enable Register bits [31:16] are set. Both the high-16 and
    low-16 are be disabled when non-invasive trace is disabled. When an input is disabled it must not alter the interface response and must always return an OK without stalling.
ps7_debug_itm_StimPort21_a:
  addr: 0xf8805054
  mask: 0xffffffff
  name: a
  description: |
    Each of the 32 stimulus ports is represented by a virtual address, creating 32 stimulus registers. A write to one of these locations causes data to be written into the FIFO if the corresponding bit in the Trace Enable Register is set and ITM is enabled. Reading from any of the stimulus ports returns the FIFO status (notFull(1) / Full(0)) only if the ITM is enabled. This enables more efficient core register allocation because the stimulus
    address has already been generated.
    The ITM transmits SWIT packets using leading zero compression. Packets can be 8, 16, or 32 bits.
    The bank of 32 registers is split into a low-16 (0 to 15) and a high-16 (16 to 31). Writes to the high-16 are discarded by the ITM whenever secure non-invasive trace is disabled, regardless of how the Trace Enable Register bits [31:16] are set. Both the high-16 and
    low-16 are be disabled when non-invasive trace is disabled. When an input is disabled it must not alter the interface response and must always return an OK without stalling.
ps7_debug_itm_StimPort22_a:
  addr: 0xf8805058
  mask: 0xffffffff
  name: a
  description: |
    Each of the 32 stimulus ports is represented by a virtual address, creating 32 stimulus registers. A write to one of these locations causes data to be written into the FIFO if the corresponding bit in the Trace Enable Register is set and ITM is enabled. Reading from any of the stimulus ports returns the FIFO status (notFull(1) / Full(0)) only if the ITM is enabled. This enables more efficient core register allocation because the stimulus
    address has already been generated.
    The ITM transmits SWIT packets using leading zero compression. Packets can be 8, 16, or 32 bits.
    The bank of 32 registers is split into a low-16 (0 to 15) and a high-16 (16 to 31). Writes to the high-16 are discarded by the ITM whenever secure non-invasive trace is disabled, regardless of how the Trace Enable Register bits [31:16] are set. Both the high-16 and
    low-16 are be disabled when non-invasive trace is disabled. When an input is disabled it must not alter the interface response and must always return an OK without stalling.
ps7_debug_itm_StimPort23_a:
  addr: 0xf880505c
  mask: 0xffffffff
  name: a
  description: |
    Each of the 32 stimulus ports is represented by a virtual address, creating 32 stimulus registers. A write to one of these locations causes data to be written into the FIFO if the corresponding bit in the Trace Enable Register is set and ITM is enabled. Reading from any of the stimulus ports returns the FIFO status (notFull(1) / Full(0)) only if the ITM is enabled. This enables more efficient core register allocation because the stimulus
    address has already been generated.
    The ITM transmits SWIT packets using leading zero compression. Packets can be 8, 16, or 32 bits.
    The bank of 32 registers is split into a low-16 (0 to 15) and a high-16 (16 to 31). Writes to the high-16 are discarded by the ITM whenever secure non-invasive trace is disabled, regardless of how the Trace Enable Register bits [31:16] are set. Both the high-16 and
    low-16 are be disabled when non-invasive trace is disabled. When an input is disabled it must not alter the interface response and must always return an OK without stalling.
ps7_debug_itm_StimPort24_a:
  addr: 0xf8805060
  mask: 0xffffffff
  name: a
  description: |
    Each of the 32 stimulus ports is represented by a virtual address, creating 32 stimulus registers. A write to one of these locations causes data to be written into the FIFO if the corresponding bit in the Trace Enable Register is set and ITM is enabled. Reading from any of the stimulus ports returns the FIFO status (notFull(1) / Full(0)) only if the ITM is enabled. This enables more efficient core register allocation because the stimulus
    address has already been generated.
    The ITM transmits SWIT packets using leading zero compression. Packets can be 8, 16, or 32 bits.
    The bank of 32 registers is split into a low-16 (0 to 15) and a high-16 (16 to 31). Writes to the high-16 are discarded by the ITM whenever secure non-invasive trace is disabled, regardless of how the Trace Enable Register bits [31:16] are set. Both the high-16 and
    low-16 are be disabled when non-invasive trace is disabled. When an input is disabled it must not alter the interface response and must always return an OK without stalling.
ps7_debug_itm_StimPort25_a:
  addr: 0xf8805064
  mask: 0xffffffff
  name: a
  description: |
    Each of the 32 stimulus ports is represented by a virtual address, creating 32 stimulus registers. A write to one of these locations causes data to be written into the FIFO if the corresponding bit in the Trace Enable Register is set and ITM is enabled. Reading from any of the stimulus ports returns the FIFO status (notFull(1) / Full(0)) only if the ITM is enabled. This enables more efficient core register allocation because the stimulus
    address has already been generated.
    The ITM transmits SWIT packets using leading zero compression. Packets can be 8, 16, or 32 bits.
    The bank of 32 registers is split into a low-16 (0 to 15) and a high-16 (16 to 31). Writes to the high-16 are discarded by the ITM whenever secure non-invasive trace is disabled, regardless of how the Trace Enable Register bits [31:16] are set. Both the high-16 and
    low-16 are be disabled when non-invasive trace is disabled. When an input is disabled it must not alter the interface response and must always return an OK without stalling.
ps7_debug_itm_StimPort26_a:
  addr: 0xf8805068
  mask: 0xffffffff
  name: a
  description: |
    Each of the 32 stimulus ports is represented by a virtual address, creating 32 stimulus registers. A write to one of these locations causes data to be written into the FIFO if the corresponding bit in the Trace Enable Register is set and ITM is enabled. Reading from any of the stimulus ports returns the FIFO status (notFull(1) / Full(0)) only if the ITM is enabled. This enables more efficient core register allocation because the stimulus
    address has already been generated.
    The ITM transmits SWIT packets using leading zero compression. Packets can be 8, 16, or 32 bits.
    The bank of 32 registers is split into a low-16 (0 to 15) and a high-16 (16 to 31). Writes to the high-16 are discarded by the ITM whenever secure non-invasive trace is disabled, regardless of how the Trace Enable Register bits [31:16] are set. Both the high-16 and
    low-16 are be disabled when non-invasive trace is disabled. When an input is disabled it must not alter the interface response and must always return an OK without stalling.
ps7_debug_itm_StimPort27_a:
  addr: 0xf880506c
  mask: 0xffffffff
  name: a
  description: |
    Each of the 32 stimulus ports is represented by a virtual address, creating 32 stimulus registers. A write to one of these locations causes data to be written into the FIFO if the corresponding bit in the Trace Enable Register is set and ITM is enabled. Reading from any of the stimulus ports returns the FIFO status (notFull(1) / Full(0)) only if the ITM is enabled. This enables more efficient core register allocation because the stimulus
    address has already been generated.
    The ITM transmits SWIT packets using leading zero compression. Packets can be 8, 16, or 32 bits.
    The bank of 32 registers is split into a low-16 (0 to 15) and a high-16 (16 to 31). Writes to the high-16 are discarded by the ITM whenever secure non-invasive trace is disabled, regardless of how the Trace Enable Register bits [31:16] are set. Both the high-16 and
    low-16 are be disabled when non-invasive trace is disabled. When an input is disabled it must not alter the interface response and must always return an OK without stalling.
ps7_debug_itm_StimPort28_a:
  addr: 0xf8805070
  mask: 0xffffffff
  name: a
  description: |
    Each of the 32 stimulus ports is represented by a virtual address, creating 32 stimulus registers. A write to one of these locations causes data to be written into the FIFO if the corresponding bit in the Trace Enable Register is set and ITM is enabled. Reading from any of the stimulus ports returns the FIFO status (notFull(1) / Full(0)) only if the ITM is enabled. This enables more efficient core register allocation because the stimulus
    address has already been generated.
    The ITM transmits SWIT packets using leading zero compression. Packets can be 8, 16, or 32 bits.
    The bank of 32 registers is split into a low-16 (0 to 15) and a high-16 (16 to 31). Writes to the high-16 are discarded by the ITM whenever secure non-invasive trace is disabled, regardless of how the Trace Enable Register bits [31:16] are set. Both the high-16 and
    low-16 are be disabled when non-invasive trace is disabled. When an input is disabled it must not alter the interface response and must always return an OK without stalling.
ps7_debug_itm_StimPort29_a:
  addr: 0xf8805074
  mask: 0xffffffff
  name: a
  description: |
    Each of the 32 stimulus ports is represented by a virtual address, creating 32 stimulus registers. A write to one of these locations causes data to be written into the FIFO if the corresponding bit in the Trace Enable Register is set and ITM is enabled. Reading from any of the stimulus ports returns the FIFO status (notFull(1) / Full(0)) only if the ITM is enabled. This enables more efficient core register allocation because the stimulus
    address has already been generated.
    The ITM transmits SWIT packets using leading zero compression. Packets can be 8, 16, or 32 bits.
    The bank of 32 registers is split into a low-16 (0 to 15) and a high-16 (16 to 31). Writes to the high-16 are discarded by the ITM whenever secure non-invasive trace is disabled, regardless of how the Trace Enable Register bits [31:16] are set. Both the high-16 and
    low-16 are be disabled when non-invasive trace is disabled. When an input is disabled it must not alter the interface response and must always return an OK without stalling.
ps7_debug_itm_StimPort30_a:
  addr: 0xf8805078
  mask: 0xffffffff
  name: a
  description: |
    Each of the 32 stimulus ports is represented by a virtual address, creating 32 stimulus registers. A write to one of these locations causes data to be written into the FIFO if the corresponding bit in the Trace Enable Register is set and ITM is enabled. Reading from any of the stimulus ports returns the FIFO status (notFull(1) / Full(0)) only if the ITM is enabled. This enables more efficient core register allocation because the stimulus
    address has already been generated.
    The ITM transmits SWIT packets using leading zero compression. Packets can be 8, 16, or 32 bits.
    The bank of 32 registers is split into a low-16 (0 to 15) and a high-16 (16 to 31). Writes to the high-16 are discarded by the ITM whenever secure non-invasive trace is disabled, regardless of how the Trace Enable Register bits [31:16] are set. Both the high-16 and
    low-16 are be disabled when non-invasive trace is disabled. When an input is disabled it must not alter the interface response and must always return an OK without stalling.
ps7_debug_itm_StimPort31_a:
  addr: 0xf880507c
  mask: 0xffffffff
  name: a
  description: |
    Each of the 32 stimulus ports is represented by a virtual address, creating 32 stimulus registers. A write to one of these locations causes data to be written into the FIFO if the corresponding bit in the Trace Enable Register is set and ITM is enabled. Reading from any of the stimulus ports returns the FIFO status (notFull(1) / Full(0)) only if the ITM is enabled. This enables more efficient core register allocation because the stimulus
    address has already been generated.
    The ITM transmits SWIT packets using leading zero compression. Packets can be 8, 16, or 32 bits.
    The bank of 32 registers is split into a low-16 (0 to 15) and a high-16 (16 to 31). Writes to the high-16 are discarded by the ITM whenever secure non-invasive trace is disabled, regardless of how the Trace Enable Register bits [31:16] are set. Both the high-16 and
    low-16 are be disabled when non-invasive trace is disabled. When an input is disabled it must not alter the interface response and must always return an OK without stalling.
ps7_debug_itm_TER_a:
  addr: 0xf8805e00
  mask: 0xffffffff
  name: a
  description: |
    Bit mask to enable tracing on ITM stimulus ports.
ps7_debug_itm_TTR_a:
  addr: 0xf8805e20
  mask: 0xffffffff
  name: a
  description: |
    Bit mask to enable trigger generation, TRIGOUT, on selected writes to the Stimulus Registers.
ps7_debug_itm_CR_ITMBusy:
  addr: 0xf8805e80
  mask: 0x800000
  name: ITMBusy
  description: |
    ITM is transmitting trace and FIFO is not empty
ps7_debug_itm_CR_TraceID:
  addr: 0xf8805e80
  mask: 0x7f0000
  name: TraceID
  description: |
    ATIDM[6:0] value
ps7_debug_itm_CR_reserved:
  addr: 0xf8805e80
  mask: 0xfc00
  name: reserved
  description: |
    Reserved
ps7_debug_itm_CR_TSPrescale:
  addr: 0xf8805e80
  mask: 0x300
  name: TSPrescale
  description: |
    Timestamp Prescaler
ps7_debug_itm_CR_reserved_1:
  addr: 0xf8805e80
  mask: 0xf0
  name: reserved_1
  description: |
    Reserved
ps7_debug_itm_CR_DWTEn:
  addr: 0xf8805e80
  mask: 0x8
  name: DWTEn
  description: |
    Enable DWT input port
ps7_debug_itm_CR_SYNCEn:
  addr: 0xf8805e80
  mask: 0x4
  name: SYNCEn
  description: |
    Enable sync packets
ps7_debug_itm_CR_TSSEn:
  addr: 0xf8805e80
  mask: 0x2
  name: TSSEn
  description: |
    Enable timestamps, delta
ps7_debug_itm_CR_ITMEn:
  addr: 0xf8805e80
  mask: 0x1
  name: ITMEn
  description: |
    Enable ITM Stimulus, also acts as a global enable
ps7_debug_itm_SCR_SyncCount:
  addr: 0xf8805e90
  mask: 0xfff
  name: SyncCount
  description: |
    Counter value for time between synchronization markers
ps7_debug_itm_ITTRIGOUTACK_ITTRIGOUTACK:
  addr: 0xf8805ee4
  mask: 0x1
  name: ITTRIGOUTACK
  description: |
    Read the value of TRIGOUTACK
ps7_debug_itm_ITTRIGOUT_ITTRIGOUT:
  addr: 0xf8805ee8
  mask: 0x1
  name: ITTRIGOUT
  description: |
    Set the value of TRIGOUT
ps7_debug_itm_ITATBDATA0_ITATDATAM7:
  addr: 0xf8805eec
  mask: 0x2
  name: ITATDATAM7
  description: |
    Set the value of ATDATAM[7]
ps7_debug_itm_ITATBDATA0_ITATDATAM0:
  addr: 0xf8805eec
  mask: 0x1
  name: ITATDATAM0
  description: |
    Set the value of ATDATAM[0]
ps7_debug_itm_ITATBCTR2_ITATREADYM:
  addr: 0xf8805ef0
  mask: 0x1
  name: ITATREADYM
  description: |
    Read the value of ATREADYM
ps7_debug_itm_ITATABCTR1_ITATIDM:
  addr: 0xf8805ef4
  mask: 0x7f
  name: ITATIDM
  description: |
    Set the value of ATIDM[6:0]
ps7_debug_itm_ITATBCTR0_ITAFREADYM:
  addr: 0xf8805ef8
  mask: 0x2
  name: ITAFREADYM
  description: |
    Set the value of AFREADYM
ps7_debug_itm_ITATBCTR0_ITATVALIDM:
  addr: 0xf8805ef8
  mask: 0x1
  name: ITATVALIDM
  description: |
    Set the value of ATVALIDM
ps7_debug_itm_IMCR_a:
  addr: 0xf8805f00
  mask: 0x1
  name: a
  description: |
    Enable Integration Test registers.
ps7_debug_itm_CTSR_a:
  addr: 0xf8805fa0
  mask: 0xff
  name: a
  description: |
    The claim tag register is used for any interrogating tools to determine if the device is being programmed or has been programmed.
    Read:
    1= Claim tag is implemented, 0 = Claim tag is not implemented
    Write:
    1= Set claim tag bit, 0= No effect
ps7_debug_itm_CTCR_a:
  addr: 0xf8805fa4
  mask: 0xff
  name: a
  description: |
    The claim tag register is used for any interrogating tools to determine if the device is being programmed or has been programmed.
    Read: Current value of claim tag.
    Write: 1= Clear claim tag bit, 0= No effect
ps7_debug_itm_LAR_a:
  addr: 0xf8805fb0
  mask: 0xffffffff
  name: a
  description: |
    Write Access Code.
    Write behavior depends on PADDRDBG31 pin:
    - PADDRDBG31=0 (lower 2GB):
    After reset (via PRESETDBGn), ITM is locked, i.e., writes to all other registers using lower 2GB addresses are ignored.
    To unlock, 0xC5ACCE55 must be written this register.
    After the required registers are written, to lock again, write a value other than 0xC5ACCE55 to this register.
    - PADDRDBG31=1 (upper 2GB):
    ITM is unlocked when upper 2GB addresses are used to write to all the registers.
    However, write to this register is ignored using a upper 2GB address!
    Note: read from this register always returns 0, regardless of PADDRDBG31.
ps7_debug_itm_LSR_n8BIT:
  addr: 0xf8805fb4
  mask: 0x4
  name: n8BIT
  description: |
    Set to 0 since ITM implements a 32-bit lock access register
ps7_debug_itm_LSR_STATUS:
  addr: 0xf8805fb4
  mask: 0x2
  name: STATUS
  description: |
    Read behavior depends on PADDRDBG31 pin:
    - PADDRDBG31=0 (lower 2GB):
    When a lower 2GB address is used to read this register, this bit indicates whether ITM is in locked state
    (1= locked, 0= unlocked).
    - PADDRDBG31=1 (upper 2GB):
    always returns 0.
ps7_debug_itm_LSR_IMP:
  addr: 0xf8805fb4
  mask: 0x1
  name: IMP
  description: |
    Read behavior depends on PADDRDBG31 pin:
    - PADDRDBG31=0 (lower 2GB):
    always returns 1, meaning lock mechanism are implemented.
    - PADDRDBG31=1 (upper 2GB):
    always returns 0, meaning lock mechanism is NOT implemented.
ps7_debug_itm_ASR_a:
  addr: 0xf8805fb8
  mask: 0xff
  name: a
  description: |
    Value is 0b1S001N00 where S is secure non-invasive debug state and N is non-secure, non-invasive debug.
ps7_debug_itm_DEVID_NumStimRegs:
  addr: 0xf8805fc8
  mask: 0x1fff
  name: NumStimRegs
  description: |
    Number of stimulus registers
ps7_debug_itm_DTIR_a:
  addr: 0xf8805fcc
  mask: 0xff
  name: a
  description: |
    Indicates a Trace Source and the stimulus is devifed from bus activity
ps7_debug_itm_PERIPHID4_n4KB_count:
  addr: 0xf8805fd0
  mask: 0xf0
  name: n4KB_count
  description: |
    4KB Count, set to 0
ps7_debug_itm_PERIPHID4_JEP106ID:
  addr: 0xf8805fd0
  mask: 0xf
  name: JEP106ID
  description: |
    JEP106 continuation code
ps7_debug_itm_PERIPHID5_a:
  addr: 0xf8805fd4
  mask: 0xff
  name: a
  description: |
    reserved
ps7_debug_itm_PERIPHID6_a:
  addr: 0xf8805fd8
  mask: 0xff
  name: a
  description: |
    reserved
ps7_debug_itm_PERIPHID7_a:
  addr: 0xf8805fdc
  mask: 0xff
  name: a
  description: |
    reserved
ps7_debug_itm_PERIPHID0_a:
  addr: 0xf8805fe0
  mask: 0xff
  name: a
  description: |
    PartNumber0
ps7_debug_itm_PERIPHID1_JEP106ID:
  addr: 0xf8805fe4
  mask: 0xf0
  name: JEP106ID
  description: |
    JEP106 Identity Code [3:0]
ps7_debug_itm_PERIPHID1_PartNumber1:
  addr: 0xf8805fe4
  mask: 0xf
  name: PartNumber1
  description: |
    PartNumber1
ps7_debug_itm_PERIPHID2_RevNum:
  addr: 0xf8805fe8
  mask: 0xf0
  name: RevNum
  description: |
    Revision number of Peripheral
ps7_debug_itm_PERIPHID2_JEDEC:
  addr: 0xf8805fe8
  mask: 0x8
  name: JEDEC
  description: |
    Indicates that a JEDEC assigned value is used
ps7_debug_itm_PERIPHID2_JEP106ID:
  addr: 0xf8805fe8
  mask: 0x7
  name: JEP106ID
  description: |
    JEP106 Identity Code [6:4]
ps7_debug_itm_PERIPHID3_RevAnd:
  addr: 0xf8805fec
  mask: 0xf0
  name: RevAnd
  description: |
    RevAnd, at top level
ps7_debug_itm_PERIPHID3_CustMod:
  addr: 0xf8805fec
  mask: 0xf
  name: CustMod
  description: |
    Customer Modified
ps7_debug_itm_COMPID0_a:
  addr: 0xf8805ff0
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_debug_itm_COMPID1_a:
  addr: 0xf8805ff4
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_debug_itm_COMPID2_a:
  addr: 0xf8805ff8
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_debug_itm_COMPID3_a:
  addr: 0xf8805ffc
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_debug_dap_rom_ROMENTRY00_AddressOffset:
  addr: 0xf8800000
  mask: 0xfffff000
  name: AddressOffset
  description: |
    Base address of the component, relative to the ROM address.
    Negative values are permitted using two's complement.
    ComponentAddress = ROMAddress + (AddressOffset SHL 12)
ps7_debug_dap_rom_ROMENTRY00_reserved:
  addr: 0xf8800000
  mask: 0xffc
  name: reserved
  description: |
    Reserved
ps7_debug_dap_rom_ROMENTRY00_Format:
  addr: 0xf8800000
  mask: 0x2
  name: Format
  description: |
    Format of ROM entry
ps7_debug_dap_rom_ROMENTRY00_EntryPresent:
  addr: 0xf8800000
  mask: 0x1
  name: EntryPresent
  description: |
    Set HIGH to indicate an entry is present.
ps7_debug_dap_rom_ROMENTRY01_AddressOffset:
  addr: 0xf8800004
  mask: 0xfffff000
  name: AddressOffset
  description: |
    Base address of the component, relative to the ROM address.
    Negative values are permitted using two's complement.
    ComponentAddress = ROMAddress + (AddressOffset SHL 12)
ps7_debug_dap_rom_ROMENTRY01_reserved:
  addr: 0xf8800004
  mask: 0xffc
  name: reserved
  description: |
    Reserved
ps7_debug_dap_rom_ROMENTRY01_Format:
  addr: 0xf8800004
  mask: 0x2
  name: Format
  description: |
    Format of ROM entry
ps7_debug_dap_rom_ROMENTRY01_EntryPresent:
  addr: 0xf8800004
  mask: 0x1
  name: EntryPresent
  description: |
    Set HIGH to indicate an entry is present.
ps7_debug_dap_rom_ROMENTRY02_AddressOffset:
  addr: 0xf8800008
  mask: 0xfffff000
  name: AddressOffset
  description: |
    Base address of the component, relative to the ROM address.
    Negative values are permitted using two's complement.
    ComponentAddress = ROMAddress + (AddressOffset SHL 12)
ps7_debug_dap_rom_ROMENTRY02_reserved:
  addr: 0xf8800008
  mask: 0xffc
  name: reserved
  description: |
    Reserved
ps7_debug_dap_rom_ROMENTRY02_Format:
  addr: 0xf8800008
  mask: 0x2
  name: Format
  description: |
    Format of ROM entry
ps7_debug_dap_rom_ROMENTRY02_EntryPresent:
  addr: 0xf8800008
  mask: 0x1
  name: EntryPresent
  description: |
    Set HIGH to indicate an entry is present.
ps7_debug_dap_rom_ROMENTRY03_AddressOffset:
  addr: 0xf880000c
  mask: 0xfffff000
  name: AddressOffset
  description: |
    Base address of the component, relative to the ROM address.
    Negative values are permitted using two's complement.
    ComponentAddress = ROMAddress + (AddressOffset SHL 12)
ps7_debug_dap_rom_ROMENTRY03_reserved:
  addr: 0xf880000c
  mask: 0xffc
  name: reserved
  description: |
    Reserved
ps7_debug_dap_rom_ROMENTRY03_Format:
  addr: 0xf880000c
  mask: 0x2
  name: Format
  description: |
    Format of ROM entry
ps7_debug_dap_rom_ROMENTRY03_EntryPresent:
  addr: 0xf880000c
  mask: 0x1
  name: EntryPresent
  description: |
    Set HIGH to indicate an entry is present.
ps7_debug_dap_rom_ROMENTRY04_AddressOffset:
  addr: 0xf8800010
  mask: 0xfffff000
  name: AddressOffset
  description: |
    Base address of the component, relative to the ROM address.
    Negative values are permitted using two's complement.
    ComponentAddress = ROMAddress + (AddressOffset SHL 12)
ps7_debug_dap_rom_ROMENTRY04_reserved:
  addr: 0xf8800010
  mask: 0xffc
  name: reserved
  description: |
    Reserved
ps7_debug_dap_rom_ROMENTRY04_Format:
  addr: 0xf8800010
  mask: 0x2
  name: Format
  description: |
    Format of ROM entry
ps7_debug_dap_rom_ROMENTRY04_EntryPresent:
  addr: 0xf8800010
  mask: 0x1
  name: EntryPresent
  description: |
    Set HIGH to indicate an entry is present.
ps7_debug_dap_rom_ROMENTRY05_AddressOffset:
  addr: 0xf8800014
  mask: 0xfffff000
  name: AddressOffset
  description: |
    Base address of the component, relative to the ROM address.
    Negative values are permitted using two's complement.
    ComponentAddress = ROMAddress + (AddressOffset SHL 12)
ps7_debug_dap_rom_ROMENTRY05_reserved:
  addr: 0xf8800014
  mask: 0xffc
  name: reserved
  description: |
    Reserved
ps7_debug_dap_rom_ROMENTRY05_Format:
  addr: 0xf8800014
  mask: 0x2
  name: Format
  description: |
    Format of ROM entry
ps7_debug_dap_rom_ROMENTRY05_EntryPresent:
  addr: 0xf8800014
  mask: 0x1
  name: EntryPresent
  description: |
    Set HIGH to indicate an entry is present.
ps7_debug_dap_rom_ROMENTRY06_AddressOffset:
  addr: 0xf8800018
  mask: 0xfffff000
  name: AddressOffset
  description: |
    Base address of the component, relative to the ROM address.
    Negative values are permitted using two's complement.
    ComponentAddress = ROMAddress + (AddressOffset SHL 12)
ps7_debug_dap_rom_ROMENTRY06_reserved:
  addr: 0xf8800018
  mask: 0xffc
  name: reserved
  description: |
    Reserved
ps7_debug_dap_rom_ROMENTRY06_Format:
  addr: 0xf8800018
  mask: 0x2
  name: Format
  description: |
    Format of ROM entry
ps7_debug_dap_rom_ROMENTRY06_EntryPresent:
  addr: 0xf8800018
  mask: 0x1
  name: EntryPresent
  description: |
    Set HIGH to indicate an entry is present.
ps7_debug_dap_rom_ROMENTRY07_AddressOffset:
  addr: 0xf880001c
  mask: 0xfffff000
  name: AddressOffset
  description: |
    Base address of the component, relative to the ROM address.
    Negative values are permitted using two's complement.
    ComponentAddress = ROMAddress + (AddressOffset SHL 12)
ps7_debug_dap_rom_ROMENTRY07_reserved:
  addr: 0xf880001c
  mask: 0xffc
  name: reserved
  description: |
    Reserved
ps7_debug_dap_rom_ROMENTRY07_Format:
  addr: 0xf880001c
  mask: 0x2
  name: Format
  description: |
    Format of ROM entry
ps7_debug_dap_rom_ROMENTRY07_EntryPresent:
  addr: 0xf880001c
  mask: 0x1
  name: EntryPresent
  description: |
    Set HIGH to indicate an entry is present.
ps7_debug_dap_rom_ROMENTRY08_AddressOffset:
  addr: 0xf8800020
  mask: 0xfffff000
  name: AddressOffset
  description: |
    Base address of the component, relative to the ROM address.
    Negative values are permitted using two's complement.
    ComponentAddress = ROMAddress + (AddressOffset SHL 12)
ps7_debug_dap_rom_ROMENTRY08_reserved:
  addr: 0xf8800020
  mask: 0xffc
  name: reserved
  description: |
    Reserved
ps7_debug_dap_rom_ROMENTRY08_Format:
  addr: 0xf8800020
  mask: 0x2
  name: Format
  description: |
    Format of ROM entry
ps7_debug_dap_rom_ROMENTRY08_EntryPresent:
  addr: 0xf8800020
  mask: 0x1
  name: EntryPresent
  description: |
    Set HIGH to indicate an entry is present.
ps7_debug_dap_rom_ROMENTRY09_AddressOffset:
  addr: 0xf8800024
  mask: 0xfffff000
  name: AddressOffset
  description: |
    Base address of the component, relative to the ROM address.
    Negative values are permitted using two's complement.
    ComponentAddress = ROMAddress + (AddressOffset SHL 12)
ps7_debug_dap_rom_ROMENTRY09_reserved:
  addr: 0xf8800024
  mask: 0xffc
  name: reserved
  description: |
    Reserved
ps7_debug_dap_rom_ROMENTRY09_Format:
  addr: 0xf8800024
  mask: 0x2
  name: Format
  description: |
    Format of ROM entry
ps7_debug_dap_rom_ROMENTRY09_EntryPresent:
  addr: 0xf8800024
  mask: 0x1
  name: EntryPresent
  description: |
    Set HIGH to indicate an entry is present.
ps7_debug_dap_rom_ROMENTRY10_a:
  addr: 0xf8800028
  mask: 0xffffffff
  name: a
  description: |
    Invalid entry
ps7_debug_dap_rom_ROMENTRY11_a:
  addr: 0xf880002c
  mask: 0xffffffff
  name: a
  description: |
    Invalid entry
ps7_debug_dap_rom_ROMENTRY12_a:
  addr: 0xf8800030
  mask: 0xffffffff
  name: a
  description: |
    Invalid entry
ps7_debug_dap_rom_ROMENTRY13_a:
  addr: 0xf8800034
  mask: 0xffffffff
  name: a
  description: |
    Invalid entry
ps7_debug_dap_rom_ROMENTRY14_a:
  addr: 0xf8800038
  mask: 0xffffffff
  name: a
  description: |
    Invalid entry
ps7_debug_dap_rom_ROMENTRY15_a:
  addr: 0xf880003c
  mask: 0xffffffff
  name: a
  description: |
    Invalid entry
ps7_debug_dap_rom_PERIPHID4_n4KB_count:
  addr: 0xf8800fd0
  mask: 0xf0
  name: n4KB_count
  description: |
    4KB Count, set to 0
ps7_debug_dap_rom_PERIPHID4_a:
  addr: 0xf8800fd0
  mask: 0xf
  name: a
  description: |
    JEP106 continuation code
ps7_debug_dap_rom_PERIPHID5_reserved:
  addr: 0xf8800fd4
  mask: 0xff
  name: reserved
  description: |
    Reserved
ps7_debug_dap_rom_PERIPHID6_reserved:
  addr: 0xf8800fd8
  mask: 0xff
  name: reserved
  description: |
    Reserved
ps7_debug_dap_rom_PERIPHID7_reserved:
  addr: 0xf8800fdc
  mask: 0xff
  name: reserved
  description: |
    Reserved
ps7_debug_dap_rom_PERIPHID0_PartNumber0:
  addr: 0xf8800fe0
  mask: 0xff
  name: PartNumber0
  description: |
    PartNumber0
ps7_debug_dap_rom_PERIPHID1_JEP106ID:
  addr: 0xf8800fe4
  mask: 0xf0
  name: JEP106ID
  description: |
    JEP106 Identity Code [3:0]
ps7_debug_dap_rom_PERIPHID1_PartNumber1:
  addr: 0xf8800fe4
  mask: 0xf
  name: PartNumber1
  description: |
    PartNumber1
ps7_debug_dap_rom_PERIPHID2_RevNum:
  addr: 0xf8800fe8
  mask: 0xf0
  name: RevNum
  description: |
    Revision number of Peripheral
ps7_debug_dap_rom_PERIPHID2_JEDEC:
  addr: 0xf8800fe8
  mask: 0x8
  name: JEDEC
  description: |
    Indicates that a JEDEC assigned value is used
ps7_debug_dap_rom_PERIPHID2_JEP106ID:
  addr: 0xf8800fe8
  mask: 0x7
  name: JEP106ID
  description: |
    JEP106 Identity Code [6:4]
ps7_debug_dap_rom_PERIPHID3_RevAnd:
  addr: 0xf8800fec
  mask: 0xf0
  name: RevAnd
  description: |
    RevAnd, at top level
ps7_debug_dap_rom_PERIPHID3_CustMod:
  addr: 0xf8800fec
  mask: 0xf
  name: CustMod
  description: |
    Customer Modified
ps7_debug_dap_rom_COMPID0_Preamble:
  addr: 0xf8800ff0
  mask: 0xff
  name: Preamble
  description: |
    Preamble
ps7_debug_dap_rom_COMPID1_Preamble:
  addr: 0xf8800ff4
  mask: 0xff
  name: Preamble
  description: |
    Preamble
ps7_debug_dap_rom_COMPID2_Preamble:
  addr: 0xf8800ff8
  mask: 0xff
  name: Preamble
  description: |
    Preamble
ps7_debug_dap_rom_COMPID3_Preamble:
  addr: 0xf8800ffc
  mask: 0xff
  name: Preamble
  description: |
    Preamble
ps7_debug_cti_axim_CTICONTROL_GLBEN:
  addr: 0xf880a000
  mask: 0x1
  name: GLBEN
  description: |
    Enables or disables the ECT. When disabled, all cross triggering mapping logic functionality is disabled for this processor.
ps7_debug_cti_axim_CTIINTACK_INTACK:
  addr: 0xf880a010
  mask: 0xff
  name: INTACK
  description: |
    Acknowledges the corresponding CTITRIGOUT output:
    1 = CTITRIGOUT is acknowledged and is cleared when MAPTRIGOUT is LOW.
    0 = no effect
    There is one bit of the register for each CTITRIGOUT output.
ps7_debug_cti_axim_CTIAPPSET_APPSET:
  addr: 0xf880a014
  mask: 0xf
  name: APPSET
  description: |
    Setting a bit HIGH generates a channel event for the selected channel.
    Read:
    0 = application trigger inactive (reset)
    1 = application trigger active.
    Write:
    0 = no effect
    1 = generate channel event.
    There is one bit of the register for each channel.
ps7_debug_cti_axim_CTIAPPCLEAR_APPCLEAR:
  addr: 0xf880a018
  mask: 0xf
  name: APPCLEAR
  description: |
    Clears corresponding bits in the CTIAPPSET register.
    1 = application trigger disabled in the CTIAPPSET register
    0 = no effect.
    There is one bit of the register for each channel.
ps7_debug_cti_axim_CTIAPPPULSE_APPULSE:
  addr: 0xf880a01c
  mask: 0xf
  name: APPULSE
  description: |
    Setting a bit HIGH generates a channel event pulse for the selected channel.
    Write:
    1 = channel event pulse generated for one CTICLK period
    0 = no effect.
    There is one bit of the register for each channel.
ps7_debug_cti_axim_CTIINEN0_TRIGINEN:
  addr: 0xf880a020
  mask: 0xf
  name: TRIGINEN
  description: |
    Enables a cross trigger event to the corresponding channel when an CTITRIGIN is activated.
    1 = enables the CTITRIGIN signal to generate an event on the respective channel of the CTM.
    There is one bit of the register for each of the four channels. For example in register CTIINEN0,
    TRIGINEN[0] set to 1 enables CTITRIGIN onto channel 0.
    0 = disables the CTITRIGIN signal from generating an event on the respective channel of the
    CTM.
ps7_debug_cti_axim_CTIINEN1_TRIGINEN:
  addr: 0xf880a024
  mask: 0xf
  name: TRIGINEN
  description: |
    Enables a cross trigger event to the corresponding channel when an CTITRIGIN is activated.
    1 = enables the CTITRIGIN signal to generate an event on the respective channel of the CTM.
    There is one bit of the register for each of the four channels. For example in register CTIINEN0,
    TRIGINEN[0] set to 1 enables CTITRIGIN onto channel 0.
    0 = disables the CTITRIGIN signal from generating an event on the respective channel of the
    CTM.
ps7_debug_cti_axim_CTIINEN2_TRIGINEN:
  addr: 0xf880a028
  mask: 0xf
  name: TRIGINEN
  description: |
    Enables a cross trigger event to the corresponding channel when an CTITRIGIN is activated.
    1 = enables the CTITRIGIN signal to generate an event on the respective channel of the CTM.
    There is one bit of the register for each of the four channels. For example in register CTIINEN0,
    TRIGINEN[0] set to 1 enables CTITRIGIN onto channel 0.
    0 = disables the CTITRIGIN signal from generating an event on the respective channel of the
    CTM.
ps7_debug_cti_axim_CTIINEN3_TRIGINEN:
  addr: 0xf880a02c
  mask: 0xf
  name: TRIGINEN
  description: |
    Enables a cross trigger event to the corresponding channel when an CTITRIGIN is activated.
    1 = enables the CTITRIGIN signal to generate an event on the respective channel of the CTM.
    There is one bit of the register for each of the four channels. For example in register CTIINEN0,
    TRIGINEN[0] set to 1 enables CTITRIGIN onto channel 0.
    0 = disables the CTITRIGIN signal from generating an event on the respective channel of the
    CTM.
ps7_debug_cti_axim_CTIINEN4_TRIGINEN:
  addr: 0xf880a030
  mask: 0xf
  name: TRIGINEN
  description: |
    Enables a cross trigger event to the corresponding channel when an CTITRIGIN is activated.
    1 = enables the CTITRIGIN signal to generate an event on the respective channel of the CTM.
    There is one bit of the register for each of the four channels. For example in register CTIINEN0,
    TRIGINEN[0] set to 1 enables CTITRIGIN onto channel 0.
    0 = disables the CTITRIGIN signal from generating an event on the respective channel of the
    CTM.
ps7_debug_cti_axim_CTIINEN5_TRIGINEN:
  addr: 0xf880a034
  mask: 0xf
  name: TRIGINEN
  description: |
    Enables a cross trigger event to the corresponding channel when an CTITRIGIN is activated.
    1 = enables the CTITRIGIN signal to generate an event on the respective channel of the CTM.
    There is one bit of the register for each of the four channels. For example in register CTIINEN0,
    TRIGINEN[0] set to 1 enables CTITRIGIN onto channel 0.
    0 = disables the CTITRIGIN signal from generating an event on the respective channel of the
    CTM.
ps7_debug_cti_axim_CTIINEN6_TRIGINEN:
  addr: 0xf880a038
  mask: 0xf
  name: TRIGINEN
  description: |
    Enables a cross trigger event to the corresponding channel when an CTITRIGIN is activated.
    1 = enables the CTITRIGIN signal to generate an event on the respective channel of the CTM.
    There is one bit of the register for each of the four channels. For example in register CTIINEN0,
    TRIGINEN[0] set to 1 enables CTITRIGIN onto channel 0.
    0 = disables the CTITRIGIN signal from generating an event on the respective channel of the
    CTM.
ps7_debug_cti_axim_CTIINEN7_TRIGINEN:
  addr: 0xf880a03c
  mask: 0xf
  name: TRIGINEN
  description: |
    Enables a cross trigger event to the corresponding channel when an CTITRIGIN is activated.
    1 = enables the CTITRIGIN signal to generate an event on the respective channel of the CTM.
    There is one bit of the register for each of the four channels. For example in register CTIINEN0,
    TRIGINEN[0] set to 1 enables CTITRIGIN onto channel 0.
    0 = disables the CTITRIGIN signal from generating an event on the respective channel of the
    CTM.
ps7_debug_cti_axim_CTIOUTEN0_TRIGOUTEN:
  addr: 0xf880a0a0
  mask: 0xf
  name: TRIGOUTEN
  description: |
    Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding
    channel to generate an CTITRIGOUT output:
    0 = the channel input (CTICHIN) from the CTM is not routed to the CTITRIGOUT output
    1 = the channel input (CTICHIN) from the CTM is routed to the CTITRIGOUT output.
    There is one bit for each of the four channels. For example in register CTIOUTEN0, enabling
    bit 0 enables CTICHIN[0] to cause a trigger event on the CTITRIGOUT[0] output.
ps7_debug_cti_axim_CTIOUTEN1_TRIGOUTEN:
  addr: 0xf880a0a4
  mask: 0xf
  name: TRIGOUTEN
  description: |
    Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding
    channel to generate an CTITRIGOUT output:
    0 = the channel input (CTICHIN) from the CTM is not routed to the CTITRIGOUT output
    1 = the channel input (CTICHIN) from the CTM is routed to the CTITRIGOUT output.
    There is one bit for each of the four channels. For example in register CTIOUTEN0, enabling
    bit 0 enables CTICHIN[0] to cause a trigger event on the CTITRIGOUT[0] output.
ps7_debug_cti_axim_CTIOUTEN2_TRIGOUTEN:
  addr: 0xf880a0a8
  mask: 0xf
  name: TRIGOUTEN
  description: |
    Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding
    channel to generate an CTITRIGOUT output:
    0 = the channel input (CTICHIN) from the CTM is not routed to the CTITRIGOUT output
    1 = the channel input (CTICHIN) from the CTM is routed to the CTITRIGOUT output.
    There is one bit for each of the four channels. For example in register CTIOUTEN0, enabling
    bit 0 enables CTICHIN[0] to cause a trigger event on the CTITRIGOUT[0] output.
ps7_debug_cti_axim_CTIOUTEN3_TRIGOUTEN:
  addr: 0xf880a0ac
  mask: 0xf
  name: TRIGOUTEN
  description: |
    Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding
    channel to generate an CTITRIGOUT output:
    0 = the channel input (CTICHIN) from the CTM is not routed to the CTITRIGOUT output
    1 = the channel input (CTICHIN) from the CTM is routed to the CTITRIGOUT output.
    There is one bit for each of the four channels. For example in register CTIOUTEN0, enabling
    bit 0 enables CTICHIN[0] to cause a trigger event on the CTITRIGOUT[0] output.
ps7_debug_cti_axim_CTIOUTEN4_TRIGOUTEN:
  addr: 0xf880a0b0
  mask: 0xf
  name: TRIGOUTEN
  description: |
    Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding
    channel to generate an CTITRIGOUT output:
    0 = the channel input (CTICHIN) from the CTM is not routed to the CTITRIGOUT output
    1 = the channel input (CTICHIN) from the CTM is routed to the CTITRIGOUT output.
    There is one bit for each of the four channels. For example in register CTIOUTEN0, enabling
    bit 0 enables CTICHIN[0] to cause a trigger event on the CTITRIGOUT[0] output.
ps7_debug_cti_axim_CTIOUTEN5_TRIGOUTEN:
  addr: 0xf880a0b4
  mask: 0xf
  name: TRIGOUTEN
  description: |
    Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding
    channel to generate an CTITRIGOUT output:
    0 = the channel input (CTICHIN) from the CTM is not routed to the CTITRIGOUT output
    1 = the channel input (CTICHIN) from the CTM is routed to the CTITRIGOUT output.
    There is one bit for each of the four channels. For example in register CTIOUTEN0, enabling
    bit 0 enables CTICHIN[0] to cause a trigger event on the CTITRIGOUT[0] output.
ps7_debug_cti_axim_CTIOUTEN6_TRIGOUTEN:
  addr: 0xf880a0b8
  mask: 0xf
  name: TRIGOUTEN
  description: |
    Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding
    channel to generate an CTITRIGOUT output:
    0 = the channel input (CTICHIN) from the CTM is not routed to the CTITRIGOUT output
    1 = the channel input (CTICHIN) from the CTM is routed to the CTITRIGOUT output.
    There is one bit for each of the four channels. For example in register CTIOUTEN0, enabling
    bit 0 enables CTICHIN[0] to cause a trigger event on the CTITRIGOUT[0] output.
ps7_debug_cti_axim_CTIOUTEN7_TRIGOUTEN:
  addr: 0xf880a0bc
  mask: 0xf
  name: TRIGOUTEN
  description: |
    Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding
    channel to generate an CTITRIGOUT output:
    0 = the channel input (CTICHIN) from the CTM is not routed to the CTITRIGOUT output
    1 = the channel input (CTICHIN) from the CTM is routed to the CTITRIGOUT output.
    There is one bit for each of the four channels. For example in register CTIOUTEN0, enabling
    bit 0 enables CTICHIN[0] to cause a trigger event on the CTITRIGOUT[0] output.
ps7_debug_cti_axim_CTITRIGINSTATUS_TRIGINSTATUS:
  addr: 0xf880a130
  mask: 0xff
  name: TRIGINSTATUS
  description: |
    Shows the status of the CTITRIGIN inputs:
    1 = CTITRIGIN is active
    0 = CTITRIGIN is inactive.
    Because the register provides a view of the raw CTITRIGIN inputs, the reset value is
    unknown. There is one bit of the register for each trigger input.
ps7_debug_cti_axim_CTITRIGOUTSTATUS_TRIGOUTSTATUS:
  addr: 0xf880a134
  mask: 0xff
  name: TRIGOUTSTATUS
  description: |
    Shows the status of the CTITRIGOUT outputs.
    1 = CTITRIGOUT is active
    0 = CTITRIGOUT is inactive (reset).
    There is one bit of the register for each trigger output.
ps7_debug_cti_axim_CTICHINSTATUS_CTCHINSTATUS:
  addr: 0xf880a138
  mask: 0xf
  name: CTCHINSTATUS
  description: |
    Shows the status of the CTICHIN inputs:
    1 = CTICHIN is active
    0 = CTICHIN is inactive.
    Because the register provides a view of the raw CTICHIN inputs from the CTM, the reset
    value is unknown. There is one bit of the register for each channel input.
ps7_debug_cti_axim_CTICHOUTSTATUS_CTCHOUTSTATUS:
  addr: 0xf880a13c
  mask: 0xf
  name: CTCHOUTSTATUS
  description: |
    Shows the status of the CTICHOUT outputs.
    1 = CTICHOUT is active
    0 = CTICHOUT is inactive (reset).
    There is one bit of the register for each channel output.
ps7_debug_cti_axim_CTIGATE_CTIGATEEN3:
  addr: 0xf880a140
  mask: 0x8
  name: CTIGATEEN3
  description: |
    Enable CTICHOUT3.
ps7_debug_cti_axim_CTIGATE_CTIGATEEN2:
  addr: 0xf880a140
  mask: 0x4
  name: CTIGATEEN2
  description: |
    Enable CTICHOUT2.
ps7_debug_cti_axim_CTIGATE_CTIGATEEN1:
  addr: 0xf880a140
  mask: 0x2
  name: CTIGATEEN1
  description: |
    Enable CTICHOUT1.
ps7_debug_cti_axim_CTIGATE_CTIGATEEN0:
  addr: 0xf880a140
  mask: 0x1
  name: CTIGATEEN0
  description: |
    Enable CTICHOUT0.
ps7_debug_cti_axim_ASICCTL_ASICCTL:
  addr: 0xf880a144
  mask: 0xff
  name: ASICCTL
  description: |
    Implementation defined ASIC control, value written to the register is output on ASICCTL[7:0].
ps7_debug_cti_axim_ITCHINACK_CTCHINACK:
  addr: 0xf880aedc
  mask: 0xf
  name: CTCHINACK
  description: |
    Set the value of the CTCHINACK outputs
ps7_debug_cti_axim_ITTRIGINACK_CTTRIGINACK:
  addr: 0xf880aee0
  mask: 0xff
  name: CTTRIGINACK
  description: |
    Set the value of the CTTRIGINACK outputs
ps7_debug_cti_axim_ITCHOUT_CTCHOUT:
  addr: 0xf880aee4
  mask: 0xf
  name: CTCHOUT
  description: |
    Set the value of the CTCHOUT outputs
ps7_debug_cti_axim_ITTRIGOUT_CTTRIGOUT:
  addr: 0xf880aee8
  mask: 0xff
  name: CTTRIGOUT
  description: |
    Set the value of the CTTRIGOUT outputs
ps7_debug_cti_axim_ITCHOUTACK_CTCHOUTACK:
  addr: 0xf880aeec
  mask: 0xf
  name: CTCHOUTACK
  description: |
    Read the values of the CTCHOUTACK inputs
ps7_debug_cti_axim_ITTRIGOUTACK_CTTRIGOUTACK:
  addr: 0xf880aef0
  mask: 0xff
  name: CTTRIGOUTACK
  description: |
    Read the values of the CTTRIGOUTACK inputs
ps7_debug_cti_axim_ITCHIN_CTCHIN:
  addr: 0xf880aef4
  mask: 0xf
  name: CTCHIN
  description: |
    Read the values of the CTCHIN inputs
ps7_debug_cti_axim_ITTRIGIN_CTTRIGIN:
  addr: 0xf880aef8
  mask: 0xff
  name: CTTRIGIN
  description: |
    Read the values of the CTTRIGIN inputs
ps7_debug_cti_axim_ITCTRL_a:
  addr: 0xf880af00
  mask: 0x1
  name: a
  description: |
    Enable IT Registers
ps7_debug_cti_axim_CTSR_SET:
  addr: 0xf880afa0
  mask: 0xf
  name: SET
  description: |
    The claim tag register is used for any interrogating tools to determine if the device is being programmed or has been programmed.
    Read:
    1= Claim tag is implemented, 0 = Claim tag is not implemented
    Write:
    1= Set claim tag bit, 0= No effect
ps7_debug_cti_axim_CTCR_CLEAR:
  addr: 0xf880afa4
  mask: 0xf
  name: CLEAR
  description: |
    The claim tag register is used for any interrogating tools to determine if the device is being programmed or has been programmed.
    Read: Current value of claim tag.
    Write: 1= Clear claim tag bit, 0= No effect
ps7_debug_cti_axim_LAR_KEY:
  addr: 0xf880afb0
  mask: 0xffffffff
  name: KEY
  description: |
    Write Access Code.
    Write behavior depends on PADDRDBG31 pin:
    - PADDRDBG31=0 (lower 2GB):
    After reset (via PRESETDBGn), CTI is locked, i.e., writes to all other registers using lower 2GB addresses are ignored.
    To unlock, 0xC5ACCE55 must be written this register.
    After the required registers are written, to lock again, write a value other than 0xC5ACCE55 to this register.
    - PADDRDBG31=1 (upper 2GB):
    CTI is unlocked when upper 2GB addresses are used to write to all the registers.
    However, write to this register is ignored using a upper 2GB address!
    Note: read from this register always returns 0, regardless of PADDRDBG31.
ps7_debug_cti_axim_LSR_n8BIT:
  addr: 0xf880afb4
  mask: 0x4
  name: n8BIT
  description: |
    Set to 0 since CTI implements a 32-bit lock access register
ps7_debug_cti_axim_LSR_STATUS:
  addr: 0xf880afb4
  mask: 0x2
  name: STATUS
  description: |
    Read behavior depends on PADDRDBG31 pin:
    - PADDRDBG31=0 (lower 2GB):
    When a lower 2GB address is used to read this register, this bit indicates whether CTI is in locked state
    (1= locked, 0= unlocked).
    - PADDRDBG31=1 (upper 2GB):
    always returns 0.
ps7_debug_cti_axim_LSR_IMP:
  addr: 0xf880afb4
  mask: 0x1
  name: IMP
  description: |
    Read behavior depends on PADDRDBG31 pin:
    - PADDRDBG31=0 (lower 2GB):
    always returns 1, meaning lock mechanism are implemented.
    - PADDRDBG31=1 (upper 2GB):
    always returns 0, meaning lock mechanism is NOT implemented.
ps7_debug_cti_axim_ASR_NIDEN:
  addr: 0xf880afb8
  mask: 0x8
  name: NIDEN
  description: |
    Current value of noninvasive debug enable signals
ps7_debug_cti_axim_ASR_NIDEN_CTL:
  addr: 0xf880afb8
  mask: 0x4
  name: NIDEN_CTL
  description: |
    Non-invasive debug controlled
ps7_debug_cti_axim_ASR_IDEN:
  addr: 0xf880afb8
  mask: 0x2
  name: IDEN
  description: |
    Current value of invasive debug enable signals
ps7_debug_cti_axim_ASR_IDEN_CTL:
  addr: 0xf880afb8
  mask: 0x1
  name: IDEN_CTL
  description: |
    Invasive debug controlled
ps7_debug_cti_axim_DEVID_NumChan:
  addr: 0xf880afc8
  mask: 0xf0000
  name: NumChan
  description: |
    Number of channels available
ps7_debug_cti_axim_DEVID_NumTrig:
  addr: 0xf880afc8
  mask: 0xff00
  name: NumTrig
  description: |
    Number of triggers available
ps7_debug_cti_axim_DEVID_res:
  addr: 0xf880afc8
  mask: 0xe0
  name: res
  description: |
    reserved
ps7_debug_cti_axim_DEVID_ExtMux:
  addr: 0xf880afc8
  mask: 0x1f
  name: ExtMux
  description: |
    no external muxing
ps7_debug_cti_axim_DTIR_a:
  addr: 0xf880afcc
  mask: 0xff
  name: a
  description: |
    major type is a debug control logic component, sub-type is cross trigger
ps7_debug_cti_axim_PERIPHID4_n4KB_count:
  addr: 0xf880afd0
  mask: 0xf0
  name: n4KB_count
  description: |
    4KB Count, set to 0
ps7_debug_cti_axim_PERIPHID4_JEP106ID:
  addr: 0xf880afd0
  mask: 0xf
  name: JEP106ID
  description: |
    JEP106 continuation code
ps7_debug_cti_axim_PERIPHID5_a:
  addr: 0xf880afd4
  mask: 0xff
  name: a
  description: |
    reserved
ps7_debug_cti_axim_PERIPHID6_a:
  addr: 0xf880afd8
  mask: 0xff
  name: a
  description: |
    reserved
ps7_debug_cti_axim_PERIPHID7_a:
  addr: 0xf880afdc
  mask: 0xff
  name: a
  description: |
    reserved
ps7_debug_cti_axim_PERIPHID0_a:
  addr: 0xf880afe0
  mask: 0xff
  name: a
  description: |
    PartNumber0
ps7_debug_cti_axim_PERIPHID1_JEP106ID:
  addr: 0xf880afe4
  mask: 0xf0
  name: JEP106ID
  description: |
    JEP106 Identity Code [3:0]
ps7_debug_cti_axim_PERIPHID1_PartNumber1:
  addr: 0xf880afe4
  mask: 0xf
  name: PartNumber1
  description: |
    PartNumber1
ps7_debug_cti_axim_PERIPHID2_RevNum:
  addr: 0xf880afe8
  mask: 0xf0
  name: RevNum
  description: |
    Revision number of Peripheral
ps7_debug_cti_axim_PERIPHID2_JEDEC:
  addr: 0xf880afe8
  mask: 0x8
  name: JEDEC
  description: |
    Indicates that a JEDEC assigned value is used
ps7_debug_cti_axim_PERIPHID2_JEP106ID:
  addr: 0xf880afe8
  mask: 0x7
  name: JEP106ID
  description: |
    JEP106 Identity Code [6:4]
ps7_debug_cti_axim_PERIPHID3_RevAnd:
  addr: 0xf880afec
  mask: 0xf0
  name: RevAnd
  description: |
    RevAnd, at top level
ps7_debug_cti_axim_PERIPHID3_CustMod:
  addr: 0xf880afec
  mask: 0xf
  name: CustMod
  description: |
    Customer Modified
ps7_debug_cti_axim_COMPID0_a:
  addr: 0xf880aff0
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_debug_cti_axim_COMPID1_a:
  addr: 0xf880aff4
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_debug_cti_axim_COMPID2_a:
  addr: 0xf880aff8
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_debug_cti_axim_COMPID3_a:
  addr: 0xf880affc
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_debug_cpu_cti1_CTICONTROL_GLBEN:
  addr: 0xf8899000
  mask: 0x1
  name: GLBEN
  description: |
    Enables or disables the ECT. When disabled, all cross triggering mapping logic functionality is disabled for this processor.
ps7_debug_cpu_cti1_CTIINTACK_INTACK:
  addr: 0xf8899010
  mask: 0xff
  name: INTACK
  description: |
    Acknowledges the corresponding CTITRIGOUT output:
    1 = CTITRIGOUT is acknowledged and is cleared when MAPTRIGOUT is LOW.
    0 = no effect
    There is one bit of the register for each CTITRIGOUT output.
ps7_debug_cpu_cti1_CTIAPPSET_APPSET:
  addr: 0xf8899014
  mask: 0xf
  name: APPSET
  description: |
    Setting a bit HIGH generates a channel event for the selected channel.
    Read:
    0 = application trigger inactive (reset)
    1 = application trigger active.
    Write:
    0 = no effect
    1 = generate channel event.
    There is one bit of the register for each channel.
ps7_debug_cpu_cti1_CTIAPPCLEAR_APPCLEAR:
  addr: 0xf8899018
  mask: 0xf
  name: APPCLEAR
  description: |
    Clears corresponding bits in the CTIAPPSET register.
    1 = application trigger disabled in the CTIAPPSET register
    0 = no effect.
    There is one bit of the register for each channel.
ps7_debug_cpu_cti1_CTIAPPPULSE_APPULSE:
  addr: 0xf889901c
  mask: 0xf
  name: APPULSE
  description: |
    Setting a bit HIGH generates a channel event pulse for the selected channel.
    Write:
    1 = channel event pulse generated for one CTICLK period
    0 = no effect.
    There is one bit of the register for each channel.
ps7_debug_cpu_cti1_CTIINEN0_TRIGINEN:
  addr: 0xf8899020
  mask: 0xf
  name: TRIGINEN
  description: |
    Enables a cross trigger event to the corresponding channel when an CTITRIGIN is activated.
    1 = enables the CTITRIGIN signal to generate an event on the respective channel of the CTM.
    There is one bit of the register for each of the four channels. For example in register CTIINEN0,
    TRIGINEN[0] set to 1 enables CTITRIGIN onto channel 0.
    0 = disables the CTITRIGIN signal from generating an event on the respective channel of the
    CTM.
ps7_debug_cpu_cti1_CTIINEN1_TRIGINEN:
  addr: 0xf8899024
  mask: 0xf
  name: TRIGINEN
  description: |
    Enables a cross trigger event to the corresponding channel when an CTITRIGIN is activated.
    1 = enables the CTITRIGIN signal to generate an event on the respective channel of the CTM.
    There is one bit of the register for each of the four channels. For example in register CTIINEN0,
    TRIGINEN[0] set to 1 enables CTITRIGIN onto channel 0.
    0 = disables the CTITRIGIN signal from generating an event on the respective channel of the
    CTM.
ps7_debug_cpu_cti1_CTIINEN2_TRIGINEN:
  addr: 0xf8899028
  mask: 0xf
  name: TRIGINEN
  description: |
    Enables a cross trigger event to the corresponding channel when an CTITRIGIN is activated.
    1 = enables the CTITRIGIN signal to generate an event on the respective channel of the CTM.
    There is one bit of the register for each of the four channels. For example in register CTIINEN0,
    TRIGINEN[0] set to 1 enables CTITRIGIN onto channel 0.
    0 = disables the CTITRIGIN signal from generating an event on the respective channel of the
    CTM.
ps7_debug_cpu_cti1_CTIINEN3_TRIGINEN:
  addr: 0xf889902c
  mask: 0xf
  name: TRIGINEN
  description: |
    Enables a cross trigger event to the corresponding channel when an CTITRIGIN is activated.
    1 = enables the CTITRIGIN signal to generate an event on the respective channel of the CTM.
    There is one bit of the register for each of the four channels. For example in register CTIINEN0,
    TRIGINEN[0] set to 1 enables CTITRIGIN onto channel 0.
    0 = disables the CTITRIGIN signal from generating an event on the respective channel of the
    CTM.
ps7_debug_cpu_cti1_CTIINEN4_TRIGINEN:
  addr: 0xf8899030
  mask: 0xf
  name: TRIGINEN
  description: |
    Enables a cross trigger event to the corresponding channel when an CTITRIGIN is activated.
    1 = enables the CTITRIGIN signal to generate an event on the respective channel of the CTM.
    There is one bit of the register for each of the four channels. For example in register CTIINEN0,
    TRIGINEN[0] set to 1 enables CTITRIGIN onto channel 0.
    0 = disables the CTITRIGIN signal from generating an event on the respective channel of the
    CTM.
ps7_debug_cpu_cti1_CTIINEN5_TRIGINEN:
  addr: 0xf8899034
  mask: 0xf
  name: TRIGINEN
  description: |
    Enables a cross trigger event to the corresponding channel when an CTITRIGIN is activated.
    1 = enables the CTITRIGIN signal to generate an event on the respective channel of the CTM.
    There is one bit of the register for each of the four channels. For example in register CTIINEN0,
    TRIGINEN[0] set to 1 enables CTITRIGIN onto channel 0.
    0 = disables the CTITRIGIN signal from generating an event on the respective channel of the
    CTM.
ps7_debug_cpu_cti1_CTIINEN6_TRIGINEN:
  addr: 0xf8899038
  mask: 0xf
  name: TRIGINEN
  description: |
    Enables a cross trigger event to the corresponding channel when an CTITRIGIN is activated.
    1 = enables the CTITRIGIN signal to generate an event on the respective channel of the CTM.
    There is one bit of the register for each of the four channels. For example in register CTIINEN0,
    TRIGINEN[0] set to 1 enables CTITRIGIN onto channel 0.
    0 = disables the CTITRIGIN signal from generating an event on the respective channel of the
    CTM.
ps7_debug_cpu_cti1_CTIINEN7_TRIGINEN:
  addr: 0xf889903c
  mask: 0xf
  name: TRIGINEN
  description: |
    Enables a cross trigger event to the corresponding channel when an CTITRIGIN is activated.
    1 = enables the CTITRIGIN signal to generate an event on the respective channel of the CTM.
    There is one bit of the register for each of the four channels. For example in register CTIINEN0,
    TRIGINEN[0] set to 1 enables CTITRIGIN onto channel 0.
    0 = disables the CTITRIGIN signal from generating an event on the respective channel of the
    CTM.
ps7_debug_cpu_cti1_CTIOUTEN0_TRIGOUTEN:
  addr: 0xf88990a0
  mask: 0xf
  name: TRIGOUTEN
  description: |
    Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding
    channel to generate an CTITRIGOUT output:
    0 = the channel input (CTICHIN) from the CTM is not routed to the CTITRIGOUT output
    1 = the channel input (CTICHIN) from the CTM is routed to the CTITRIGOUT output.
    There is one bit for each of the four channels. For example in register CTIOUTEN0, enabling
    bit 0 enables CTICHIN[0] to cause a trigger event on the CTITRIGOUT[0] output.
ps7_debug_cpu_cti1_CTIOUTEN1_TRIGOUTEN:
  addr: 0xf88990a4
  mask: 0xf
  name: TRIGOUTEN
  description: |
    Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding
    channel to generate an CTITRIGOUT output:
    0 = the channel input (CTICHIN) from the CTM is not routed to the CTITRIGOUT output
    1 = the channel input (CTICHIN) from the CTM is routed to the CTITRIGOUT output.
    There is one bit for each of the four channels. For example in register CTIOUTEN0, enabling
    bit 0 enables CTICHIN[0] to cause a trigger event on the CTITRIGOUT[0] output.
ps7_debug_cpu_cti1_CTIOUTEN2_TRIGOUTEN:
  addr: 0xf88990a8
  mask: 0xf
  name: TRIGOUTEN
  description: |
    Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding
    channel to generate an CTITRIGOUT output:
    0 = the channel input (CTICHIN) from the CTM is not routed to the CTITRIGOUT output
    1 = the channel input (CTICHIN) from the CTM is routed to the CTITRIGOUT output.
    There is one bit for each of the four channels. For example in register CTIOUTEN0, enabling
    bit 0 enables CTICHIN[0] to cause a trigger event on the CTITRIGOUT[0] output.
ps7_debug_cpu_cti1_CTIOUTEN3_TRIGOUTEN:
  addr: 0xf88990ac
  mask: 0xf
  name: TRIGOUTEN
  description: |
    Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding
    channel to generate an CTITRIGOUT output:
    0 = the channel input (CTICHIN) from the CTM is not routed to the CTITRIGOUT output
    1 = the channel input (CTICHIN) from the CTM is routed to the CTITRIGOUT output.
    There is one bit for each of the four channels. For example in register CTIOUTEN0, enabling
    bit 0 enables CTICHIN[0] to cause a trigger event on the CTITRIGOUT[0] output.
ps7_debug_cpu_cti1_CTIOUTEN4_TRIGOUTEN:
  addr: 0xf88990b0
  mask: 0xf
  name: TRIGOUTEN
  description: |
    Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding
    channel to generate an CTITRIGOUT output:
    0 = the channel input (CTICHIN) from the CTM is not routed to the CTITRIGOUT output
    1 = the channel input (CTICHIN) from the CTM is routed to the CTITRIGOUT output.
    There is one bit for each of the four channels. For example in register CTIOUTEN0, enabling
    bit 0 enables CTICHIN[0] to cause a trigger event on the CTITRIGOUT[0] output.
ps7_debug_cpu_cti1_CTIOUTEN5_TRIGOUTEN:
  addr: 0xf88990b4
  mask: 0xf
  name: TRIGOUTEN
  description: |
    Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding
    channel to generate an CTITRIGOUT output:
    0 = the channel input (CTICHIN) from the CTM is not routed to the CTITRIGOUT output
    1 = the channel input (CTICHIN) from the CTM is routed to the CTITRIGOUT output.
    There is one bit for each of the four channels. For example in register CTIOUTEN0, enabling
    bit 0 enables CTICHIN[0] to cause a trigger event on the CTITRIGOUT[0] output.
ps7_debug_cpu_cti1_CTIOUTEN6_TRIGOUTEN:
  addr: 0xf88990b8
  mask: 0xf
  name: TRIGOUTEN
  description: |
    Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding
    channel to generate an CTITRIGOUT output:
    0 = the channel input (CTICHIN) from the CTM is not routed to the CTITRIGOUT output
    1 = the channel input (CTICHIN) from the CTM is routed to the CTITRIGOUT output.
    There is one bit for each of the four channels. For example in register CTIOUTEN0, enabling
    bit 0 enables CTICHIN[0] to cause a trigger event on the CTITRIGOUT[0] output.
ps7_debug_cpu_cti1_CTIOUTEN7_TRIGOUTEN:
  addr: 0xf88990bc
  mask: 0xf
  name: TRIGOUTEN
  description: |
    Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding
    channel to generate an CTITRIGOUT output:
    0 = the channel input (CTICHIN) from the CTM is not routed to the CTITRIGOUT output
    1 = the channel input (CTICHIN) from the CTM is routed to the CTITRIGOUT output.
    There is one bit for each of the four channels. For example in register CTIOUTEN0, enabling
    bit 0 enables CTICHIN[0] to cause a trigger event on the CTITRIGOUT[0] output.
ps7_debug_cpu_cti1_CTITRIGINSTATUS_TRIGINSTATUS:
  addr: 0xf8899130
  mask: 0xff
  name: TRIGINSTATUS
  description: |
    Shows the status of the CTITRIGIN inputs:
    1 = CTITRIGIN is active
    0 = CTITRIGIN is inactive.
    Because the register provides a view of the raw CTITRIGIN inputs, the reset value is
    unknown. There is one bit of the register for each trigger input.
ps7_debug_cpu_cti1_CTITRIGOUTSTATUS_TRIGOUTSTATUS:
  addr: 0xf8899134
  mask: 0xff
  name: TRIGOUTSTATUS
  description: |
    Shows the status of the CTITRIGOUT outputs.
    1 = CTITRIGOUT is active
    0 = CTITRIGOUT is inactive (reset).
    There is one bit of the register for each trigger output.
ps7_debug_cpu_cti1_CTICHINSTATUS_CTCHINSTATUS:
  addr: 0xf8899138
  mask: 0xf
  name: CTCHINSTATUS
  description: |
    Shows the status of the CTICHIN inputs:
    1 = CTICHIN is active
    0 = CTICHIN is inactive.
    Because the register provides a view of the raw CTICHIN inputs from the CTM, the reset
    value is unknown. There is one bit of the register for each channel input.
ps7_debug_cpu_cti1_CTICHOUTSTATUS_CTCHOUTSTATUS:
  addr: 0xf889913c
  mask: 0xf
  name: CTCHOUTSTATUS
  description: |
    Shows the status of the CTICHOUT outputs.
    1 = CTICHOUT is active
    0 = CTICHOUT is inactive (reset).
    There is one bit of the register for each channel output.
ps7_debug_cpu_cti1_CTIGATE_CTIGATEEN3:
  addr: 0xf8899140
  mask: 0x8
  name: CTIGATEEN3
  description: |
    Enable CTICHOUT3.
ps7_debug_cpu_cti1_CTIGATE_CTIGATEEN2:
  addr: 0xf8899140
  mask: 0x4
  name: CTIGATEEN2
  description: |
    Enable CTICHOUT2.
ps7_debug_cpu_cti1_CTIGATE_CTIGATEEN1:
  addr: 0xf8899140
  mask: 0x2
  name: CTIGATEEN1
  description: |
    Enable CTICHOUT1.
ps7_debug_cpu_cti1_CTIGATE_CTIGATEEN0:
  addr: 0xf8899140
  mask: 0x1
  name: CTIGATEEN0
  description: |
    Enable CTICHOUT0.
ps7_debug_cpu_cti1_ASICCTL_ASICCTL:
  addr: 0xf8899144
  mask: 0xff
  name: ASICCTL
  description: |
    Implementation defined ASIC control, value written to the register is output on ASICCTL[7:0].
ps7_debug_cpu_cti1_ITCHINACK_CTCHINACK:
  addr: 0xf8899edc
  mask: 0xf
  name: CTCHINACK
  description: |
    Set the value of the CTCHINACK outputs
ps7_debug_cpu_cti1_ITTRIGINACK_CTTRIGINACK:
  addr: 0xf8899ee0
  mask: 0xff
  name: CTTRIGINACK
  description: |
    Set the value of the CTTRIGINACK outputs
ps7_debug_cpu_cti1_ITCHOUT_CTCHOUT:
  addr: 0xf8899ee4
  mask: 0xf
  name: CTCHOUT
  description: |
    Set the value of the CTCHOUT outputs
ps7_debug_cpu_cti1_ITTRIGOUT_CTTRIGOUT:
  addr: 0xf8899ee8
  mask: 0xff
  name: CTTRIGOUT
  description: |
    Set the value of the CTTRIGOUT outputs
ps7_debug_cpu_cti1_ITCHOUTACK_CTCHOUTACK:
  addr: 0xf8899eec
  mask: 0xf
  name: CTCHOUTACK
  description: |
    Read the values of the CTCHOUTACK inputs
ps7_debug_cpu_cti1_ITTRIGOUTACK_CTTRIGOUTACK:
  addr: 0xf8899ef0
  mask: 0xff
  name: CTTRIGOUTACK
  description: |
    Read the values of the CTTRIGOUTACK inputs
ps7_debug_cpu_cti1_ITCHIN_CTCHIN:
  addr: 0xf8899ef4
  mask: 0xf
  name: CTCHIN
  description: |
    Read the values of the CTCHIN inputs
ps7_debug_cpu_cti1_ITTRIGIN_CTTRIGIN:
  addr: 0xf8899ef8
  mask: 0xff
  name: CTTRIGIN
  description: |
    Read the values of the CTTRIGIN inputs
ps7_debug_cpu_cti1_ITCTRL_a:
  addr: 0xf8899f00
  mask: 0x1
  name: a
  description: |
    Enable IT Registers
ps7_debug_cpu_cti1_CTSR_SET:
  addr: 0xf8899fa0
  mask: 0xf
  name: SET
  description: |
    The claim tag register is used for any interrogating tools to determine if the device is being programmed or has been programmed.
    Read:
    1= Claim tag is implemented, 0 = Claim tag is not implemented
    Write:
    1= Set claim tag bit, 0= No effect
ps7_debug_cpu_cti1_CTCR_CLEAR:
  addr: 0xf8899fa4
  mask: 0xf
  name: CLEAR
  description: |
    The claim tag register is used for any interrogating tools to determine if the device is being programmed or has been programmed.
    Read: Current value of claim tag.
    Write: 1= Clear claim tag bit, 0= No effect
ps7_debug_cpu_cti1_LAR_KEY:
  addr: 0xf8899fb0
  mask: 0xffffffff
  name: KEY
  description: |
    Write Access Code.
    Write behavior depends on PADDRDBG31 pin:
    - PADDRDBG31=0 (lower 2GB):
    After reset (via PRESETDBGn), CTI is locked, i.e., writes to all other registers using lower 2GB addresses are ignored.
    To unlock, 0xC5ACCE55 must be written this register.
    After the required registers are written, to lock again, write a value other than 0xC5ACCE55 to this register.
    - PADDRDBG31=1 (upper 2GB):
    CTI is unlocked when upper 2GB addresses are used to write to all the registers.
    However, write to this register is ignored using a upper 2GB address!
    Note: read from this register always returns 0, regardless of PADDRDBG31.
ps7_debug_cpu_cti1_LSR_n8BIT:
  addr: 0xf8899fb4
  mask: 0x4
  name: n8BIT
  description: |
    Set to 0 since CTI implements a 32-bit lock access register
ps7_debug_cpu_cti1_LSR_STATUS:
  addr: 0xf8899fb4
  mask: 0x2
  name: STATUS
  description: |
    Read behavior depends on PADDRDBG31 pin:
    - PADDRDBG31=0 (lower 2GB):
    When a lower 2GB address is used to read this register, this bit indicates whether CTI is in locked state
    (1= locked, 0= unlocked).
    - PADDRDBG31=1 (upper 2GB):
    always returns 0.
ps7_debug_cpu_cti1_LSR_IMP:
  addr: 0xf8899fb4
  mask: 0x1
  name: IMP
  description: |
    Read behavior depends on PADDRDBG31 pin:
    - PADDRDBG31=0 (lower 2GB):
    always returns 1, meaning lock mechanism are implemented.
    - PADDRDBG31=1 (upper 2GB):
    always returns 0, meaning lock mechanism is NOT implemented.
ps7_debug_cpu_cti1_ASR_NIDEN:
  addr: 0xf8899fb8
  mask: 0x8
  name: NIDEN
  description: |
    Current value of noninvasive debug enable signals
ps7_debug_cpu_cti1_ASR_NIDEN_CTL:
  addr: 0xf8899fb8
  mask: 0x4
  name: NIDEN_CTL
  description: |
    Non-invasive debug controlled
ps7_debug_cpu_cti1_ASR_IDEN:
  addr: 0xf8899fb8
  mask: 0x2
  name: IDEN
  description: |
    Current value of invasive debug enable signals
ps7_debug_cpu_cti1_ASR_IDEN_CTL:
  addr: 0xf8899fb8
  mask: 0x1
  name: IDEN_CTL
  description: |
    Invasive debug controlled
ps7_debug_cpu_cti1_DEVID_NumChan:
  addr: 0xf8899fc8
  mask: 0xf0000
  name: NumChan
  description: |
    Number of channels available
ps7_debug_cpu_cti1_DEVID_NumTrig:
  addr: 0xf8899fc8
  mask: 0xff00
  name: NumTrig
  description: |
    Number of triggers available
ps7_debug_cpu_cti1_DEVID_res:
  addr: 0xf8899fc8
  mask: 0xe0
  name: res
  description: |
    reserved
ps7_debug_cpu_cti1_DEVID_ExtMux:
  addr: 0xf8899fc8
  mask: 0x1f
  name: ExtMux
  description: |
    no external muxing
ps7_debug_cpu_cti1_DTIR_a:
  addr: 0xf8899fcc
  mask: 0xff
  name: a
  description: |
    major type is a debug control logic component, sub-type is cross trigger
ps7_debug_cpu_cti1_PERIPHID4_n4KB_count:
  addr: 0xf8899fd0
  mask: 0xf0
  name: n4KB_count
  description: |
    4KB Count, set to 0
ps7_debug_cpu_cti1_PERIPHID4_JEP106ID:
  addr: 0xf8899fd0
  mask: 0xf
  name: JEP106ID
  description: |
    JEP106 continuation code
ps7_debug_cpu_cti1_PERIPHID5_a:
  addr: 0xf8899fd4
  mask: 0xff
  name: a
  description: |
    reserved
ps7_debug_cpu_cti1_PERIPHID6_a:
  addr: 0xf8899fd8
  mask: 0xff
  name: a
  description: |
    reserved
ps7_debug_cpu_cti1_PERIPHID7_a:
  addr: 0xf8899fdc
  mask: 0xff
  name: a
  description: |
    reserved
ps7_debug_cpu_cti1_PERIPHID0_a:
  addr: 0xf8899fe0
  mask: 0xff
  name: a
  description: |
    PartNumber0
ps7_debug_cpu_cti1_PERIPHID1_JEP106ID:
  addr: 0xf8899fe4
  mask: 0xf0
  name: JEP106ID
  description: |
    JEP106 Identity Code [3:0]
ps7_debug_cpu_cti1_PERIPHID1_PartNumber1:
  addr: 0xf8899fe4
  mask: 0xf
  name: PartNumber1
  description: |
    PartNumber1
ps7_debug_cpu_cti1_PERIPHID2_RevNum:
  addr: 0xf8899fe8
  mask: 0xf0
  name: RevNum
  description: |
    Revision number of Peripheral
ps7_debug_cpu_cti1_PERIPHID2_JEDEC:
  addr: 0xf8899fe8
  mask: 0x8
  name: JEDEC
  description: |
    Indicates that a JEDEC assigned value is used
ps7_debug_cpu_cti1_PERIPHID2_JEP106ID:
  addr: 0xf8899fe8
  mask: 0x7
  name: JEP106ID
  description: |
    JEP106 Identity Code [6:4]
ps7_debug_cpu_cti1_PERIPHID3_RevAnd:
  addr: 0xf8899fec
  mask: 0xf0
  name: RevAnd
  description: |
    RevAnd, at top level
ps7_debug_cpu_cti1_PERIPHID3_CustMod:
  addr: 0xf8899fec
  mask: 0xf
  name: CustMod
  description: |
    Customer Modified
ps7_debug_cpu_cti1_COMPID0_a:
  addr: 0xf8899ff0
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_debug_cpu_cti1_COMPID1_a:
  addr: 0xf8899ff4
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_debug_cpu_cti1_COMPID2_a:
  addr: 0xf8899ff8
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_debug_cpu_cti1_COMPID3_a:
  addr: 0xf8899ffc
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_debug_cpu_cti0_CTICONTROL_GLBEN:
  addr: 0xf8898000
  mask: 0x1
  name: GLBEN
  description: |
    Enables or disables the ECT. When disabled, all cross triggering mapping logic functionality is disabled for this processor.
ps7_debug_cpu_cti0_CTIINTACK_INTACK:
  addr: 0xf8898010
  mask: 0xff
  name: INTACK
  description: |
    Acknowledges the corresponding CTITRIGOUT output:
    1 = CTITRIGOUT is acknowledged and is cleared when MAPTRIGOUT is LOW.
    0 = no effect
    There is one bit of the register for each CTITRIGOUT output.
ps7_debug_cpu_cti0_CTIAPPSET_APPSET:
  addr: 0xf8898014
  mask: 0xf
  name: APPSET
  description: |
    Setting a bit HIGH generates a channel event for the selected channel.
    Read:
    0 = application trigger inactive (reset)
    1 = application trigger active.
    Write:
    0 = no effect
    1 = generate channel event.
    There is one bit of the register for each channel.
ps7_debug_cpu_cti0_CTIAPPCLEAR_APPCLEAR:
  addr: 0xf8898018
  mask: 0xf
  name: APPCLEAR
  description: |
    Clears corresponding bits in the CTIAPPSET register.
    1 = application trigger disabled in the CTIAPPSET register
    0 = no effect.
    There is one bit of the register for each channel.
ps7_debug_cpu_cti0_CTIAPPPULSE_APPULSE:
  addr: 0xf889801c
  mask: 0xf
  name: APPULSE
  description: |
    Setting a bit HIGH generates a channel event pulse for the selected channel.
    Write:
    1 = channel event pulse generated for one CTICLK period
    0 = no effect.
    There is one bit of the register for each channel.
ps7_debug_cpu_cti0_CTIINEN0_TRIGINEN:
  addr: 0xf8898020
  mask: 0xf
  name: TRIGINEN
  description: |
    Enables a cross trigger event to the corresponding channel when an CTITRIGIN is activated.
    1 = enables the CTITRIGIN signal to generate an event on the respective channel of the CTM.
    There is one bit of the register for each of the four channels. For example in register CTIINEN0,
    TRIGINEN[0] set to 1 enables CTITRIGIN onto channel 0.
    0 = disables the CTITRIGIN signal from generating an event on the respective channel of the
    CTM.
ps7_debug_cpu_cti0_CTIINEN1_TRIGINEN:
  addr: 0xf8898024
  mask: 0xf
  name: TRIGINEN
  description: |
    Enables a cross trigger event to the corresponding channel when an CTITRIGIN is activated.
    1 = enables the CTITRIGIN signal to generate an event on the respective channel of the CTM.
    There is one bit of the register for each of the four channels. For example in register CTIINEN0,
    TRIGINEN[0] set to 1 enables CTITRIGIN onto channel 0.
    0 = disables the CTITRIGIN signal from generating an event on the respective channel of the
    CTM.
ps7_debug_cpu_cti0_CTIINEN2_TRIGINEN:
  addr: 0xf8898028
  mask: 0xf
  name: TRIGINEN
  description: |
    Enables a cross trigger event to the corresponding channel when an CTITRIGIN is activated.
    1 = enables the CTITRIGIN signal to generate an event on the respective channel of the CTM.
    There is one bit of the register for each of the four channels. For example in register CTIINEN0,
    TRIGINEN[0] set to 1 enables CTITRIGIN onto channel 0.
    0 = disables the CTITRIGIN signal from generating an event on the respective channel of the
    CTM.
ps7_debug_cpu_cti0_CTIINEN3_TRIGINEN:
  addr: 0xf889802c
  mask: 0xf
  name: TRIGINEN
  description: |
    Enables a cross trigger event to the corresponding channel when an CTITRIGIN is activated.
    1 = enables the CTITRIGIN signal to generate an event on the respective channel of the CTM.
    There is one bit of the register for each of the four channels. For example in register CTIINEN0,
    TRIGINEN[0] set to 1 enables CTITRIGIN onto channel 0.
    0 = disables the CTITRIGIN signal from generating an event on the respective channel of the
    CTM.
ps7_debug_cpu_cti0_CTIINEN4_TRIGINEN:
  addr: 0xf8898030
  mask: 0xf
  name: TRIGINEN
  description: |
    Enables a cross trigger event to the corresponding channel when an CTITRIGIN is activated.
    1 = enables the CTITRIGIN signal to generate an event on the respective channel of the CTM.
    There is one bit of the register for each of the four channels. For example in register CTIINEN0,
    TRIGINEN[0] set to 1 enables CTITRIGIN onto channel 0.
    0 = disables the CTITRIGIN signal from generating an event on the respective channel of the
    CTM.
ps7_debug_cpu_cti0_CTIINEN5_TRIGINEN:
  addr: 0xf8898034
  mask: 0xf
  name: TRIGINEN
  description: |
    Enables a cross trigger event to the corresponding channel when an CTITRIGIN is activated.
    1 = enables the CTITRIGIN signal to generate an event on the respective channel of the CTM.
    There is one bit of the register for each of the four channels. For example in register CTIINEN0,
    TRIGINEN[0] set to 1 enables CTITRIGIN onto channel 0.
    0 = disables the CTITRIGIN signal from generating an event on the respective channel of the
    CTM.
ps7_debug_cpu_cti0_CTIINEN6_TRIGINEN:
  addr: 0xf8898038
  mask: 0xf
  name: TRIGINEN
  description: |
    Enables a cross trigger event to the corresponding channel when an CTITRIGIN is activated.
    1 = enables the CTITRIGIN signal to generate an event on the respective channel of the CTM.
    There is one bit of the register for each of the four channels. For example in register CTIINEN0,
    TRIGINEN[0] set to 1 enables CTITRIGIN onto channel 0.
    0 = disables the CTITRIGIN signal from generating an event on the respective channel of the
    CTM.
ps7_debug_cpu_cti0_CTIINEN7_TRIGINEN:
  addr: 0xf889803c
  mask: 0xf
  name: TRIGINEN
  description: |
    Enables a cross trigger event to the corresponding channel when an CTITRIGIN is activated.
    1 = enables the CTITRIGIN signal to generate an event on the respective channel of the CTM.
    There is one bit of the register for each of the four channels. For example in register CTIINEN0,
    TRIGINEN[0] set to 1 enables CTITRIGIN onto channel 0.
    0 = disables the CTITRIGIN signal from generating an event on the respective channel of the
    CTM.
ps7_debug_cpu_cti0_CTIOUTEN0_TRIGOUTEN:
  addr: 0xf88980a0
  mask: 0xf
  name: TRIGOUTEN
  description: |
    Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding
    channel to generate an CTITRIGOUT output:
    0 = the channel input (CTICHIN) from the CTM is not routed to the CTITRIGOUT output
    1 = the channel input (CTICHIN) from the CTM is routed to the CTITRIGOUT output.
    There is one bit for each of the four channels. For example in register CTIOUTEN0, enabling
    bit 0 enables CTICHIN[0] to cause a trigger event on the CTITRIGOUT[0] output.
ps7_debug_cpu_cti0_CTIOUTEN1_TRIGOUTEN:
  addr: 0xf88980a4
  mask: 0xf
  name: TRIGOUTEN
  description: |
    Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding
    channel to generate an CTITRIGOUT output:
    0 = the channel input (CTICHIN) from the CTM is not routed to the CTITRIGOUT output
    1 = the channel input (CTICHIN) from the CTM is routed to the CTITRIGOUT output.
    There is one bit for each of the four channels. For example in register CTIOUTEN0, enabling
    bit 0 enables CTICHIN[0] to cause a trigger event on the CTITRIGOUT[0] output.
ps7_debug_cpu_cti0_CTIOUTEN2_TRIGOUTEN:
  addr: 0xf88980a8
  mask: 0xf
  name: TRIGOUTEN
  description: |
    Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding
    channel to generate an CTITRIGOUT output:
    0 = the channel input (CTICHIN) from the CTM is not routed to the CTITRIGOUT output
    1 = the channel input (CTICHIN) from the CTM is routed to the CTITRIGOUT output.
    There is one bit for each of the four channels. For example in register CTIOUTEN0, enabling
    bit 0 enables CTICHIN[0] to cause a trigger event on the CTITRIGOUT[0] output.
ps7_debug_cpu_cti0_CTIOUTEN3_TRIGOUTEN:
  addr: 0xf88980ac
  mask: 0xf
  name: TRIGOUTEN
  description: |
    Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding
    channel to generate an CTITRIGOUT output:
    0 = the channel input (CTICHIN) from the CTM is not routed to the CTITRIGOUT output
    1 = the channel input (CTICHIN) from the CTM is routed to the CTITRIGOUT output.
    There is one bit for each of the four channels. For example in register CTIOUTEN0, enabling
    bit 0 enables CTICHIN[0] to cause a trigger event on the CTITRIGOUT[0] output.
ps7_debug_cpu_cti0_CTIOUTEN4_TRIGOUTEN:
  addr: 0xf88980b0
  mask: 0xf
  name: TRIGOUTEN
  description: |
    Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding
    channel to generate an CTITRIGOUT output:
    0 = the channel input (CTICHIN) from the CTM is not routed to the CTITRIGOUT output
    1 = the channel input (CTICHIN) from the CTM is routed to the CTITRIGOUT output.
    There is one bit for each of the four channels. For example in register CTIOUTEN0, enabling
    bit 0 enables CTICHIN[0] to cause a trigger event on the CTITRIGOUT[0] output.
ps7_debug_cpu_cti0_CTIOUTEN5_TRIGOUTEN:
  addr: 0xf88980b4
  mask: 0xf
  name: TRIGOUTEN
  description: |
    Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding
    channel to generate an CTITRIGOUT output:
    0 = the channel input (CTICHIN) from the CTM is not routed to the CTITRIGOUT output
    1 = the channel input (CTICHIN) from the CTM is routed to the CTITRIGOUT output.
    There is one bit for each of the four channels. For example in register CTIOUTEN0, enabling
    bit 0 enables CTICHIN[0] to cause a trigger event on the CTITRIGOUT[0] output.
ps7_debug_cpu_cti0_CTIOUTEN6_TRIGOUTEN:
  addr: 0xf88980b8
  mask: 0xf
  name: TRIGOUTEN
  description: |
    Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding
    channel to generate an CTITRIGOUT output:
    0 = the channel input (CTICHIN) from the CTM is not routed to the CTITRIGOUT output
    1 = the channel input (CTICHIN) from the CTM is routed to the CTITRIGOUT output.
    There is one bit for each of the four channels. For example in register CTIOUTEN0, enabling
    bit 0 enables CTICHIN[0] to cause a trigger event on the CTITRIGOUT[0] output.
ps7_debug_cpu_cti0_CTIOUTEN7_TRIGOUTEN:
  addr: 0xf88980bc
  mask: 0xf
  name: TRIGOUTEN
  description: |
    Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding
    channel to generate an CTITRIGOUT output:
    0 = the channel input (CTICHIN) from the CTM is not routed to the CTITRIGOUT output
    1 = the channel input (CTICHIN) from the CTM is routed to the CTITRIGOUT output.
    There is one bit for each of the four channels. For example in register CTIOUTEN0, enabling
    bit 0 enables CTICHIN[0] to cause a trigger event on the CTITRIGOUT[0] output.
ps7_debug_cpu_cti0_CTITRIGINSTATUS_TRIGINSTATUS:
  addr: 0xf8898130
  mask: 0xff
  name: TRIGINSTATUS
  description: |
    Shows the status of the CTITRIGIN inputs:
    1 = CTITRIGIN is active
    0 = CTITRIGIN is inactive.
    Because the register provides a view of the raw CTITRIGIN inputs, the reset value is
    unknown. There is one bit of the register for each trigger input.
ps7_debug_cpu_cti0_CTITRIGOUTSTATUS_TRIGOUTSTATUS:
  addr: 0xf8898134
  mask: 0xff
  name: TRIGOUTSTATUS
  description: |
    Shows the status of the CTITRIGOUT outputs.
    1 = CTITRIGOUT is active
    0 = CTITRIGOUT is inactive (reset).
    There is one bit of the register for each trigger output.
ps7_debug_cpu_cti0_CTICHINSTATUS_CTCHINSTATUS:
  addr: 0xf8898138
  mask: 0xf
  name: CTCHINSTATUS
  description: |
    Shows the status of the CTICHIN inputs:
    1 = CTICHIN is active
    0 = CTICHIN is inactive.
    Because the register provides a view of the raw CTICHIN inputs from the CTM, the reset
    value is unknown. There is one bit of the register for each channel input.
ps7_debug_cpu_cti0_CTICHOUTSTATUS_CTCHOUTSTATUS:
  addr: 0xf889813c
  mask: 0xf
  name: CTCHOUTSTATUS
  description: |
    Shows the status of the CTICHOUT outputs.
    1 = CTICHOUT is active
    0 = CTICHOUT is inactive (reset).
    There is one bit of the register for each channel output.
ps7_debug_cpu_cti0_CTIGATE_CTIGATEEN3:
  addr: 0xf8898140
  mask: 0x8
  name: CTIGATEEN3
  description: |
    Enable CTICHOUT3.
ps7_debug_cpu_cti0_CTIGATE_CTIGATEEN2:
  addr: 0xf8898140
  mask: 0x4
  name: CTIGATEEN2
  description: |
    Enable CTICHOUT2.
ps7_debug_cpu_cti0_CTIGATE_CTIGATEEN1:
  addr: 0xf8898140
  mask: 0x2
  name: CTIGATEEN1
  description: |
    Enable CTICHOUT1.
ps7_debug_cpu_cti0_CTIGATE_CTIGATEEN0:
  addr: 0xf8898140
  mask: 0x1
  name: CTIGATEEN0
  description: |
    Enable CTICHOUT0.
ps7_debug_cpu_cti0_ASICCTL_ASICCTL:
  addr: 0xf8898144
  mask: 0xff
  name: ASICCTL
  description: |
    Implementation defined ASIC control, value written to the register is output on ASICCTL[7:0].
ps7_debug_cpu_cti0_ITCHINACK_CTCHINACK:
  addr: 0xf8898edc
  mask: 0xf
  name: CTCHINACK
  description: |
    Set the value of the CTCHINACK outputs
ps7_debug_cpu_cti0_ITTRIGINACK_CTTRIGINACK:
  addr: 0xf8898ee0
  mask: 0xff
  name: CTTRIGINACK
  description: |
    Set the value of the CTTRIGINACK outputs
ps7_debug_cpu_cti0_ITCHOUT_CTCHOUT:
  addr: 0xf8898ee4
  mask: 0xf
  name: CTCHOUT
  description: |
    Set the value of the CTCHOUT outputs
ps7_debug_cpu_cti0_ITTRIGOUT_CTTRIGOUT:
  addr: 0xf8898ee8
  mask: 0xff
  name: CTTRIGOUT
  description: |
    Set the value of the CTTRIGOUT outputs
ps7_debug_cpu_cti0_ITCHOUTACK_CTCHOUTACK:
  addr: 0xf8898eec
  mask: 0xf
  name: CTCHOUTACK
  description: |
    Read the values of the CTCHOUTACK inputs
ps7_debug_cpu_cti0_ITTRIGOUTACK_CTTRIGOUTACK:
  addr: 0xf8898ef0
  mask: 0xff
  name: CTTRIGOUTACK
  description: |
    Read the values of the CTTRIGOUTACK inputs
ps7_debug_cpu_cti0_ITCHIN_CTCHIN:
  addr: 0xf8898ef4
  mask: 0xf
  name: CTCHIN
  description: |
    Read the values of the CTCHIN inputs
ps7_debug_cpu_cti0_ITTRIGIN_CTTRIGIN:
  addr: 0xf8898ef8
  mask: 0xff
  name: CTTRIGIN
  description: |
    Read the values of the CTTRIGIN inputs
ps7_debug_cpu_cti0_ITCTRL_a:
  addr: 0xf8898f00
  mask: 0x1
  name: a
  description: |
    Enable IT Registers
ps7_debug_cpu_cti0_CTSR_SET:
  addr: 0xf8898fa0
  mask: 0xf
  name: SET
  description: |
    The claim tag register is used for any interrogating tools to determine if the device is being programmed or has been programmed.
    Read:
    1= Claim tag is implemented, 0 = Claim tag is not implemented
    Write:
    1= Set claim tag bit, 0= No effect
ps7_debug_cpu_cti0_CTCR_CLEAR:
  addr: 0xf8898fa4
  mask: 0xf
  name: CLEAR
  description: |
    The claim tag register is used for any interrogating tools to determine if the device is being programmed or has been programmed.
    Read: Current value of claim tag.
    Write: 1= Clear claim tag bit, 0= No effect
ps7_debug_cpu_cti0_LAR_KEY:
  addr: 0xf8898fb0
  mask: 0xffffffff
  name: KEY
  description: |
    Write Access Code.
    Write behavior depends on PADDRDBG31 pin:
    - PADDRDBG31=0 (lower 2GB):
    After reset (via PRESETDBGn), CTI is locked, i.e., writes to all other registers using lower 2GB addresses are ignored.
    To unlock, 0xC5ACCE55 must be written this register.
    After the required registers are written, to lock again, write a value other than 0xC5ACCE55 to this register.
    - PADDRDBG31=1 (upper 2GB):
    CTI is unlocked when upper 2GB addresses are used to write to all the registers.
    However, write to this register is ignored using a upper 2GB address!
    Note: read from this register always returns 0, regardless of PADDRDBG31.
ps7_debug_cpu_cti0_LSR_n8BIT:
  addr: 0xf8898fb4
  mask: 0x4
  name: n8BIT
  description: |
    Set to 0 since CTI implements a 32-bit lock access register
ps7_debug_cpu_cti0_LSR_STATUS:
  addr: 0xf8898fb4
  mask: 0x2
  name: STATUS
  description: |
    Read behavior depends on PADDRDBG31 pin:
    - PADDRDBG31=0 (lower 2GB):
    When a lower 2GB address is used to read this register, this bit indicates whether CTI is in locked state
    (1= locked, 0= unlocked).
    - PADDRDBG31=1 (upper 2GB):
    always returns 0.
ps7_debug_cpu_cti0_LSR_IMP:
  addr: 0xf8898fb4
  mask: 0x1
  name: IMP
  description: |
    Read behavior depends on PADDRDBG31 pin:
    - PADDRDBG31=0 (lower 2GB):
    always returns 1, meaning lock mechanism are implemented.
    - PADDRDBG31=1 (upper 2GB):
    always returns 0, meaning lock mechanism is NOT implemented.
ps7_debug_cpu_cti0_ASR_NIDEN:
  addr: 0xf8898fb8
  mask: 0x8
  name: NIDEN
  description: |
    Current value of noninvasive debug enable signals
ps7_debug_cpu_cti0_ASR_NIDEN_CTL:
  addr: 0xf8898fb8
  mask: 0x4
  name: NIDEN_CTL
  description: |
    Non-invasive debug controlled
ps7_debug_cpu_cti0_ASR_IDEN:
  addr: 0xf8898fb8
  mask: 0x2
  name: IDEN
  description: |
    Current value of invasive debug enable signals
ps7_debug_cpu_cti0_ASR_IDEN_CTL:
  addr: 0xf8898fb8
  mask: 0x1
  name: IDEN_CTL
  description: |
    Invasive debug controlled
ps7_debug_cpu_cti0_DEVID_NumChan:
  addr: 0xf8898fc8
  mask: 0xf0000
  name: NumChan
  description: |
    Number of channels available
ps7_debug_cpu_cti0_DEVID_NumTrig:
  addr: 0xf8898fc8
  mask: 0xff00
  name: NumTrig
  description: |
    Number of triggers available
ps7_debug_cpu_cti0_DEVID_res:
  addr: 0xf8898fc8
  mask: 0xe0
  name: res
  description: |
    reserved
ps7_debug_cpu_cti0_DEVID_ExtMux:
  addr: 0xf8898fc8
  mask: 0x1f
  name: ExtMux
  description: |
    no external muxing
ps7_debug_cpu_cti0_DTIR_a:
  addr: 0xf8898fcc
  mask: 0xff
  name: a
  description: |
    major type is a debug control logic component, sub-type is cross trigger
ps7_debug_cpu_cti0_PERIPHID4_n4KB_count:
  addr: 0xf8898fd0
  mask: 0xf0
  name: n4KB_count
  description: |
    4KB Count, set to 0
ps7_debug_cpu_cti0_PERIPHID4_JEP106ID:
  addr: 0xf8898fd0
  mask: 0xf
  name: JEP106ID
  description: |
    JEP106 continuation code
ps7_debug_cpu_cti0_PERIPHID5_a:
  addr: 0xf8898fd4
  mask: 0xff
  name: a
  description: |
    reserved
ps7_debug_cpu_cti0_PERIPHID6_a:
  addr: 0xf8898fd8
  mask: 0xff
  name: a
  description: |
    reserved
ps7_debug_cpu_cti0_PERIPHID7_a:
  addr: 0xf8898fdc
  mask: 0xff
  name: a
  description: |
    reserved
ps7_debug_cpu_cti0_PERIPHID0_a:
  addr: 0xf8898fe0
  mask: 0xff
  name: a
  description: |
    PartNumber0
ps7_debug_cpu_cti0_PERIPHID1_JEP106ID:
  addr: 0xf8898fe4
  mask: 0xf0
  name: JEP106ID
  description: |
    JEP106 Identity Code [3:0]
ps7_debug_cpu_cti0_PERIPHID1_PartNumber1:
  addr: 0xf8898fe4
  mask: 0xf
  name: PartNumber1
  description: |
    PartNumber1
ps7_debug_cpu_cti0_PERIPHID2_RevNum:
  addr: 0xf8898fe8
  mask: 0xf0
  name: RevNum
  description: |
    Revision number of Peripheral
ps7_debug_cpu_cti0_PERIPHID2_JEDEC:
  addr: 0xf8898fe8
  mask: 0x8
  name: JEDEC
  description: |
    Indicates that a JEDEC assigned value is used
ps7_debug_cpu_cti0_PERIPHID2_JEP106ID:
  addr: 0xf8898fe8
  mask: 0x7
  name: JEP106ID
  description: |
    JEP106 Identity Code [6:4]
ps7_debug_cpu_cti0_PERIPHID3_RevAnd:
  addr: 0xf8898fec
  mask: 0xf0
  name: RevAnd
  description: |
    RevAnd, at top level
ps7_debug_cpu_cti0_PERIPHID3_CustMod:
  addr: 0xf8898fec
  mask: 0xf
  name: CustMod
  description: |
    Customer Modified
ps7_debug_cpu_cti0_COMPID0_a:
  addr: 0xf8898ff0
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_debug_cpu_cti0_COMPID1_a:
  addr: 0xf8898ff4
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_debug_cpu_cti0_COMPID2_a:
  addr: 0xf8898ff8
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_debug_cpu_cti0_COMPID3_a:
  addr: 0xf8898ffc
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_debug_cti_ftm_CTICONTROL_GLBEN:
  addr: 0xf8809000
  mask: 0x1
  name: GLBEN
  description: |
    Enables or disables the ECT. When disabled, all cross triggering mapping logic functionality is disabled for this processor.
ps7_debug_cti_ftm_CTIINTACK_INTACK:
  addr: 0xf8809010
  mask: 0xff
  name: INTACK
  description: |
    Acknowledges the corresponding CTITRIGOUT output:
    1 = CTITRIGOUT is acknowledged and is cleared when MAPTRIGOUT is LOW.
    0 = no effect
    There is one bit of the register for each CTITRIGOUT output.
ps7_debug_cti_ftm_CTIAPPSET_APPSET:
  addr: 0xf8809014
  mask: 0xf
  name: APPSET
  description: |
    Setting a bit HIGH generates a channel event for the selected channel.
    Read:
    0 = application trigger inactive (reset)
    1 = application trigger active.
    Write:
    0 = no effect
    1 = generate channel event.
    There is one bit of the register for each channel.
ps7_debug_cti_ftm_CTIAPPCLEAR_APPCLEAR:
  addr: 0xf8809018
  mask: 0xf
  name: APPCLEAR
  description: |
    Clears corresponding bits in the CTIAPPSET register.
    1 = application trigger disabled in the CTIAPPSET register
    0 = no effect.
    There is one bit of the register for each channel.
ps7_debug_cti_ftm_CTIAPPPULSE_APPULSE:
  addr: 0xf880901c
  mask: 0xf
  name: APPULSE
  description: |
    Setting a bit HIGH generates a channel event pulse for the selected channel.
    Write:
    1 = channel event pulse generated for one CTICLK period
    0 = no effect.
    There is one bit of the register for each channel.
ps7_debug_cti_ftm_CTIINEN0_TRIGINEN:
  addr: 0xf8809020
  mask: 0xf
  name: TRIGINEN
  description: |
    Enables a cross trigger event to the corresponding channel when an CTITRIGIN is activated.
    1 = enables the CTITRIGIN signal to generate an event on the respective channel of the CTM.
    There is one bit of the register for each of the four channels. For example in register CTIINEN0,
    TRIGINEN[0] set to 1 enables CTITRIGIN onto channel 0.
    0 = disables the CTITRIGIN signal from generating an event on the respective channel of the
    CTM.
ps7_debug_cti_ftm_CTIINEN1_TRIGINEN:
  addr: 0xf8809024
  mask: 0xf
  name: TRIGINEN
  description: |
    Enables a cross trigger event to the corresponding channel when an CTITRIGIN is activated.
    1 = enables the CTITRIGIN signal to generate an event on the respective channel of the CTM.
    There is one bit of the register for each of the four channels. For example in register CTIINEN0,
    TRIGINEN[0] set to 1 enables CTITRIGIN onto channel 0.
    0 = disables the CTITRIGIN signal from generating an event on the respective channel of the
    CTM.
ps7_debug_cti_ftm_CTIINEN2_TRIGINEN:
  addr: 0xf8809028
  mask: 0xf
  name: TRIGINEN
  description: |
    Enables a cross trigger event to the corresponding channel when an CTITRIGIN is activated.
    1 = enables the CTITRIGIN signal to generate an event on the respective channel of the CTM.
    There is one bit of the register for each of the four channels. For example in register CTIINEN0,
    TRIGINEN[0] set to 1 enables CTITRIGIN onto channel 0.
    0 = disables the CTITRIGIN signal from generating an event on the respective channel of the
    CTM.
ps7_debug_cti_ftm_CTIINEN3_TRIGINEN:
  addr: 0xf880902c
  mask: 0xf
  name: TRIGINEN
  description: |
    Enables a cross trigger event to the corresponding channel when an CTITRIGIN is activated.
    1 = enables the CTITRIGIN signal to generate an event on the respective channel of the CTM.
    There is one bit of the register for each of the four channels. For example in register CTIINEN0,
    TRIGINEN[0] set to 1 enables CTITRIGIN onto channel 0.
    0 = disables the CTITRIGIN signal from generating an event on the respective channel of the
    CTM.
ps7_debug_cti_ftm_CTIINEN4_TRIGINEN:
  addr: 0xf8809030
  mask: 0xf
  name: TRIGINEN
  description: |
    Enables a cross trigger event to the corresponding channel when an CTITRIGIN is activated.
    1 = enables the CTITRIGIN signal to generate an event on the respective channel of the CTM.
    There is one bit of the register for each of the four channels. For example in register CTIINEN0,
    TRIGINEN[0] set to 1 enables CTITRIGIN onto channel 0.
    0 = disables the CTITRIGIN signal from generating an event on the respective channel of the
    CTM.
ps7_debug_cti_ftm_CTIINEN5_TRIGINEN:
  addr: 0xf8809034
  mask: 0xf
  name: TRIGINEN
  description: |
    Enables a cross trigger event to the corresponding channel when an CTITRIGIN is activated.
    1 = enables the CTITRIGIN signal to generate an event on the respective channel of the CTM.
    There is one bit of the register for each of the four channels. For example in register CTIINEN0,
    TRIGINEN[0] set to 1 enables CTITRIGIN onto channel 0.
    0 = disables the CTITRIGIN signal from generating an event on the respective channel of the
    CTM.
ps7_debug_cti_ftm_CTIINEN6_TRIGINEN:
  addr: 0xf8809038
  mask: 0xf
  name: TRIGINEN
  description: |
    Enables a cross trigger event to the corresponding channel when an CTITRIGIN is activated.
    1 = enables the CTITRIGIN signal to generate an event on the respective channel of the CTM.
    There is one bit of the register for each of the four channels. For example in register CTIINEN0,
    TRIGINEN[0] set to 1 enables CTITRIGIN onto channel 0.
    0 = disables the CTITRIGIN signal from generating an event on the respective channel of the
    CTM.
ps7_debug_cti_ftm_CTIINEN7_TRIGINEN:
  addr: 0xf880903c
  mask: 0xf
  name: TRIGINEN
  description: |
    Enables a cross trigger event to the corresponding channel when an CTITRIGIN is activated.
    1 = enables the CTITRIGIN signal to generate an event on the respective channel of the CTM.
    There is one bit of the register for each of the four channels. For example in register CTIINEN0,
    TRIGINEN[0] set to 1 enables CTITRIGIN onto channel 0.
    0 = disables the CTITRIGIN signal from generating an event on the respective channel of the
    CTM.
ps7_debug_cti_ftm_CTIOUTEN0_TRIGOUTEN:
  addr: 0xf88090a0
  mask: 0xf
  name: TRIGOUTEN
  description: |
    Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding
    channel to generate an CTITRIGOUT output:
    0 = the channel input (CTICHIN) from the CTM is not routed to the CTITRIGOUT output
    1 = the channel input (CTICHIN) from the CTM is routed to the CTITRIGOUT output.
    There is one bit for each of the four channels. For example in register CTIOUTEN0, enabling
    bit 0 enables CTICHIN[0] to cause a trigger event on the CTITRIGOUT[0] output.
ps7_debug_cti_ftm_CTIOUTEN1_TRIGOUTEN:
  addr: 0xf88090a4
  mask: 0xf
  name: TRIGOUTEN
  description: |
    Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding
    channel to generate an CTITRIGOUT output:
    0 = the channel input (CTICHIN) from the CTM is not routed to the CTITRIGOUT output
    1 = the channel input (CTICHIN) from the CTM is routed to the CTITRIGOUT output.
    There is one bit for each of the four channels. For example in register CTIOUTEN0, enabling
    bit 0 enables CTICHIN[0] to cause a trigger event on the CTITRIGOUT[0] output.
ps7_debug_cti_ftm_CTIOUTEN2_TRIGOUTEN:
  addr: 0xf88090a8
  mask: 0xf
  name: TRIGOUTEN
  description: |
    Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding
    channel to generate an CTITRIGOUT output:
    0 = the channel input (CTICHIN) from the CTM is not routed to the CTITRIGOUT output
    1 = the channel input (CTICHIN) from the CTM is routed to the CTITRIGOUT output.
    There is one bit for each of the four channels. For example in register CTIOUTEN0, enabling
    bit 0 enables CTICHIN[0] to cause a trigger event on the CTITRIGOUT[0] output.
ps7_debug_cti_ftm_CTIOUTEN3_TRIGOUTEN:
  addr: 0xf88090ac
  mask: 0xf
  name: TRIGOUTEN
  description: |
    Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding
    channel to generate an CTITRIGOUT output:
    0 = the channel input (CTICHIN) from the CTM is not routed to the CTITRIGOUT output
    1 = the channel input (CTICHIN) from the CTM is routed to the CTITRIGOUT output.
    There is one bit for each of the four channels. For example in register CTIOUTEN0, enabling
    bit 0 enables CTICHIN[0] to cause a trigger event on the CTITRIGOUT[0] output.
ps7_debug_cti_ftm_CTIOUTEN4_TRIGOUTEN:
  addr: 0xf88090b0
  mask: 0xf
  name: TRIGOUTEN
  description: |
    Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding
    channel to generate an CTITRIGOUT output:
    0 = the channel input (CTICHIN) from the CTM is not routed to the CTITRIGOUT output
    1 = the channel input (CTICHIN) from the CTM is routed to the CTITRIGOUT output.
    There is one bit for each of the four channels. For example in register CTIOUTEN0, enabling
    bit 0 enables CTICHIN[0] to cause a trigger event on the CTITRIGOUT[0] output.
ps7_debug_cti_ftm_CTIOUTEN5_TRIGOUTEN:
  addr: 0xf88090b4
  mask: 0xf
  name: TRIGOUTEN
  description: |
    Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding
    channel to generate an CTITRIGOUT output:
    0 = the channel input (CTICHIN) from the CTM is not routed to the CTITRIGOUT output
    1 = the channel input (CTICHIN) from the CTM is routed to the CTITRIGOUT output.
    There is one bit for each of the four channels. For example in register CTIOUTEN0, enabling
    bit 0 enables CTICHIN[0] to cause a trigger event on the CTITRIGOUT[0] output.
ps7_debug_cti_ftm_CTIOUTEN6_TRIGOUTEN:
  addr: 0xf88090b8
  mask: 0xf
  name: TRIGOUTEN
  description: |
    Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding
    channel to generate an CTITRIGOUT output:
    0 = the channel input (CTICHIN) from the CTM is not routed to the CTITRIGOUT output
    1 = the channel input (CTICHIN) from the CTM is routed to the CTITRIGOUT output.
    There is one bit for each of the four channels. For example in register CTIOUTEN0, enabling
    bit 0 enables CTICHIN[0] to cause a trigger event on the CTITRIGOUT[0] output.
ps7_debug_cti_ftm_CTIOUTEN7_TRIGOUTEN:
  addr: 0xf88090bc
  mask: 0xf
  name: TRIGOUTEN
  description: |
    Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding
    channel to generate an CTITRIGOUT output:
    0 = the channel input (CTICHIN) from the CTM is not routed to the CTITRIGOUT output
    1 = the channel input (CTICHIN) from the CTM is routed to the CTITRIGOUT output.
    There is one bit for each of the four channels. For example in register CTIOUTEN0, enabling
    bit 0 enables CTICHIN[0] to cause a trigger event on the CTITRIGOUT[0] output.
ps7_debug_cti_ftm_CTITRIGINSTATUS_TRIGINSTATUS:
  addr: 0xf8809130
  mask: 0xff
  name: TRIGINSTATUS
  description: |
    Shows the status of the CTITRIGIN inputs:
    1 = CTITRIGIN is active
    0 = CTITRIGIN is inactive.
    Because the register provides a view of the raw CTITRIGIN inputs, the reset value is
    unknown. There is one bit of the register for each trigger input.
ps7_debug_cti_ftm_CTITRIGOUTSTATUS_TRIGOUTSTATUS:
  addr: 0xf8809134
  mask: 0xff
  name: TRIGOUTSTATUS
  description: |
    Shows the status of the CTITRIGOUT outputs.
    1 = CTITRIGOUT is active
    0 = CTITRIGOUT is inactive (reset).
    There is one bit of the register for each trigger output.
ps7_debug_cti_ftm_CTICHINSTATUS_CTCHINSTATUS:
  addr: 0xf8809138
  mask: 0xf
  name: CTCHINSTATUS
  description: |
    Shows the status of the CTICHIN inputs:
    1 = CTICHIN is active
    0 = CTICHIN is inactive.
    Because the register provides a view of the raw CTICHIN inputs from the CTM, the reset
    value is unknown. There is one bit of the register for each channel input.
ps7_debug_cti_ftm_CTICHOUTSTATUS_CTCHOUTSTATUS:
  addr: 0xf880913c
  mask: 0xf
  name: CTCHOUTSTATUS
  description: |
    Shows the status of the CTICHOUT outputs.
    1 = CTICHOUT is active
    0 = CTICHOUT is inactive (reset).
    There is one bit of the register for each channel output.
ps7_debug_cti_ftm_CTIGATE_CTIGATEEN3:
  addr: 0xf8809140
  mask: 0x8
  name: CTIGATEEN3
  description: |
    Enable CTICHOUT3.
ps7_debug_cti_ftm_CTIGATE_CTIGATEEN2:
  addr: 0xf8809140
  mask: 0x4
  name: CTIGATEEN2
  description: |
    Enable CTICHOUT2.
ps7_debug_cti_ftm_CTIGATE_CTIGATEEN1:
  addr: 0xf8809140
  mask: 0x2
  name: CTIGATEEN1
  description: |
    Enable CTICHOUT1.
ps7_debug_cti_ftm_CTIGATE_CTIGATEEN0:
  addr: 0xf8809140
  mask: 0x1
  name: CTIGATEEN0
  description: |
    Enable CTICHOUT0.
ps7_debug_cti_ftm_ASICCTL_ASICCTL:
  addr: 0xf8809144
  mask: 0xff
  name: ASICCTL
  description: |
    Implementation defined ASIC control, value written to the register is output on ASICCTL[7:0].
ps7_debug_cti_ftm_ITCHINACK_CTCHINACK:
  addr: 0xf8809edc
  mask: 0xf
  name: CTCHINACK
  description: |
    Set the value of the CTCHINACK outputs
ps7_debug_cti_ftm_ITTRIGINACK_CTTRIGINACK:
  addr: 0xf8809ee0
  mask: 0xff
  name: CTTRIGINACK
  description: |
    Set the value of the CTTRIGINACK outputs
ps7_debug_cti_ftm_ITCHOUT_CTCHOUT:
  addr: 0xf8809ee4
  mask: 0xf
  name: CTCHOUT
  description: |
    Set the value of the CTCHOUT outputs
ps7_debug_cti_ftm_ITTRIGOUT_CTTRIGOUT:
  addr: 0xf8809ee8
  mask: 0xff
  name: CTTRIGOUT
  description: |
    Set the value of the CTTRIGOUT outputs
ps7_debug_cti_ftm_ITCHOUTACK_CTCHOUTACK:
  addr: 0xf8809eec
  mask: 0xf
  name: CTCHOUTACK
  description: |
    Read the values of the CTCHOUTACK inputs
ps7_debug_cti_ftm_ITTRIGOUTACK_CTTRIGOUTACK:
  addr: 0xf8809ef0
  mask: 0xff
  name: CTTRIGOUTACK
  description: |
    Read the values of the CTTRIGOUTACK inputs
ps7_debug_cti_ftm_ITCHIN_CTCHIN:
  addr: 0xf8809ef4
  mask: 0xf
  name: CTCHIN
  description: |
    Read the values of the CTCHIN inputs
ps7_debug_cti_ftm_ITTRIGIN_CTTRIGIN:
  addr: 0xf8809ef8
  mask: 0xff
  name: CTTRIGIN
  description: |
    Read the values of the CTTRIGIN inputs
ps7_debug_cti_ftm_ITCTRL_a:
  addr: 0xf8809f00
  mask: 0x1
  name: a
  description: |
    Enable IT Registers
ps7_debug_cti_ftm_CTSR_SET:
  addr: 0xf8809fa0
  mask: 0xf
  name: SET
  description: |
    The claim tag register is used for any interrogating tools to determine if the device is being programmed or has been programmed.
    Read:
    1= Claim tag is implemented, 0 = Claim tag is not implemented
    Write:
    1= Set claim tag bit, 0= No effect
ps7_debug_cti_ftm_CTCR_CLEAR:
  addr: 0xf8809fa4
  mask: 0xf
  name: CLEAR
  description: |
    The claim tag register is used for any interrogating tools to determine if the device is being programmed or has been programmed.
    Read: Current value of claim tag.
    Write: 1= Clear claim tag bit, 0= No effect
ps7_debug_cti_ftm_LAR_KEY:
  addr: 0xf8809fb0
  mask: 0xffffffff
  name: KEY
  description: |
    Write Access Code.
    Write behavior depends on PADDRDBG31 pin:
    - PADDRDBG31=0 (lower 2GB):
    After reset (via PRESETDBGn), CTI is locked, i.e., writes to all other registers using lower 2GB addresses are ignored.
    To unlock, 0xC5ACCE55 must be written this register.
    After the required registers are written, to lock again, write a value other than 0xC5ACCE55 to this register.
    - PADDRDBG31=1 (upper 2GB):
    CTI is unlocked when upper 2GB addresses are used to write to all the registers.
    However, write to this register is ignored using a upper 2GB address!
    Note: read from this register always returns 0, regardless of PADDRDBG31.
ps7_debug_cti_ftm_LSR_n8BIT:
  addr: 0xf8809fb4
  mask: 0x4
  name: n8BIT
  description: |
    Set to 0 since CTI implements a 32-bit lock access register
ps7_debug_cti_ftm_LSR_STATUS:
  addr: 0xf8809fb4
  mask: 0x2
  name: STATUS
  description: |
    Read behavior depends on PADDRDBG31 pin:
    - PADDRDBG31=0 (lower 2GB):
    When a lower 2GB address is used to read this register, this bit indicates whether CTI is in locked state
    (1= locked, 0= unlocked).
    - PADDRDBG31=1 (upper 2GB):
    always returns 0.
ps7_debug_cti_ftm_LSR_IMP:
  addr: 0xf8809fb4
  mask: 0x1
  name: IMP
  description: |
    Read behavior depends on PADDRDBG31 pin:
    - PADDRDBG31=0 (lower 2GB):
    always returns 1, meaning lock mechanism are implemented.
    - PADDRDBG31=1 (upper 2GB):
    always returns 0, meaning lock mechanism is NOT implemented.
ps7_debug_cti_ftm_ASR_NIDEN:
  addr: 0xf8809fb8
  mask: 0x8
  name: NIDEN
  description: |
    Current value of noninvasive debug enable signals
ps7_debug_cti_ftm_ASR_NIDEN_CTL:
  addr: 0xf8809fb8
  mask: 0x4
  name: NIDEN_CTL
  description: |
    Non-invasive debug controlled
ps7_debug_cti_ftm_ASR_IDEN:
  addr: 0xf8809fb8
  mask: 0x2
  name: IDEN
  description: |
    Current value of invasive debug enable signals
ps7_debug_cti_ftm_ASR_IDEN_CTL:
  addr: 0xf8809fb8
  mask: 0x1
  name: IDEN_CTL
  description: |
    Invasive debug controlled
ps7_debug_cti_ftm_DEVID_NumChan:
  addr: 0xf8809fc8
  mask: 0xf0000
  name: NumChan
  description: |
    Number of channels available
ps7_debug_cti_ftm_DEVID_NumTrig:
  addr: 0xf8809fc8
  mask: 0xff00
  name: NumTrig
  description: |
    Number of triggers available
ps7_debug_cti_ftm_DEVID_res:
  addr: 0xf8809fc8
  mask: 0xe0
  name: res
  description: |
    reserved
ps7_debug_cti_ftm_DEVID_ExtMux:
  addr: 0xf8809fc8
  mask: 0x1f
  name: ExtMux
  description: |
    no external muxing
ps7_debug_cti_ftm_DTIR_a:
  addr: 0xf8809fcc
  mask: 0xff
  name: a
  description: |
    major type is a debug control logic component, sub-type is cross trigger
ps7_debug_cti_ftm_PERIPHID4_n4KB_count:
  addr: 0xf8809fd0
  mask: 0xf0
  name: n4KB_count
  description: |
    4KB Count, set to 0
ps7_debug_cti_ftm_PERIPHID4_JEP106ID:
  addr: 0xf8809fd0
  mask: 0xf
  name: JEP106ID
  description: |
    JEP106 continuation code
ps7_debug_cti_ftm_PERIPHID5_a:
  addr: 0xf8809fd4
  mask: 0xff
  name: a
  description: |
    reserved
ps7_debug_cti_ftm_PERIPHID6_a:
  addr: 0xf8809fd8
  mask: 0xff
  name: a
  description: |
    reserved
ps7_debug_cti_ftm_PERIPHID7_a:
  addr: 0xf8809fdc
  mask: 0xff
  name: a
  description: |
    reserved
ps7_debug_cti_ftm_PERIPHID0_a:
  addr: 0xf8809fe0
  mask: 0xff
  name: a
  description: |
    PartNumber0
ps7_debug_cti_ftm_PERIPHID1_JEP106ID:
  addr: 0xf8809fe4
  mask: 0xf0
  name: JEP106ID
  description: |
    JEP106 Identity Code [3:0]
ps7_debug_cti_ftm_PERIPHID1_PartNumber1:
  addr: 0xf8809fe4
  mask: 0xf
  name: PartNumber1
  description: |
    PartNumber1
ps7_debug_cti_ftm_PERIPHID2_RevNum:
  addr: 0xf8809fe8
  mask: 0xf0
  name: RevNum
  description: |
    Revision number of Peripheral
ps7_debug_cti_ftm_PERIPHID2_JEDEC:
  addr: 0xf8809fe8
  mask: 0x8
  name: JEDEC
  description: |
    Indicates that a JEDEC assigned value is used
ps7_debug_cti_ftm_PERIPHID2_JEP106ID:
  addr: 0xf8809fe8
  mask: 0x7
  name: JEP106ID
  description: |
    JEP106 Identity Code [6:4]
ps7_debug_cti_ftm_PERIPHID3_RevAnd:
  addr: 0xf8809fec
  mask: 0xf0
  name: RevAnd
  description: |
    RevAnd, at top level
ps7_debug_cti_ftm_PERIPHID3_CustMod:
  addr: 0xf8809fec
  mask: 0xf
  name: CustMod
  description: |
    Customer Modified
ps7_debug_cti_ftm_COMPID0_a:
  addr: 0xf8809ff0
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_debug_cti_ftm_COMPID1_a:
  addr: 0xf8809ff4
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_debug_cti_ftm_COMPID2_a:
  addr: 0xf8809ff8
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_debug_cti_ftm_COMPID3_a:
  addr: 0xf8809ffc
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_debug_cti_etb_tpiu_CTICONTROL_GLBEN:
  addr: 0xf8802000
  mask: 0x1
  name: GLBEN
  description: |
    Enables or disables the ECT. When disabled, all cross triggering mapping logic functionality is disabled for this processor.
ps7_debug_cti_etb_tpiu_CTIINTACK_INTACK:
  addr: 0xf8802010
  mask: 0xff
  name: INTACK
  description: |
    Acknowledges the corresponding CTITRIGOUT output:
    1 = CTITRIGOUT is acknowledged and is cleared when MAPTRIGOUT is LOW.
    0 = no effect
    There is one bit of the register for each CTITRIGOUT output.
ps7_debug_cti_etb_tpiu_CTIAPPSET_APPSET:
  addr: 0xf8802014
  mask: 0xf
  name: APPSET
  description: |
    Setting a bit HIGH generates a channel event for the selected channel.
    Read:
    0 = application trigger inactive (reset)
    1 = application trigger active.
    Write:
    0 = no effect
    1 = generate channel event.
    There is one bit of the register for each channel.
ps7_debug_cti_etb_tpiu_CTIAPPCLEAR_APPCLEAR:
  addr: 0xf8802018
  mask: 0xf
  name: APPCLEAR
  description: |
    Clears corresponding bits in the CTIAPPSET register.
    1 = application trigger disabled in the CTIAPPSET register
    0 = no effect.
    There is one bit of the register for each channel.
ps7_debug_cti_etb_tpiu_CTIAPPPULSE_APPULSE:
  addr: 0xf880201c
  mask: 0xf
  name: APPULSE
  description: |
    Setting a bit HIGH generates a channel event pulse for the selected channel.
    Write:
    1 = channel event pulse generated for one CTICLK period
    0 = no effect.
    There is one bit of the register for each channel.
ps7_debug_cti_etb_tpiu_CTIINEN0_TRIGINEN:
  addr: 0xf8802020
  mask: 0xf
  name: TRIGINEN
  description: |
    Enables a cross trigger event to the corresponding channel when an CTITRIGIN is activated.
    1 = enables the CTITRIGIN signal to generate an event on the respective channel of the CTM.
    There is one bit of the register for each of the four channels. For example in register CTIINEN0,
    TRIGINEN[0] set to 1 enables CTITRIGIN onto channel 0.
    0 = disables the CTITRIGIN signal from generating an event on the respective channel of the
    CTM.
ps7_debug_cti_etb_tpiu_CTIINEN1_TRIGINEN:
  addr: 0xf8802024
  mask: 0xf
  name: TRIGINEN
  description: |
    Enables a cross trigger event to the corresponding channel when an CTITRIGIN is activated.
    1 = enables the CTITRIGIN signal to generate an event on the respective channel of the CTM.
    There is one bit of the register for each of the four channels. For example in register CTIINEN0,
    TRIGINEN[0] set to 1 enables CTITRIGIN onto channel 0.
    0 = disables the CTITRIGIN signal from generating an event on the respective channel of the
    CTM.
ps7_debug_cti_etb_tpiu_CTIINEN2_TRIGINEN:
  addr: 0xf8802028
  mask: 0xf
  name: TRIGINEN
  description: |
    Enables a cross trigger event to the corresponding channel when an CTITRIGIN is activated.
    1 = enables the CTITRIGIN signal to generate an event on the respective channel of the CTM.
    There is one bit of the register for each of the four channels. For example in register CTIINEN0,
    TRIGINEN[0] set to 1 enables CTITRIGIN onto channel 0.
    0 = disables the CTITRIGIN signal from generating an event on the respective channel of the
    CTM.
ps7_debug_cti_etb_tpiu_CTIINEN3_TRIGINEN:
  addr: 0xf880202c
  mask: 0xf
  name: TRIGINEN
  description: |
    Enables a cross trigger event to the corresponding channel when an CTITRIGIN is activated.
    1 = enables the CTITRIGIN signal to generate an event on the respective channel of the CTM.
    There is one bit of the register for each of the four channels. For example in register CTIINEN0,
    TRIGINEN[0] set to 1 enables CTITRIGIN onto channel 0.
    0 = disables the CTITRIGIN signal from generating an event on the respective channel of the
    CTM.
ps7_debug_cti_etb_tpiu_CTIINEN4_TRIGINEN:
  addr: 0xf8802030
  mask: 0xf
  name: TRIGINEN
  description: |
    Enables a cross trigger event to the corresponding channel when an CTITRIGIN is activated.
    1 = enables the CTITRIGIN signal to generate an event on the respective channel of the CTM.
    There is one bit of the register for each of the four channels. For example in register CTIINEN0,
    TRIGINEN[0] set to 1 enables CTITRIGIN onto channel 0.
    0 = disables the CTITRIGIN signal from generating an event on the respective channel of the
    CTM.
ps7_debug_cti_etb_tpiu_CTIINEN5_TRIGINEN:
  addr: 0xf8802034
  mask: 0xf
  name: TRIGINEN
  description: |
    Enables a cross trigger event to the corresponding channel when an CTITRIGIN is activated.
    1 = enables the CTITRIGIN signal to generate an event on the respective channel of the CTM.
    There is one bit of the register for each of the four channels. For example in register CTIINEN0,
    TRIGINEN[0] set to 1 enables CTITRIGIN onto channel 0.
    0 = disables the CTITRIGIN signal from generating an event on the respective channel of the
    CTM.
ps7_debug_cti_etb_tpiu_CTIINEN6_TRIGINEN:
  addr: 0xf8802038
  mask: 0xf
  name: TRIGINEN
  description: |
    Enables a cross trigger event to the corresponding channel when an CTITRIGIN is activated.
    1 = enables the CTITRIGIN signal to generate an event on the respective channel of the CTM.
    There is one bit of the register for each of the four channels. For example in register CTIINEN0,
    TRIGINEN[0] set to 1 enables CTITRIGIN onto channel 0.
    0 = disables the CTITRIGIN signal from generating an event on the respective channel of the
    CTM.
ps7_debug_cti_etb_tpiu_CTIINEN7_TRIGINEN:
  addr: 0xf880203c
  mask: 0xf
  name: TRIGINEN
  description: |
    Enables a cross trigger event to the corresponding channel when an CTITRIGIN is activated.
    1 = enables the CTITRIGIN signal to generate an event on the respective channel of the CTM.
    There is one bit of the register for each of the four channels. For example in register CTIINEN0,
    TRIGINEN[0] set to 1 enables CTITRIGIN onto channel 0.
    0 = disables the CTITRIGIN signal from generating an event on the respective channel of the
    CTM.
ps7_debug_cti_etb_tpiu_CTIOUTEN0_TRIGOUTEN:
  addr: 0xf88020a0
  mask: 0xf
  name: TRIGOUTEN
  description: |
    Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding
    channel to generate an CTITRIGOUT output:
    0 = the channel input (CTICHIN) from the CTM is not routed to the CTITRIGOUT output
    1 = the channel input (CTICHIN) from the CTM is routed to the CTITRIGOUT output.
    There is one bit for each of the four channels. For example in register CTIOUTEN0, enabling
    bit 0 enables CTICHIN[0] to cause a trigger event on the CTITRIGOUT[0] output.
ps7_debug_cti_etb_tpiu_CTIOUTEN1_TRIGOUTEN:
  addr: 0xf88020a4
  mask: 0xf
  name: TRIGOUTEN
  description: |
    Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding
    channel to generate an CTITRIGOUT output:
    0 = the channel input (CTICHIN) from the CTM is not routed to the CTITRIGOUT output
    1 = the channel input (CTICHIN) from the CTM is routed to the CTITRIGOUT output.
    There is one bit for each of the four channels. For example in register CTIOUTEN0, enabling
    bit 0 enables CTICHIN[0] to cause a trigger event on the CTITRIGOUT[0] output.
ps7_debug_cti_etb_tpiu_CTIOUTEN2_TRIGOUTEN:
  addr: 0xf88020a8
  mask: 0xf
  name: TRIGOUTEN
  description: |
    Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding
    channel to generate an CTITRIGOUT output:
    0 = the channel input (CTICHIN) from the CTM is not routed to the CTITRIGOUT output
    1 = the channel input (CTICHIN) from the CTM is routed to the CTITRIGOUT output.
    There is one bit for each of the four channels. For example in register CTIOUTEN0, enabling
    bit 0 enables CTICHIN[0] to cause a trigger event on the CTITRIGOUT[0] output.
ps7_debug_cti_etb_tpiu_CTIOUTEN3_TRIGOUTEN:
  addr: 0xf88020ac
  mask: 0xf
  name: TRIGOUTEN
  description: |
    Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding
    channel to generate an CTITRIGOUT output:
    0 = the channel input (CTICHIN) from the CTM is not routed to the CTITRIGOUT output
    1 = the channel input (CTICHIN) from the CTM is routed to the CTITRIGOUT output.
    There is one bit for each of the four channels. For example in register CTIOUTEN0, enabling
    bit 0 enables CTICHIN[0] to cause a trigger event on the CTITRIGOUT[0] output.
ps7_debug_cti_etb_tpiu_CTIOUTEN4_TRIGOUTEN:
  addr: 0xf88020b0
  mask: 0xf
  name: TRIGOUTEN
  description: |
    Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding
    channel to generate an CTITRIGOUT output:
    0 = the channel input (CTICHIN) from the CTM is not routed to the CTITRIGOUT output
    1 = the channel input (CTICHIN) from the CTM is routed to the CTITRIGOUT output.
    There is one bit for each of the four channels. For example in register CTIOUTEN0, enabling
    bit 0 enables CTICHIN[0] to cause a trigger event on the CTITRIGOUT[0] output.
ps7_debug_cti_etb_tpiu_CTIOUTEN5_TRIGOUTEN:
  addr: 0xf88020b4
  mask: 0xf
  name: TRIGOUTEN
  description: |
    Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding
    channel to generate an CTITRIGOUT output:
    0 = the channel input (CTICHIN) from the CTM is not routed to the CTITRIGOUT output
    1 = the channel input (CTICHIN) from the CTM is routed to the CTITRIGOUT output.
    There is one bit for each of the four channels. For example in register CTIOUTEN0, enabling
    bit 0 enables CTICHIN[0] to cause a trigger event on the CTITRIGOUT[0] output.
ps7_debug_cti_etb_tpiu_CTIOUTEN6_TRIGOUTEN:
  addr: 0xf88020b8
  mask: 0xf
  name: TRIGOUTEN
  description: |
    Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding
    channel to generate an CTITRIGOUT output:
    0 = the channel input (CTICHIN) from the CTM is not routed to the CTITRIGOUT output
    1 = the channel input (CTICHIN) from the CTM is routed to the CTITRIGOUT output.
    There is one bit for each of the four channels. For example in register CTIOUTEN0, enabling
    bit 0 enables CTICHIN[0] to cause a trigger event on the CTITRIGOUT[0] output.
ps7_debug_cti_etb_tpiu_CTIOUTEN7_TRIGOUTEN:
  addr: 0xf88020bc
  mask: 0xf
  name: TRIGOUTEN
  description: |
    Changing the value of this bit from a 0 to a 1 enables a channel event for the corresponding
    channel to generate an CTITRIGOUT output:
    0 = the channel input (CTICHIN) from the CTM is not routed to the CTITRIGOUT output
    1 = the channel input (CTICHIN) from the CTM is routed to the CTITRIGOUT output.
    There is one bit for each of the four channels. For example in register CTIOUTEN0, enabling
    bit 0 enables CTICHIN[0] to cause a trigger event on the CTITRIGOUT[0] output.
ps7_debug_cti_etb_tpiu_CTITRIGINSTATUS_TRIGINSTATUS:
  addr: 0xf8802130
  mask: 0xff
  name: TRIGINSTATUS
  description: |
    Shows the status of the CTITRIGIN inputs:
    1 = CTITRIGIN is active
    0 = CTITRIGIN is inactive.
    Because the register provides a view of the raw CTITRIGIN inputs, the reset value is
    unknown. There is one bit of the register for each trigger input.
ps7_debug_cti_etb_tpiu_CTITRIGOUTSTATUS_TRIGOUTSTATUS:
  addr: 0xf8802134
  mask: 0xff
  name: TRIGOUTSTATUS
  description: |
    Shows the status of the CTITRIGOUT outputs.
    1 = CTITRIGOUT is active
    0 = CTITRIGOUT is inactive (reset).
    There is one bit of the register for each trigger output.
ps7_debug_cti_etb_tpiu_CTICHINSTATUS_CTCHINSTATUS:
  addr: 0xf8802138
  mask: 0xf
  name: CTCHINSTATUS
  description: |
    Shows the status of the CTICHIN inputs:
    1 = CTICHIN is active
    0 = CTICHIN is inactive.
    Because the register provides a view of the raw CTICHIN inputs from the CTM, the reset
    value is unknown. There is one bit of the register for each channel input.
ps7_debug_cti_etb_tpiu_CTICHOUTSTATUS_CTCHOUTSTATUS:
  addr: 0xf880213c
  mask: 0xf
  name: CTCHOUTSTATUS
  description: |
    Shows the status of the CTICHOUT outputs.
    1 = CTICHOUT is active
    0 = CTICHOUT is inactive (reset).
    There is one bit of the register for each channel output.
ps7_debug_cti_etb_tpiu_CTIGATE_CTIGATEEN3:
  addr: 0xf8802140
  mask: 0x8
  name: CTIGATEEN3
  description: |
    Enable CTICHOUT3.
ps7_debug_cti_etb_tpiu_CTIGATE_CTIGATEEN2:
  addr: 0xf8802140
  mask: 0x4
  name: CTIGATEEN2
  description: |
    Enable CTICHOUT2.
ps7_debug_cti_etb_tpiu_CTIGATE_CTIGATEEN1:
  addr: 0xf8802140
  mask: 0x2
  name: CTIGATEEN1
  description: |
    Enable CTICHOUT1.
ps7_debug_cti_etb_tpiu_CTIGATE_CTIGATEEN0:
  addr: 0xf8802140
  mask: 0x1
  name: CTIGATEEN0
  description: |
    Enable CTICHOUT0.
ps7_debug_cti_etb_tpiu_ASICCTL_ASICCTL:
  addr: 0xf8802144
  mask: 0xff
  name: ASICCTL
  description: |
    Implementation defined ASIC control, value written to the register is output on ASICCTL[7:0].
ps7_debug_cti_etb_tpiu_ITCHINACK_CTCHINACK:
  addr: 0xf8802edc
  mask: 0xf
  name: CTCHINACK
  description: |
    Set the value of the CTCHINACK outputs
ps7_debug_cti_etb_tpiu_ITTRIGINACK_CTTRIGINACK:
  addr: 0xf8802ee0
  mask: 0xff
  name: CTTRIGINACK
  description: |
    Set the value of the CTTRIGINACK outputs
ps7_debug_cti_etb_tpiu_ITCHOUT_CTCHOUT:
  addr: 0xf8802ee4
  mask: 0xf
  name: CTCHOUT
  description: |
    Set the value of the CTCHOUT outputs
ps7_debug_cti_etb_tpiu_ITTRIGOUT_CTTRIGOUT:
  addr: 0xf8802ee8
  mask: 0xff
  name: CTTRIGOUT
  description: |
    Set the value of the CTTRIGOUT outputs
ps7_debug_cti_etb_tpiu_ITCHOUTACK_CTCHOUTACK:
  addr: 0xf8802eec
  mask: 0xf
  name: CTCHOUTACK
  description: |
    Read the values of the CTCHOUTACK inputs
ps7_debug_cti_etb_tpiu_ITTRIGOUTACK_CTTRIGOUTACK:
  addr: 0xf8802ef0
  mask: 0xff
  name: CTTRIGOUTACK
  description: |
    Read the values of the CTTRIGOUTACK inputs
ps7_debug_cti_etb_tpiu_ITCHIN_CTCHIN:
  addr: 0xf8802ef4
  mask: 0xf
  name: CTCHIN
  description: |
    Read the values of the CTCHIN inputs
ps7_debug_cti_etb_tpiu_ITTRIGIN_CTTRIGIN:
  addr: 0xf8802ef8
  mask: 0xff
  name: CTTRIGIN
  description: |
    Read the values of the CTTRIGIN inputs
ps7_debug_cti_etb_tpiu_ITCTRL_a:
  addr: 0xf8802f00
  mask: 0x1
  name: a
  description: |
    Enable IT Registers
ps7_debug_cti_etb_tpiu_CTSR_SET:
  addr: 0xf8802fa0
  mask: 0xf
  name: SET
  description: |
    The claim tag register is used for any interrogating tools to determine if the device is being programmed or has been programmed.
    Read:
    1= Claim tag is implemented, 0 = Claim tag is not implemented
    Write:
    1= Set claim tag bit, 0= No effect
ps7_debug_cti_etb_tpiu_CTCR_CLEAR:
  addr: 0xf8802fa4
  mask: 0xf
  name: CLEAR
  description: |
    The claim tag register is used for any interrogating tools to determine if the device is being programmed or has been programmed.
    Read: Current value of claim tag.
    Write: 1= Clear claim tag bit, 0= No effect
ps7_debug_cti_etb_tpiu_LAR_KEY:
  addr: 0xf8802fb0
  mask: 0xffffffff
  name: KEY
  description: |
    Write Access Code.
    Write behavior depends on PADDRDBG31 pin:
    - PADDRDBG31=0 (lower 2GB):
    After reset (via PRESETDBGn), CTI is locked, i.e., writes to all other registers using lower 2GB addresses are ignored.
    To unlock, 0xC5ACCE55 must be written this register.
    After the required registers are written, to lock again, write a value other than 0xC5ACCE55 to this register.
    - PADDRDBG31=1 (upper 2GB):
    CTI is unlocked when upper 2GB addresses are used to write to all the registers.
    However, write to this register is ignored using a upper 2GB address!
    Note: read from this register always returns 0, regardless of PADDRDBG31.
ps7_debug_cti_etb_tpiu_LSR_n8BIT:
  addr: 0xf8802fb4
  mask: 0x4
  name: n8BIT
  description: |
    Set to 0 since CTI implements a 32-bit lock access register
ps7_debug_cti_etb_tpiu_LSR_STATUS:
  addr: 0xf8802fb4
  mask: 0x2
  name: STATUS
  description: |
    Read behavior depends on PADDRDBG31 pin:
    - PADDRDBG31=0 (lower 2GB):
    When a lower 2GB address is used to read this register, this bit indicates whether CTI is in locked state
    (1= locked, 0= unlocked).
    - PADDRDBG31=1 (upper 2GB):
    always returns 0.
ps7_debug_cti_etb_tpiu_LSR_IMP:
  addr: 0xf8802fb4
  mask: 0x1
  name: IMP
  description: |
    Read behavior depends on PADDRDBG31 pin:
    - PADDRDBG31=0 (lower 2GB):
    always returns 1, meaning lock mechanism are implemented.
    - PADDRDBG31=1 (upper 2GB):
    always returns 0, meaning lock mechanism is NOT implemented.
ps7_debug_cti_etb_tpiu_ASR_NIDEN:
  addr: 0xf8802fb8
  mask: 0x8
  name: NIDEN
  description: |
    Current value of noninvasive debug enable signals
ps7_debug_cti_etb_tpiu_ASR_NIDEN_CTL:
  addr: 0xf8802fb8
  mask: 0x4
  name: NIDEN_CTL
  description: |
    Non-invasive debug controlled
ps7_debug_cti_etb_tpiu_ASR_IDEN:
  addr: 0xf8802fb8
  mask: 0x2
  name: IDEN
  description: |
    Current value of invasive debug enable signals
ps7_debug_cti_etb_tpiu_ASR_IDEN_CTL:
  addr: 0xf8802fb8
  mask: 0x1
  name: IDEN_CTL
  description: |
    Invasive debug controlled
ps7_debug_cti_etb_tpiu_DEVID_NumChan:
  addr: 0xf8802fc8
  mask: 0xf0000
  name: NumChan
  description: |
    Number of channels available
ps7_debug_cti_etb_tpiu_DEVID_NumTrig:
  addr: 0xf8802fc8
  mask: 0xff00
  name: NumTrig
  description: |
    Number of triggers available
ps7_debug_cti_etb_tpiu_DEVID_res:
  addr: 0xf8802fc8
  mask: 0xe0
  name: res
  description: |
    reserved
ps7_debug_cti_etb_tpiu_DEVID_ExtMux:
  addr: 0xf8802fc8
  mask: 0x1f
  name: ExtMux
  description: |
    no external muxing
ps7_debug_cti_etb_tpiu_DTIR_a:
  addr: 0xf8802fcc
  mask: 0xff
  name: a
  description: |
    major type is a debug control logic component, sub-type is cross trigger
ps7_debug_cti_etb_tpiu_PERIPHID4_n4KB_count:
  addr: 0xf8802fd0
  mask: 0xf0
  name: n4KB_count
  description: |
    4KB Count, set to 0
ps7_debug_cti_etb_tpiu_PERIPHID4_JEP106ID:
  addr: 0xf8802fd0
  mask: 0xf
  name: JEP106ID
  description: |
    JEP106 continuation code
ps7_debug_cti_etb_tpiu_PERIPHID5_a:
  addr: 0xf8802fd4
  mask: 0xff
  name: a
  description: |
    reserved
ps7_debug_cti_etb_tpiu_PERIPHID6_a:
  addr: 0xf8802fd8
  mask: 0xff
  name: a
  description: |
    reserved
ps7_debug_cti_etb_tpiu_PERIPHID7_a:
  addr: 0xf8802fdc
  mask: 0xff
  name: a
  description: |
    reserved
ps7_debug_cti_etb_tpiu_PERIPHID0_a:
  addr: 0xf8802fe0
  mask: 0xff
  name: a
  description: |
    PartNumber0
ps7_debug_cti_etb_tpiu_PERIPHID1_JEP106ID:
  addr: 0xf8802fe4
  mask: 0xf0
  name: JEP106ID
  description: |
    JEP106 Identity Code [3:0]
ps7_debug_cti_etb_tpiu_PERIPHID1_PartNumber1:
  addr: 0xf8802fe4
  mask: 0xf
  name: PartNumber1
  description: |
    PartNumber1
ps7_debug_cti_etb_tpiu_PERIPHID2_RevNum:
  addr: 0xf8802fe8
  mask: 0xf0
  name: RevNum
  description: |
    Revision number of Peripheral
ps7_debug_cti_etb_tpiu_PERIPHID2_JEDEC:
  addr: 0xf8802fe8
  mask: 0x8
  name: JEDEC
  description: |
    Indicates that a JEDEC assigned value is used
ps7_debug_cti_etb_tpiu_PERIPHID2_JEP106ID:
  addr: 0xf8802fe8
  mask: 0x7
  name: JEP106ID
  description: |
    JEP106 Identity Code [6:4]
ps7_debug_cti_etb_tpiu_PERIPHID3_RevAnd:
  addr: 0xf8802fec
  mask: 0xf0
  name: RevAnd
  description: |
    RevAnd, at top level
ps7_debug_cti_etb_tpiu_PERIPHID3_CustMod:
  addr: 0xf8802fec
  mask: 0xf
  name: CustMod
  description: |
    Customer Modified
ps7_debug_cti_etb_tpiu_COMPID0_a:
  addr: 0xf8802ff0
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_debug_cti_etb_tpiu_COMPID1_a:
  addr: 0xf8802ff4
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_debug_cti_etb_tpiu_COMPID2_a:
  addr: 0xf8802ff8
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_debug_cti_etb_tpiu_COMPID3_a:
  addr: 0xf8802ffc
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_uart1_Control_reg0_reserved:
  addr: 0xe0001000
  mask: 0xfffffe00
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_uart1_Control_reg0_STPBRK:
  addr: 0xe0001000
  mask: 0x100
  name: STPBRK
  description: |
    Stop transmitter break:
    0: no affect
    1: stop transmission of the break after a minimum of one character length and transmit a high level during 12 bit periods. It can be set regardless of the value of STTBRK.
ps7_uart1_Control_reg0_STTBRK:
  addr: 0xe0001000
  mask: 0x80
  name: STTBRK
  description: |
    Start transmitter break:
    0: no affect
    1: start to transmit a break after the characters currently present in the FIFO and the transmit shift register have been transmitted. It can only be set if STPBRK (Stop transmitter break) is not high.
ps7_uart1_Control_reg0_RSTTO:
  addr: 0xe0001000
  mask: 0x40
  name: RSTTO
  description: |
    Restart receiver timeout counter:
    1: receiver timeout counter is restarted.
    This bit is self clearing once the restart has completed.
ps7_uart1_Control_reg0_TXDIS:
  addr: 0xe0001000
  mask: 0x20
  name: TXDIS
  description: |
    Transmit disable:
    0: enable transmitter
    1: disable transmitter
ps7_uart1_Control_reg0_TXEN:
  addr: 0xe0001000
  mask: 0x10
  name: TXEN
  description: |
    Transmit enable:
    0: disable transmitter
    1: enable transmitter, provided the TXDIS field is set to 0.
ps7_uart1_Control_reg0_RXDIS:
  addr: 0xe0001000
  mask: 0x8
  name: RXDIS
  description: |
    Receive disable:
    0: enable
    1: disable, regardless of the value of RXEN
ps7_uart1_Control_reg0_RXEN:
  addr: 0xe0001000
  mask: 0x4
  name: RXEN
  description: |
    Receive enable:
    0: disable
    1: enable
    When set to one, the receiver logic is enabled, provided the RXDIS field is set to zero.
ps7_uart1_Control_reg0_TXRES:
  addr: 0xe0001000
  mask: 0x2
  name: TXRES
  description: |
    Software reset for Tx data path:
    0: no affect
    1: transmitter logic is reset and all pending transmitter data is discarded
    This bit is self clearing once the reset has completed.
ps7_uart1_Control_reg0_RXRES:
  addr: 0xe0001000
  mask: 0x1
  name: RXRES
  description: |
    Software reset for Rx data path:
    0: no affect
    1: receiver logic is reset and all pending receiver data is discarded.
    This bit is self clearing once the reset has completed.
ps7_uart1_mode_reg0_reserved:
  addr: 0xe0001004
  mask: 0xfffff000
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_uart1_mode_reg0_reserved_IRMODE:
  addr: 0xe0001004
  mask: 0x800
  name: reserved_IRMODE
  description: |
    Reserved. Do not modify.
ps7_uart1_mode_reg0_reserved_UCLKEN:
  addr: 0xe0001004
  mask: 0x400
  name: reserved_UCLKEN
  description: |
    Reserved. Do not modify.
ps7_uart1_mode_reg0_CHMODE:
  addr: 0xe0001004
  mask: 0x300
  name: CHMODE
  description: |
    Channel mode: Defines the mode of operation of the UART.
    00: normal
    01: automatic echo
    10: local loopback
    11: remote loopback
ps7_uart1_mode_reg0_NBSTOP:
  addr: 0xe0001004
  mask: 0xc0
  name: NBSTOP
  description: |
    Number of stop bits: Defines the number of stop bits to detect on receive and to generate on transmit.
    00: 1 stop bit
    01: 1.5 stop bits
    10: 2 stop bits
    11: reserved
ps7_uart1_mode_reg0_PAR:
  addr: 0xe0001004
  mask: 0x38
  name: PAR
  description: |
    Parity type select: Defines the expected parity to check on receive and the parity to generate on transmit.
    000: even parity
    001: odd parity
    010: forced to 0 parity (space)
    011: forced to 1 parity (mark)
    1xx: no parity
ps7_uart1_mode_reg0_CHRL:
  addr: 0xe0001004
  mask: 0x6
  name: CHRL
  description: |
    Character length select: Defines the number of bits in each character.
    11: 6 bits
    10: 7 bits
    0x: 8 bits
ps7_uart1_mode_reg0_CLKS:
  addr: 0xe0001004
  mask: 0x1
  name: CLKS
  description: |
    Clock source select: This field defines whether a pre-scalar of 8 is applied to the baud rate generator input clock.
    0: clock source is uart_ref_clk
    1: clock source is uart_ref_clk/8
ps7_uart1_Intrpt_en_reg0_reserved:
  addr: 0xe0001008
  mask: 0xffffe000
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_uart1_Intrpt_en_reg0_TOVR:
  addr: 0xe0001008
  mask: 0x1000
  name: TOVR
  description: |
    Transmitter FIFO Overflow interrupt:
    0: no affect
    1: enable (clears mask = 0)
ps7_uart1_Intrpt_en_reg0_TNFUL:
  addr: 0xe0001008
  mask: 0x800
  name: TNFUL
  description: |
    Transmitter FIFO Nearly Full interrupt:
    0: no affect
    1: enable (clears mask = 0)
ps7_uart1_Intrpt_en_reg0_TTRIG:
  addr: 0xe0001008
  mask: 0x400
  name: TTRIG
  description: |
    Transmitter FIFO Trigger interrupt:
    0: disable 1: enable
ps7_uart1_Intrpt_en_reg0_DMSI:
  addr: 0xe0001008
  mask: 0x200
  name: DMSI
  description: |
    Delta Modem Status Indicator interrupt:
    0: no affect
    1: enable (clears mask = 0)
ps7_uart1_Intrpt_en_reg0_TIMEOUT:
  addr: 0xe0001008
  mask: 0x100
  name: TIMEOUT
  description: |
    Receiver Timeout Error interrupt:
    0: no affect
    1: enable (clears mask = 0)
ps7_uart1_Intrpt_en_reg0_PARE:
  addr: 0xe0001008
  mask: 0x80
  name: PARE
  description: |
    Receiver Parity Error interrupt:
    0: disable 1: enable
ps7_uart1_Intrpt_en_reg0_FRAME:
  addr: 0xe0001008
  mask: 0x40
  name: FRAME
  description: |
    Receiver Framing Error interrupt:
    0: no affect
    1: enable (clears mask = 0)
ps7_uart1_Intrpt_en_reg0_ROVR:
  addr: 0xe0001008
  mask: 0x20
  name: ROVR
  description: |
    Receiver Overflow Error interrupt:
    0: no affect
    1: enable (clears mask = 0)
ps7_uart1_Intrpt_en_reg0_TFUL:
  addr: 0xe0001008
  mask: 0x10
  name: TFUL
  description: |
    Transmitter FIFO Full interrupt:
    0: no affect
    1: enable (clears mask = 0)
ps7_uart1_Intrpt_en_reg0_TEMPTY:
  addr: 0xe0001008
  mask: 0x8
  name: TEMPTY
  description: |
    Transmitter FIFO Empty interrupt:
    0: disable
    1: enable
ps7_uart1_Intrpt_en_reg0_RFUL:
  addr: 0xe0001008
  mask: 0x4
  name: RFUL
  description: |
    Receiver FIFO Full interrupt:
    0: no affect
    1: enable (clears mask = 0)
ps7_uart1_Intrpt_en_reg0_REMPTY:
  addr: 0xe0001008
  mask: 0x2
  name: REMPTY
  description: |
    Receiver FIFO Empty interrupt:
    0: no affect
    1: enable (clears mask = 0)
ps7_uart1_Intrpt_en_reg0_RTRIG:
  addr: 0xe0001008
  mask: 0x1
  name: RTRIG
  description: |
    Receiver FIFO Trigger interrupt:
    0: no affect
    1: enable (clears mask = 0)
ps7_uart1_Intrpt_dis_reg0_reserved:
  addr: 0xe000100c
  mask: 0xffffe000
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_uart1_Intrpt_dis_reg0_TOVR:
  addr: 0xe000100c
  mask: 0x1000
  name: TOVR
  description: |
    Transmitter FIFO Overflow interrupt:
    0: no affect
    1: disable (sets mask = 1)
ps7_uart1_Intrpt_dis_reg0_TNFUL:
  addr: 0xe000100c
  mask: 0x800
  name: TNFUL
  description: |
    Transmitter FIFO Nearly Full interrupt:
    0: no affect
    1: disable (sets mask = 1)
ps7_uart1_Intrpt_dis_reg0_TTRIG:
  addr: 0xe000100c
  mask: 0x400
  name: TTRIG
  description: |
    Transmitter FIFO Trigger interrupt:
    0: no affect
    1: disable (sets mask = 1)
ps7_uart1_Intrpt_dis_reg0_DMSI:
  addr: 0xe000100c
  mask: 0x200
  name: DMSI
  description: |
    Delta Modem Status Indicator interrupt:
    0: no affect
    1: disable (sets mask = 1)
ps7_uart1_Intrpt_dis_reg0_TIMEOUT:
  addr: 0xe000100c
  mask: 0x100
  name: TIMEOUT
  description: |
    Receiver Timeout Error interrupt:
    0: no affect
    1: disable (sets mask = 1)
ps7_uart1_Intrpt_dis_reg0_PARE:
  addr: 0xe000100c
  mask: 0x80
  name: PARE
  description: |
    Receiver Parity Error interrupt:
    0: no affect
    1: disable (sets mask = 1)
ps7_uart1_Intrpt_dis_reg0_FRAME:
  addr: 0xe000100c
  mask: 0x40
  name: FRAME
  description: |
    Receiver Framing Error interrupt:
    0: no affect
    1: disable (sets mask = 1)
ps7_uart1_Intrpt_dis_reg0_ROVR:
  addr: 0xe000100c
  mask: 0x20
  name: ROVR
  description: |
    Receiver Overflow Error interrupt:
    0: no affect
    1: disable (sets mask = 1)
ps7_uart1_Intrpt_dis_reg0_TFUL:
  addr: 0xe000100c
  mask: 0x10
  name: TFUL
  description: |
    Transmitter FIFO Full interrupt:
    0: no affect
    1: disable (sets mask = 1)
ps7_uart1_Intrpt_dis_reg0_TEMPTY:
  addr: 0xe000100c
  mask: 0x8
  name: TEMPTY
  description: |
    Transmitter FIFO Empty interrupt:
    0: no affect
    1: disable (sets mask = 1)
ps7_uart1_Intrpt_dis_reg0_RFUL:
  addr: 0xe000100c
  mask: 0x4
  name: RFUL
  description: |
    Receiver FIFO Full interrupt:
    0: no affect
    1: disable (sets mask = 1)
ps7_uart1_Intrpt_dis_reg0_REMPTY:
  addr: 0xe000100c
  mask: 0x2
  name: REMPTY
  description: |
    Receiver FIFO Empty interrupt:
    0: no affect
    1: disable (sets mask = 1)
ps7_uart1_Intrpt_dis_reg0_RTRIG:
  addr: 0xe000100c
  mask: 0x1
  name: RTRIG
  description: |
    Receiver FIFO Trigger interrupt:
    0: no affect
    1: disable (sets mask = 1)
ps7_uart1_Intrpt_mask_reg0_reserved:
  addr: 0xe0001010
  mask: 0xffffe000
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_uart1_Intrpt_mask_reg0_TOVR:
  addr: 0xe0001010
  mask: 0x1000
  name: TOVR
  description: |
    Transmitter FIFO Overflow interrupt status:
    0: interrupt is disabled
    1: interrupt is enabled
ps7_uart1_Intrpt_mask_reg0_TNFUL:
  addr: 0xe0001010
  mask: 0x800
  name: TNFUL
  description: |
    Transmitter FIFO Nearly Full interrupt mask status:
    0: interrupt is disabled
    1: interrupt is enabled
ps7_uart1_Intrpt_mask_reg0_TTRIG:
  addr: 0xe0001010
  mask: 0x400
  name: TTRIG
  description: |
    Transmitter FIFO Trigger interrupt mask status:
    0: interrupt is disabled
    1: interrupt is enabled
ps7_uart1_Intrpt_mask_reg0_DMSI:
  addr: 0xe0001010
  mask: 0x200
  name: DMSI
  description: |
    Delta Modem Status Indicator interrupt mask status:
    0: interrupt is disabled
    1: interrupt is enabled
ps7_uart1_Intrpt_mask_reg0_TIMEOUT:
  addr: 0xe0001010
  mask: 0x100
  name: TIMEOUT
  description: |
    Receiver Timeout Error interrupt mask status:
    0: interrupt is disabled
    1: interrupt is enabled
ps7_uart1_Intrpt_mask_reg0_PARE:
  addr: 0xe0001010
  mask: 0x80
  name: PARE
  description: |
    Receiver Parity Error interrupt mask status:
    0: interrupt is disabled
    1: interrupt is enabled
ps7_uart1_Intrpt_mask_reg0_FRAME:
  addr: 0xe0001010
  mask: 0x40
  name: FRAME
  description: |
    Receiver Framing Error interrupt mask status:
    0: interrupt is disabled
    1: interrupt is enabled
ps7_uart1_Intrpt_mask_reg0_ROVR:
  addr: 0xe0001010
  mask: 0x20
  name: ROVR
  description: |
    Receiver Overflow Error interrupt mask status:
    0: interrupt is disabled
    1: interrupt is enabled
ps7_uart1_Intrpt_mask_reg0_TFUL:
  addr: 0xe0001010
  mask: 0x10
  name: TFUL
  description: |
    Transmitter FIFO Full interrupt mask status:
    0: interrupt is disabled
    1: interrupt is enabled
ps7_uart1_Intrpt_mask_reg0_TEMPTY:
  addr: 0xe0001010
  mask: 0x8
  name: TEMPTY
  description: |
    Transmitter FIFO Empty interrupt mask status:
    0: interrupt is disabled
    1: interrupt is enabled
ps7_uart1_Intrpt_mask_reg0_RFUL:
  addr: 0xe0001010
  mask: 0x4
  name: RFUL
  description: |
    Receiver FIFO Full interrupt mask status:
    0: interrupt is disabled
    1: interrupt is enabled
ps7_uart1_Intrpt_mask_reg0_REMPTY:
  addr: 0xe0001010
  mask: 0x2
  name: REMPTY
  description: |
    Receiver FIFO Empty interrupt mask status:
    0: interrupt is disabled
    1: interrupt is enabled
ps7_uart1_Intrpt_mask_reg0_RTRIG:
  addr: 0xe0001010
  mask: 0x1
  name: RTRIG
  description: |
    Receiver FIFO Trigger interrupt mask status:
    0: interrupt is enabled
    1: interrupt is enabled
ps7_uart1_Chnl_int_sts_reg0_reserved:
  addr: 0xe0001014
  mask: 0xffffe000
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_uart1_Chnl_int_sts_reg0_TOVR:
  addr: 0xe0001014
  mask: 0x1000
  name: TOVR
  description: |
    Transmitter FIFO Overflow interrupt mask status:
    This event is triggered whenever a new word is pushed into the transmit FIFO when there is not enough room for all of the data. This will be set as a result of any write when the TFUL flag in Channel_sts_reg0 is already set, or a double byte write when the TNFUL flag in Channel_sts_reg0 is already set.
    0: no interrupt occurred
    1: interrupt occurred
ps7_uart1_Chnl_int_sts_reg0_TNFUL:
  addr: 0xe0001014
  mask: 0x800
  name: TNFUL
  description: |
    Transmitter FIFO Nearly Full interrupt mask status:
    This event is triggered whenever a new word is pushed into the transmit FIFO causing the fill level to be such that there is not enough space for a further write of the number of bytes currently specified in the WSIZE bits in the Mode register. If this further write were currently attempted it would cause an overflow.
    Note that when WSIZE is 00, this assumes that a two byte write would be attempted and hence a single byte write is still possible without overflow by driving byte_sel low for the write.
    0: no interrupt occurred
    1: interrupt occurred
ps7_uart1_Chnl_int_sts_reg0_TTRIG:
  addr: 0xe0001014
  mask: 0x400
  name: TTRIG
  description: |
    Transmitter FIFO Trigger interrupt mask status.
    This event is triggered whenever a new word is pushed into the transmit FIFO causing the fill level to become equal to the value defined by TTRIG.
    0: no interrupt occurred
    1: interrupt occurred
ps7_uart1_Chnl_int_sts_reg0_DMSI:
  addr: 0xe0001014
  mask: 0x200
  name: DMSI
  description: |
    Delta Modem Status Indicator interrupt mask status:
    This event is triggered whenever the DCTS, DDSR, TERI, or DDCD in the modem status register are being set.
    0: no interrupt occurred
    1: interrupt occurred
ps7_uart1_Chnl_int_sts_reg0_TIMEOUT:
  addr: 0xe0001014
  mask: 0x100
  name: TIMEOUT
  description: |
    Receiver Timeout Error interrupt mask status:
    This event is triggered whenever the receiver timeout counter has expired due to a long idle condition.
    0: no interrupt occurred
    1: interrupt occurred
ps7_uart1_Chnl_int_sts_reg0_PARE:
  addr: 0xe0001014
  mask: 0x80
  name: PARE
  description: |
    Receiver Parity Error interrupt mask status:
    This event is triggered whenever the received parity bit does not match the expected value.
    0: no interrupt occurred
    1: interrupt occurred
ps7_uart1_Chnl_int_sts_reg0_FRAME:
  addr: 0xe0001014
  mask: 0x40
  name: FRAME
  description: |
    Receiver Framing Error interrupt mask status:
    This event is triggered whenever the receiver fails to detect a valid stop bit.
    0: no interrupt occurred
    1: interrupt occurred
ps7_uart1_Chnl_int_sts_reg0_ROVR:
  addr: 0xe0001014
  mask: 0x20
  name: ROVR
  description: |
    Receiver Overflow Error interrupt mask status:
    This event is triggered whenever the contents of the receiver shift register have not yet been transferred to the receiver FIFO and a new start bit is detected. This may be due to the FIFO being full, or due to excessive clock boundary delays.
    0: no interrupt occurred
    1: interrupt occurred
ps7_uart1_Chnl_int_sts_reg0_TFUL:
  addr: 0xe0001014
  mask: 0x10
  name: TFUL
  description: |
    Transmitter FIFO Full interrupt mask status:
    This event is triggered whenever a new word is inserted into the transmit FIFO causing it to go from a non-full condition to a full condition.
    0: no interrupt occurred
    1: interrupt occurred
ps7_uart1_Chnl_int_sts_reg0_TEMPTY:
  addr: 0xe0001014
  mask: 0x8
  name: TEMPTY
  description: |
    Transmitter FIFO Empty interrupt mask status:
    This event is triggered whenever the final word is removed from the transmit FIFO.
    0: no interrupt occurred
    1: interrupt occurred
ps7_uart1_Chnl_int_sts_reg0_RFUL:
  addr: 0xe0001014
  mask: 0x4
  name: RFUL
  description: |
    Receiver FIFO Full interrupt mask status:
    This event is triggered whenever a new word is inserted into the receive FIFO causing it to go from a non-full condition to a full condition.
    0: no interrupt occurred
    1: interrupt occurred
ps7_uart1_Chnl_int_sts_reg0_REMPTY:
  addr: 0xe0001014
  mask: 0x2
  name: REMPTY
  description: |
    Receiver FIFO Empty interrupt mask status:
    This event is triggered upon exit of the final word from the receive FIFO.
    0: no interrupt occurred
    1: interrupt occurred
ps7_uart1_Chnl_int_sts_reg0_RTRIG:
  addr: 0xe0001014
  mask: 0x1
  name: RTRIG
  description: |
    Receiver FIFO Trigger interrupt mask status:
    This event is triggered whenever a new word is inserted into the receive FIFO .
    0: no interrupt occurred
    1: interrupt occurred
ps7_uart1_Baud_rate_gen_reg0_reserved:
  addr: 0xe0001018
  mask: 0xffff0000
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_uart1_Baud_rate_gen_reg0_CD:
  addr: 0xe0001018
  mask: 0xffff
  name: CD
  description: |
    Baud Rate Clock Divisor Value:
    0: Disables baud_sample
    1: Clock divisor bypass (baud_sample = sel_clk)
    2 - 65535: baud_sample
ps7_uart1_Rcvr_timeout_reg0_reserved:
  addr: 0xe000101c
  mask: 0xffffff00
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_uart1_Rcvr_timeout_reg0_RTO:
  addr: 0xe000101c
  mask: 0xff
  name: RTO
  description: |
    Receiver timeout value:
    0: Disables receiver timeout counter
    1 - 255: Receiver timeout in number of baud_sample clocks.
ps7_uart1_Rcvr_FIFO_trigger_level0_reserved:
  addr: 0xe0001020
  mask: 0xffffffc0
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_uart1_Rcvr_FIFO_trigger_level0_RTRIG:
  addr: 0xe0001020
  mask: 0x3f
  name: RTRIG
  description: |
    Receiver FIFO trigger level value:
    0: Disables receiver FIFO trigger level function
    1 - 63:Trigger set when receiver FIFO fills to RTRIG bytes
ps7_uart1_Modem_ctrl_reg0_reserved_1:
  addr: 0xe0001024
  mask: 0xffffffc0
  name: reserved_1
  description: |
    Reserved, read as zero, ignored on write.
ps7_uart1_Modem_ctrl_reg0_FCM:
  addr: 0xe0001024
  mask: 0x20
  name: FCM
  description: |
    Automatic flow control mode:
    0: disable
    Transmission is continuous regardless of the value of the EMIOUARTxCTSN input, and the EMIOUARTxRTSN output is driven completely under software control.
    1: enable
    Transmission will only occur when the EMIOUARTxCTSN input is asserted low, and the EMIOUARTxRTSN output is driven using a compare of the RX FIFO fill level to the programmed FDEL value.
ps7_uart1_Modem_ctrl_reg0_reserved:
  addr: 0xe0001024
  mask: 0x1c
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_uart1_Modem_ctrl_reg0_RTS:
  addr: 0xe0001024
  mask: 0x2
  name: RTS
  description: |
    Request to send output control:
    This bit is ignored if automatic flow control mode is enabled by FCM being high. If FCM is low, the value of this bit is inverted when applied to the EMIOUARTxRTSN output.
    0: EMIOUARTxRTSN output forced to logic 1
    1: EMIOUARTxRTSN output forced to logic 0
ps7_uart1_Modem_ctrl_reg0_DTR:
  addr: 0xe0001024
  mask: 0x1
  name: DTR
  description: |
    Data Terminal Ready:
    The value of this bit is inverted when applied to the EMIOUARTxDTRN output.
    0: EMIOUARTxDTRN output forced to logic 1
    1: EMIOUARTxDTRN output forced to logic 0
ps7_uart1_Modem_sts_reg0_reserved:
  addr: 0xe0001028
  mask: 0xfffffe00
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_uart1_Modem_sts_reg0_FCMS:
  addr: 0xe0001028
  mask: 0x100
  name: FCMS
  description: |
    Flow Control Mode:
    0: disabled
    1: enabled
ps7_uart1_Modem_sts_reg0_DCD:
  addr: 0xe0001028
  mask: 0x80
  name: DCD
  description: |
    Data Carrier Detect (DCD) input signal from PL (EMIOUARTxDCDN) status:
    0: input is high
    1: input is low
ps7_uart1_Modem_sts_reg0_RI:
  addr: 0xe0001028
  mask: 0x40
  name: RI
  description: |
    Ring Indicator (RI) input signal from PL (EMIOUARTxRIN) status:
    0: input is high
    1: input is low
ps7_uart1_Modem_sts_reg0_DSR:
  addr: 0xe0001028
  mask: 0x20
  name: DSR
  description: |
    Data Set Ready (DSR) input signal from PL (EMIOUARTxDSRN) status:
    0: input is high
    1: input is low
ps7_uart1_Modem_sts_reg0_CTS:
  addr: 0xe0001028
  mask: 0x10
  name: CTS
  description: |
    Clear to Send (CTS) input signal from PL (EMIOUARTxCTSN) status:
    0: input is high
    1: input is low
ps7_uart1_Modem_sts_reg0_DDCD:
  addr: 0xe0001028
  mask: 0x8
  name: DDCD
  description: |
    Delta Data Carrier Detect status:
    Indicates a change in state of the EMIOUARTxDCDN input since this bit was last cleared.
    0: No change has occurred
    1: Change has occurred
ps7_uart1_Modem_sts_reg0_TERI:
  addr: 0xe0001028
  mask: 0x4
  name: TERI
  description: |
    Trailing Edge Ring Indicator status:
    Indicates that the EMIOUARTxRIN input has change from high to low state since this bit was last cleared.
    0: No trailing edge has occurred
    1: Trailing edge has occurred
ps7_uart1_Modem_sts_reg0_DDSR:
  addr: 0xe0001028
  mask: 0x2
  name: DDSR
  description: |
    Delta Data Set Ready status:
    Indicates a change in state of the EMIOUARTxDSRN input since this bit was last cleared.
    0: No change has occurred
    1: Change has occurred
ps7_uart1_Modem_sts_reg0_DCTS:
  addr: 0xe0001028
  mask: 0x1
  name: DCTS
  description: |
    Delta Clear To Send status:
    Indicates a change in state of the EMIOUARTxCTSN input since this bit was last cleared.
    0: No change has occurred
    1: Change has occurred
ps7_uart1_Channel_sts_reg0_reserved:
  addr: 0xe000102c
  mask: 0xffff8000
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_uart1_Channel_sts_reg0_TNFUL:
  addr: 0xe000102c
  mask: 0x4000
  name: TNFUL
  description: |
    Transmitter FIFO Nearly Full continuous status:
    This indicates that there is not enough space for the number of bytes currently specified in the WSIZE bits in the Mode register. If a write were currently attempted it would cause an overflow.
    Note that when WSIZE is 00, this assumes that a two byte write would be attempted and hence a single byte write is still possible without overflow by driving byte_sel low for the write.
    0: More than one byte is unused in the Tx FIFO
    1: Only one byte is free in the Tx FIFO
ps7_uart1_Channel_sts_reg0_TTRIG:
  addr: 0xe000102c
  mask: 0x2000
  name: TTRIG
  description: |
    Transmitter FIFO Trigger continuous status:
    0: Tx FIFO fill level is less than TTRIG
    1: Tx FIFO fill level is greater than or equal to TTRIG
ps7_uart1_Channel_sts_reg0_FDELT:
  addr: 0xe000102c
  mask: 0x1000
  name: FDELT
  description: |
    Receiver flow delay trigger continuous status:
    0: Rx FIFO fill level is less than FDEL
    1: Rx FIFO fill level is greater than or equal to FDEL
ps7_uart1_Channel_sts_reg0_TACTIVE:
  addr: 0xe000102c
  mask: 0x800
  name: TACTIVE
  description: |
    Transmitter state machine active status:
    0: inactive state
    1: active state
ps7_uart1_Channel_sts_reg0_RACTIVE:
  addr: 0xe000102c
  mask: 0x400
  name: RACTIVE
  description: |
    Receiver state machine active status:
    0: inactive state
    1: active state
ps7_uart1_Channel_sts_reg0_reserved_DMSI:
  addr: 0xe000102c
  mask: 0x200
  name: reserved_DMSI
  description: |
    Reserved. Do not modify.
ps7_uart1_Channel_sts_reg0_reserved_TIMEOUT:
  addr: 0xe000102c
  mask: 0x100
  name: reserved_TIMEOUT
  description: |
    Reserved. Do not modify.
ps7_uart1_Channel_sts_reg0_reserved_PARE:
  addr: 0xe000102c
  mask: 0x80
  name: reserved_PARE
  description: |
    Reserved. Do not modify.
ps7_uart1_Channel_sts_reg0_reserved_FRAME:
  addr: 0xe000102c
  mask: 0x40
  name: reserved_FRAME
  description: |
    Reserved. Do not modify.
ps7_uart1_Channel_sts_reg0_reserved_ROVR:
  addr: 0xe000102c
  mask: 0x20
  name: reserved_ROVR
  description: |
    Reserved. Do not modify.
ps7_uart1_Channel_sts_reg0_TFUL:
  addr: 0xe000102c
  mask: 0x10
  name: TFUL
  description: |
    Transmitter FIFO Full continuous status:
    0: Tx FIFO is not full
    1: Tx FIFO is full
ps7_uart1_Channel_sts_reg0_TEMPTY:
  addr: 0xe000102c
  mask: 0x8
  name: TEMPTY
  description: |
    Transmitter FIFO Empty continuous status:
    0: Tx FIFO is not empty
    1: Tx FIFO is empty
ps7_uart1_Channel_sts_reg0_RFUL:
  addr: 0xe000102c
  mask: 0x4
  name: RFUL
  description: |
    Receiver FIFO Full continuous status:
    1: Rx FIFO is full
    0: Rx FIFO is not full
ps7_uart1_Channel_sts_reg0_REMPTY:
  addr: 0xe000102c
  mask: 0x2
  name: REMPTY
  description: |
    Receiver FIFO Full continuous status:
    0: Rx FIFO is not empty
    1: Rx FIFO is empty
ps7_uart1_Channel_sts_reg0_RTRIG:
  addr: 0xe000102c
  mask: 0x1
  name: RTRIG
  description: |
    Receiver FIFO Trigger continuous status:
    0: Rx FIFO fill level is less than RTRIG
    1: Rx FIFO fill level is greater than or equal to RTRIG
ps7_uart1_TX_RX_FIFO0_reserved:
  addr: 0xe0001030
  mask: 0xffffff00
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_uart1_TX_RX_FIFO0_FIFO:
  addr: 0xe0001030
  mask: 0xff
  name: FIFO
  description: |
    Operates as Tx FIFO and Rx FIFO.
ps7_uart1_Baud_rate_divider_reg0_reserved:
  addr: 0xe0001034
  mask: 0xffffff00
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_uart1_Baud_rate_divider_reg0_BDIV:
  addr: 0xe0001034
  mask: 0xff
  name: BDIV
  description: |
    Baud rate divider value:
    0 - 3: ignored
    4 - 255: Baud rate
ps7_uart1_Flow_delay_reg0_reserved:
  addr: 0xe0001038
  mask: 0xffffffc0
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_uart1_Flow_delay_reg0_FDEL:
  addr: 0xe0001038
  mask: 0x3f
  name: FDEL
  description: |
    RxFIFO trigger level for Ready To Send (RTS) output signal (EMIOUARTxRTSN) de-assertion:
    0 - 3: Flow delay triggering is disabled, since minimum 4 word hysteresis cannot be satisfied.
    4 to 65535: EMIOUARTxRTSN is driven high when Rx FIFO fill level equals FDEL
ps7_uart1_Tx_FIFO_trigger_level0_reserved:
  addr: 0xe0001044
  mask: 0xffffffc0
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_uart1_Tx_FIFO_trigger_level0_TTRIG:
  addr: 0xe0001044
  mask: 0x3f
  name: TTRIG
  description: |
    Transmitter FIFO trigger level:
    0: Disables transmitter FIFO trigger level function
    1 - 63: Trigger set when transmitter FIFO fills to TTRIG bytes
ps7_uart0_Control_reg0_reserved:
  addr: 0xe0000000
  mask: 0xfffffe00
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_uart0_Control_reg0_STPBRK:
  addr: 0xe0000000
  mask: 0x100
  name: STPBRK
  description: |
    Stop transmitter break:
    0: no affect
    1: stop transmission of the break after a minimum of one character length and transmit a high level during 12 bit periods. It can be set regardless of the value of STTBRK.
ps7_uart0_Control_reg0_STTBRK:
  addr: 0xe0000000
  mask: 0x80
  name: STTBRK
  description: |
    Start transmitter break:
    0: no affect
    1: start to transmit a break after the characters currently present in the FIFO and the transmit shift register have been transmitted. It can only be set if STPBRK (Stop transmitter break) is not high.
ps7_uart0_Control_reg0_RSTTO:
  addr: 0xe0000000
  mask: 0x40
  name: RSTTO
  description: |
    Restart receiver timeout counter:
    1: receiver timeout counter is restarted.
    This bit is self clearing once the restart has completed.
ps7_uart0_Control_reg0_TXDIS:
  addr: 0xe0000000
  mask: 0x20
  name: TXDIS
  description: |
    Transmit disable:
    0: enable transmitter
    1: disable transmitter
ps7_uart0_Control_reg0_TXEN:
  addr: 0xe0000000
  mask: 0x10
  name: TXEN
  description: |
    Transmit enable:
    0: disable transmitter
    1: enable transmitter, provided the TXDIS field is set to 0.
ps7_uart0_Control_reg0_RXDIS:
  addr: 0xe0000000
  mask: 0x8
  name: RXDIS
  description: |
    Receive disable:
    0: enable
    1: disable, regardless of the value of RXEN
ps7_uart0_Control_reg0_RXEN:
  addr: 0xe0000000
  mask: 0x4
  name: RXEN
  description: |
    Receive enable:
    0: disable
    1: enable
    When set to one, the receiver logic is enabled, provided the RXDIS field is set to zero.
ps7_uart0_Control_reg0_TXRES:
  addr: 0xe0000000
  mask: 0x2
  name: TXRES
  description: |
    Software reset for Tx data path:
    0: no affect
    1: transmitter logic is reset and all pending transmitter data is discarded
    This bit is self clearing once the reset has completed.
ps7_uart0_Control_reg0_RXRES:
  addr: 0xe0000000
  mask: 0x1
  name: RXRES
  description: |
    Software reset for Rx data path:
    0: no affect
    1: receiver logic is reset and all pending receiver data is discarded.
    This bit is self clearing once the reset has completed.
ps7_uart0_mode_reg0_reserved:
  addr: 0xe0000004
  mask: 0xfffff000
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_uart0_mode_reg0_reserved_IRMODE:
  addr: 0xe0000004
  mask: 0x800
  name: reserved_IRMODE
  description: |
    Reserved. Do not modify.
ps7_uart0_mode_reg0_reserved_UCLKEN:
  addr: 0xe0000004
  mask: 0x400
  name: reserved_UCLKEN
  description: |
    Reserved. Do not modify.
ps7_uart0_mode_reg0_CHMODE:
  addr: 0xe0000004
  mask: 0x300
  name: CHMODE
  description: |
    Channel mode: Defines the mode of operation of the UART.
    00: normal
    01: automatic echo
    10: local loopback
    11: remote loopback
ps7_uart0_mode_reg0_NBSTOP:
  addr: 0xe0000004
  mask: 0xc0
  name: NBSTOP
  description: |
    Number of stop bits: Defines the number of stop bits to detect on receive and to generate on transmit.
    00: 1 stop bit
    01: 1.5 stop bits
    10: 2 stop bits
    11: reserved
ps7_uart0_mode_reg0_PAR:
  addr: 0xe0000004
  mask: 0x38
  name: PAR
  description: |
    Parity type select: Defines the expected parity to check on receive and the parity to generate on transmit.
    000: even parity
    001: odd parity
    010: forced to 0 parity (space)
    011: forced to 1 parity (mark)
    1xx: no parity
ps7_uart0_mode_reg0_CHRL:
  addr: 0xe0000004
  mask: 0x6
  name: CHRL
  description: |
    Character length select: Defines the number of bits in each character.
    11: 6 bits
    10: 7 bits
    0x: 8 bits
ps7_uart0_mode_reg0_CLKS:
  addr: 0xe0000004
  mask: 0x1
  name: CLKS
  description: |
    Clock source select: This field defines whether a pre-scalar of 8 is applied to the baud rate generator input clock.
    0: clock source is uart_ref_clk
    1: clock source is uart_ref_clk/8
ps7_uart0_Intrpt_en_reg0_reserved:
  addr: 0xe0000008
  mask: 0xffffe000
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_uart0_Intrpt_en_reg0_TOVR:
  addr: 0xe0000008
  mask: 0x1000
  name: TOVR
  description: |
    Transmitter FIFO Overflow interrupt:
    0: no affect
    1: enable (clears mask = 0)
ps7_uart0_Intrpt_en_reg0_TNFUL:
  addr: 0xe0000008
  mask: 0x800
  name: TNFUL
  description: |
    Transmitter FIFO Nearly Full interrupt:
    0: no affect
    1: enable (clears mask = 0)
ps7_uart0_Intrpt_en_reg0_TTRIG:
  addr: 0xe0000008
  mask: 0x400
  name: TTRIG
  description: |
    Transmitter FIFO Trigger interrupt:
    0: disable 1: enable
ps7_uart0_Intrpt_en_reg0_DMSI:
  addr: 0xe0000008
  mask: 0x200
  name: DMSI
  description: |
    Delta Modem Status Indicator interrupt:
    0: no affect
    1: enable (clears mask = 0)
ps7_uart0_Intrpt_en_reg0_TIMEOUT:
  addr: 0xe0000008
  mask: 0x100
  name: TIMEOUT
  description: |
    Receiver Timeout Error interrupt:
    0: no affect
    1: enable (clears mask = 0)
ps7_uart0_Intrpt_en_reg0_PARE:
  addr: 0xe0000008
  mask: 0x80
  name: PARE
  description: |
    Receiver Parity Error interrupt:
    0: disable 1: enable
ps7_uart0_Intrpt_en_reg0_FRAME:
  addr: 0xe0000008
  mask: 0x40
  name: FRAME
  description: |
    Receiver Framing Error interrupt:
    0: no affect
    1: enable (clears mask = 0)
ps7_uart0_Intrpt_en_reg0_ROVR:
  addr: 0xe0000008
  mask: 0x20
  name: ROVR
  description: |
    Receiver Overflow Error interrupt:
    0: no affect
    1: enable (clears mask = 0)
ps7_uart0_Intrpt_en_reg0_TFUL:
  addr: 0xe0000008
  mask: 0x10
  name: TFUL
  description: |
    Transmitter FIFO Full interrupt:
    0: no affect
    1: enable (clears mask = 0)
ps7_uart0_Intrpt_en_reg0_TEMPTY:
  addr: 0xe0000008
  mask: 0x8
  name: TEMPTY
  description: |
    Transmitter FIFO Empty interrupt:
    0: disable
    1: enable
ps7_uart0_Intrpt_en_reg0_RFUL:
  addr: 0xe0000008
  mask: 0x4
  name: RFUL
  description: |
    Receiver FIFO Full interrupt:
    0: no affect
    1: enable (clears mask = 0)
ps7_uart0_Intrpt_en_reg0_REMPTY:
  addr: 0xe0000008
  mask: 0x2
  name: REMPTY
  description: |
    Receiver FIFO Empty interrupt:
    0: no affect
    1: enable (clears mask = 0)
ps7_uart0_Intrpt_en_reg0_RTRIG:
  addr: 0xe0000008
  mask: 0x1
  name: RTRIG
  description: |
    Receiver FIFO Trigger interrupt:
    0: no affect
    1: enable (clears mask = 0)
ps7_uart0_Intrpt_dis_reg0_reserved:
  addr: 0xe000000c
  mask: 0xffffe000
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_uart0_Intrpt_dis_reg0_TOVR:
  addr: 0xe000000c
  mask: 0x1000
  name: TOVR
  description: |
    Transmitter FIFO Overflow interrupt:
    0: no affect
    1: disable (sets mask = 1)
ps7_uart0_Intrpt_dis_reg0_TNFUL:
  addr: 0xe000000c
  mask: 0x800
  name: TNFUL
  description: |
    Transmitter FIFO Nearly Full interrupt:
    0: no affect
    1: disable (sets mask = 1)
ps7_uart0_Intrpt_dis_reg0_TTRIG:
  addr: 0xe000000c
  mask: 0x400
  name: TTRIG
  description: |
    Transmitter FIFO Trigger interrupt:
    0: no affect
    1: disable (sets mask = 1)
ps7_uart0_Intrpt_dis_reg0_DMSI:
  addr: 0xe000000c
  mask: 0x200
  name: DMSI
  description: |
    Delta Modem Status Indicator interrupt:
    0: no affect
    1: disable (sets mask = 1)
ps7_uart0_Intrpt_dis_reg0_TIMEOUT:
  addr: 0xe000000c
  mask: 0x100
  name: TIMEOUT
  description: |
    Receiver Timeout Error interrupt:
    0: no affect
    1: disable (sets mask = 1)
ps7_uart0_Intrpt_dis_reg0_PARE:
  addr: 0xe000000c
  mask: 0x80
  name: PARE
  description: |
    Receiver Parity Error interrupt:
    0: no affect
    1: disable (sets mask = 1)
ps7_uart0_Intrpt_dis_reg0_FRAME:
  addr: 0xe000000c
  mask: 0x40
  name: FRAME
  description: |
    Receiver Framing Error interrupt:
    0: no affect
    1: disable (sets mask = 1)
ps7_uart0_Intrpt_dis_reg0_ROVR:
  addr: 0xe000000c
  mask: 0x20
  name: ROVR
  description: |
    Receiver Overflow Error interrupt:
    0: no affect
    1: disable (sets mask = 1)
ps7_uart0_Intrpt_dis_reg0_TFUL:
  addr: 0xe000000c
  mask: 0x10
  name: TFUL
  description: |
    Transmitter FIFO Full interrupt:
    0: no affect
    1: disable (sets mask = 1)
ps7_uart0_Intrpt_dis_reg0_TEMPTY:
  addr: 0xe000000c
  mask: 0x8
  name: TEMPTY
  description: |
    Transmitter FIFO Empty interrupt:
    0: no affect
    1: disable (sets mask = 1)
ps7_uart0_Intrpt_dis_reg0_RFUL:
  addr: 0xe000000c
  mask: 0x4
  name: RFUL
  description: |
    Receiver FIFO Full interrupt:
    0: no affect
    1: disable (sets mask = 1)
ps7_uart0_Intrpt_dis_reg0_REMPTY:
  addr: 0xe000000c
  mask: 0x2
  name: REMPTY
  description: |
    Receiver FIFO Empty interrupt:
    0: no affect
    1: disable (sets mask = 1)
ps7_uart0_Intrpt_dis_reg0_RTRIG:
  addr: 0xe000000c
  mask: 0x1
  name: RTRIG
  description: |
    Receiver FIFO Trigger interrupt:
    0: no affect
    1: disable (sets mask = 1)
ps7_uart0_Intrpt_mask_reg0_reserved:
  addr: 0xe0000010
  mask: 0xffffe000
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_uart0_Intrpt_mask_reg0_TOVR:
  addr: 0xe0000010
  mask: 0x1000
  name: TOVR
  description: |
    Transmitter FIFO Overflow interrupt status:
    0: interrupt is disabled
    1: interrupt is enabled
ps7_uart0_Intrpt_mask_reg0_TNFUL:
  addr: 0xe0000010
  mask: 0x800
  name: TNFUL
  description: |
    Transmitter FIFO Nearly Full interrupt mask status:
    0: interrupt is disabled
    1: interrupt is enabled
ps7_uart0_Intrpt_mask_reg0_TTRIG:
  addr: 0xe0000010
  mask: 0x400
  name: TTRIG
  description: |
    Transmitter FIFO Trigger interrupt mask status:
    0: interrupt is disabled
    1: interrupt is enabled
ps7_uart0_Intrpt_mask_reg0_DMSI:
  addr: 0xe0000010
  mask: 0x200
  name: DMSI
  description: |
    Delta Modem Status Indicator interrupt mask status:
    0: interrupt is disabled
    1: interrupt is enabled
ps7_uart0_Intrpt_mask_reg0_TIMEOUT:
  addr: 0xe0000010
  mask: 0x100
  name: TIMEOUT
  description: |
    Receiver Timeout Error interrupt mask status:
    0: interrupt is disabled
    1: interrupt is enabled
ps7_uart0_Intrpt_mask_reg0_PARE:
  addr: 0xe0000010
  mask: 0x80
  name: PARE
  description: |
    Receiver Parity Error interrupt mask status:
    0: interrupt is disabled
    1: interrupt is enabled
ps7_uart0_Intrpt_mask_reg0_FRAME:
  addr: 0xe0000010
  mask: 0x40
  name: FRAME
  description: |
    Receiver Framing Error interrupt mask status:
    0: interrupt is disabled
    1: interrupt is enabled
ps7_uart0_Intrpt_mask_reg0_ROVR:
  addr: 0xe0000010
  mask: 0x20
  name: ROVR
  description: |
    Receiver Overflow Error interrupt mask status:
    0: interrupt is disabled
    1: interrupt is enabled
ps7_uart0_Intrpt_mask_reg0_TFUL:
  addr: 0xe0000010
  mask: 0x10
  name: TFUL
  description: |
    Transmitter FIFO Full interrupt mask status:
    0: interrupt is disabled
    1: interrupt is enabled
ps7_uart0_Intrpt_mask_reg0_TEMPTY:
  addr: 0xe0000010
  mask: 0x8
  name: TEMPTY
  description: |
    Transmitter FIFO Empty interrupt mask status:
    0: interrupt is disabled
    1: interrupt is enabled
ps7_uart0_Intrpt_mask_reg0_RFUL:
  addr: 0xe0000010
  mask: 0x4
  name: RFUL
  description: |
    Receiver FIFO Full interrupt mask status:
    0: interrupt is disabled
    1: interrupt is enabled
ps7_uart0_Intrpt_mask_reg0_REMPTY:
  addr: 0xe0000010
  mask: 0x2
  name: REMPTY
  description: |
    Receiver FIFO Empty interrupt mask status:
    0: interrupt is disabled
    1: interrupt is enabled
ps7_uart0_Intrpt_mask_reg0_RTRIG:
  addr: 0xe0000010
  mask: 0x1
  name: RTRIG
  description: |
    Receiver FIFO Trigger interrupt mask status:
    0: interrupt is enabled
    1: interrupt is enabled
ps7_uart0_Chnl_int_sts_reg0_reserved:
  addr: 0xe0000014
  mask: 0xffffe000
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_uart0_Chnl_int_sts_reg0_TOVR:
  addr: 0xe0000014
  mask: 0x1000
  name: TOVR
  description: |
    Transmitter FIFO Overflow interrupt mask status:
    This event is triggered whenever a new word is pushed into the transmit FIFO when there is not enough room for all of the data. This will be set as a result of any write when the TFUL flag in Channel_sts_reg0 is already set, or a double byte write when the TNFUL flag in Channel_sts_reg0 is already set.
    0: no interrupt occurred
    1: interrupt occurred
ps7_uart0_Chnl_int_sts_reg0_TNFUL:
  addr: 0xe0000014
  mask: 0x800
  name: TNFUL
  description: |
    Transmitter FIFO Nearly Full interrupt mask status:
    This event is triggered whenever a new word is pushed into the transmit FIFO causing the fill level to be such that there is not enough space for a further write of the number of bytes currently specified in the WSIZE bits in the Mode register. If this further write were currently attempted it would cause an overflow.
    Note that when WSIZE is 00, this assumes that a two byte write would be attempted and hence a single byte write is still possible without overflow by driving byte_sel low for the write.
    0: no interrupt occurred
    1: interrupt occurred
ps7_uart0_Chnl_int_sts_reg0_TTRIG:
  addr: 0xe0000014
  mask: 0x400
  name: TTRIG
  description: |
    Transmitter FIFO Trigger interrupt mask status.
    This event is triggered whenever a new word is pushed into the transmit FIFO causing the fill level to become equal to the value defined by TTRIG.
    0: no interrupt occurred
    1: interrupt occurred
ps7_uart0_Chnl_int_sts_reg0_DMSI:
  addr: 0xe0000014
  mask: 0x200
  name: DMSI
  description: |
    Delta Modem Status Indicator interrupt mask status:
    This event is triggered whenever the DCTS, DDSR, TERI, or DDCD in the modem status register are being set.
    0: no interrupt occurred
    1: interrupt occurred
ps7_uart0_Chnl_int_sts_reg0_TIMEOUT:
  addr: 0xe0000014
  mask: 0x100
  name: TIMEOUT
  description: |
    Receiver Timeout Error interrupt mask status:
    This event is triggered whenever the receiver timeout counter has expired due to a long idle condition.
    0: no interrupt occurred
    1: interrupt occurred
ps7_uart0_Chnl_int_sts_reg0_PARE:
  addr: 0xe0000014
  mask: 0x80
  name: PARE
  description: |
    Receiver Parity Error interrupt mask status:
    This event is triggered whenever the received parity bit does not match the expected value.
    0: no interrupt occurred
    1: interrupt occurred
ps7_uart0_Chnl_int_sts_reg0_FRAME:
  addr: 0xe0000014
  mask: 0x40
  name: FRAME
  description: |
    Receiver Framing Error interrupt mask status:
    This event is triggered whenever the receiver fails to detect a valid stop bit.
    0: no interrupt occurred
    1: interrupt occurred
ps7_uart0_Chnl_int_sts_reg0_ROVR:
  addr: 0xe0000014
  mask: 0x20
  name: ROVR
  description: |
    Receiver Overflow Error interrupt mask status:
    This event is triggered whenever the contents of the receiver shift register have not yet been transferred to the receiver FIFO and a new start bit is detected. This may be due to the FIFO being full, or due to excessive clock boundary delays.
    0: no interrupt occurred
    1: interrupt occurred
ps7_uart0_Chnl_int_sts_reg0_TFUL:
  addr: 0xe0000014
  mask: 0x10
  name: TFUL
  description: |
    Transmitter FIFO Full interrupt mask status:
    This event is triggered whenever a new word is inserted into the transmit FIFO causing it to go from a non-full condition to a full condition.
    0: no interrupt occurred
    1: interrupt occurred
ps7_uart0_Chnl_int_sts_reg0_TEMPTY:
  addr: 0xe0000014
  mask: 0x8
  name: TEMPTY
  description: |
    Transmitter FIFO Empty interrupt mask status:
    This event is triggered whenever the final word is removed from the transmit FIFO.
    0: no interrupt occurred
    1: interrupt occurred
ps7_uart0_Chnl_int_sts_reg0_RFUL:
  addr: 0xe0000014
  mask: 0x4
  name: RFUL
  description: |
    Receiver FIFO Full interrupt mask status:
    This event is triggered whenever a new word is inserted into the receive FIFO causing it to go from a non-full condition to a full condition.
    0: no interrupt occurred
    1: interrupt occurred
ps7_uart0_Chnl_int_sts_reg0_REMPTY:
  addr: 0xe0000014
  mask: 0x2
  name: REMPTY
  description: |
    Receiver FIFO Empty interrupt mask status:
    This event is triggered upon exit of the final word from the receive FIFO.
    0: no interrupt occurred
    1: interrupt occurred
ps7_uart0_Chnl_int_sts_reg0_RTRIG:
  addr: 0xe0000014
  mask: 0x1
  name: RTRIG
  description: |
    Receiver FIFO Trigger interrupt mask status:
    This event is triggered whenever a new word is inserted into the receive FIFO .
    0: no interrupt occurred
    1: interrupt occurred
ps7_uart0_Baud_rate_gen_reg0_reserved:
  addr: 0xe0000018
  mask: 0xffff0000
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_uart0_Baud_rate_gen_reg0_CD:
  addr: 0xe0000018
  mask: 0xffff
  name: CD
  description: |
    Baud Rate Clock Divisor Value:
    0: Disables baud_sample
    1: Clock divisor bypass (baud_sample = sel_clk)
    2 - 65535: baud_sample
ps7_uart0_Rcvr_timeout_reg0_reserved:
  addr: 0xe000001c
  mask: 0xffffff00
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_uart0_Rcvr_timeout_reg0_RTO:
  addr: 0xe000001c
  mask: 0xff
  name: RTO
  description: |
    Receiver timeout value:
    0: Disables receiver timeout counter
    1 - 255: Receiver timeout in number of baud_sample clocks.
ps7_uart0_Rcvr_FIFO_trigger_level0_reserved:
  addr: 0xe0000020
  mask: 0xffffffc0
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_uart0_Rcvr_FIFO_trigger_level0_RTRIG:
  addr: 0xe0000020
  mask: 0x3f
  name: RTRIG
  description: |
    Receiver FIFO trigger level value:
    0: Disables receiver FIFO trigger level function
    1 - 63:Trigger set when receiver FIFO fills to RTRIG bytes
ps7_uart0_Modem_ctrl_reg0_reserved_1:
  addr: 0xe0000024
  mask: 0xffffffc0
  name: reserved_1
  description: |
    Reserved, read as zero, ignored on write.
ps7_uart0_Modem_ctrl_reg0_FCM:
  addr: 0xe0000024
  mask: 0x20
  name: FCM
  description: |
    Automatic flow control mode:
    0: disable
    Transmission is continuous regardless of the value of the EMIOUARTxCTSN input, and the EMIOUARTxRTSN output is driven completely under software control.
    1: enable
    Transmission will only occur when the EMIOUARTxCTSN input is asserted low, and the EMIOUARTxRTSN output is driven using a compare of the RX FIFO fill level to the programmed FDEL value.
ps7_uart0_Modem_ctrl_reg0_reserved:
  addr: 0xe0000024
  mask: 0x1c
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_uart0_Modem_ctrl_reg0_RTS:
  addr: 0xe0000024
  mask: 0x2
  name: RTS
  description: |
    Request to send output control:
    This bit is ignored if automatic flow control mode is enabled by FCM being high. If FCM is low, the value of this bit is inverted when applied to the EMIOUARTxRTSN output.
    0: EMIOUARTxRTSN output forced to logic 1
    1: EMIOUARTxRTSN output forced to logic 0
ps7_uart0_Modem_ctrl_reg0_DTR:
  addr: 0xe0000024
  mask: 0x1
  name: DTR
  description: |
    Data Terminal Ready:
    The value of this bit is inverted when applied to the EMIOUARTxDTRN output.
    0: EMIOUARTxDTRN output forced to logic 1
    1: EMIOUARTxDTRN output forced to logic 0
ps7_uart0_Modem_sts_reg0_reserved:
  addr: 0xe0000028
  mask: 0xfffffe00
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_uart0_Modem_sts_reg0_FCMS:
  addr: 0xe0000028
  mask: 0x100
  name: FCMS
  description: |
    Flow Control Mode:
    0: disabled
    1: enabled
ps7_uart0_Modem_sts_reg0_DCD:
  addr: 0xe0000028
  mask: 0x80
  name: DCD
  description: |
    Data Carrier Detect (DCD) input signal from PL (EMIOUARTxDCDN) status:
    0: input is high
    1: input is low
ps7_uart0_Modem_sts_reg0_RI:
  addr: 0xe0000028
  mask: 0x40
  name: RI
  description: |
    Ring Indicator (RI) input signal from PL (EMIOUARTxRIN) status:
    0: input is high
    1: input is low
ps7_uart0_Modem_sts_reg0_DSR:
  addr: 0xe0000028
  mask: 0x20
  name: DSR
  description: |
    Data Set Ready (DSR) input signal from PL (EMIOUARTxDSRN) status:
    0: input is high
    1: input is low
ps7_uart0_Modem_sts_reg0_CTS:
  addr: 0xe0000028
  mask: 0x10
  name: CTS
  description: |
    Clear to Send (CTS) input signal from PL (EMIOUARTxCTSN) status:
    0: input is high
    1: input is low
ps7_uart0_Modem_sts_reg0_DDCD:
  addr: 0xe0000028
  mask: 0x8
  name: DDCD
  description: |
    Delta Data Carrier Detect status:
    Indicates a change in state of the EMIOUARTxDCDN input since this bit was last cleared.
    0: No change has occurred
    1: Change has occurred
ps7_uart0_Modem_sts_reg0_TERI:
  addr: 0xe0000028
  mask: 0x4
  name: TERI
  description: |
    Trailing Edge Ring Indicator status:
    Indicates that the EMIOUARTxRIN input has change from high to low state since this bit was last cleared.
    0: No trailing edge has occurred
    1: Trailing edge has occurred
ps7_uart0_Modem_sts_reg0_DDSR:
  addr: 0xe0000028
  mask: 0x2
  name: DDSR
  description: |
    Delta Data Set Ready status:
    Indicates a change in state of the EMIOUARTxDSRN input since this bit was last cleared.
    0: No change has occurred
    1: Change has occurred
ps7_uart0_Modem_sts_reg0_DCTS:
  addr: 0xe0000028
  mask: 0x1
  name: DCTS
  description: |
    Delta Clear To Send status:
    Indicates a change in state of the EMIOUARTxCTSN input since this bit was last cleared.
    0: No change has occurred
    1: Change has occurred
ps7_uart0_Channel_sts_reg0_reserved:
  addr: 0xe000002c
  mask: 0xffff8000
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_uart0_Channel_sts_reg0_TNFUL:
  addr: 0xe000002c
  mask: 0x4000
  name: TNFUL
  description: |
    Transmitter FIFO Nearly Full continuous status:
    This indicates that there is not enough space for the number of bytes currently specified in the WSIZE bits in the Mode register. If a write were currently attempted it would cause an overflow.
    Note that when WSIZE is 00, this assumes that a two byte write would be attempted and hence a single byte write is still possible without overflow by driving byte_sel low for the write.
    0: More than one byte is unused in the Tx FIFO
    1: Only one byte is free in the Tx FIFO
ps7_uart0_Channel_sts_reg0_TTRIG:
  addr: 0xe000002c
  mask: 0x2000
  name: TTRIG
  description: |
    Transmitter FIFO Trigger continuous status:
    0: Tx FIFO fill level is less than TTRIG
    1: Tx FIFO fill level is greater than or equal to TTRIG
ps7_uart0_Channel_sts_reg0_FDELT:
  addr: 0xe000002c
  mask: 0x1000
  name: FDELT
  description: |
    Receiver flow delay trigger continuous status:
    0: Rx FIFO fill level is less than FDEL
    1: Rx FIFO fill level is greater than or equal to FDEL
ps7_uart0_Channel_sts_reg0_TACTIVE:
  addr: 0xe000002c
  mask: 0x800
  name: TACTIVE
  description: |
    Transmitter state machine active status:
    0: inactive state
    1: active state
ps7_uart0_Channel_sts_reg0_RACTIVE:
  addr: 0xe000002c
  mask: 0x400
  name: RACTIVE
  description: |
    Receiver state machine active status:
    0: inactive state
    1: active state
ps7_uart0_Channel_sts_reg0_reserved_DMSI:
  addr: 0xe000002c
  mask: 0x200
  name: reserved_DMSI
  description: |
    Reserved. Do not modify.
ps7_uart0_Channel_sts_reg0_reserved_TIMEOUT:
  addr: 0xe000002c
  mask: 0x100
  name: reserved_TIMEOUT
  description: |
    Reserved. Do not modify.
ps7_uart0_Channel_sts_reg0_reserved_PARE:
  addr: 0xe000002c
  mask: 0x80
  name: reserved_PARE
  description: |
    Reserved. Do not modify.
ps7_uart0_Channel_sts_reg0_reserved_FRAME:
  addr: 0xe000002c
  mask: 0x40
  name: reserved_FRAME
  description: |
    Reserved. Do not modify.
ps7_uart0_Channel_sts_reg0_reserved_ROVR:
  addr: 0xe000002c
  mask: 0x20
  name: reserved_ROVR
  description: |
    Reserved. Do not modify.
ps7_uart0_Channel_sts_reg0_TFUL:
  addr: 0xe000002c
  mask: 0x10
  name: TFUL
  description: |
    Transmitter FIFO Full continuous status:
    0: Tx FIFO is not full
    1: Tx FIFO is full
ps7_uart0_Channel_sts_reg0_TEMPTY:
  addr: 0xe000002c
  mask: 0x8
  name: TEMPTY
  description: |
    Transmitter FIFO Empty continuous status:
    0: Tx FIFO is not empty
    1: Tx FIFO is empty
ps7_uart0_Channel_sts_reg0_RFUL:
  addr: 0xe000002c
  mask: 0x4
  name: RFUL
  description: |
    Receiver FIFO Full continuous status:
    1: Rx FIFO is full
    0: Rx FIFO is not full
ps7_uart0_Channel_sts_reg0_REMPTY:
  addr: 0xe000002c
  mask: 0x2
  name: REMPTY
  description: |
    Receiver FIFO Full continuous status:
    0: Rx FIFO is not empty
    1: Rx FIFO is empty
ps7_uart0_Channel_sts_reg0_RTRIG:
  addr: 0xe000002c
  mask: 0x1
  name: RTRIG
  description: |
    Receiver FIFO Trigger continuous status:
    0: Rx FIFO fill level is less than RTRIG
    1: Rx FIFO fill level is greater than or equal to RTRIG
ps7_uart0_TX_RX_FIFO0_reserved:
  addr: 0xe0000030
  mask: 0xffffff00
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_uart0_TX_RX_FIFO0_FIFO:
  addr: 0xe0000030
  mask: 0xff
  name: FIFO
  description: |
    Operates as Tx FIFO and Rx FIFO.
ps7_uart0_Baud_rate_divider_reg0_reserved:
  addr: 0xe0000034
  mask: 0xffffff00
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_uart0_Baud_rate_divider_reg0_BDIV:
  addr: 0xe0000034
  mask: 0xff
  name: BDIV
  description: |
    Baud rate divider value:
    0 - 3: ignored
    4 - 255: Baud rate
ps7_uart0_Flow_delay_reg0_reserved:
  addr: 0xe0000038
  mask: 0xffffffc0
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_uart0_Flow_delay_reg0_FDEL:
  addr: 0xe0000038
  mask: 0x3f
  name: FDEL
  description: |
    RxFIFO trigger level for Ready To Send (RTS) output signal (EMIOUARTxRTSN) de-assertion:
    0 - 3: Flow delay triggering is disabled, since minimum 4 word hysteresis cannot be satisfied.
    4 to 65535: EMIOUARTxRTSN is driven high when Rx FIFO fill level equals FDEL
ps7_uart0_Tx_FIFO_trigger_level0_reserved:
  addr: 0xe0000044
  mask: 0xffffffc0
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_uart0_Tx_FIFO_trigger_level0_TTRIG:
  addr: 0xe0000044
  mask: 0x3f
  name: TTRIG
  description: |
    Transmitter FIFO trigger level:
    0: Disables transmitter FIFO trigger level function
    1 - 63: Trigger set when transmitter FIFO fills to TTRIG bytes
ps7_gem1_net_ctrl_reserved:
  addr: 0xe000c000
  mask: 0xfff80000
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_gem1_net_ctrl_flush_next_rx_dpram_pkt:
  addr: 0xe000c000
  mask: 0x40000
  name: flush_next_rx_dpram_pkt
  description: |
    Flush the next packet from the external RX DPRAM.
    Writing one to this bit will only have an effect if the DMA is not currently writing a packet already stored in the DPRAM to memory.
ps7_gem1_net_ctrl_tx_pfc_pri_pri_pause_frame:
  addr: 0xe000c000
  mask: 0x20000
  name: tx_pfc_pri_pri_pause_frame
  description: |
    Transmit PFC Priority Based Pause Frame. Takes the values stored in the Transmit PFC Pause Register
ps7_gem1_net_ctrl_en_pfc_pri_pause_rx:
  addr: 0xe000c000
  mask: 0x10000
  name: en_pfc_pri_pause_rx
  description: |
    Enable PFC Priority Based Pause Reception capabilities.
    Setting this bit will enable PFC negotiation and recognition of priority based pause frames.
ps7_gem1_net_ctrl_str_rx_timestamp:
  addr: 0xe000c000
  mask: 0x8000
  name: str_rx_timestamp
  description: |
    Store receive time stamp to memory. Setting this bit to one will cause the CRC of every received frame to be replaced with the value of the nanoseconds field of the 1588 timer that was captured as the receive frame passed the message time stamp point. Set to zero for normal operation.
ps7_gem1_net_ctrl_reserved_rd_snapshot:
  addr: 0xe000c000
  mask: 0x4000
  name: reserved_rd_snapshot
  description: |
    Reserved. Do not modify.
ps7_gem1_net_ctrl_reserved_take_snapshot:
  addr: 0xe000c000
  mask: 0x2000
  name: reserved_take_snapshot
  description: |
    Reserved. Do not modify.
ps7_gem1_net_ctrl_tx_zeroq_pause_frame:
  addr: 0xe000c000
  mask: 0x1000
  name: tx_zeroq_pause_frame
  description: |
    Transmit zero quantum pause frame. Writing one to this bit causes a pause frame with zero quantum to be transmitted.
ps7_gem1_net_ctrl_tx_pause_frame:
  addr: 0xe000c000
  mask: 0x800
  name: tx_pause_frame
  description: |
    Transmit pause frame - writing one to this bit causes a pause frame to be transmitted.
ps7_gem1_net_ctrl_tx_halt:
  addr: 0xe000c000
  mask: 0x400
  name: tx_halt
  description: |
    Transmit halt - writing one to this bit halts transmission as soon as any ongoing frame transmission ends.
ps7_gem1_net_ctrl_start_tx:
  addr: 0xe000c000
  mask: 0x200
  name: start_tx
  description: |
    Start transmission - writing one to this bit starts transmission.
ps7_gem1_net_ctrl_back_pressure:
  addr: 0xe000c000
  mask: 0x100
  name: back_pressure
  description: |
    Back pressure - if set in 10M or 100M half duplex mode will force collisions on all received frames.
    Ignored in gigabit half duplex mode.
ps7_gem1_net_ctrl_wren_stat_regs:
  addr: 0xe000c000
  mask: 0x80
  name: wren_stat_regs
  description: |
    Write enable for statistics registers - setting this bit to one means the statistics registers can be written for functional test purposes.
ps7_gem1_net_ctrl_incr_stat_regs:
  addr: 0xe000c000
  mask: 0x40
  name: incr_stat_regs
  description: |
    Incremental statistics registers - this bit is write only.
    Writing a one increments all the statistics registers by one for test purposes.
ps7_gem1_net_ctrl_clear_stat_regs:
  addr: 0xe000c000
  mask: 0x20
  name: clear_stat_regs
  description: |
    Clear statistics registers - this bit is write only.
    Writing a one clears the statistics registers.
ps7_gem1_net_ctrl_mgmt_port_en:
  addr: 0xe000c000
  mask: 0x10
  name: mgmt_port_en
  description: |
    Management port enable - set to one to enable the management port. When zero forces mdio to high impedance state and mdc low.
ps7_gem1_net_ctrl_tx_en:
  addr: 0xe000c000
  mask: 0x8
  name: tx_en
  description: |
    Transmit enable - when set, it enables the GEM transmitter to send data. When reset transmission will stop immediately, the transmit pipeline and control registers will be cleared and the transmit queue pointer register will reset to point to the start of the transmit descriptor list.
ps7_gem1_net_ctrl_rx_en:
  addr: 0xe000c000
  mask: 0x4
  name: rx_en
  description: |
    Receive enable - when set, it enables the GEM to receive data. When reset frame reception will stop immediately and the receive pipeline will be cleared.
    The receive queue pointer register is unaffected.
ps7_gem1_net_ctrl_loopback_local:
  addr: 0xe000c000
  mask: 0x2
  name: loopback_local
  description: |
    Loop back local - asserts the loopback_local signal to the system clock generator. Also connects txd to rxd, tx_en to rx_dv and forces full duplex mode. Bit 11 of the network configuration register must be set low to disable TBI mode when in internal loopback. rx_clk and tx_clk may malfunction as the GEM is switched into and out of internal loop back. It is important that receive and transmit circuits have already been disabled when making the switch into and out of internal loop back. Local loopback functionality isn't available in the EP107 Zynq Emulation Platform, because the clocking doesn't map well into an FPGA.
ps7_gem1_net_ctrl_reserved_loopback:
  addr: 0xe000c000
  mask: 0x1
  name: reserved_loopback
  description: |
    Reserved. Do not modify.
ps7_gem1_net_cfg_unidir_en:
  addr: 0xe000c004
  mask: 0x80000000
  name: unidir_en
  description: |
    Uni-direction-enable. When low the PCS will transmit idle symbols if the link goes down. When high the PCS can transmit frame data when the link is down.
ps7_gem1_net_cfg_ignore_ipg_rx_er:
  addr: 0xe000c004
  mask: 0x40000000
  name: ignore_ipg_rx_er
  description: |
    Ignore IPG rx_er. When set rx_er has no effect on the GEM's operation when rx_dv is low. Set this when using the RGMII wrapper in half-duplex mode.
ps7_gem1_net_cfg_rx_bad_preamble:
  addr: 0xe000c004
  mask: 0x20000000
  name: rx_bad_preamble
  description: |
    Receive bad preamble. When set frames with non-standard preamble are not rejected.
ps7_gem1_net_cfg_ipg_stretch_en:
  addr: 0xe000c004
  mask: 0x10000000
  name: ipg_stretch_en
  description: |
    IPG stretch enable - when set the transmit IPG can be increased above 96 bit times depending on the previous frame length using the IPG stretch register.
ps7_gem1_net_cfg_sgmii_en:
  addr: 0xe000c004
  mask: 0x8000000
  name: sgmii_en
  description: |
    SGMII mode enable - changes behavior of the auto-negotiation advertisement and link partner ability registers to meet the requirements of SGMII and reduces the duration of the link timer from 10 ms to 1.6 ms
ps7_gem1_net_cfg_ignore_rx_fcs:
  addr: 0xe000c004
  mask: 0x4000000
  name: ignore_rx_fcs
  description: |
    Ignore RX FCS - when set frames with FCS/CRC errors will not be rejected. FCS error statistics will still be collected for frames with bad FCS and FCS status will be recorded in frame's DMA descriptor.
    For normal operation this bit must be set to zero.
ps7_gem1_net_cfg_rx_hd_while_tx:
  addr: 0xe000c004
  mask: 0x2000000
  name: rx_hd_while_tx
  description: |
    Enable frames to be received in half-duplex mode while transmitting.
ps7_gem1_net_cfg_rx_chksum_offld_en:
  addr: 0xe000c004
  mask: 0x1000000
  name: rx_chksum_offld_en
  description: |
    Receive checksum offload enable - when set, the receive checksum engine is enabled. Frames with bad IP, TCP or UDP checksums are discarded.
ps7_gem1_net_cfg_dis_cp_pause_frame:
  addr: 0xe000c004
  mask: 0x800000
  name: dis_cp_pause_frame
  description: |
    Disable copy of pause frames - set to one to prevent valid pause frames being copied to memory. When set, pause frames are not copied to memory regardless of the state of the copy all frames bit; whether a hash match is found or whether a type ID match is identified. If a destination address match is found the pause frame will be copied to memory.
    Note that valid pause frames received will still increment pause statistics and pause the transmission of frames as required.
ps7_gem1_net_cfg_dbus_width:
  addr: 0xe000c004
  mask: 0x600000
  name: dbus_width
  description: |
    Data bus width. Only valid bus widths may be written if the system is configured to a maximum width less than 128-bits. Zynq defines gem_dma_bus_width_def as 2'b00.
    00: 32 bit AMBA AHB data bus width
    01: 64 bit AMBA AHB data bus width
    10: 128 bit AMBA AHB data bus width
    11: 128 bit AMBA AHB data bus width
ps7_gem1_net_cfg_mdc_clk_div:
  addr: 0xe000c004
  mask: 0x1c0000
  name: mdc_clk_div
  description: |
    MDC clock division - set according to cpu_1xclk speed.
    These three bits determine the number cpu_1xclk will be divided by to generate MDC. For conformance with the 802.3 specification, MDC must not exceed 2.5 MHz (MDC is only active during MDIO read and write operations).
    000: divide cpu_1xclk by 8 (cpu_1xclk up to 20 MHz)
    001: divide cpu_1xclk by 16 (cpu_1xclk up to 40 MHz)
    010: divide cpu_1xclk by 32 (cpu_1xclk up to 80 MHz)
    011: divide cpu_1xclk by 48 (cpu_1xclk up to 120MHz)
    100: divide cpu_1xclk by 64 (cpu_1xclk up to 160 MHz)
    101: divide cpu_1xclk by 96 (cpu_1xclk up to 240 MHz)
    110: divide cpu_1xclk by 128 (cpu_1xclk up to 320 MHz)
    111: divide cpu_1xclk by 224 (cpu_1xclk up to 540 MHz)
ps7_gem1_net_cfg_fcs_remove:
  addr: 0xe000c004
  mask: 0x20000
  name: fcs_remove
  description: |
    FCS remove - setting this bit will cause received frames to be written to memory without their frame check sequence (last 4 bytes). The frame length indicated will be reduced by four bytes in this mode.
ps7_gem1_net_cfg_len_err_frame_disc:
  addr: 0xe000c004
  mask: 0x10000
  name: len_err_frame_disc
  description: |
    Length field error frame discard - setting this bit causes frames with a measured length shorter than the extracted length field (as indicated by bytes 13 and 14 in a non-VLAN tagged frame) to be discarded. This only applies to frames with a length field less than 0x0600.
ps7_gem1_net_cfg_rx_buf_offset:
  addr: 0xe000c004
  mask: 0xc000
  name: rx_buf_offset
  description: |
    Receive buffer offset - indicates the number of bytes by which the received data is offset from the start of the receive buffer.
ps7_gem1_net_cfg_pause_en:
  addr: 0xe000c004
  mask: 0x2000
  name: pause_en
  description: |
    Pause enable - when set, transmission will pause if a non zero 802.3 classic pause frame is received and PFC has not been negotiated.
ps7_gem1_net_cfg_retry_test:
  addr: 0xe000c004
  mask: 0x1000
  name: retry_test
  description: |
    Retry test - must be set to zero for normal operation.
    If set to one the backoff between collisions will always be one slot time. Setting this bit to one helps test the too many retries condition. Also used in the pause frame tests to reduce the pause counter's decrement time from 512 bit times, to every rx_clk cycle.
ps7_gem1_net_cfg_pcs_sel:
  addr: 0xe000c004
  mask: 0x800
  name: pcs_sel
  description: |
    PCS select - selects between MII/GMII and TBI.
    Must be set for SGMII operation.
    0: GMII/MII interface enabled, TBI disabled
    1: TBI enabled, GMII/MII disabled
ps7_gem1_net_cfg_gige_en:
  addr: 0xe000c004
  mask: 0x400
  name: gige_en
  description: |
    Gigabit mode enable - setting this bit configures the GEM for 1000 Mbps operation.
    0: 10/100 operation using MII or TBI interface
    1: Gigabit operation using GMII or TBI interface
ps7_gem1_net_cfg_ext_addr_match_en:
  addr: 0xe000c004
  mask: 0x200
  name: ext_addr_match_en
  description: |
    External address match enable - when set the external address match interface can be used to copy frames to memory.
ps7_gem1_net_cfg_reserved_rx_1536_byte_frames:
  addr: 0xe000c004
  mask: 0x100
  name: reserved_rx_1536_byte_frames
  description: |
    Reserved. Do not modify.
ps7_gem1_net_cfg_uni_hash_en:
  addr: 0xe000c004
  mask: 0x80
  name: uni_hash_en
  description: |
    Unicast hash enable - when set, unicast frames will be accepted when the 6 bit hash function of the destination address points to a bit that is set in the hash register.
ps7_gem1_net_cfg_multi_hash_en:
  addr: 0xe000c004
  mask: 0x40
  name: multi_hash_en
  description: |
    Multicast hash enable - when set, multicast frames will be accepted when the 6 bit hash function of the destination address points to a bit that is set in the hash register.
ps7_gem1_net_cfg_no_broadcast:
  addr: 0xe000c004
  mask: 0x20
  name: no_broadcast
  description: |
    No broadcast - when set to logic one, frames addressed to the broadcast address of all ones will not be accepted.
ps7_gem1_net_cfg_copy_all:
  addr: 0xe000c004
  mask: 0x10
  name: copy_all
  description: |
    Copy all frames - when set to logic one, all valid frames will be accepted.
ps7_gem1_net_cfg_reserved_jumbo_en:
  addr: 0xe000c004
  mask: 0x8
  name: reserved_jumbo_en
  description: |
    Reserved. Do not modify.
ps7_gem1_net_cfg_disc_non_vlan:
  addr: 0xe000c004
  mask: 0x4
  name: disc_non_vlan
  description: |
    Discard non-VLAN frames - when set only VLAN tagged frames will be passed to the address matching logic.
ps7_gem1_net_cfg_full_duplex:
  addr: 0xe000c004
  mask: 0x2
  name: full_duplex
  description: |
    Full duplex - if set to logic one, the transmit block ignores the state of collision and carrier sense and allows receive while transmitting. Also controls the half-duplex pin.
ps7_gem1_net_cfg_speed:
  addr: 0xe000c004
  mask: 0x1
  name: speed
  description: |
    Speed - set to logic one to indicate 100Mbps operation, logic zero for 10Mbps. The value of this pin is reflected on the speed_mode[0] output pin.
ps7_gem1_net_status_reserved:
  addr: 0xe000c008
  mask: 0xffffff80
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_gem1_net_status_pfc_pri_pause_neg:
  addr: 0xe000c008
  mask: 0x40
  name: pfc_pri_pause_neg
  description: |
    Set when PFC Priority Based Pause has been negotiated.
ps7_gem1_net_status_pcs_autoneg_pause_tx_res:
  addr: 0xe000c008
  mask: 0x20
  name: pcs_autoneg_pause_tx_res
  description: |
    PCS auto-negotiation pause transmit resolution.
ps7_gem1_net_status_pcs_autoneg_pause_rx_res:
  addr: 0xe000c008
  mask: 0x10
  name: pcs_autoneg_pause_rx_res
  description: |
    PCS auto-negotiation pause receive resolution
ps7_gem1_net_status_pcs_autoneg_dup_res:
  addr: 0xe000c008
  mask: 0x8
  name: pcs_autoneg_dup_res
  description: |
    PCS auto-negotiation duplex resolution. Set to one if the resolution function determines that both devices are capable of full duplex operation. If zero half-duplex operation is possible as long as bit 0 (PCS link state) is also one.
ps7_gem1_net_status_phy_mgmt_idle:
  addr: 0xe000c008
  mask: 0x4
  name: phy_mgmt_idle
  description: |
    The PHY management logic is idle (i.e. has completed).
ps7_gem1_net_status_mdio_in_pin_status:
  addr: 0xe000c008
  mask: 0x2
  name: mdio_in_pin_status
  description: |
    Returns status of the mdio_in pin
ps7_gem1_net_status_pcs_link_state:
  addr: 0xe000c008
  mask: 0x1
  name: pcs_link_state
  description: |
    Returns status of PCS link state. If auto-negotiation is disabled this returns the synchronization status. If auto-negotiation is enabled it is set in the LINK_OK state as long as a compatible duplex mode is resolved, it is always set in the LINK_OK state in SGMII mode.
ps7_gem1_user_io_user_in:
  addr: 0xe000c00c
  mask: 0xffff0000
  name: user_in
  description: |
    User programmable inputs - the upper 16 bits of this register are used to monitor the state of the user inputs. A logic one read from a bit in this range will correspond to the input being in a high state. A logic zero read from a bit in this range will correspond to the input being in a low state. Any unused bits will be read as zero. Writing to any bits in this range will have no functional effect.
ps7_gem1_user_io_user_out:
  addr: 0xe000c00c
  mask: 0xffff
  name: user_out
  description: |
    User programmable outputs - the lower 16 bits of this register are used to control the state of the user outputs. A logic one written to a bit in this range will cause the corresponding output to be set high. A logic zero written to a bit in this range shall cause the corresponding output to be forced low. Any unused bits will be read as logic zero. Writing to any unused bits in this range will have no functional effect.
ps7_gem1_dma_cfg_reserved:
  addr: 0xe000c010
  mask: 0xfe000000
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_gem1_dma_cfg_disc_when_no_ahb:
  addr: 0xe000c010
  mask: 0x1000000
  name: disc_when_no_ahb
  description: |
    When set, the GEM DMA will automatically discard receive packets from the receiver packet buffer memory when no AHB resource is available.
    When low, then received packets will remain to be stored in the SRAM based packet buffer until AHB buffer resource next becomes available.
ps7_gem1_dma_cfg_ahb_mem_rx_buf_size:
  addr: 0xe000c010
  mask: 0xff0000
  name: ahb_mem_rx_buf_size
  description: |
    DMA receive buffer size in AHB system memory.
    The value defined by these bits determines the size of buffer to use in main AHB system memory when writing received data.
    The value is defined in multiples of 64 bytes such that a value of 0x01 corresponds to buffers of 64 bytes, 0x02 corresponds to 128 bytes etc.
    For example:
    0x02: 128 byte
    0x18: 1536 byte (1*max length frame/buffer)
    0xA0: 10240 byte (1*10k jumbo frame/buffer)
    Note that this value should never be written as zero.
ps7_gem1_dma_cfg_reserved_1:
  addr: 0xe000c010
  mask: 0xf000
  name: reserved_1
  description: |
    Reserved, read as zero, ignored on write.
ps7_gem1_dma_cfg_csum_gen_offload_en:
  addr: 0xe000c010
  mask: 0x800
  name: csum_gen_offload_en
  description: |
    Transmitter IP, TCP and UDP checksum generation offload enable. When set, the transmitter checksum generation engine is enabled, to calculate and substitute checksums for transmit frames. When clear, frame data is unaffected.
    If the GEM is not configured to use the DMA packet buffer, this bit is not implemented and will be treated as reserved, read as zero, ignored on write.
    Zynq uses packet buffer.
ps7_gem1_dma_cfg_tx_pktbuf_memsz_sel:
  addr: 0xe000c010
  mask: 0x400
  name: tx_pktbuf_memsz_sel
  description: |
    Transmitter packet buffer memory size select - Having this bit at zero halves the amount of memory used for the transmit packet buffer. This reduces the amount of memory used by the GEM. It is important to set this bit to one if the full configured physical memory is available. The value in brackets below represents the size that would result for the default maximum configured memory size of 4 kB.
    1: Use full configured addressable space (4 kB)
    0: Do not use top address bit (2 kB)
    If the GEM is not configured to use the DMA packet buffer, this bit is not implemented and will be treated as reserved, read as zero, ignored on write. Zynq uses packet buffer.
ps7_gem1_dma_cfg_rx_pktbuf_memsz_sel:
  addr: 0xe000c010
  mask: 0x300
  name: rx_pktbuf_memsz_sel
  description: |
    Receiver packet buffer memory size select - Having these bits at less than 11 reduces the amount of memory used for the receive packet buffer. This reduces the amount of memory used by the GEM. It is important to set these bits both to one if the full configured physical memory is available. The value in brackets below represents the size that would result for the default maximum configured memory size of 8 kBs.
    00: Do not use top three address bits (1 kB)
    01: Do not use top two address bits (2 kB)
    10: Do not use top address bit (4 kB)
    11: Use full configured addressable space (8 kB)
    If the controller is not configured to use the DMA packet buffer, these bits are not implemented and will be treated as reserved, read as zero, ignored on write. Zynq uses packet buffer.
ps7_gem1_dma_cfg_ahb_endian_swp_pkt_en:
  addr: 0xe000c010
  mask: 0x80
  name: ahb_endian_swp_pkt_en
  description: |
    AHB endian swap mode enable for packet data accesses - When set, selects swapped endianism for AHB transfers. When clear, selects little endian mode.
ps7_gem1_dma_cfg_ahb_endian_swp_mgmt_en:
  addr: 0xe000c010
  mask: 0x40
  name: ahb_endian_swp_mgmt_en
  description: |
    AHB endian swap mode enable for management descriptor accesses - When set, selects swapped endianism for AHB transfers. When clear, selects little endian mode.
ps7_gem1_dma_cfg_reserved_2:
  addr: 0xe000c010
  mask: 0x20
  name: reserved_2
  description: |
    Reserved, read as zero, ignored on write
ps7_gem1_dma_cfg_ahb_fixed_burst_len:
  addr: 0xe000c010
  mask: 0x1f
  name: ahb_fixed_burst_len
  description: |
    AHB fixed burst length for DMA data operations - Selects the burst length to attempt to use on the AHB when transferring frame data. Not used for DMA management operations and only used where space and data size allow. Otherwise SINGLE type AHB transfers are used.
    Upper bits become non-writeable if the configured DMA TX and RX FIFO sizes are smaller than required to support the selected burst size.
    One-hot priority encoding enforced automatically on register writes as follows, where 'x' represents don't care:
    00001: Always use SINGLE AHB bursts
    0001x: Always use SINGLE AHB bursts
    001xx: Attempt to use INCR4 AHB bursts (default)
    01xxx: Attempt to use INCR8 AHB bursts
    1xxxx: Attempt to use INCR16 AHB bursts
    others: reserved
ps7_gem1_tx_status_reserved:
  addr: 0xe000c014
  mask: 0xfffffe00
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_gem1_tx_status_hresp_not_ok:
  addr: 0xe000c014
  mask: 0x100
  name: hresp_not_ok
  description: |
    Hresp not OK - set when the DMA block sees hresp not OK. Cleared by writing a one to this bit.
ps7_gem1_tx_status_late_collision:
  addr: 0xe000c014
  mask: 0x80
  name: late_collision
  description: |
    Late collision occurred - only set if the condition occurs in gigabit mode, as retry is not attempted.
    Cleared by writing a one to this bit.
ps7_gem1_tx_status_tx_under_run:
  addr: 0xe000c014
  mask: 0x40
  name: tx_under_run
  description: |
    Transmit under run - this bit is set if the transmitter was forced to terminate a frame that it had already began transmitting due to further data being unavailable.
    This bit is set if a transmitter status write back has not completed when another status write back is attempted.
    When using the DMA interface configured for internal FIFO mode, this bit is also set when the transmit DMA has written the SOP data into the FIFO and either the AHB bus was not granted in time for further data, or because an AHB not OK response was returned, or because a used bit was read.
    When using the DMA interface configured for packet buffer mode, this bit will never be set.
    When using the external FIFO interface, this bit is also set when the tx_r_underflow input is asserted during a frame transfer. Cleared by writing a 1.
ps7_gem1_tx_status_tx_complete:
  addr: 0xe000c014
  mask: 0x20
  name: tx_complete
  description: |
    Transmit complete - set when a frame has been transmitted. Cleared by writing a one to this bit.
ps7_gem1_tx_status_tx_corr_ahb_err:
  addr: 0xe000c014
  mask: 0x10
  name: tx_corr_ahb_err
  description: |
    Transmit frame corruption due to AHB error - set if an error occurs whilst midway through reading transmit frame from the AHB, including HRESP errors and buffers exhausted mid frame (if the buffers run out during transmission of a frame then transmission stops, FCS shall be bad and tx_er asserted).
    Also set in DMA packet buffer mode if single frame is too large for configured packet buffer memory size.
    Cleared by writing a one to this bit.
ps7_gem1_tx_status_tx_go:
  addr: 0xe000c014
  mask: 0x8
  name: tx_go
  description: |
    Transmit go - if high transmit is active.
    When using the exposed FIFO interface, this bit represents bit 3 of the network control register.
    When using the DMA interface this bit represents the tx_go variable as specified in the transmit buffer description.
ps7_gem1_tx_status_retry_limit_exceeded:
  addr: 0xe000c014
  mask: 0x4
  name: retry_limit_exceeded
  description: |
    Retry limit exceeded - cleared by writing a one to this bit.
ps7_gem1_tx_status_collision:
  addr: 0xe000c014
  mask: 0x2
  name: collision
  description: |
    Collision occurred - set by the assertion of collision.
    Cleared by writing a one to this bit. When operating in 10/100 mode, this status indicates either a collision or a late collision. In gigabit mode, this status is not set for a late collision.
ps7_gem1_tx_status_used_bit_read:
  addr: 0xe000c014
  mask: 0x1
  name: used_bit_read
  description: |
    Used bit read - set when a transmit buffer descriptor is read with its used bit set. Cleared by writing a one to this bit.
ps7_gem1_rx_qbar_rx_q_baseaddr:
  addr: 0xe000c018
  mask: 0xfffffffc
  name: rx_q_baseaddr
  description: |
    Receive buffer queue base address - written with the
    address of the start of the receive queue.
ps7_gem1_rx_qbar_reserved:
  addr: 0xe000c018
  mask: 0x3
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem1_tx_qbar_tx_q_base_addr:
  addr: 0xe000c01c
  mask: 0xfffffffc
  name: tx_q_base_addr
  description: |
    Transmit buffer queue base address - written with the address of the start of the transmit queue.
ps7_gem1_tx_qbar_reserved:
  addr: 0xe000c01c
  mask: 0x3
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem1_rx_status_reserved:
  addr: 0xe000c020
  mask: 0xfffffff0
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem1_rx_status_hresp_not_ok:
  addr: 0xe000c020
  mask: 0x8
  name: hresp_not_ok
  description: |
    Hresp not OK - set when the DMA block sees hresp not OK. Cleared by writing a one to this bit.
ps7_gem1_rx_status_rx_overrun:
  addr: 0xe000c020
  mask: 0x4
  name: rx_overrun
  description: |
    Receive overrun - this bit is set if either the gem_dma RX FIFO or external RX FIFO were unable to store the receive frame due to a FIFO overflow, or if the receive status, reported by the gem_rx module to the gem_dma was not taken at end of frame. This bit is also set in DMA packet buffer mode if the packet buffer overflows. For DMA operation the buffer will be recovered if an overrun occurs. This bit is cleared by writing a one to it.
ps7_gem1_rx_status_frame_recd:
  addr: 0xe000c020
  mask: 0x2
  name: frame_recd
  description: |
    Frame received - one or more frames have been received and placed in memory. Cleared by writing a one to this bit.
ps7_gem1_rx_status_buffer_not_avail:
  addr: 0xe000c020
  mask: 0x1
  name: buffer_not_avail
  description: |
    Buffer not available - an attempt was made to get a new buffer and the pointer indicated that it was owned by the processor. The DMA will reread the pointer each time an end of frame is received until a valid pointer is found. This bit is set following each descriptor read attempt that fails, even if consecutive pointers are unsuccessful and software has in the mean time cleared the status flag. Cleared by writing a one to this bit.
ps7_gem1_intr_status_reserved:
  addr: 0xe000c024
  mask: 0xf8000000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem1_intr_status_tsu_sec_incr:
  addr: 0xe000c024
  mask: 0x4000000
  name: tsu_sec_incr
  description: |
    TSU seconds register increment - indicates the register has incremented.
ps7_gem1_intr_status_pdelay_resp_tx:
  addr: 0xe000c024
  mask: 0x2000000
  name: pdelay_resp_tx
  description: |
    PTP pdelay_resp frame transmitted - indicates a PTP pdelay_resp frame has been transmitted.
ps7_gem1_intr_status_pdelay_req_tx:
  addr: 0xe000c024
  mask: 0x1000000
  name: pdelay_req_tx
  description: |
    PTP pdelay_req frame transmitted - indicates a PTP pdelay_req frame has been transmitted.
ps7_gem1_intr_status_pdelay_resp_rx:
  addr: 0xe000c024
  mask: 0x800000
  name: pdelay_resp_rx
  description: |
    PTP pdelay_resp frame received - indicates a PTP pdelay_resp frame has been received.
ps7_gem1_intr_status_pdelay_req_rx:
  addr: 0xe000c024
  mask: 0x400000
  name: pdelay_req_rx
  description: |
    PTP pdelay_req frame received - indicates a PTP pdelay_req frame has been received.
ps7_gem1_intr_status_sync_tx:
  addr: 0xe000c024
  mask: 0x200000
  name: sync_tx
  description: |
    PTP sync frame transmitted - indicates a PTP sync frame has been transmitted.
ps7_gem1_intr_status_delay_req_tx:
  addr: 0xe000c024
  mask: 0x100000
  name: delay_req_tx
  description: |
    PTP delay_req frame transmitted - indicates a PTP delay_req frame has been transmitted.
ps7_gem1_intr_status_sync_rx:
  addr: 0xe000c024
  mask: 0x80000
  name: sync_rx
  description: |
    PTP sync frame received - indicates a PTP sync frame has been received.
ps7_gem1_intr_status_delay_req_rx:
  addr: 0xe000c024
  mask: 0x40000
  name: delay_req_rx
  description: |
    PTP delay_req frame received - indicates a PTP delay_req frame has been received.
ps7_gem1_intr_status_partner_pg_rx:
  addr: 0xe000c024
  mask: 0x20000
  name: partner_pg_rx
  description: |
    PCS link partner page received - set when a new base page or next page is received from the link partner. The first time this interrupt is received, it will indicate base page received and subsequent reads will indicate next pages. The next page and base page registers should only be read when this interrupt is signaled. For next pages, the link partner next page register should be read first to avoid the register being over written. This interrupt also indicates when the host should write a new page into the next page register. If further next page exchange is only required by the link partner, this register should be written with a null message page (0x2001).
ps7_gem1_intr_status_autoneg_complete:
  addr: 0xe000c024
  mask: 0x10000
  name: autoneg_complete
  description: |
    PCS auto-negotiation complete - set once the internal PCS layer has completed auto-negotiation.
ps7_gem1_intr_status_ext_intr:
  addr: 0xe000c024
  mask: 0x8000
  name: ext_intr
  description: |
    External interrupt - set when a rising edge has been detected on the ext_interrupt_in input pin.
ps7_gem1_intr_status_pause_tx:
  addr: 0xe000c024
  mask: 0x4000
  name: pause_tx
  description: |
    Pause frame transmitted - indicates a pause frame has been successfully transmitted after being initiated from the network control register or from the tx_pause control pin.
ps7_gem1_intr_status_pause_zero:
  addr: 0xe000c024
  mask: 0x2000
  name: pause_zero
  description: |
    Pause time zero - set when either the pause time register at address 0x38 decrements to zero, or when a valid pause frame is received with a zero pause quantum field.
ps7_gem1_intr_status_pause_nonzeroq_rx:
  addr: 0xe000c024
  mask: 0x1000
  name: pause_nonzeroq_rx
  description: |
    Pause frame with non-zero pause quantum received - indicates a valid pause has been received that has a non-zero pause quantum field.
ps7_gem1_intr_status_hresp_not_ok:
  addr: 0xe000c024
  mask: 0x800
  name: hresp_not_ok
  description: |
    Hresp not OK - set when the DMA block sees hresp not OK.
ps7_gem1_intr_status_rx_overrun:
  addr: 0xe000c024
  mask: 0x400
  name: rx_overrun
  description: |
    Receive overrun - set when the receive overrun status bit gets set.
ps7_gem1_intr_status_link_chng:
  addr: 0xe000c024
  mask: 0x200
  name: link_chng
  description: |
    Link change - set when the state of the link detected by the internal PCS changes state.
ps7_gem1_intr_status_reserved_1:
  addr: 0xe000c024
  mask: 0x100
  name: reserved_1
  description: |
    Reserved
ps7_gem1_intr_status_tx_complete:
  addr: 0xe000c024
  mask: 0x80
  name: tx_complete
  description: |
    Transmit complete - set when a frame has been transmitted.
ps7_gem1_intr_status_tx_corrupt_ahb_err:
  addr: 0xe000c024
  mask: 0x40
  name: tx_corrupt_ahb_err
  description: |
    Transmit frame corruption due to AHB error - set if an error occurs while midway through reading transmit frame from the AHB, including HRESP errors and buffers exhausted mid frame (if the buffers run out during transmission of a frame then transmission stops, FCS shall be bad and tx_er asserted).
    Also set in DMA packet buffer mode if single frame is too large for configured packet buffer memory size.
    Cleared on a read.
ps7_gem1_intr_status_retry_ex_late_collisn:
  addr: 0xe000c024
  mask: 0x20
  name: retry_ex_late_collisn
  description: |
    Retry limit exceeded or late collision - transmit error.
    Late collision will only cause this status bit to be set in gigabit mode (as a retry is not attempted).
ps7_gem1_intr_status_reserved_tx_underrun:
  addr: 0xe000c024
  mask: 0x10
  name: reserved_tx_underrun
  description: |
    Reserved. Do not modify.
ps7_gem1_intr_status_tx_used_read:
  addr: 0xe000c024
  mask: 0x8
  name: tx_used_read
  description: |
    TX used bit read - set when a transmit buffer descriptor is read with its used bit set.
ps7_gem1_intr_status_rx_used_read:
  addr: 0xe000c024
  mask: 0x4
  name: rx_used_read
  description: |
    RX used bit read - set when a receive buffer descriptor is read with its used bit set.
ps7_gem1_intr_status_rx_complete:
  addr: 0xe000c024
  mask: 0x2
  name: rx_complete
  description: |
    Receive complete - a frame has been stored in memory.
ps7_gem1_intr_status_mgmt_sent:
  addr: 0xe000c024
  mask: 0x1
  name: mgmt_sent
  description: |
    Management frame sent - the PHY maintenance register has completed its operation.
ps7_gem1_intr_en_reserved:
  addr: 0xe000c028
  mask: 0xf8000000
  name: reserved
  description: |
    Reserved
ps7_gem1_intr_en_tsu_sec_incr:
  addr: 0xe000c028
  mask: 0x4000000
  name: tsu_sec_incr
  description: |
    Enable TSU seconds register increment interrupt
ps7_gem1_intr_en_pdelay_resp_tx:
  addr: 0xe000c028
  mask: 0x2000000
  name: pdelay_resp_tx
  description: |
    Enable PTP pdelay_resp frame transmitted interrupt
ps7_gem1_intr_en_pdelay_req_tx:
  addr: 0xe000c028
  mask: 0x1000000
  name: pdelay_req_tx
  description: |
    Enable PTP pdelay_req frame transmitted interrupt
ps7_gem1_intr_en_pdelay_resp_rx:
  addr: 0xe000c028
  mask: 0x800000
  name: pdelay_resp_rx
  description: |
    Enable PTP pdelay_resp frame received interrupt
ps7_gem1_intr_en_pdelay_req_rx:
  addr: 0xe000c028
  mask: 0x400000
  name: pdelay_req_rx
  description: |
    Enable PTP pdelay_req frame received interrupt
ps7_gem1_intr_en_sync_tx:
  addr: 0xe000c028
  mask: 0x200000
  name: sync_tx
  description: |
    Enable PTP sync frame transmitted interrupt
ps7_gem1_intr_en_delay_req_tx:
  addr: 0xe000c028
  mask: 0x100000
  name: delay_req_tx
  description: |
    Enable PTP delay_req frame transmitted interrupt
ps7_gem1_intr_en_sync_rx:
  addr: 0xe000c028
  mask: 0x80000
  name: sync_rx
  description: |
    Enable PTP sync frame received interrupt
ps7_gem1_intr_en_delay_req_rx:
  addr: 0xe000c028
  mask: 0x40000
  name: delay_req_rx
  description: |
    Enable PTP delay_req frame received interrupt
ps7_gem1_intr_en_partner_pg_rx:
  addr: 0xe000c028
  mask: 0x20000
  name: partner_pg_rx
  description: |
    Enable PCS link partner page received interrupt
ps7_gem1_intr_en_autoneg_complete:
  addr: 0xe000c028
  mask: 0x10000
  name: autoneg_complete
  description: |
    Enable PCS auto-negotiation complete interrupt
ps7_gem1_intr_en_ext_intr:
  addr: 0xe000c028
  mask: 0x8000
  name: ext_intr
  description: |
    Enable external interrupt
ps7_gem1_intr_en_pause_tx:
  addr: 0xe000c028
  mask: 0x4000
  name: pause_tx
  description: |
    Enable pause frame transmitted interrupt
ps7_gem1_intr_en_pause_zero:
  addr: 0xe000c028
  mask: 0x2000
  name: pause_zero
  description: |
    Enable pause time zero interrupt
ps7_gem1_intr_en_pause_nonzeroq:
  addr: 0xe000c028
  mask: 0x1000
  name: pause_nonzeroq
  description: |
    Enable pause frame with non-zero pause quantum interrupt
ps7_gem1_intr_en_hresp_not_ok:
  addr: 0xe000c028
  mask: 0x800
  name: hresp_not_ok
  description: |
    Enable hresp not OK interrupt
ps7_gem1_intr_en_rx_overrun:
  addr: 0xe000c028
  mask: 0x400
  name: rx_overrun
  description: |
    Enable receive overrun interrupt
ps7_gem1_intr_en_link_chng:
  addr: 0xe000c028
  mask: 0x200
  name: link_chng
  description: |
    Enable link change interrupt
ps7_gem1_intr_en_reserved_1:
  addr: 0xe000c028
  mask: 0x100
  name: reserved_1
  description: |
    Not used
ps7_gem1_intr_en_tx_complete:
  addr: 0xe000c028
  mask: 0x80
  name: tx_complete
  description: |
    Enable transmit complete interrupt
ps7_gem1_intr_en_tx_corrupt_ahb_err:
  addr: 0xe000c028
  mask: 0x40
  name: tx_corrupt_ahb_err
  description: |
    Enable transmit frame corruption due to AHB error interrupt
ps7_gem1_intr_en_retry_ex_late_collisn:
  addr: 0xe000c028
  mask: 0x20
  name: retry_ex_late_collisn
  description: |
    Enable retry limit exceeded or late collision interrupt
ps7_gem1_intr_en_tx_underrun:
  addr: 0xe000c028
  mask: 0x10
  name: tx_underrun
  description: |
    Enable transmit buffer under run interrupt
ps7_gem1_intr_en_tx_used_read:
  addr: 0xe000c028
  mask: 0x8
  name: tx_used_read
  description: |
    Enable transmit used bit read interrupt
ps7_gem1_intr_en_rx_used_read:
  addr: 0xe000c028
  mask: 0x4
  name: rx_used_read
  description: |
    Enable receive used bit read interrupt
ps7_gem1_intr_en_rx_complete:
  addr: 0xe000c028
  mask: 0x2
  name: rx_complete
  description: |
    Enable receive complete interrupt
ps7_gem1_intr_en_mgmt_done:
  addr: 0xe000c028
  mask: 0x1
  name: mgmt_done
  description: |
    Enable management done interrupt
ps7_gem1_intr_dis_reserved:
  addr: 0xe000c02c
  mask: 0xf8000000
  name: reserved
  description: |
    Reserved
ps7_gem1_intr_dis_tsu_sec_incr:
  addr: 0xe000c02c
  mask: 0x4000000
  name: tsu_sec_incr
  description: |
    Disable TSU seconds register increment interrupt
ps7_gem1_intr_dis_pdelay_resp_tx:
  addr: 0xe000c02c
  mask: 0x2000000
  name: pdelay_resp_tx
  description: |
    Disable PTP pdelay_resp frame transmitted interrupt
ps7_gem1_intr_dis_pdelay_req_tx:
  addr: 0xe000c02c
  mask: 0x1000000
  name: pdelay_req_tx
  description: |
    Disable PTP pdelay_req frame transmitted interrupt
ps7_gem1_intr_dis_pdelay_resp_rx:
  addr: 0xe000c02c
  mask: 0x800000
  name: pdelay_resp_rx
  description: |
    Disable PTP pdelay_resp frame received interrupt
ps7_gem1_intr_dis_pdelay_req_rx:
  addr: 0xe000c02c
  mask: 0x400000
  name: pdelay_req_rx
  description: |
    Disable PTP pdelay_req frame received interrupt
ps7_gem1_intr_dis_sync_tx:
  addr: 0xe000c02c
  mask: 0x200000
  name: sync_tx
  description: |
    Disable PTP sync frame transmitted interrupt
ps7_gem1_intr_dis_delay_req_tx:
  addr: 0xe000c02c
  mask: 0x100000
  name: delay_req_tx
  description: |
    Disable PTP delay_req frame transmitted interrupt
ps7_gem1_intr_dis_sync_rx:
  addr: 0xe000c02c
  mask: 0x80000
  name: sync_rx
  description: |
    Disable PTP sync frame received interrupt
ps7_gem1_intr_dis_delay_req_rx:
  addr: 0xe000c02c
  mask: 0x40000
  name: delay_req_rx
  description: |
    Disable PTP delay_req frame received interrupt
ps7_gem1_intr_dis_partner_pg_rx:
  addr: 0xe000c02c
  mask: 0x20000
  name: partner_pg_rx
  description: |
    Disable PCS link partner page received interrupt
ps7_gem1_intr_dis_autoneg_complete:
  addr: 0xe000c02c
  mask: 0x10000
  name: autoneg_complete
  description: |
    Disable PCS auto-negotiation complete interrupt
ps7_gem1_intr_dis_ext_intr:
  addr: 0xe000c02c
  mask: 0x8000
  name: ext_intr
  description: |
    Disable external interrupt
ps7_gem1_intr_dis_pause_tx:
  addr: 0xe000c02c
  mask: 0x4000
  name: pause_tx
  description: |
    Disable pause frame transmitted interrupt
ps7_gem1_intr_dis_pause_zero:
  addr: 0xe000c02c
  mask: 0x2000
  name: pause_zero
  description: |
    Disable pause time zero interrupt
ps7_gem1_intr_dis_pause_nonzeroq:
  addr: 0xe000c02c
  mask: 0x1000
  name: pause_nonzeroq
  description: |
    Disable pause frame with non-zero pause quantum interrupt
ps7_gem1_intr_dis_hresp_not_ok:
  addr: 0xe000c02c
  mask: 0x800
  name: hresp_not_ok
  description: |
    Disable hresp not OK interrupt
ps7_gem1_intr_dis_rx_overrun:
  addr: 0xe000c02c
  mask: 0x400
  name: rx_overrun
  description: |
    Disable receive overrun interrupt
ps7_gem1_intr_dis_link_chng:
  addr: 0xe000c02c
  mask: 0x200
  name: link_chng
  description: |
    Disable link change interrupt
ps7_gem1_intr_dis_reserved_1:
  addr: 0xe000c02c
  mask: 0x100
  name: reserved_1
  description: |
    Not used
ps7_gem1_intr_dis_tx_complete:
  addr: 0xe000c02c
  mask: 0x80
  name: tx_complete
  description: |
    Disable transmit complete interrupt
ps7_gem1_intr_dis_tx_corrupt_ahb_err:
  addr: 0xe000c02c
  mask: 0x40
  name: tx_corrupt_ahb_err
  description: |
    Disable transmit frame corruption due to AHB error interrupt
ps7_gem1_intr_dis_retry_ex_late_collisn:
  addr: 0xe000c02c
  mask: 0x20
  name: retry_ex_late_collisn
  description: |
    Disable retry limit exceeded or late collision interrupt
ps7_gem1_intr_dis_tx_underrun:
  addr: 0xe000c02c
  mask: 0x10
  name: tx_underrun
  description: |
    Disable transmit buffer under run interrupt
ps7_gem1_intr_dis_tx_used_read:
  addr: 0xe000c02c
  mask: 0x8
  name: tx_used_read
  description: |
    Disable transmit used bit read interrupt
ps7_gem1_intr_dis_rx_used_read:
  addr: 0xe000c02c
  mask: 0x4
  name: rx_used_read
  description: |
    Disable receive used bit read interrupt
ps7_gem1_intr_dis_rx_complete:
  addr: 0xe000c02c
  mask: 0x2
  name: rx_complete
  description: |
    Disable receive complete interrupt
ps7_gem1_intr_dis_mgmt_done:
  addr: 0xe000c02c
  mask: 0x1
  name: mgmt_done
  description: |
    Disable management done interrupt
ps7_gem1_intr_mask_reserved:
  addr: 0xe000c030
  mask: 0xfc000000
  name: reserved
  description: |
    Reserved
ps7_gem1_intr_mask_pdelay_resp_tx:
  addr: 0xe000c030
  mask: 0x2000000
  name: pdelay_resp_tx
  description: |
    PTP pdelay_resp frame transmitted mask.
ps7_gem1_intr_mask_pdelay_req_tx:
  addr: 0xe000c030
  mask: 0x1000000
  name: pdelay_req_tx
  description: |
    PTP pdelay_req frame transmitted mask.
ps7_gem1_intr_mask_pdelay_resp_rx:
  addr: 0xe000c030
  mask: 0x800000
  name: pdelay_resp_rx
  description: |
    PTP pdelay_resp frame received mask.
ps7_gem1_intr_mask_pdelay_req_rx:
  addr: 0xe000c030
  mask: 0x400000
  name: pdelay_req_rx
  description: |
    PTP pdelay_req frame received mask.
ps7_gem1_intr_mask_sync_tx:
  addr: 0xe000c030
  mask: 0x200000
  name: sync_tx
  description: |
    PTP sync frame transmitted mask.
ps7_gem1_intr_mask_delay_req_tx:
  addr: 0xe000c030
  mask: 0x100000
  name: delay_req_tx
  description: |
    PTP delay_req frame transmitted mask.
ps7_gem1_intr_mask_sync_rx:
  addr: 0xe000c030
  mask: 0x80000
  name: sync_rx
  description: |
    PTP sync frame received mask.
ps7_gem1_intr_mask_delay_req_rx:
  addr: 0xe000c030
  mask: 0x40000
  name: delay_req_rx
  description: |
    PTP delay_req frame received mask.
ps7_gem1_intr_mask_partner_pg_rx:
  addr: 0xe000c030
  mask: 0x20000
  name: partner_pg_rx
  description: |
    PCS link partner page mask.
ps7_gem1_intr_mask_autoneg_complete:
  addr: 0xe000c030
  mask: 0x10000
  name: autoneg_complete
  description: |
    PCS auto-negotiation complete interrupt mask.
ps7_gem1_intr_mask_ext_intr:
  addr: 0xe000c030
  mask: 0x8000
  name: ext_intr
  description: |
    External interrupt mask.
ps7_gem1_intr_mask_pause_tx:
  addr: 0xe000c030
  mask: 0x4000
  name: pause_tx
  description: |
    Pause frame transmitted interrupt mask.
ps7_gem1_intr_mask_pause_zero:
  addr: 0xe000c030
  mask: 0x2000
  name: pause_zero
  description: |
    Pause time zero interrupt mask.
ps7_gem1_intr_mask_pause_nonzeroq:
  addr: 0xe000c030
  mask: 0x1000
  name: pause_nonzeroq
  description: |
    Pause frame with non-zero pause quantum interrupt mask.
ps7_gem1_intr_mask_hresp_not_ok:
  addr: 0xe000c030
  mask: 0x800
  name: hresp_not_ok
  description: |
    Hresp not OK interrupt mask.
ps7_gem1_intr_mask_rx_overrun:
  addr: 0xe000c030
  mask: 0x400
  name: rx_overrun
  description: |
    Receive overrun interrupt mask.
ps7_gem1_intr_mask_link_chng:
  addr: 0xe000c030
  mask: 0x200
  name: link_chng
  description: |
    Link change interrupt mask.
ps7_gem1_intr_mask_reserved_1:
  addr: 0xe000c030
  mask: 0x100
  name: reserved_1
  description: |
    Not used
ps7_gem1_intr_mask_tx_complete:
  addr: 0xe000c030
  mask: 0x80
  name: tx_complete
  description: |
    Transmit complete interrupt mask.
ps7_gem1_intr_mask_tx_corrupt_ahb_err:
  addr: 0xe000c030
  mask: 0x40
  name: tx_corrupt_ahb_err
  description: |
    Transmit frame corruption due to AHB error interrupt
ps7_gem1_intr_mask_retry_ex_late_collisn:
  addr: 0xe000c030
  mask: 0x20
  name: retry_ex_late_collisn
  description: |
    Retry limit exceeded or late collision (gigabit mode only)
ps7_gem1_intr_mask_tx_underrun:
  addr: 0xe000c030
  mask: 0x10
  name: tx_underrun
  description: |
    Transmit buffer under run interrupt mask.
ps7_gem1_intr_mask_tx_used_read:
  addr: 0xe000c030
  mask: 0x8
  name: tx_used_read
  description: |
    Transmit used bit read interrupt mask.
ps7_gem1_intr_mask_rx_used_read:
  addr: 0xe000c030
  mask: 0x4
  name: rx_used_read
  description: |
    Receive used bit read interrupt mask.
ps7_gem1_intr_mask_rx_complete:
  addr: 0xe000c030
  mask: 0x2
  name: rx_complete
  description: |
    Receive complete interrupt mask.
ps7_gem1_intr_mask_mgmt_done:
  addr: 0xe000c030
  mask: 0x1
  name: mgmt_done
  description: |
    Management done interrupt mask.
ps7_gem1_phy_maint_reserved:
  addr: 0xe000c034
  mask: 0x80000000
  name: reserved
  description: |
    Must be written with 0.
ps7_gem1_phy_maint_clause_22:
  addr: 0xe000c034
  mask: 0x40000000
  name: clause_22
  description: |
    Must be written to 1 for Clause 22 operation.
    Check your PHY's spec to see if it is clause 22 or clause 45 compliant.
ps7_gem1_phy_maint_operation:
  addr: 0xe000c034
  mask: 0x30000000
  name: operation
  description: |
    Operation. 10 is read. 01 is write.
ps7_gem1_phy_maint_phy_addr:
  addr: 0xe000c034
  mask: 0xf800000
  name: phy_addr
  description: |
    PHY address.
ps7_gem1_phy_maint_reg_addr:
  addr: 0xe000c034
  mask: 0x7c0000
  name: reg_addr
  description: |
    Register address - specifies the register in the PHY to access.
ps7_gem1_phy_maint_must_10:
  addr: 0xe000c034
  mask: 0x30000
  name: must_10
  description: |
    Must be written to 10.
ps7_gem1_phy_maint_data:
  addr: 0xe000c034
  mask: 0xffff
  name: data
  description: |
    For a write operation this is written with the data to be written to the PHY. After a read operation this contains the data read from the PHY.
ps7_gem1_rx_pauseq_reserved:
  addr: 0xe000c038
  mask: 0xffff0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem1_rx_pauseq_rx_pauseq:
  addr: 0xe000c038
  mask: 0xffff
  name: rx_pauseq
  description: |
    Received pause quantum - stores the current value of the received pause quantum register which is decremented every 512 bit times.
ps7_gem1_tx_pauseq_reserved:
  addr: 0xe000c03c
  mask: 0xffff0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem1_tx_pauseq_tx_pauseq:
  addr: 0xe000c03c
  mask: 0xffff
  name: tx_pauseq
  description: |
    Transmit pause quantum - written with the pause quantum value for pause frame transmission.
ps7_gem1_hash_bot_a:
  addr: 0xe000c080
  mask: 0xffffffff
  name: a
  description: |
    The first 32 bits of the hash address register.
ps7_gem1_hash_top_a:
  addr: 0xe000c084
  mask: 0xffffffff
  name: a
  description: |
    The remaining 32 bits of the hash address register.
ps7_gem1_spec_addr1_bot_a:
  addr: 0xe000c088
  mask: 0xffffffff
  name: a
  description: |
    Least significant 32 bits of the destination address, that is bits 31:0. Bit zero indicates whether the address is multicast or unicast and corresponds to the least significant bit of the first byte received.
ps7_gem1_spec_addr1_top_reserved:
  addr: 0xe000c08c
  mask: 0xffff0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write
ps7_gem1_spec_addr1_top_addr_msbs:
  addr: 0xe000c08c
  mask: 0xffff
  name: addr_msbs
  description: |
    Specific address 1. The most significant bits of the destination address, that is bits 47:32.
ps7_gem1_spec_addr2_bot_a:
  addr: 0xe000c090
  mask: 0xffffffff
  name: a
  description: |
    Least significant 32 bits of the destination address, that is bits 31:0. Bit zero indicates whether the address is multicast or unicast and corresponds to the least significant bit of the first byte received.
ps7_gem1_spec_addr2_top_reserved:
  addr: 0xe000c094
  mask: 0xffff0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write
ps7_gem1_spec_addr2_top_addr_msbs:
  addr: 0xe000c094
  mask: 0xffff
  name: addr_msbs
  description: |
    Specific address 2. The most significant bits of the destination address, that is bits 47:32.
ps7_gem1_spec_addr3_bot_a:
  addr: 0xe000c098
  mask: 0xffffffff
  name: a
  description: |
    Least significant 32 bits of the destination address, that is bits 31:0. Bit zero indicates whether the address is multicast or unicast and corresponds to the least significant bit of the first byte received.
ps7_gem1_spec_addr3_top_reserved:
  addr: 0xe000c09c
  mask: 0xffff0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write
ps7_gem1_spec_addr3_top_addr_msbs:
  addr: 0xe000c09c
  mask: 0xffff
  name: addr_msbs
  description: |
    Specific address 3. The most significant bits of the destination address, that is bits 47:32.
ps7_gem1_spec_addr4_bot_a:
  addr: 0xe000c0a0
  mask: 0xffffffff
  name: a
  description: |
    Least significant 32 bits of the destination address, that is bits 31:0. Bit zero indicates whether the address is multicast or unicast and corresponds to the least significant bit of the first byte received.
ps7_gem1_spec_addr4_top_reserved:
  addr: 0xe000c0a4
  mask: 0xffff0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write
ps7_gem1_spec_addr4_top_addr_msbs:
  addr: 0xe000c0a4
  mask: 0xffff
  name: addr_msbs
  description: |
    Specific address 4. The most significant bits of the destination address, that is bits 47:32.
ps7_gem1_type_id_match1_copy_en:
  addr: 0xe000c0a8
  mask: 0x80000000
  name: copy_en
  description: |
    Enable copying of type ID match 1 matched frames
ps7_gem1_type_id_match1_reserved:
  addr: 0xe000c0a8
  mask: 0x7fff0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write
ps7_gem1_type_id_match1_type_id_match1:
  addr: 0xe000c0a8
  mask: 0xffff
  name: type_id_match1
  description: |
    Type ID match 1. For use in comparisons with received frames type ID/length field.
ps7_gem1_type_id_match2_copy_en:
  addr: 0xe000c0ac
  mask: 0x80000000
  name: copy_en
  description: |
    Enable copying of type ID match 2 matched frames
ps7_gem1_type_id_match2_reserved:
  addr: 0xe000c0ac
  mask: 0x7fff0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write
ps7_gem1_type_id_match2_type_id_match2:
  addr: 0xe000c0ac
  mask: 0xffff
  name: type_id_match2
  description: |
    Type ID match 2. For use in comparisons with received frames type ID/length field.
ps7_gem1_type_id_match3_copy_en:
  addr: 0xe000c0b0
  mask: 0x80000000
  name: copy_en
  description: |
    Enable copying of type ID match 3 matched frames
ps7_gem1_type_id_match3_reserved:
  addr: 0xe000c0b0
  mask: 0x7fff0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write
ps7_gem1_type_id_match3_type_id_match3:
  addr: 0xe000c0b0
  mask: 0xffff
  name: type_id_match3
  description: |
    Type ID match 3. For use in comparisons with received frames type ID/length field.
ps7_gem1_type_id_match4_copy_en:
  addr: 0xe000c0b4
  mask: 0x80000000
  name: copy_en
  description: |
    Enable copying of type ID match 4 matched frames
ps7_gem1_type_id_match4_reserved:
  addr: 0xe000c0b4
  mask: 0x7fff0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write
ps7_gem1_type_id_match4_type_id_match4:
  addr: 0xe000c0b4
  mask: 0xffff
  name: type_id_match4
  description: |
    Type ID match 4. For use in comparisons with received frames type ID/length field.
ps7_gem1_wake_on_lan_reserved:
  addr: 0xe000c0b8
  mask: 0xfff00000
  name: reserved
  description: |
    Reserved - read 0, ignored when written
ps7_gem1_wake_on_lan_multi_hash_en:
  addr: 0xe000c0b8
  mask: 0x80000
  name: multi_hash_en
  description: |
    Wake on LAN multicast hash event enable. When set multicast hash events will cause the wol output to be asserted.
ps7_gem1_wake_on_lan_spec_addr_reg1_en:
  addr: 0xe000c0b8
  mask: 0x40000
  name: spec_addr_reg1_en
  description: |
    Wake on LAN specific address register 1 event enable. When set specific address 1 events will cause the wol output to be asserted.
ps7_gem1_wake_on_lan_arp_req_en:
  addr: 0xe000c0b8
  mask: 0x20000
  name: arp_req_en
  description: |
    Wake on LAN ARP request event enable. When set ARP request events will cause the wol output to be asserted.
ps7_gem1_wake_on_lan_magic_pkt_en:
  addr: 0xe000c0b8
  mask: 0x10000
  name: magic_pkt_en
  description: |
    Wake on LAN magic packet event enable. When set magic packet events will cause the wol output to be asserted.
ps7_gem1_wake_on_lan_arp_req_ip_addr:
  addr: 0xe000c0b8
  mask: 0xffff
  name: arp_req_ip_addr
  description: |
    Wake on LAN ARP request IP address. Written to define the least significant 16 bits of the target IP address that is matched to generate a Wake on LAN event. A value of zero will not generate an event, even if this is matched by the received frame.
ps7_gem1_ipg_stretch_reserved:
  addr: 0xe000c0bc
  mask: 0xffff0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem1_ipg_stretch_ipg_stretch:
  addr: 0xe000c0bc
  mask: 0xffff
  name: ipg_stretch
  description: |
    Bits 7:0 are multiplied with the previously transmitted frame length (including preamble) bits 15:8 +1 divide the frame length. If the resulting number is greater than 96 and bit 28 is set in the network configuration register then the resulting number is used for the transmit inter-packet-gap. 1 is added to bits 15:8 to prevent a divide by zero.
ps7_gem1_stacked_vlan_stacked_vlan_en:
  addr: 0xe000c0c0
  mask: 0x80000000
  name: stacked_vlan_en
  description: |
    Enable Stacked VLAN processing mode
ps7_gem1_stacked_vlan_reserved:
  addr: 0xe000c0c0
  mask: 0x7fff0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem1_stacked_vlan_user_def_vlan_type:
  addr: 0xe000c0c0
  mask: 0xffff
  name: user_def_vlan_type
  description: |
    User defined VLAN_TYPE field. When Stacked VLAN is enabled, the first VLAN tag in a received frame will only be accepted if the VLAN type field is equal to this user defined VLAN_TYPE OR equal to the standard VLAN type (0x8100). Note that the second VLAN tag of a Stacked VLAN packet will only be matched correctly if its VLAN_TYPE field equals 0x8100.
ps7_gem1_tx_pfc_pause_reserved:
  addr: 0xe000c0c4
  mask: 0xffff0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem1_tx_pfc_pause_pauseq_sel:
  addr: 0xe000c0c4
  mask: 0xff00
  name: pauseq_sel
  description: |
    If bit 17 of the network control register is written with a one then for each entry equal to zero in the Transmit PFC Pause Register[15:8], the PFC pause frame's pause quantum field associated with that entry will be taken from the transmit pause quantum register. For each entry equal to one in the Transmit PFC Pause Register [15:8], the pause quantum associated with that entry will be zero.
ps7_gem1_tx_pfc_pause_pri_en_vec_val:
  addr: 0xe000c0c4
  mask: 0xff
  name: pri_en_vec_val
  description: |
    If bit 17 of the network control register is written with a one then the priority enable vector of the PFC priority based pause frame will be set equal to the value stored in this register [7:0].
ps7_gem1_spec_addr1_mask_bot_mask_bits_bot:
  addr: 0xe000c0c8
  mask: 0xffffffff
  name: mask_bits_bot
  description: |
    Setting a bit to one masks the corresponding bit in the specific address 1 register
ps7_gem1_spec_addr1_mask_top_reserved:
  addr: 0xe000c0cc
  mask: 0xffff0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem1_spec_addr1_mask_top_mask_bits_top:
  addr: 0xe000c0cc
  mask: 0xffff
  name: mask_bits_top
  description: |
    Setting a bit to one masks the corresponding bit in the specific address 1 register
ps7_gem1_module_id_module_id:
  addr: 0xe000c0fc
  mask: 0xffff0000
  name: module_id
  description: |
    Module identification number - for the GEM, this value is fixed at 0x0002.
ps7_gem1_module_id_module_rev:
  addr: 0xe000c0fc
  mask: 0xffff
  name: module_rev
  description: |
    Module revision - fixed byte value specific to the revision of the design which is incremented after each release of the IP. Corresponds to Zynq having GEM p23.
ps7_gem1_octets_tx_bot_octets_tx_bot:
  addr: 0xe000c100
  mask: 0xffffffff
  name: octets_tx_bot
  description: |
    Transmitted octets in frame without errors [31:0].
    The number of octets transmitted in valid frames of any type. This counter is 48-bits, and is read through two registers. This count does not include octets from automatically generated pause frames.
ps7_gem1_octets_tx_top_reserved:
  addr: 0xe000c104
  mask: 0xffff0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem1_octets_tx_top_octets_tx_top:
  addr: 0xe000c104
  mask: 0xffff
  name: octets_tx_top
  description: |
    Transmitted octets in frame without errors [47:32]. The number of octets transmitted in valid frames of any type. This counter is 48-bits, and is read through two registers. This count does not include octets from automatically generated pause frames.
ps7_gem1_frames_tx_a:
  addr: 0xe000c108
  mask: 0xffffffff
  name: a
  description: |
    Frames transmitted without error. A 32 bit register counting the number of frames successfully transmitted, i.e., no under run and not too many retries. Excludes pause frames.
ps7_gem1_broadcast_frames_tx_a:
  addr: 0xe000c10c
  mask: 0xffffffff
  name: a
  description: |
    Broadcast frames transmitted without error. A 32 bit register counting the number of broadcast frames successfully transmitted without error, i.e., no under run and not too many retries. Excludes pause frames.
ps7_gem1_multi_frames_tx_a:
  addr: 0xe000c110
  mask: 0xffffffff
  name: a
  description: |
    Multicast frames transmitted without error. A 32 bit register counting the number of multicast frames successfully transmitted without error, i.e., no under run and not too many retries. Excludes pause frames.
ps7_gem1_pause_frames_tx_reserved:
  addr: 0xe000c114
  mask: 0xffff0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem1_pause_frames_tx_pause_frames_tx:
  addr: 0xe000c114
  mask: 0xffff
  name: pause_frames_tx
  description: |
    Transmitted pause frames - a 16 bit register counting the number of pause frames transmitted. Only pause frames triggered by the register interface or through the external pause pins are counted as pause frames. Pause frames received through the external FIFO interface are counted in the frames transmitted counter.
ps7_gem1_frames_64b_tx_a:
  addr: 0xe000c118
  mask: 0xffffffff
  name: a
  description: |
    64 byte frames transmitted without error. A 32 bit register counting the number of 64 byte frames successfully transmitted without error, i.e., no under run and not too many retries. Excludes pause frames.
ps7_gem1_frames_65to127b_tx_a:
  addr: 0xe000c11c
  mask: 0xffffffff
  name: a
  description: |
    65 to127 byte frames transmitted without error. A 32 bit register counting the number of 65 to127 byte frames successfully transmitted without error, i.e., no under run and not too many retries.
ps7_gem1_frames_128to255b_tx_a:
  addr: 0xe000c120
  mask: 0xffffffff
  name: a
  description: |
    128 to 255 byte frames transmitted without error. A 32 bit register counting the number of 128 to 255 byte frames successfully transmitted without error, i.e., no under run and not too many retries.
ps7_gem1_frames_256to511b_tx_a:
  addr: 0xe000c124
  mask: 0xffffffff
  name: a
  description: |
    256 to 511 byte frames transmitted without error. A 32 bit register counting the number of 256 to 511 byte frames successfully transmitted without error, i.e., no under run and not too many retries.
ps7_gem1_frames_512to1023b_tx_a:
  addr: 0xe000c128
  mask: 0xffffffff
  name: a
  description: |
    512 to 1023 byte frames transmitted without error. A 32 bit register counting the number of 512 to 1023 byte frames successfully transmitted without error, i.e., no under run and not too many retries.
ps7_gem1_frames_1024to1518b_tx_a:
  addr: 0xe000c12c
  mask: 0xffffffff
  name: a
  description: |
    1024 to 1518 byte frames transmitted without error. A 32 bit register counting the number of 1024 to 1518 byte frames successfully transmitted without error, i.e., no under run and not too many retries.
ps7_gem1_tx_under_runs_reserved:
  addr: 0xe000c134
  mask: 0xfffffc00
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem1_tx_under_runs_tx_under_runs:
  addr: 0xe000c134
  mask: 0x3ff
  name: tx_under_runs
  description: |
    Transmit under runs - a 10 bit register counting the number of frames not transmitted due to a transmit under run. If this register is incremented then no other statistics register is incremented.
ps7_gem1_single_collisn_frames_reserved:
  addr: 0xe000c138
  mask: 0xfffc0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem1_single_collisn_frames_single_collisn:
  addr: 0xe000c138
  mask: 0x3ffff
  name: single_collisn
  description: |
    Single collision frames - an 18 bit register counting the number of frames experiencing a single collision before being successfully transmitted, i.e. no under run.
ps7_gem1_multi_collisn_frames_reserved:
  addr: 0xe000c13c
  mask: 0xfffc0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem1_multi_collisn_frames_multi_collisn:
  addr: 0xe000c13c
  mask: 0x3ffff
  name: multi_collisn
  description: |
    Multiple collision frames - an 18 bit register counting the number of frames experiencing between two and fifteen collisions prior to being successfully transmitted, i.e., no under run and not too many retries.
ps7_gem1_excessive_collisns_reserved:
  addr: 0xe000c140
  mask: 0xfffffc00
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem1_excessive_collisns_excessive_collisns:
  addr: 0xe000c140
  mask: 0x3ff
  name: excessive_collisns
  description: |
    Excessive collisions - a 10 bit register counting the number of frames that failed to be transmitted because they experienced 16 collisions.
ps7_gem1_late_collisns_reserved:
  addr: 0xe000c144
  mask: 0xfffffc00
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem1_late_collisns_late_collisns:
  addr: 0xe000c144
  mask: 0x3ff
  name: late_collisns
  description: |
    Late collisions - a 10 bit register counting the number of late collision occurring after the slot time (512 bits) has expired. In 10/100 mode, late collisions are counted twice i.e., both as a collision and a late collision. In gigabit mode, a late collision causes the transmission to be aborted, thus the single and multi collision registers are not updated.
ps7_gem1_deferred_tx_frames_reserved:
  addr: 0xe000c148
  mask: 0xfffc0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem1_deferred_tx_frames_deferred_tx:
  addr: 0xe000c148
  mask: 0x3ffff
  name: deferred_tx
  description: |
    Deferred transmission frames - an 18 bit register counting the number of frames experiencing deferral due to carrier sense being active on their first attempt at transmission. Frames involved in any collision are not counted nor are frames that experienced a transmit under run.
ps7_gem1_carrier_sense_errs_reserved:
  addr: 0xe000c14c
  mask: 0xfffffc00
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem1_carrier_sense_errs_carrier_sense_errs:
  addr: 0xe000c14c
  mask: 0x3ff
  name: carrier_sense_errs
  description: |
    Carrier sense errors - a 10 bit register counting the number of frames transmitted where carrier sense was not seen during transmission or where carrier sense was deasserted after being asserted in a transmit frame without collision (no under run). Only incremented in half duplex mode. The only effect of a carrier sense error is to increment this register. The behavior of the other statistics registers is unaffected by the detection of a carrier sense error.
ps7_gem1_octets_rx_bot_octets_rx_bot:
  addr: 0xe000c150
  mask: 0xffffffff
  name: octets_rx_bot
  description: |
    Received octets in frame without errors [31:0]. The number of octets received in valid frames of any type. This counter is 48-bits and is read through two registers. This count does not include octets from pause frames, and is only incremented if the frame is successfully filtered and copied to memory.
ps7_gem1_octets_rx_top_reserved:
  addr: 0xe000c154
  mask: 0xffff0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem1_octets_rx_top_octets_rx_top:
  addr: 0xe000c154
  mask: 0xffff
  name: octets_rx_top
  description: |
    Received octets in frame without errors [47:32]. The number of octets received in valid frames of any type. This counter is 48-bits and is read through two registers. This count does not include octets from pause frames, and is only incremented if the frame is successfully filtered and copied to memory.
ps7_gem1_frames_rx_a:
  addr: 0xe000c158
  mask: 0xffffffff
  name: a
  description: |
    Frames received without error. A 32 bit register counting the number of frames successfully received. Excludes pause frames, and is only incremented if the frame is successfully filtered and copied to memory.
ps7_gem1_bdcast_fames_rx_a:
  addr: 0xe000c15c
  mask: 0xffffffff
  name: a
  description: |
    Broadcast frames received without error. A 32 bit register counting the number of broadcast frames successfully received without error. Excludes pause frames, and is only incremented if the frame is successfully filtered and copied to memory.
ps7_gem1_multi_frames_rx_a:
  addr: 0xe000c160
  mask: 0xffffffff
  name: a
  description: |
    Multicast frames received without error. A 32 bit register counting the number of multicast frames successfully received without error. Excludes pause frames, and is only incremented if the frame is successfully filtered and copied to memory.
ps7_gem1_pause_rx_reserved:
  addr: 0xe000c164
  mask: 0xffff0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem1_pause_rx_pause_rx:
  addr: 0xe000c164
  mask: 0xffff
  name: pause_rx
  description: |
    Received pause frames - a 16 bit register counting the number of pause frames received without error.
ps7_gem1_frames_64b_rx_a:
  addr: 0xe000c168
  mask: 0xffffffff
  name: a
  description: |
    64 byte frames received without error. A 32 bit register counting the number of 64 byte frames successfully received without error. Excludes pause frames, and is only incremented if the frame is successfully filtered and copied to memory.
ps7_gem1_frames_65to127b_rx_a:
  addr: 0xe000c16c
  mask: 0xffffffff
  name: a
  description: |
    65 to 127 byte frames received without error. A 32 bit register counting the number of 65 to 127 byte frames successfully received without error. Excludes pause frames, and is only incremented if the frame is successfully filtered and copied to memory.
ps7_gem1_frames_128to255b_rx_a:
  addr: 0xe000c170
  mask: 0xffffffff
  name: a
  description: |
    128 to 255 byte frames received without error. A 32 bit register counting the number of 128 to 255 byte frames successfully received without error. Excludes pause frames, and is only incremented if the frame is successfully filtered and copied to memory.
ps7_gem1_frames_256to511b_rx_a:
  addr: 0xe000c174
  mask: 0xffffffff
  name: a
  description: |
    256 to 511 byte frames received without error. A 32 bit register counting the number of 256 to 511 byte frames successfully transmitted without error. Excludes pause frames, and is only incremented if the frame is successfully filtered and copied to memory.
ps7_gem1_frames_512to1023b_rx_a:
  addr: 0xe000c178
  mask: 0xffffffff
  name: a
  description: |
    512 to 1023 byte frames received without error. A 32 bit register counting the number of 512 to 1023 byte frames successfully received without error. Excludes pause frames, and is only incremented if the frame is successfully filtered and copied to memory.
ps7_gem1_frames_1024to1518b_rx_a:
  addr: 0xe000c17c
  mask: 0xffffffff
  name: a
  description: |
    1024 to 1518 byte frames received without error. A 32 bit register counting the number of 1024 to 1518 byte frames successfully received without error. Excludes pause frames, and is only incremented if the frame is successfully filtered and copied to memory.
ps7_gem1_undersz_rx_reserved:
  addr: 0xe000c184
  mask: 0xfffffc00
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem1_undersz_rx_undersz_rx:
  addr: 0xe000c184
  mask: 0x3ff
  name: undersz_rx
  description: |
    Undersize frames received - a 10 bit register counting the number of frames received less than 64 bytes in length (10/100 mode or gigabit mode, full duplex) that do not have either a CRC error or an alignment error. In gigabit mode, half duplex, this register counts either frames not conforming to the minimum slot time of 512 bytes or frames not conforming to the minimum frame size once bursting is active.
ps7_gem1_oversz_rx_reserved:
  addr: 0xe000c188
  mask: 0xfffffc00
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem1_oversz_rx_oversz_rx:
  addr: 0xe000c188
  mask: 0x3ff
  name: oversz_rx
  description: |
    Oversize frames received - a 10 bit register counting the number of frames received exceeding 1518 bytes (1536 bytes if bit 8 is set in network configuration register) in length but do not have either a CRC error, an alignment error nor a receive symbol error.
ps7_gem1_jab_rx_reserved:
  addr: 0xe000c18c
  mask: 0xfffffc00
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem1_jab_rx_jab_rx:
  addr: 0xe000c18c
  mask: 0x3ff
  name: jab_rx
  description: |
    Jabbers received - a 10 bit register counting the number of frames received exceeding 1518 bytes (1536 if bit 8 set in network configuration register) in length and have either a CRC error, an alignment error or a receive symbol error.
ps7_gem1_fcs_errors_reserved:
  addr: 0xe000c190
  mask: 0xfffffc00
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem1_fcs_errors_fcs_errors:
  addr: 0xe000c190
  mask: 0x3ff
  name: fcs_errors
  description: |
    Frame check sequence errors - a 10 bit register counting frames that are an integral number of bytes, have bad CRC and are between 64 and 1518 bytes in length. This register is also incremented if a symbol error is detected and the frame is of valid length and has an integral number of bytes. This register is incremented for a frame with bad FCS, regardless of whether it is copied to memory due to ignore FCS mode being enabled in bit 26 of the network configuration register.H524
ps7_gem1_length_field_errors_reserved:
  addr: 0xe000c194
  mask: 0xfffffc00
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem1_length_field_errors_length_field_errors:
  addr: 0xe000c194
  mask: 0x3ff
  name: length_field_errors
  description: |
    Length field frame errors - this 10-bit register counts the number of frames received that have a measured length shorter than that extracted from the length field (bytes 13 and 14). This condition is only counted if the value of the length field is less than 0x0600, the frame is not of excessive length and checking is enabled through bit 16 of the network configuration register.
ps7_gem1_rx_symbol_errors_reserved:
  addr: 0xe000c198
  mask: 0xfffffc00
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem1_rx_symbol_errors_rx_symbol_errors:
  addr: 0xe000c198
  mask: 0x3ff
  name: rx_symbol_errors
  description: |
    Receive symbol errors - a 10-bit register counting the number of frames that had rx_er asserted during reception. For 10/100 mode symbol errors are counted regardless of frame length checks. For gigabit mode the frame must satisfy slot time requirements in order to count a symbol error. Additionally, in gigabit half duplex mode, carrier extension errors are also recorded. Receive symbol errors will also be counted as an FCS or alignment error if the frame is between 64 and 1518 bytes. If the frame is larger it will be recorded as a jabber error.
ps7_gem1_align_errors_reserved:
  addr: 0xe000c19c
  mask: 0xfffffc00
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem1_align_errors_align_errors:
  addr: 0xe000c19c
  mask: 0x3ff
  name: align_errors
  description: |
    Alignment errors - a 10 bit register counting frames that are not an integral number of bytes long and have bad CRC when their length is truncated to an integral number of bytes and are between 64 and 1518 bytes in length. This register is also incremented if a symbol error is detected and the frame is of valid length and does not have an integral number of bytes.
ps7_gem1_rx_resource_errors_reserved:
  addr: 0xe000c1a0
  mask: 0xfffc0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem1_rx_resource_errors_rx_resource_errors:
  addr: 0xe000c1a0
  mask: 0x3ffff
  name: rx_resource_errors
  description: |
    Receive resource errors - an 18 bit register counting the number of frames that were successfully received by the MAC (correct address matched frame and adequate slot time) but could not be copied to memory because no receive buffer was available. This will be either because the AHB bus was not granted in time or because a hresp not OK was returned.
ps7_gem1_rx_overrun_errors_reserved:
  addr: 0xe000c1a4
  mask: 0xfffffc00
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem1_rx_overrun_errors_rx_overrun_errors:
  addr: 0xe000c1a4
  mask: 0x3ff
  name: rx_overrun_errors
  description: |
    Receive overruns - a 10 bit register counting the number of frames that are address recognized but were not copied to memory due to a receive overrun.
ps7_gem1_ip_hdr_csum_errors_reserved:
  addr: 0xe000c1a8
  mask: 0xffffff00
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem1_ip_hdr_csum_errors_ip_hdr_csum_errors:
  addr: 0xe000c1a8
  mask: 0xff
  name: ip_hdr_csum_errors
  description: |
    0 IP header checksum errors - an 8-bit register counting the number of frames discarded due to an incorrect IP header checksum, but are between 64 and 1518 bytes and do not have a CRC error, an alignment error, nor a symbol error.
ps7_gem1_tcp_csum_errors_reserved:
  addr: 0xe000c1ac
  mask: 0xffffff00
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem1_tcp_csum_errors_tcp_csum_errors:
  addr: 0xe000c1ac
  mask: 0xff
  name: tcp_csum_errors
  description: |
    TCP checksum errors - an 8-bit register counting the number of frames discarded due to an incorrect TCP checksum, but are between 64 and 1518 bytes and do not have a CRC error, an alignment error, nor a symbol error.
ps7_gem1_udp_csum_errors_reserved:
  addr: 0xe000c1b0
  mask: 0xffffff00
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem1_udp_csum_errors_udp_csum_errors:
  addr: 0xe000c1b0
  mask: 0xff
  name: udp_csum_errors
  description: |
    UDP checksum errors - an 8-bit register counting the number of frames discarded due to an incorrect UDP checksum, but are between 64 and 1518 bytes and do not have a CRC error, an alignment error, nor a symbol error.
ps7_gem1_timer_strobe_s_a:
  addr: 0xe000c1c8
  mask: 0xffffffff
  name: a
  description: |
    The value of the Timer Seconds register captured when gem_tsu_ms and gem_tsu_inc_ctrl are zero.
ps7_gem1_timer_strobe_ns_reserved:
  addr: 0xe000c1cc
  mask: 0xc0000000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem1_timer_strobe_ns_ns_reg_val:
  addr: 0xe000c1cc
  mask: 0x3fffffff
  name: ns_reg_val
  description: |
    The value of the Timer Nanoseconds register captured when gem_tsu_ms and gem_tsu_inc_ctrl are zero.
ps7_gem1_timer_s_a:
  addr: 0xe000c1d0
  mask: 0xffffffff
  name: a
  description: |
    Timer count in seconds. This register is writeable. It increments by one when the 1588 nanoseconds counter counts to one second. It may also be incremented when the timer adjust register is written.
ps7_gem1_timer_ns_reserved:
  addr: 0xe000c1d4
  mask: 0xc0000000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem1_timer_ns_timer_ct_ns:
  addr: 0xe000c1d4
  mask: 0x3fffffff
  name: timer_ct_ns
  description: |
    Timer count in nanoseconds. This register is writeable. It can also be adjusted by writes to the 1588 timer adjust register. It increments by the value of the 1588 timer increment register each clock cycle.
ps7_gem1_timer_adjust_add_subn:
  addr: 0xe000c1d8
  mask: 0x80000000
  name: add_subn
  description: |
    Write as one to subtract from the 1588 timer. Write as zero to add to it.
ps7_gem1_timer_adjust_reserved:
  addr: 0xe000c1d8
  mask: 0x40000000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem1_timer_adjust_ns_delta:
  addr: 0xe000c1d8
  mask: 0x3fffffff
  name: ns_delta
  description: |
    The number of nanoseconds to increment or decrement the 1588 timer nanoseconds register. If necessary, the 1588 seconds register will be incremented or decremented.
ps7_gem1_timer_incr_reserved:
  addr: 0xe000c1dc
  mask: 0xff000000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem1_timer_incr_incr_b4_alt:
  addr: 0xe000c1dc
  mask: 0xff0000
  name: incr_b4_alt
  description: |
    The number of increments after which the alternative increment is used.
ps7_gem1_timer_incr_alt_ct_ns_delta:
  addr: 0xe000c1dc
  mask: 0xff00
  name: alt_ct_ns_delta
  description: |
    Alternative count of nanoseconds by which the 1588 timer nanoseconds register will be incremented each clock cycle.
ps7_gem1_timer_incr_ns_delta:
  addr: 0xe000c1dc
  mask: 0xff
  name: ns_delta
  description: |
    A count of nanoseconds by which the 1588 timer nanoseconds register will be incremented each clock cycle.
ps7_gem1_ptp_tx_s_a:
  addr: 0xe000c1e0
  mask: 0xffffffff
  name: a
  description: |
    The register is updated with the value that the 1588 timer seconds register held when the SFD of a PTP transmit primary event crosses the MII interface. The actual update occurs when the GEM recognizes the frame as a PTP sync or delay_req frame. An interrupt is issued when the register is updated.
ps7_gem1_ptp_tx_ns_reserved:
  addr: 0xe000c1e4
  mask: 0xc0000000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem1_ptp_tx_ns_ns_reg_val:
  addr: 0xe000c1e4
  mask: 0x3fffffff
  name: ns_reg_val
  description: |
    The register is updated with the value that the 1588 timer nanoseconds register held when the SFD of a PTP transmit primary event crosses the MII interface. The actual update occurs when the GEM recognizes the frame as a PTP sync or delay_req frame. An interrupt is issued when the register is updated.
ps7_gem1_ptp_rx_s_a:
  addr: 0xe000c1e8
  mask: 0xffffffff
  name: a
  description: |
    The register is updated with the value that the 1588 timer seconds register held when the SFD of a PTP receive primary event crosses the MII interface. The actual update occurs when the GEM recognizes the frame as a PTP sync or delay_req frame. An interrupt is issued when the register is updated.
ps7_gem1_ptp_rx_ns_reserved:
  addr: 0xe000c1ec
  mask: 0xc0000000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem1_ptp_rx_ns_ns_reg_val:
  addr: 0xe000c1ec
  mask: 0x3fffffff
  name: ns_reg_val
  description: |
    The register is updated with the value that the 1588 timer nanoseconds register held when the SFD of a PTP receive primary event crosses the MII interface. The actual update occurs when the GEM recognizes the frame as a PTP sync or delay_req frame. An interrupt is issued when the register is updated.
ps7_gem1_ptp_peer_tx_s_a:
  addr: 0xe000c1f0
  mask: 0xffffffff
  name: a
  description: |
    The register is updated with the value that the 1588 timer seconds register held when the SFD of a PTP transmit peer event crosses the MII interface. The actual update occurs when the GEM recognizes the frame as a PTP pdealy_req or pdelay_resp frame. An interrupt is issued when the register is updated.
ps7_gem1_ptp_peer_tx_ns_reserved:
  addr: 0xe000c1f4
  mask: 0xc0000000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem1_ptp_peer_tx_ns_ns_reg_val:
  addr: 0xe000c1f4
  mask: 0x3fffffff
  name: ns_reg_val
  description: |
    The register is updated with the value that the 1588 timer nanoseconds register held when the SFD of a PTP transmit peer event crosses the MII interface. The actual update occurs when the GEM recognizes the frame as a PTP pdelay_req or pdelay_resp frame. An interrupt is issued when the register is updated.
ps7_gem1_ptp_peer_rx_s_a:
  addr: 0xe000c1f8
  mask: 0xffffffff
  name: a
  description: |
    The register is updated with the value that the 1588 timer seconds register held when the SFD of a PTP receive peer event crosses the MII interface. The actual update occurs when the GEM recognizes the frame as a PTP pdelay_req or pdelay_resp frame. An interrupt is issued when the register is updated.
ps7_gem1_ptp_peer_rx_ns_reserved:
  addr: 0xe000c1fc
  mask: 0xc0000000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem1_ptp_peer_rx_ns_ns_reg_val:
  addr: 0xe000c1fc
  mask: 0x3fffffff
  name: ns_reg_val
  description: |
    The register is updated with the value that the 1588 timer nanoseconds register held when the SFD of a PTP receive peer event crosses the MII interface. The actual update occurs when the GEM recognizes the frame as a PTP pdelay_req or pdelay_resp frame. An interrupt is issued when the register is updated.
ps7_gem1_design_cfg2_reserved:
  addr: 0xe000c284
  mask: 0xc0000000
  name: reserved
  description: |
    Reserved. Set to zero.
ps7_gem1_design_cfg2_gem_tx_pbuf_addr:
  addr: 0xe000c284
  mask: 0x3c000000
  name: gem_tx_pbuf_addr
  description: |
    Takes the value of the `gem_tx_pbuf_addr DEFINE. Max address bits for Tx packet buffer (10-bits for maximum 4 kB buffer). Buffer size for Tx packet buffer mode will be 4kB.
    This will allow one standard packet to be received while another is transferred to system memory by the DMA interface.
ps7_gem1_design_cfg2_gem_rx_pbuf_addr:
  addr: 0xe000c284
  mask: 0x3c00000
  name: gem_rx_pbuf_addr
  description: |
    Takes the value of the `gem_rx_pbuf_addr DEFINE. Max address bits for Rx packet buffer (10-bits for maximum 4 kB buffer). Buffer size for Rx packet buffer mode will be 4kB.
    This will allow one standard packet to be received while another is transferred to system memory by the DMA interface.
ps7_gem1_design_cfg2_gem_tx_pkt_buffer:
  addr: 0xe000c284
  mask: 0x200000
  name: gem_tx_pkt_buffer
  description: |
    Takes the value of the `gem_tx_pkt_buffer DEFINE. Defined for Zynq. Includes the transmitter packet buffer
ps7_gem1_design_cfg2_gem_rx_pkt_buffer:
  addr: 0xe000c284
  mask: 0x100000
  name: gem_rx_pkt_buffer
  description: |
    Takes the value of the `gem_rx_pkt_buffer DEFINE. Defined for Zynq. Includes the receiver packet buffer.
ps7_gem1_design_cfg2_gem_hprot_value:
  addr: 0xe000c284
  mask: 0xf0000
  name: gem_hprot_value
  description: |
    Takes the value of the `gem_hprot_value DEFINE. For Zynq, set the fixed AHB HPROT value used during transfers.
ps7_gem1_design_cfg2_gem_jumbo_max_length:
  addr: 0xe000c284
  mask: 0xffff
  name: gem_jumbo_max_length
  description: |
    Takes the value of the `gem_jumbo_max_length DEFINE. Maximum length of jumbo frames accepted by receiver.
    This is set to the size of the smallest of the two packet buffer, minus a margin for packet headers. However, Zynq will not support jumbo frames.
ps7_gem1_design_cfg3_gem_rx_base2_fifo_size:
  addr: 0xe000c288
  mask: 0xffff0000
  name: gem_rx_base2_fifo_size
  description: |
    Takes the value of the `gem_rx_base2_fifo_size DEFINE. Base-2 equivalent of `gem_rx_fifo_size
ps7_gem1_design_cfg3_gem_rx_fifo_size:
  addr: 0xe000c288
  mask: 0xffff
  name: gem_rx_fifo_size
  description: |
    Takes the value of the `gem_rx_fifo_size DEFINE. Set the size of the small Rx FIFO for grant latency. Extended to 16 deep to allow buffering of 64 byte maximum AHB burst size in Zynq.
ps7_gem1_design_cfg4_gem_tx_base2_fifo_size:
  addr: 0xe000c28c
  mask: 0xffff0000
  name: gem_tx_base2_fifo_size
  description: |
    Takes the value of the `gem_tx_base2_fifo_size DEFINE. Base-2 equivalent of `gem_tx_fifo_size.
ps7_gem1_design_cfg4_gem_tx_fifo_size:
  addr: 0xe000c28c
  mask: 0xffff
  name: gem_tx_fifo_size
  description: |
    Takes the value of the `gem_tx_fifo_size DEFINE. Set the size of the small TX FIFO for grant latency
ps7_gem1_design_cfg5_reserved:
  addr: 0xe000c290
  mask: 0xe0000000
  name: reserved
  description: |
    Reserved. Set to zero.
ps7_gem1_design_cfg5_gem_tsu_clk:
  addr: 0xe000c290
  mask: 0x10000000
  name: gem_tsu_clk
  description: |
    Takes the value of the `gem_tsu_clk DEFINE. Undefined in Zynq. 1588 Time Stamp Unit clock sourced from pclk rather than independent tsu_clk.
ps7_gem1_design_cfg5_gem_rx_buffer_length_def:
  addr: 0xe000c290
  mask: 0xff00000
  name: gem_rx_buffer_length_def
  description: |
    Takes the value of the `gem_rx_buffer_length_def DEFINE. Set the default buffer length used by Rx DMA to 128 bytes.
ps7_gem1_design_cfg5_gem_tx_pbuf_size_def:
  addr: 0xe000c290
  mask: 0x80000
  name: gem_tx_pbuf_size_def
  description: |
    Takes the value of the `gem_tx_pbuf_size_def DEFINE. Full 4 kB Tx packet buffer size - dedicated memory resource in Zynq.
ps7_gem1_design_cfg5_gem_rx_pbuf_size_def:
  addr: 0xe000c290
  mask: 0x60000
  name: gem_rx_pbuf_size_def
  description: |
    Takes the value of the `gem_rx_pbuf_size_def DEFINE. Full
    4 kB Rx packet buffer size - dedicated memory resource in Zynq.
ps7_gem1_design_cfg5_gem_endian_swap_def:
  addr: 0xe000c290
  mask: 0x18000
  name: gem_endian_swap_def
  description: |
    Takes the value of the `gem_endian_swap_def DEFINE. Set to big endian data, little endian management descriptors in Zynq.
ps7_gem1_design_cfg5_gem_mdc_clock_div:
  addr: 0xe000c290
  mask: 0x7000
  name: gem_mdc_clock_div
  description: |
    Takes the value of the `gem_mdc_clock_div DEFINE. Set default MDC clock divisor (can still be programmed) in Zynq.
ps7_gem1_design_cfg5_gem_dma_bus_width:
  addr: 0xe000c290
  mask: 0xc00
  name: gem_dma_bus_width
  description: |
    Takes the value of the `gem_dma_bus_width_def DEFINE. Limit to 32-bit AHB bus in Zynq.
ps7_gem1_design_cfg5_gem_phy_ident:
  addr: 0xe000c290
  mask: 0x200
  name: gem_phy_ident
  description: |
    Takes the value of the `gem_phy_ident DEFINE. Undefined in Zynq. Only used in PCS.
ps7_gem1_design_cfg5_gem_tsu:
  addr: 0xe000c290
  mask: 0x100
  name: gem_tsu
  description: |
    Takes the value of the `gem_tsu DEFINE. Defined in Zynq. Include support for 1588 Time Stamp Unit.
ps7_gem1_design_cfg5_gem_tx_fifo_cnt_width:
  addr: 0xe000c290
  mask: 0xf0
  name: gem_tx_fifo_cnt_width
  description: |
    Takes the value of the `gem_tx_fifo_cnt_width DEFINE. Width for `gem_tx_fifo_size
ps7_gem1_design_cfg5_gem_rx_fifo_cnt_width:
  addr: 0xe000c290
  mask: 0xf
  name: gem_rx_fifo_cnt_width
  description: |
    Takes the value of the `gem_rx_fifo_cnt_width DEFINE. Width for `gem_rx_fifo_size.
ps7_gem0_net_ctrl_reserved:
  addr: 0xe000b000
  mask: 0xfff80000
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_gem0_net_ctrl_flush_next_rx_dpram_pkt:
  addr: 0xe000b000
  mask: 0x40000
  name: flush_next_rx_dpram_pkt
  description: |
    Flush the next packet from the external RX DPRAM.
    Writing one to this bit will only have an effect if the DMA is not currently writing a packet already stored in the DPRAM to memory.
ps7_gem0_net_ctrl_tx_pfc_pri_pri_pause_frame:
  addr: 0xe000b000
  mask: 0x20000
  name: tx_pfc_pri_pri_pause_frame
  description: |
    Transmit PFC Priority Based Pause Frame. Takes the values stored in the Transmit PFC Pause Register
ps7_gem0_net_ctrl_en_pfc_pri_pause_rx:
  addr: 0xe000b000
  mask: 0x10000
  name: en_pfc_pri_pause_rx
  description: |
    Enable PFC Priority Based Pause Reception capabilities.
    Setting this bit will enable PFC negotiation and recognition of priority based pause frames.
ps7_gem0_net_ctrl_str_rx_timestamp:
  addr: 0xe000b000
  mask: 0x8000
  name: str_rx_timestamp
  description: |
    Store receive time stamp to memory. Setting this bit to one will cause the CRC of every received frame to be replaced with the value of the nanoseconds field of the 1588 timer that was captured as the receive frame passed the message time stamp point. Set to zero for normal operation.
ps7_gem0_net_ctrl_reserved_rd_snapshot:
  addr: 0xe000b000
  mask: 0x4000
  name: reserved_rd_snapshot
  description: |
    Reserved. Do not modify.
ps7_gem0_net_ctrl_reserved_take_snapshot:
  addr: 0xe000b000
  mask: 0x2000
  name: reserved_take_snapshot
  description: |
    Reserved. Do not modify.
ps7_gem0_net_ctrl_tx_zeroq_pause_frame:
  addr: 0xe000b000
  mask: 0x1000
  name: tx_zeroq_pause_frame
  description: |
    Transmit zero quantum pause frame. Writing one to this bit causes a pause frame with zero quantum to be transmitted.
ps7_gem0_net_ctrl_tx_pause_frame:
  addr: 0xe000b000
  mask: 0x800
  name: tx_pause_frame
  description: |
    Transmit pause frame - writing one to this bit causes a pause frame to be transmitted.
ps7_gem0_net_ctrl_tx_halt:
  addr: 0xe000b000
  mask: 0x400
  name: tx_halt
  description: |
    Transmit halt - writing one to this bit halts transmission as soon as any ongoing frame transmission ends.
ps7_gem0_net_ctrl_start_tx:
  addr: 0xe000b000
  mask: 0x200
  name: start_tx
  description: |
    Start transmission - writing one to this bit starts transmission.
ps7_gem0_net_ctrl_back_pressure:
  addr: 0xe000b000
  mask: 0x100
  name: back_pressure
  description: |
    Back pressure - if set in 10M or 100M half duplex mode will force collisions on all received frames.
    Ignored in gigabit half duplex mode.
ps7_gem0_net_ctrl_wren_stat_regs:
  addr: 0xe000b000
  mask: 0x80
  name: wren_stat_regs
  description: |
    Write enable for statistics registers - setting this bit to one means the statistics registers can be written for functional test purposes.
ps7_gem0_net_ctrl_incr_stat_regs:
  addr: 0xe000b000
  mask: 0x40
  name: incr_stat_regs
  description: |
    Incremental statistics registers - this bit is write only.
    Writing a one increments all the statistics registers by one for test purposes.
ps7_gem0_net_ctrl_clear_stat_regs:
  addr: 0xe000b000
  mask: 0x20
  name: clear_stat_regs
  description: |
    Clear statistics registers - this bit is write only.
    Writing a one clears the statistics registers.
ps7_gem0_net_ctrl_mgmt_port_en:
  addr: 0xe000b000
  mask: 0x10
  name: mgmt_port_en
  description: |
    Management port enable - set to one to enable the management port. When zero forces mdio to high impedance state and mdc low.
ps7_gem0_net_ctrl_tx_en:
  addr: 0xe000b000
  mask: 0x8
  name: tx_en
  description: |
    Transmit enable - when set, it enables the GEM transmitter to send data. When reset transmission will stop immediately, the transmit pipeline and control registers will be cleared and the transmit queue pointer register will reset to point to the start of the transmit descriptor list.
ps7_gem0_net_ctrl_rx_en:
  addr: 0xe000b000
  mask: 0x4
  name: rx_en
  description: |
    Receive enable - when set, it enables the GEM to receive data. When reset frame reception will stop immediately and the receive pipeline will be cleared.
    The receive queue pointer register is unaffected.
ps7_gem0_net_ctrl_loopback_local:
  addr: 0xe000b000
  mask: 0x2
  name: loopback_local
  description: |
    Loop back local - asserts the loopback_local signal to the system clock generator. Also connects txd to rxd, tx_en to rx_dv and forces full duplex mode. Bit 11 of the network configuration register must be set low to disable TBI mode when in internal loopback. rx_clk and tx_clk may malfunction as the GEM is switched into and out of internal loop back. It is important that receive and transmit circuits have already been disabled when making the switch into and out of internal loop back. Local loopback functionality isn't available in the EP107 Zynq Emulation Platform, because the clocking doesn't map well into an FPGA.
ps7_gem0_net_ctrl_reserved_loopback:
  addr: 0xe000b000
  mask: 0x1
  name: reserved_loopback
  description: |
    Reserved. Do not modify.
ps7_gem0_net_cfg_unidir_en:
  addr: 0xe000b004
  mask: 0x80000000
  name: unidir_en
  description: |
    Uni-direction-enable. When low the PCS will transmit idle symbols if the link goes down. When high the PCS can transmit frame data when the link is down.
ps7_gem0_net_cfg_ignore_ipg_rx_er:
  addr: 0xe000b004
  mask: 0x40000000
  name: ignore_ipg_rx_er
  description: |
    Ignore IPG rx_er. When set rx_er has no effect on the GEM's operation when rx_dv is low. Set this when using the RGMII wrapper in half-duplex mode.
ps7_gem0_net_cfg_rx_bad_preamble:
  addr: 0xe000b004
  mask: 0x20000000
  name: rx_bad_preamble
  description: |
    Receive bad preamble. When set frames with non-standard preamble are not rejected.
ps7_gem0_net_cfg_ipg_stretch_en:
  addr: 0xe000b004
  mask: 0x10000000
  name: ipg_stretch_en
  description: |
    IPG stretch enable - when set the transmit IPG can be increased above 96 bit times depending on the previous frame length using the IPG stretch register.
ps7_gem0_net_cfg_sgmii_en:
  addr: 0xe000b004
  mask: 0x8000000
  name: sgmii_en
  description: |
    SGMII mode enable - changes behavior of the auto-negotiation advertisement and link partner ability registers to meet the requirements of SGMII and reduces the duration of the link timer from 10 ms to 1.6 ms
ps7_gem0_net_cfg_ignore_rx_fcs:
  addr: 0xe000b004
  mask: 0x4000000
  name: ignore_rx_fcs
  description: |
    Ignore RX FCS - when set frames with FCS/CRC errors will not be rejected. FCS error statistics will still be collected for frames with bad FCS and FCS status will be recorded in frame's DMA descriptor.
    For normal operation this bit must be set to zero.
ps7_gem0_net_cfg_rx_hd_while_tx:
  addr: 0xe000b004
  mask: 0x2000000
  name: rx_hd_while_tx
  description: |
    Enable frames to be received in half-duplex mode while transmitting.
ps7_gem0_net_cfg_rx_chksum_offld_en:
  addr: 0xe000b004
  mask: 0x1000000
  name: rx_chksum_offld_en
  description: |
    Receive checksum offload enable - when set, the receive checksum engine is enabled. Frames with bad IP, TCP or UDP checksums are discarded.
ps7_gem0_net_cfg_dis_cp_pause_frame:
  addr: 0xe000b004
  mask: 0x800000
  name: dis_cp_pause_frame
  description: |
    Disable copy of pause frames - set to one to prevent valid pause frames being copied to memory. When set, pause frames are not copied to memory regardless of the state of the copy all frames bit; whether a hash match is found or whether a type ID match is identified. If a destination address match is found the pause frame will be copied to memory.
    Note that valid pause frames received will still increment pause statistics and pause the transmission of frames as required.
ps7_gem0_net_cfg_dbus_width:
  addr: 0xe000b004
  mask: 0x600000
  name: dbus_width
  description: |
    Data bus width. Only valid bus widths may be written if the system is configured to a maximum width less than 128-bits. Zynq defines gem_dma_bus_width_def as 2'b00.
    00: 32 bit AMBA AHB data bus width
    01: 64 bit AMBA AHB data bus width
    10: 128 bit AMBA AHB data bus width
    11: 128 bit AMBA AHB data bus width
ps7_gem0_net_cfg_mdc_clk_div:
  addr: 0xe000b004
  mask: 0x1c0000
  name: mdc_clk_div
  description: |
    MDC clock division - set according to cpu_1xclk speed.
    These three bits determine the number cpu_1xclk will be divided by to generate MDC. For conformance with the 802.3 specification, MDC must not exceed 2.5 MHz (MDC is only active during MDIO read and write operations).
    000: divide cpu_1xclk by 8 (cpu_1xclk up to 20 MHz)
    001: divide cpu_1xclk by 16 (cpu_1xclk up to 40 MHz)
    010: divide cpu_1xclk by 32 (cpu_1xclk up to 80 MHz)
    011: divide cpu_1xclk by 48 (cpu_1xclk up to 120MHz)
    100: divide cpu_1xclk by 64 (cpu_1xclk up to 160 MHz)
    101: divide cpu_1xclk by 96 (cpu_1xclk up to 240 MHz)
    110: divide cpu_1xclk by 128 (cpu_1xclk up to 320 MHz)
    111: divide cpu_1xclk by 224 (cpu_1xclk up to 540 MHz)
ps7_gem0_net_cfg_fcs_remove:
  addr: 0xe000b004
  mask: 0x20000
  name: fcs_remove
  description: |
    FCS remove - setting this bit will cause received frames to be written to memory without their frame check sequence (last 4 bytes). The frame length indicated will be reduced by four bytes in this mode.
ps7_gem0_net_cfg_len_err_frame_disc:
  addr: 0xe000b004
  mask: 0x10000
  name: len_err_frame_disc
  description: |
    Length field error frame discard - setting this bit causes frames with a measured length shorter than the extracted length field (as indicated by bytes 13 and 14 in a non-VLAN tagged frame) to be discarded. This only applies to frames with a length field less than 0x0600.
ps7_gem0_net_cfg_rx_buf_offset:
  addr: 0xe000b004
  mask: 0xc000
  name: rx_buf_offset
  description: |
    Receive buffer offset - indicates the number of bytes by which the received data is offset from the start of the receive buffer.
ps7_gem0_net_cfg_pause_en:
  addr: 0xe000b004
  mask: 0x2000
  name: pause_en
  description: |
    Pause enable - when set, transmission will pause if a non zero 802.3 classic pause frame is received and PFC has not been negotiated.
ps7_gem0_net_cfg_retry_test:
  addr: 0xe000b004
  mask: 0x1000
  name: retry_test
  description: |
    Retry test - must be set to zero for normal operation.
    If set to one the backoff between collisions will always be one slot time. Setting this bit to one helps test the too many retries condition. Also used in the pause frame tests to reduce the pause counter's decrement time from 512 bit times, to every rx_clk cycle.
ps7_gem0_net_cfg_pcs_sel:
  addr: 0xe000b004
  mask: 0x800
  name: pcs_sel
  description: |
    PCS select - selects between MII/GMII and TBI.
    Must be set for SGMII operation.
    0: GMII/MII interface enabled, TBI disabled
    1: TBI enabled, GMII/MII disabled
ps7_gem0_net_cfg_gige_en:
  addr: 0xe000b004
  mask: 0x400
  name: gige_en
  description: |
    Gigabit mode enable - setting this bit configures the GEM for 1000 Mbps operation.
    0: 10/100 operation using MII or TBI interface
    1: Gigabit operation using GMII or TBI interface
ps7_gem0_net_cfg_ext_addr_match_en:
  addr: 0xe000b004
  mask: 0x200
  name: ext_addr_match_en
  description: |
    External address match enable - when set the external address match interface can be used to copy frames to memory.
ps7_gem0_net_cfg_reserved_rx_1536_byte_frames:
  addr: 0xe000b004
  mask: 0x100
  name: reserved_rx_1536_byte_frames
  description: |
    Reserved. Do not modify.
ps7_gem0_net_cfg_uni_hash_en:
  addr: 0xe000b004
  mask: 0x80
  name: uni_hash_en
  description: |
    Unicast hash enable - when set, unicast frames will be accepted when the 6 bit hash function of the destination address points to a bit that is set in the hash register.
ps7_gem0_net_cfg_multi_hash_en:
  addr: 0xe000b004
  mask: 0x40
  name: multi_hash_en
  description: |
    Multicast hash enable - when set, multicast frames will be accepted when the 6 bit hash function of the destination address points to a bit that is set in the hash register.
ps7_gem0_net_cfg_no_broadcast:
  addr: 0xe000b004
  mask: 0x20
  name: no_broadcast
  description: |
    No broadcast - when set to logic one, frames addressed to the broadcast address of all ones will not be accepted.
ps7_gem0_net_cfg_copy_all:
  addr: 0xe000b004
  mask: 0x10
  name: copy_all
  description: |
    Copy all frames - when set to logic one, all valid frames will be accepted.
ps7_gem0_net_cfg_reserved_jumbo_en:
  addr: 0xe000b004
  mask: 0x8
  name: reserved_jumbo_en
  description: |
    Reserved. Do not modify.
ps7_gem0_net_cfg_disc_non_vlan:
  addr: 0xe000b004
  mask: 0x4
  name: disc_non_vlan
  description: |
    Discard non-VLAN frames - when set only VLAN tagged frames will be passed to the address matching logic.
ps7_gem0_net_cfg_full_duplex:
  addr: 0xe000b004
  mask: 0x2
  name: full_duplex
  description: |
    Full duplex - if set to logic one, the transmit block ignores the state of collision and carrier sense and allows receive while transmitting. Also controls the half-duplex pin.
ps7_gem0_net_cfg_speed:
  addr: 0xe000b004
  mask: 0x1
  name: speed
  description: |
    Speed - set to logic one to indicate 100Mbps operation, logic zero for 10Mbps. The value of this pin is reflected on the speed_mode[0] output pin.
ps7_gem0_net_status_reserved:
  addr: 0xe000b008
  mask: 0xffffff80
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_gem0_net_status_pfc_pri_pause_neg:
  addr: 0xe000b008
  mask: 0x40
  name: pfc_pri_pause_neg
  description: |
    Set when PFC Priority Based Pause has been negotiated.
ps7_gem0_net_status_pcs_autoneg_pause_tx_res:
  addr: 0xe000b008
  mask: 0x20
  name: pcs_autoneg_pause_tx_res
  description: |
    PCS auto-negotiation pause transmit resolution.
ps7_gem0_net_status_pcs_autoneg_pause_rx_res:
  addr: 0xe000b008
  mask: 0x10
  name: pcs_autoneg_pause_rx_res
  description: |
    PCS auto-negotiation pause receive resolution
ps7_gem0_net_status_pcs_autoneg_dup_res:
  addr: 0xe000b008
  mask: 0x8
  name: pcs_autoneg_dup_res
  description: |
    PCS auto-negotiation duplex resolution. Set to one if the resolution function determines that both devices are capable of full duplex operation. If zero half-duplex operation is possible as long as bit 0 (PCS link state) is also one.
ps7_gem0_net_status_phy_mgmt_idle:
  addr: 0xe000b008
  mask: 0x4
  name: phy_mgmt_idle
  description: |
    The PHY management logic is idle (i.e. has completed).
ps7_gem0_net_status_mdio_in_pin_status:
  addr: 0xe000b008
  mask: 0x2
  name: mdio_in_pin_status
  description: |
    Returns status of the mdio_in pin
ps7_gem0_net_status_pcs_link_state:
  addr: 0xe000b008
  mask: 0x1
  name: pcs_link_state
  description: |
    Returns status of PCS link state. If auto-negotiation is disabled this returns the synchronization status. If auto-negotiation is enabled it is set in the LINK_OK state as long as a compatible duplex mode is resolved, it is always set in the LINK_OK state in SGMII mode.
ps7_gem0_user_io_user_in:
  addr: 0xe000b00c
  mask: 0xffff0000
  name: user_in
  description: |
    User programmable inputs - the upper 16 bits of this register are used to monitor the state of the user inputs. A logic one read from a bit in this range will correspond to the input being in a high state. A logic zero read from a bit in this range will correspond to the input being in a low state. Any unused bits will be read as zero. Writing to any bits in this range will have no functional effect.
ps7_gem0_user_io_user_out:
  addr: 0xe000b00c
  mask: 0xffff
  name: user_out
  description: |
    User programmable outputs - the lower 16 bits of this register are used to control the state of the user outputs. A logic one written to a bit in this range will cause the corresponding output to be set high. A logic zero written to a bit in this range shall cause the corresponding output to be forced low. Any unused bits will be read as logic zero. Writing to any unused bits in this range will have no functional effect.
ps7_gem0_dma_cfg_reserved:
  addr: 0xe000b010
  mask: 0xfe000000
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_gem0_dma_cfg_disc_when_no_ahb:
  addr: 0xe000b010
  mask: 0x1000000
  name: disc_when_no_ahb
  description: |
    When set, the GEM DMA will automatically discard receive packets from the receiver packet buffer memory when no AHB resource is available.
    When low, then received packets will remain to be stored in the SRAM based packet buffer until AHB buffer resource next becomes available.
ps7_gem0_dma_cfg_ahb_mem_rx_buf_size:
  addr: 0xe000b010
  mask: 0xff0000
  name: ahb_mem_rx_buf_size
  description: |
    DMA receive buffer size in AHB system memory.
    The value defined by these bits determines the size of buffer to use in main AHB system memory when writing received data.
    The value is defined in multiples of 64 bytes such that a value of 0x01 corresponds to buffers of 64 bytes, 0x02 corresponds to 128 bytes etc.
    For example:
    0x02: 128 byte
    0x18: 1536 byte (1*max length frame/buffer)
    0xA0: 10240 byte (1*10k jumbo frame/buffer)
    Note that this value should never be written as zero.
ps7_gem0_dma_cfg_reserved_1:
  addr: 0xe000b010
  mask: 0xf000
  name: reserved_1
  description: |
    Reserved, read as zero, ignored on write.
ps7_gem0_dma_cfg_csum_gen_offload_en:
  addr: 0xe000b010
  mask: 0x800
  name: csum_gen_offload_en
  description: |
    Transmitter IP, TCP and UDP checksum generation offload enable. When set, the transmitter checksum generation engine is enabled, to calculate and substitute checksums for transmit frames. When clear, frame data is unaffected.
    If the GEM is not configured to use the DMA packet buffer, this bit is not implemented and will be treated as reserved, read as zero, ignored on write.
    Zynq uses packet buffer.
ps7_gem0_dma_cfg_tx_pktbuf_memsz_sel:
  addr: 0xe000b010
  mask: 0x400
  name: tx_pktbuf_memsz_sel
  description: |
    Transmitter packet buffer memory size select - Having this bit at zero halves the amount of memory used for the transmit packet buffer. This reduces the amount of memory used by the GEM. It is important to set this bit to one if the full configured physical memory is available. The value in brackets below represents the size that would result for the default maximum configured memory size of 4 kB.
    1: Use full configured addressable space (4 kB)
    0: Do not use top address bit (2 kB)
    If the GEM is not configured to use the DMA packet buffer, this bit is not implemented and will be treated as reserved, read as zero, ignored on write. Zynq uses packet buffer.
ps7_gem0_dma_cfg_rx_pktbuf_memsz_sel:
  addr: 0xe000b010
  mask: 0x300
  name: rx_pktbuf_memsz_sel
  description: |
    Receiver packet buffer memory size select - Having these bits at less than 11 reduces the amount of memory used for the receive packet buffer. This reduces the amount of memory used by the GEM. It is important to set these bits both to one if the full configured physical memory is available. The value in brackets below represents the size that would result for the default maximum configured memory size of 8 kBs.
    00: Do not use top three address bits (1 kB)
    01: Do not use top two address bits (2 kB)
    10: Do not use top address bit (4 kB)
    11: Use full configured addressable space (8 kB)
    If the controller is not configured to use the DMA packet buffer, these bits are not implemented and will be treated as reserved, read as zero, ignored on write. Zynq uses packet buffer.
ps7_gem0_dma_cfg_ahb_endian_swp_pkt_en:
  addr: 0xe000b010
  mask: 0x80
  name: ahb_endian_swp_pkt_en
  description: |
    AHB endian swap mode enable for packet data accesses - When set, selects swapped endianism for AHB transfers. When clear, selects little endian mode.
ps7_gem0_dma_cfg_ahb_endian_swp_mgmt_en:
  addr: 0xe000b010
  mask: 0x40
  name: ahb_endian_swp_mgmt_en
  description: |
    AHB endian swap mode enable for management descriptor accesses - When set, selects swapped endianism for AHB transfers. When clear, selects little endian mode.
ps7_gem0_dma_cfg_reserved_2:
  addr: 0xe000b010
  mask: 0x20
  name: reserved_2
  description: |
    Reserved, read as zero, ignored on write
ps7_gem0_dma_cfg_ahb_fixed_burst_len:
  addr: 0xe000b010
  mask: 0x1f
  name: ahb_fixed_burst_len
  description: |
    AHB fixed burst length for DMA data operations - Selects the burst length to attempt to use on the AHB when transferring frame data. Not used for DMA management operations and only used where space and data size allow. Otherwise SINGLE type AHB transfers are used.
    Upper bits become non-writeable if the configured DMA TX and RX FIFO sizes are smaller than required to support the selected burst size.
    One-hot priority encoding enforced automatically on register writes as follows, where 'x' represents don't care:
    00001: Always use SINGLE AHB bursts
    0001x: Always use SINGLE AHB bursts
    001xx: Attempt to use INCR4 AHB bursts (default)
    01xxx: Attempt to use INCR8 AHB bursts
    1xxxx: Attempt to use INCR16 AHB bursts
    others: reserved
ps7_gem0_tx_status_reserved:
  addr: 0xe000b014
  mask: 0xfffffe00
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_gem0_tx_status_hresp_not_ok:
  addr: 0xe000b014
  mask: 0x100
  name: hresp_not_ok
  description: |
    Hresp not OK - set when the DMA block sees hresp not OK. Cleared by writing a one to this bit.
ps7_gem0_tx_status_late_collision:
  addr: 0xe000b014
  mask: 0x80
  name: late_collision
  description: |
    Late collision occurred - only set if the condition occurs in gigabit mode, as retry is not attempted.
    Cleared by writing a one to this bit.
ps7_gem0_tx_status_tx_under_run:
  addr: 0xe000b014
  mask: 0x40
  name: tx_under_run
  description: |
    Transmit under run - this bit is set if the transmitter was forced to terminate a frame that it had already began transmitting due to further data being unavailable.
    This bit is set if a transmitter status write back has not completed when another status write back is attempted.
    When using the DMA interface configured for internal FIFO mode, this bit is also set when the transmit DMA has written the SOP data into the FIFO and either the AHB bus was not granted in time for further data, or because an AHB not OK response was returned, or because a used bit was read.
    When using the DMA interface configured for packet buffer mode, this bit will never be set.
    When using the external FIFO interface, this bit is also set when the tx_r_underflow input is asserted during a frame transfer. Cleared by writing a 1.
ps7_gem0_tx_status_tx_complete:
  addr: 0xe000b014
  mask: 0x20
  name: tx_complete
  description: |
    Transmit complete - set when a frame has been transmitted. Cleared by writing a one to this bit.
ps7_gem0_tx_status_tx_corr_ahb_err:
  addr: 0xe000b014
  mask: 0x10
  name: tx_corr_ahb_err
  description: |
    Transmit frame corruption due to AHB error - set if an error occurs whilst midway through reading transmit frame from the AHB, including HRESP errors and buffers exhausted mid frame (if the buffers run out during transmission of a frame then transmission stops, FCS shall be bad and tx_er asserted).
    Also set in DMA packet buffer mode if single frame is too large for configured packet buffer memory size.
    Cleared by writing a one to this bit.
ps7_gem0_tx_status_tx_go:
  addr: 0xe000b014
  mask: 0x8
  name: tx_go
  description: |
    Transmit go - if high transmit is active.
    When using the exposed FIFO interface, this bit represents bit 3 of the network control register.
    When using the DMA interface this bit represents the tx_go variable as specified in the transmit buffer description.
ps7_gem0_tx_status_retry_limit_exceeded:
  addr: 0xe000b014
  mask: 0x4
  name: retry_limit_exceeded
  description: |
    Retry limit exceeded - cleared by writing a one to this bit.
ps7_gem0_tx_status_collision:
  addr: 0xe000b014
  mask: 0x2
  name: collision
  description: |
    Collision occurred - set by the assertion of collision.
    Cleared by writing a one to this bit. When operating in 10/100 mode, this status indicates either a collision or a late collision. In gigabit mode, this status is not set for a late collision.
ps7_gem0_tx_status_used_bit_read:
  addr: 0xe000b014
  mask: 0x1
  name: used_bit_read
  description: |
    Used bit read - set when a transmit buffer descriptor is read with its used bit set. Cleared by writing a one to this bit.
ps7_gem0_rx_qbar_rx_q_baseaddr:
  addr: 0xe000b018
  mask: 0xfffffffc
  name: rx_q_baseaddr
  description: |
    Receive buffer queue base address - written with the
    address of the start of the receive queue.
ps7_gem0_rx_qbar_reserved:
  addr: 0xe000b018
  mask: 0x3
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem0_tx_qbar_tx_q_base_addr:
  addr: 0xe000b01c
  mask: 0xfffffffc
  name: tx_q_base_addr
  description: |
    Transmit buffer queue base address - written with the address of the start of the transmit queue.
ps7_gem0_tx_qbar_reserved:
  addr: 0xe000b01c
  mask: 0x3
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem0_rx_status_reserved:
  addr: 0xe000b020
  mask: 0xfffffff0
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem0_rx_status_hresp_not_ok:
  addr: 0xe000b020
  mask: 0x8
  name: hresp_not_ok
  description: |
    Hresp not OK - set when the DMA block sees hresp not OK. Cleared by writing a one to this bit.
ps7_gem0_rx_status_rx_overrun:
  addr: 0xe000b020
  mask: 0x4
  name: rx_overrun
  description: |
    Receive overrun - this bit is set if either the gem_dma RX FIFO or external RX FIFO were unable to store the receive frame due to a FIFO overflow, or if the receive status, reported by the gem_rx module to the gem_dma was not taken at end of frame. This bit is also set in DMA packet buffer mode if the packet buffer overflows. For DMA operation the buffer will be recovered if an overrun occurs. This bit is cleared by writing a one to it.
ps7_gem0_rx_status_frame_recd:
  addr: 0xe000b020
  mask: 0x2
  name: frame_recd
  description: |
    Frame received - one or more frames have been received and placed in memory. Cleared by writing a one to this bit.
ps7_gem0_rx_status_buffer_not_avail:
  addr: 0xe000b020
  mask: 0x1
  name: buffer_not_avail
  description: |
    Buffer not available - an attempt was made to get a new buffer and the pointer indicated that it was owned by the processor. The DMA will reread the pointer each time an end of frame is received until a valid pointer is found. This bit is set following each descriptor read attempt that fails, even if consecutive pointers are unsuccessful and software has in the mean time cleared the status flag. Cleared by writing a one to this bit.
ps7_gem0_intr_status_reserved:
  addr: 0xe000b024
  mask: 0xf8000000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem0_intr_status_tsu_sec_incr:
  addr: 0xe000b024
  mask: 0x4000000
  name: tsu_sec_incr
  description: |
    TSU seconds register increment - indicates the register has incremented.
ps7_gem0_intr_status_pdelay_resp_tx:
  addr: 0xe000b024
  mask: 0x2000000
  name: pdelay_resp_tx
  description: |
    PTP pdelay_resp frame transmitted - indicates a PTP pdelay_resp frame has been transmitted.
ps7_gem0_intr_status_pdelay_req_tx:
  addr: 0xe000b024
  mask: 0x1000000
  name: pdelay_req_tx
  description: |
    PTP pdelay_req frame transmitted - indicates a PTP pdelay_req frame has been transmitted.
ps7_gem0_intr_status_pdelay_resp_rx:
  addr: 0xe000b024
  mask: 0x800000
  name: pdelay_resp_rx
  description: |
    PTP pdelay_resp frame received - indicates a PTP pdelay_resp frame has been received.
ps7_gem0_intr_status_pdelay_req_rx:
  addr: 0xe000b024
  mask: 0x400000
  name: pdelay_req_rx
  description: |
    PTP pdelay_req frame received - indicates a PTP pdelay_req frame has been received.
ps7_gem0_intr_status_sync_tx:
  addr: 0xe000b024
  mask: 0x200000
  name: sync_tx
  description: |
    PTP sync frame transmitted - indicates a PTP sync frame has been transmitted.
ps7_gem0_intr_status_delay_req_tx:
  addr: 0xe000b024
  mask: 0x100000
  name: delay_req_tx
  description: |
    PTP delay_req frame transmitted - indicates a PTP delay_req frame has been transmitted.
ps7_gem0_intr_status_sync_rx:
  addr: 0xe000b024
  mask: 0x80000
  name: sync_rx
  description: |
    PTP sync frame received - indicates a PTP sync frame has been received.
ps7_gem0_intr_status_delay_req_rx:
  addr: 0xe000b024
  mask: 0x40000
  name: delay_req_rx
  description: |
    PTP delay_req frame received - indicates a PTP delay_req frame has been received.
ps7_gem0_intr_status_partner_pg_rx:
  addr: 0xe000b024
  mask: 0x20000
  name: partner_pg_rx
  description: |
    PCS link partner page received - set when a new base page or next page is received from the link partner. The first time this interrupt is received, it will indicate base page received and subsequent reads will indicate next pages. The next page and base page registers should only be read when this interrupt is signaled. For next pages, the link partner next page register should be read first to avoid the register being over written. This interrupt also indicates when the host should write a new page into the next page register. If further next page exchange is only required by the link partner, this register should be written with a null message page (0x2001).
ps7_gem0_intr_status_autoneg_complete:
  addr: 0xe000b024
  mask: 0x10000
  name: autoneg_complete
  description: |
    PCS auto-negotiation complete - set once the internal PCS layer has completed auto-negotiation.
ps7_gem0_intr_status_ext_intr:
  addr: 0xe000b024
  mask: 0x8000
  name: ext_intr
  description: |
    External interrupt - set when a rising edge has been detected on the ext_interrupt_in input pin.
ps7_gem0_intr_status_pause_tx:
  addr: 0xe000b024
  mask: 0x4000
  name: pause_tx
  description: |
    Pause frame transmitted - indicates a pause frame has been successfully transmitted after being initiated from the network control register or from the tx_pause control pin.
ps7_gem0_intr_status_pause_zero:
  addr: 0xe000b024
  mask: 0x2000
  name: pause_zero
  description: |
    Pause time zero - set when either the pause time register at address 0x38 decrements to zero, or when a valid pause frame is received with a zero pause quantum field.
ps7_gem0_intr_status_pause_nonzeroq_rx:
  addr: 0xe000b024
  mask: 0x1000
  name: pause_nonzeroq_rx
  description: |
    Pause frame with non-zero pause quantum received - indicates a valid pause has been received that has a non-zero pause quantum field.
ps7_gem0_intr_status_hresp_not_ok:
  addr: 0xe000b024
  mask: 0x800
  name: hresp_not_ok
  description: |
    Hresp not OK - set when the DMA block sees hresp not OK.
ps7_gem0_intr_status_rx_overrun:
  addr: 0xe000b024
  mask: 0x400
  name: rx_overrun
  description: |
    Receive overrun - set when the receive overrun status bit gets set.
ps7_gem0_intr_status_link_chng:
  addr: 0xe000b024
  mask: 0x200
  name: link_chng
  description: |
    Link change - set when the state of the link detected by the internal PCS changes state.
ps7_gem0_intr_status_reserved_1:
  addr: 0xe000b024
  mask: 0x100
  name: reserved_1
  description: |
    Reserved
ps7_gem0_intr_status_tx_complete:
  addr: 0xe000b024
  mask: 0x80
  name: tx_complete
  description: |
    Transmit complete - set when a frame has been transmitted.
ps7_gem0_intr_status_tx_corrupt_ahb_err:
  addr: 0xe000b024
  mask: 0x40
  name: tx_corrupt_ahb_err
  description: |
    Transmit frame corruption due to AHB error - set if an error occurs while midway through reading transmit frame from the AHB, including HRESP errors and buffers exhausted mid frame (if the buffers run out during transmission of a frame then transmission stops, FCS shall be bad and tx_er asserted).
    Also set in DMA packet buffer mode if single frame is too large for configured packet buffer memory size.
    Cleared on a read.
ps7_gem0_intr_status_retry_ex_late_collisn:
  addr: 0xe000b024
  mask: 0x20
  name: retry_ex_late_collisn
  description: |
    Retry limit exceeded or late collision - transmit error.
    Late collision will only cause this status bit to be set in gigabit mode (as a retry is not attempted).
ps7_gem0_intr_status_reserved_tx_underrun:
  addr: 0xe000b024
  mask: 0x10
  name: reserved_tx_underrun
  description: |
    Reserved. Do not modify.
ps7_gem0_intr_status_tx_used_read:
  addr: 0xe000b024
  mask: 0x8
  name: tx_used_read
  description: |
    TX used bit read - set when a transmit buffer descriptor is read with its used bit set.
ps7_gem0_intr_status_rx_used_read:
  addr: 0xe000b024
  mask: 0x4
  name: rx_used_read
  description: |
    RX used bit read - set when a receive buffer descriptor is read with its used bit set.
ps7_gem0_intr_status_rx_complete:
  addr: 0xe000b024
  mask: 0x2
  name: rx_complete
  description: |
    Receive complete - a frame has been stored in memory.
ps7_gem0_intr_status_mgmt_sent:
  addr: 0xe000b024
  mask: 0x1
  name: mgmt_sent
  description: |
    Management frame sent - the PHY maintenance register has completed its operation.
ps7_gem0_intr_en_reserved:
  addr: 0xe000b028
  mask: 0xf8000000
  name: reserved
  description: |
    Reserved
ps7_gem0_intr_en_tsu_sec_incr:
  addr: 0xe000b028
  mask: 0x4000000
  name: tsu_sec_incr
  description: |
    Enable TSU seconds register increment interrupt
ps7_gem0_intr_en_pdelay_resp_tx:
  addr: 0xe000b028
  mask: 0x2000000
  name: pdelay_resp_tx
  description: |
    Enable PTP pdelay_resp frame transmitted interrupt
ps7_gem0_intr_en_pdelay_req_tx:
  addr: 0xe000b028
  mask: 0x1000000
  name: pdelay_req_tx
  description: |
    Enable PTP pdelay_req frame transmitted interrupt
ps7_gem0_intr_en_pdelay_resp_rx:
  addr: 0xe000b028
  mask: 0x800000
  name: pdelay_resp_rx
  description: |
    Enable PTP pdelay_resp frame received interrupt
ps7_gem0_intr_en_pdelay_req_rx:
  addr: 0xe000b028
  mask: 0x400000
  name: pdelay_req_rx
  description: |
    Enable PTP pdelay_req frame received interrupt
ps7_gem0_intr_en_sync_tx:
  addr: 0xe000b028
  mask: 0x200000
  name: sync_tx
  description: |
    Enable PTP sync frame transmitted interrupt
ps7_gem0_intr_en_delay_req_tx:
  addr: 0xe000b028
  mask: 0x100000
  name: delay_req_tx
  description: |
    Enable PTP delay_req frame transmitted interrupt
ps7_gem0_intr_en_sync_rx:
  addr: 0xe000b028
  mask: 0x80000
  name: sync_rx
  description: |
    Enable PTP sync frame received interrupt
ps7_gem0_intr_en_delay_req_rx:
  addr: 0xe000b028
  mask: 0x40000
  name: delay_req_rx
  description: |
    Enable PTP delay_req frame received interrupt
ps7_gem0_intr_en_partner_pg_rx:
  addr: 0xe000b028
  mask: 0x20000
  name: partner_pg_rx
  description: |
    Enable PCS link partner page received interrupt
ps7_gem0_intr_en_autoneg_complete:
  addr: 0xe000b028
  mask: 0x10000
  name: autoneg_complete
  description: |
    Enable PCS auto-negotiation complete interrupt
ps7_gem0_intr_en_ext_intr:
  addr: 0xe000b028
  mask: 0x8000
  name: ext_intr
  description: |
    Enable external interrupt
ps7_gem0_intr_en_pause_tx:
  addr: 0xe000b028
  mask: 0x4000
  name: pause_tx
  description: |
    Enable pause frame transmitted interrupt
ps7_gem0_intr_en_pause_zero:
  addr: 0xe000b028
  mask: 0x2000
  name: pause_zero
  description: |
    Enable pause time zero interrupt
ps7_gem0_intr_en_pause_nonzeroq:
  addr: 0xe000b028
  mask: 0x1000
  name: pause_nonzeroq
  description: |
    Enable pause frame with non-zero pause quantum interrupt
ps7_gem0_intr_en_hresp_not_ok:
  addr: 0xe000b028
  mask: 0x800
  name: hresp_not_ok
  description: |
    Enable hresp not OK interrupt
ps7_gem0_intr_en_rx_overrun:
  addr: 0xe000b028
  mask: 0x400
  name: rx_overrun
  description: |
    Enable receive overrun interrupt
ps7_gem0_intr_en_link_chng:
  addr: 0xe000b028
  mask: 0x200
  name: link_chng
  description: |
    Enable link change interrupt
ps7_gem0_intr_en_reserved_1:
  addr: 0xe000b028
  mask: 0x100
  name: reserved_1
  description: |
    Not used
ps7_gem0_intr_en_tx_complete:
  addr: 0xe000b028
  mask: 0x80
  name: tx_complete
  description: |
    Enable transmit complete interrupt
ps7_gem0_intr_en_tx_corrupt_ahb_err:
  addr: 0xe000b028
  mask: 0x40
  name: tx_corrupt_ahb_err
  description: |
    Enable transmit frame corruption due to AHB error interrupt
ps7_gem0_intr_en_retry_ex_late_collisn:
  addr: 0xe000b028
  mask: 0x20
  name: retry_ex_late_collisn
  description: |
    Enable retry limit exceeded or late collision interrupt
ps7_gem0_intr_en_tx_underrun:
  addr: 0xe000b028
  mask: 0x10
  name: tx_underrun
  description: |
    Enable transmit buffer under run interrupt
ps7_gem0_intr_en_tx_used_read:
  addr: 0xe000b028
  mask: 0x8
  name: tx_used_read
  description: |
    Enable transmit used bit read interrupt
ps7_gem0_intr_en_rx_used_read:
  addr: 0xe000b028
  mask: 0x4
  name: rx_used_read
  description: |
    Enable receive used bit read interrupt
ps7_gem0_intr_en_rx_complete:
  addr: 0xe000b028
  mask: 0x2
  name: rx_complete
  description: |
    Enable receive complete interrupt
ps7_gem0_intr_en_mgmt_done:
  addr: 0xe000b028
  mask: 0x1
  name: mgmt_done
  description: |
    Enable management done interrupt
ps7_gem0_intr_dis_reserved:
  addr: 0xe000b02c
  mask: 0xf8000000
  name: reserved
  description: |
    Reserved
ps7_gem0_intr_dis_tsu_sec_incr:
  addr: 0xe000b02c
  mask: 0x4000000
  name: tsu_sec_incr
  description: |
    Disable TSU seconds register increment interrupt
ps7_gem0_intr_dis_pdelay_resp_tx:
  addr: 0xe000b02c
  mask: 0x2000000
  name: pdelay_resp_tx
  description: |
    Disable PTP pdelay_resp frame transmitted interrupt
ps7_gem0_intr_dis_pdelay_req_tx:
  addr: 0xe000b02c
  mask: 0x1000000
  name: pdelay_req_tx
  description: |
    Disable PTP pdelay_req frame transmitted interrupt
ps7_gem0_intr_dis_pdelay_resp_rx:
  addr: 0xe000b02c
  mask: 0x800000
  name: pdelay_resp_rx
  description: |
    Disable PTP pdelay_resp frame received interrupt
ps7_gem0_intr_dis_pdelay_req_rx:
  addr: 0xe000b02c
  mask: 0x400000
  name: pdelay_req_rx
  description: |
    Disable PTP pdelay_req frame received interrupt
ps7_gem0_intr_dis_sync_tx:
  addr: 0xe000b02c
  mask: 0x200000
  name: sync_tx
  description: |
    Disable PTP sync frame transmitted interrupt
ps7_gem0_intr_dis_delay_req_tx:
  addr: 0xe000b02c
  mask: 0x100000
  name: delay_req_tx
  description: |
    Disable PTP delay_req frame transmitted interrupt
ps7_gem0_intr_dis_sync_rx:
  addr: 0xe000b02c
  mask: 0x80000
  name: sync_rx
  description: |
    Disable PTP sync frame received interrupt
ps7_gem0_intr_dis_delay_req_rx:
  addr: 0xe000b02c
  mask: 0x40000
  name: delay_req_rx
  description: |
    Disable PTP delay_req frame received interrupt
ps7_gem0_intr_dis_partner_pg_rx:
  addr: 0xe000b02c
  mask: 0x20000
  name: partner_pg_rx
  description: |
    Disable PCS link partner page received interrupt
ps7_gem0_intr_dis_autoneg_complete:
  addr: 0xe000b02c
  mask: 0x10000
  name: autoneg_complete
  description: |
    Disable PCS auto-negotiation complete interrupt
ps7_gem0_intr_dis_ext_intr:
  addr: 0xe000b02c
  mask: 0x8000
  name: ext_intr
  description: |
    Disable external interrupt
ps7_gem0_intr_dis_pause_tx:
  addr: 0xe000b02c
  mask: 0x4000
  name: pause_tx
  description: |
    Disable pause frame transmitted interrupt
ps7_gem0_intr_dis_pause_zero:
  addr: 0xe000b02c
  mask: 0x2000
  name: pause_zero
  description: |
    Disable pause time zero interrupt
ps7_gem0_intr_dis_pause_nonzeroq:
  addr: 0xe000b02c
  mask: 0x1000
  name: pause_nonzeroq
  description: |
    Disable pause frame with non-zero pause quantum interrupt
ps7_gem0_intr_dis_hresp_not_ok:
  addr: 0xe000b02c
  mask: 0x800
  name: hresp_not_ok
  description: |
    Disable hresp not OK interrupt
ps7_gem0_intr_dis_rx_overrun:
  addr: 0xe000b02c
  mask: 0x400
  name: rx_overrun
  description: |
    Disable receive overrun interrupt
ps7_gem0_intr_dis_link_chng:
  addr: 0xe000b02c
  mask: 0x200
  name: link_chng
  description: |
    Disable link change interrupt
ps7_gem0_intr_dis_reserved_1:
  addr: 0xe000b02c
  mask: 0x100
  name: reserved_1
  description: |
    Not used
ps7_gem0_intr_dis_tx_complete:
  addr: 0xe000b02c
  mask: 0x80
  name: tx_complete
  description: |
    Disable transmit complete interrupt
ps7_gem0_intr_dis_tx_corrupt_ahb_err:
  addr: 0xe000b02c
  mask: 0x40
  name: tx_corrupt_ahb_err
  description: |
    Disable transmit frame corruption due to AHB error interrupt
ps7_gem0_intr_dis_retry_ex_late_collisn:
  addr: 0xe000b02c
  mask: 0x20
  name: retry_ex_late_collisn
  description: |
    Disable retry limit exceeded or late collision interrupt
ps7_gem0_intr_dis_tx_underrun:
  addr: 0xe000b02c
  mask: 0x10
  name: tx_underrun
  description: |
    Disable transmit buffer under run interrupt
ps7_gem0_intr_dis_tx_used_read:
  addr: 0xe000b02c
  mask: 0x8
  name: tx_used_read
  description: |
    Disable transmit used bit read interrupt
ps7_gem0_intr_dis_rx_used_read:
  addr: 0xe000b02c
  mask: 0x4
  name: rx_used_read
  description: |
    Disable receive used bit read interrupt
ps7_gem0_intr_dis_rx_complete:
  addr: 0xe000b02c
  mask: 0x2
  name: rx_complete
  description: |
    Disable receive complete interrupt
ps7_gem0_intr_dis_mgmt_done:
  addr: 0xe000b02c
  mask: 0x1
  name: mgmt_done
  description: |
    Disable management done interrupt
ps7_gem0_intr_mask_reserved:
  addr: 0xe000b030
  mask: 0xfc000000
  name: reserved
  description: |
    Reserved
ps7_gem0_intr_mask_pdelay_resp_tx:
  addr: 0xe000b030
  mask: 0x2000000
  name: pdelay_resp_tx
  description: |
    PTP pdelay_resp frame transmitted mask.
ps7_gem0_intr_mask_pdelay_req_tx:
  addr: 0xe000b030
  mask: 0x1000000
  name: pdelay_req_tx
  description: |
    PTP pdelay_req frame transmitted mask.
ps7_gem0_intr_mask_pdelay_resp_rx:
  addr: 0xe000b030
  mask: 0x800000
  name: pdelay_resp_rx
  description: |
    PTP pdelay_resp frame received mask.
ps7_gem0_intr_mask_pdelay_req_rx:
  addr: 0xe000b030
  mask: 0x400000
  name: pdelay_req_rx
  description: |
    PTP pdelay_req frame received mask.
ps7_gem0_intr_mask_sync_tx:
  addr: 0xe000b030
  mask: 0x200000
  name: sync_tx
  description: |
    PTP sync frame transmitted mask.
ps7_gem0_intr_mask_delay_req_tx:
  addr: 0xe000b030
  mask: 0x100000
  name: delay_req_tx
  description: |
    PTP delay_req frame transmitted mask.
ps7_gem0_intr_mask_sync_rx:
  addr: 0xe000b030
  mask: 0x80000
  name: sync_rx
  description: |
    PTP sync frame received mask.
ps7_gem0_intr_mask_delay_req_rx:
  addr: 0xe000b030
  mask: 0x40000
  name: delay_req_rx
  description: |
    PTP delay_req frame received mask.
ps7_gem0_intr_mask_partner_pg_rx:
  addr: 0xe000b030
  mask: 0x20000
  name: partner_pg_rx
  description: |
    PCS link partner page mask.
ps7_gem0_intr_mask_autoneg_complete:
  addr: 0xe000b030
  mask: 0x10000
  name: autoneg_complete
  description: |
    PCS auto-negotiation complete interrupt mask.
ps7_gem0_intr_mask_ext_intr:
  addr: 0xe000b030
  mask: 0x8000
  name: ext_intr
  description: |
    External interrupt mask.
ps7_gem0_intr_mask_pause_tx:
  addr: 0xe000b030
  mask: 0x4000
  name: pause_tx
  description: |
    Pause frame transmitted interrupt mask.
ps7_gem0_intr_mask_pause_zero:
  addr: 0xe000b030
  mask: 0x2000
  name: pause_zero
  description: |
    Pause time zero interrupt mask.
ps7_gem0_intr_mask_pause_nonzeroq:
  addr: 0xe000b030
  mask: 0x1000
  name: pause_nonzeroq
  description: |
    Pause frame with non-zero pause quantum interrupt mask.
ps7_gem0_intr_mask_hresp_not_ok:
  addr: 0xe000b030
  mask: 0x800
  name: hresp_not_ok
  description: |
    Hresp not OK interrupt mask.
ps7_gem0_intr_mask_rx_overrun:
  addr: 0xe000b030
  mask: 0x400
  name: rx_overrun
  description: |
    Receive overrun interrupt mask.
ps7_gem0_intr_mask_link_chng:
  addr: 0xe000b030
  mask: 0x200
  name: link_chng
  description: |
    Link change interrupt mask.
ps7_gem0_intr_mask_reserved_1:
  addr: 0xe000b030
  mask: 0x100
  name: reserved_1
  description: |
    Not used
ps7_gem0_intr_mask_tx_complete:
  addr: 0xe000b030
  mask: 0x80
  name: tx_complete
  description: |
    Transmit complete interrupt mask.
ps7_gem0_intr_mask_tx_corrupt_ahb_err:
  addr: 0xe000b030
  mask: 0x40
  name: tx_corrupt_ahb_err
  description: |
    Transmit frame corruption due to AHB error interrupt
ps7_gem0_intr_mask_retry_ex_late_collisn:
  addr: 0xe000b030
  mask: 0x20
  name: retry_ex_late_collisn
  description: |
    Retry limit exceeded or late collision (gigabit mode only)
ps7_gem0_intr_mask_tx_underrun:
  addr: 0xe000b030
  mask: 0x10
  name: tx_underrun
  description: |
    Transmit buffer under run interrupt mask.
ps7_gem0_intr_mask_tx_used_read:
  addr: 0xe000b030
  mask: 0x8
  name: tx_used_read
  description: |
    Transmit used bit read interrupt mask.
ps7_gem0_intr_mask_rx_used_read:
  addr: 0xe000b030
  mask: 0x4
  name: rx_used_read
  description: |
    Receive used bit read interrupt mask.
ps7_gem0_intr_mask_rx_complete:
  addr: 0xe000b030
  mask: 0x2
  name: rx_complete
  description: |
    Receive complete interrupt mask.
ps7_gem0_intr_mask_mgmt_done:
  addr: 0xe000b030
  mask: 0x1
  name: mgmt_done
  description: |
    Management done interrupt mask.
ps7_gem0_phy_maint_reserved:
  addr: 0xe000b034
  mask: 0x80000000
  name: reserved
  description: |
    Must be written with 0.
ps7_gem0_phy_maint_clause_22:
  addr: 0xe000b034
  mask: 0x40000000
  name: clause_22
  description: |
    Must be written to 1 for Clause 22 operation.
    Check your PHY's spec to see if it is clause 22 or clause 45 compliant.
ps7_gem0_phy_maint_operation:
  addr: 0xe000b034
  mask: 0x30000000
  name: operation
  description: |
    Operation. 10 is read. 01 is write.
ps7_gem0_phy_maint_phy_addr:
  addr: 0xe000b034
  mask: 0xf800000
  name: phy_addr
  description: |
    PHY address.
ps7_gem0_phy_maint_reg_addr:
  addr: 0xe000b034
  mask: 0x7c0000
  name: reg_addr
  description: |
    Register address - specifies the register in the PHY to access.
ps7_gem0_phy_maint_must_10:
  addr: 0xe000b034
  mask: 0x30000
  name: must_10
  description: |
    Must be written to 10.
ps7_gem0_phy_maint_data:
  addr: 0xe000b034
  mask: 0xffff
  name: data
  description: |
    For a write operation this is written with the data to be written to the PHY. After a read operation this contains the data read from the PHY.
ps7_gem0_rx_pauseq_reserved:
  addr: 0xe000b038
  mask: 0xffff0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem0_rx_pauseq_rx_pauseq:
  addr: 0xe000b038
  mask: 0xffff
  name: rx_pauseq
  description: |
    Received pause quantum - stores the current value of the received pause quantum register which is decremented every 512 bit times.
ps7_gem0_tx_pauseq_reserved:
  addr: 0xe000b03c
  mask: 0xffff0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem0_tx_pauseq_tx_pauseq:
  addr: 0xe000b03c
  mask: 0xffff
  name: tx_pauseq
  description: |
    Transmit pause quantum - written with the pause quantum value for pause frame transmission.
ps7_gem0_hash_bot_a:
  addr: 0xe000b080
  mask: 0xffffffff
  name: a
  description: |
    The first 32 bits of the hash address register.
ps7_gem0_hash_top_a:
  addr: 0xe000b084
  mask: 0xffffffff
  name: a
  description: |
    The remaining 32 bits of the hash address register.
ps7_gem0_spec_addr1_bot_a:
  addr: 0xe000b088
  mask: 0xffffffff
  name: a
  description: |
    Least significant 32 bits of the destination address, that is bits 31:0. Bit zero indicates whether the address is multicast or unicast and corresponds to the least significant bit of the first byte received.
ps7_gem0_spec_addr1_top_reserved:
  addr: 0xe000b08c
  mask: 0xffff0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write
ps7_gem0_spec_addr1_top_addr_msbs:
  addr: 0xe000b08c
  mask: 0xffff
  name: addr_msbs
  description: |
    Specific address 1. The most significant bits of the destination address, that is bits 47:32.
ps7_gem0_spec_addr2_bot_a:
  addr: 0xe000b090
  mask: 0xffffffff
  name: a
  description: |
    Least significant 32 bits of the destination address, that is bits 31:0. Bit zero indicates whether the address is multicast or unicast and corresponds to the least significant bit of the first byte received.
ps7_gem0_spec_addr2_top_reserved:
  addr: 0xe000b094
  mask: 0xffff0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write
ps7_gem0_spec_addr2_top_addr_msbs:
  addr: 0xe000b094
  mask: 0xffff
  name: addr_msbs
  description: |
    Specific address 2. The most significant bits of the destination address, that is bits 47:32.
ps7_gem0_spec_addr3_bot_a:
  addr: 0xe000b098
  mask: 0xffffffff
  name: a
  description: |
    Least significant 32 bits of the destination address, that is bits 31:0. Bit zero indicates whether the address is multicast or unicast and corresponds to the least significant bit of the first byte received.
ps7_gem0_spec_addr3_top_reserved:
  addr: 0xe000b09c
  mask: 0xffff0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write
ps7_gem0_spec_addr3_top_addr_msbs:
  addr: 0xe000b09c
  mask: 0xffff
  name: addr_msbs
  description: |
    Specific address 3. The most significant bits of the destination address, that is bits 47:32.
ps7_gem0_spec_addr4_bot_a:
  addr: 0xe000b0a0
  mask: 0xffffffff
  name: a
  description: |
    Least significant 32 bits of the destination address, that is bits 31:0. Bit zero indicates whether the address is multicast or unicast and corresponds to the least significant bit of the first byte received.
ps7_gem0_spec_addr4_top_reserved:
  addr: 0xe000b0a4
  mask: 0xffff0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write
ps7_gem0_spec_addr4_top_addr_msbs:
  addr: 0xe000b0a4
  mask: 0xffff
  name: addr_msbs
  description: |
    Specific address 4. The most significant bits of the destination address, that is bits 47:32.
ps7_gem0_type_id_match1_copy_en:
  addr: 0xe000b0a8
  mask: 0x80000000
  name: copy_en
  description: |
    Enable copying of type ID match 1 matched frames
ps7_gem0_type_id_match1_reserved:
  addr: 0xe000b0a8
  mask: 0x7fff0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write
ps7_gem0_type_id_match1_type_id_match1:
  addr: 0xe000b0a8
  mask: 0xffff
  name: type_id_match1
  description: |
    Type ID match 1. For use in comparisons with received frames type ID/length field.
ps7_gem0_type_id_match2_copy_en:
  addr: 0xe000b0ac
  mask: 0x80000000
  name: copy_en
  description: |
    Enable copying of type ID match 2 matched frames
ps7_gem0_type_id_match2_reserved:
  addr: 0xe000b0ac
  mask: 0x7fff0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write
ps7_gem0_type_id_match2_type_id_match2:
  addr: 0xe000b0ac
  mask: 0xffff
  name: type_id_match2
  description: |
    Type ID match 2. For use in comparisons with received frames type ID/length field.
ps7_gem0_type_id_match3_copy_en:
  addr: 0xe000b0b0
  mask: 0x80000000
  name: copy_en
  description: |
    Enable copying of type ID match 3 matched frames
ps7_gem0_type_id_match3_reserved:
  addr: 0xe000b0b0
  mask: 0x7fff0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write
ps7_gem0_type_id_match3_type_id_match3:
  addr: 0xe000b0b0
  mask: 0xffff
  name: type_id_match3
  description: |
    Type ID match 3. For use in comparisons with received frames type ID/length field.
ps7_gem0_type_id_match4_copy_en:
  addr: 0xe000b0b4
  mask: 0x80000000
  name: copy_en
  description: |
    Enable copying of type ID match 4 matched frames
ps7_gem0_type_id_match4_reserved:
  addr: 0xe000b0b4
  mask: 0x7fff0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write
ps7_gem0_type_id_match4_type_id_match4:
  addr: 0xe000b0b4
  mask: 0xffff
  name: type_id_match4
  description: |
    Type ID match 4. For use in comparisons with received frames type ID/length field.
ps7_gem0_wake_on_lan_reserved:
  addr: 0xe000b0b8
  mask: 0xfff00000
  name: reserved
  description: |
    Reserved - read 0, ignored when written
ps7_gem0_wake_on_lan_multi_hash_en:
  addr: 0xe000b0b8
  mask: 0x80000
  name: multi_hash_en
  description: |
    Wake on LAN multicast hash event enable. When set multicast hash events will cause the wol output to be asserted.
ps7_gem0_wake_on_lan_spec_addr_reg1_en:
  addr: 0xe000b0b8
  mask: 0x40000
  name: spec_addr_reg1_en
  description: |
    Wake on LAN specific address register 1 event enable. When set specific address 1 events will cause the wol output to be asserted.
ps7_gem0_wake_on_lan_arp_req_en:
  addr: 0xe000b0b8
  mask: 0x20000
  name: arp_req_en
  description: |
    Wake on LAN ARP request event enable. When set ARP request events will cause the wol output to be asserted.
ps7_gem0_wake_on_lan_magic_pkt_en:
  addr: 0xe000b0b8
  mask: 0x10000
  name: magic_pkt_en
  description: |
    Wake on LAN magic packet event enable. When set magic packet events will cause the wol output to be asserted.
ps7_gem0_wake_on_lan_arp_req_ip_addr:
  addr: 0xe000b0b8
  mask: 0xffff
  name: arp_req_ip_addr
  description: |
    Wake on LAN ARP request IP address. Written to define the least significant 16 bits of the target IP address that is matched to generate a Wake on LAN event. A value of zero will not generate an event, even if this is matched by the received frame.
ps7_gem0_ipg_stretch_reserved:
  addr: 0xe000b0bc
  mask: 0xffff0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem0_ipg_stretch_ipg_stretch:
  addr: 0xe000b0bc
  mask: 0xffff
  name: ipg_stretch
  description: |
    Bits 7:0 are multiplied with the previously transmitted frame length (including preamble) bits 15:8 +1 divide the frame length. If the resulting number is greater than 96 and bit 28 is set in the network configuration register then the resulting number is used for the transmit inter-packet-gap. 1 is added to bits 15:8 to prevent a divide by zero.
ps7_gem0_stacked_vlan_stacked_vlan_en:
  addr: 0xe000b0c0
  mask: 0x80000000
  name: stacked_vlan_en
  description: |
    Enable Stacked VLAN processing mode
ps7_gem0_stacked_vlan_reserved:
  addr: 0xe000b0c0
  mask: 0x7fff0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem0_stacked_vlan_user_def_vlan_type:
  addr: 0xe000b0c0
  mask: 0xffff
  name: user_def_vlan_type
  description: |
    User defined VLAN_TYPE field. When Stacked VLAN is enabled, the first VLAN tag in a received frame will only be accepted if the VLAN type field is equal to this user defined VLAN_TYPE OR equal to the standard VLAN type (0x8100). Note that the second VLAN tag of a Stacked VLAN packet will only be matched correctly if its VLAN_TYPE field equals 0x8100.
ps7_gem0_tx_pfc_pause_reserved:
  addr: 0xe000b0c4
  mask: 0xffff0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem0_tx_pfc_pause_pauseq_sel:
  addr: 0xe000b0c4
  mask: 0xff00
  name: pauseq_sel
  description: |
    If bit 17 of the network control register is written with a one then for each entry equal to zero in the Transmit PFC Pause Register[15:8], the PFC pause frame's pause quantum field associated with that entry will be taken from the transmit pause quantum register. For each entry equal to one in the Transmit PFC Pause Register [15:8], the pause quantum associated with that entry will be zero.
ps7_gem0_tx_pfc_pause_pri_en_vec_val:
  addr: 0xe000b0c4
  mask: 0xff
  name: pri_en_vec_val
  description: |
    If bit 17 of the network control register is written with a one then the priority enable vector of the PFC priority based pause frame will be set equal to the value stored in this register [7:0].
ps7_gem0_spec_addr1_mask_bot_mask_bits_bot:
  addr: 0xe000b0c8
  mask: 0xffffffff
  name: mask_bits_bot
  description: |
    Setting a bit to one masks the corresponding bit in the specific address 1 register
ps7_gem0_spec_addr1_mask_top_reserved:
  addr: 0xe000b0cc
  mask: 0xffff0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem0_spec_addr1_mask_top_mask_bits_top:
  addr: 0xe000b0cc
  mask: 0xffff
  name: mask_bits_top
  description: |
    Setting a bit to one masks the corresponding bit in the specific address 1 register
ps7_gem0_module_id_module_id:
  addr: 0xe000b0fc
  mask: 0xffff0000
  name: module_id
  description: |
    Module identification number - for the GEM, this value is fixed at 0x0002.
ps7_gem0_module_id_module_rev:
  addr: 0xe000b0fc
  mask: 0xffff
  name: module_rev
  description: |
    Module revision - fixed byte value specific to the revision of the design which is incremented after each release of the IP. Corresponds to Zynq having GEM p23.
ps7_gem0_octets_tx_bot_octets_tx_bot:
  addr: 0xe000b100
  mask: 0xffffffff
  name: octets_tx_bot
  description: |
    Transmitted octets in frame without errors [31:0].
    The number of octets transmitted in valid frames of any type. This counter is 48-bits, and is read through two registers. This count does not include octets from automatically generated pause frames.
ps7_gem0_octets_tx_top_reserved:
  addr: 0xe000b104
  mask: 0xffff0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem0_octets_tx_top_octets_tx_top:
  addr: 0xe000b104
  mask: 0xffff
  name: octets_tx_top
  description: |
    Transmitted octets in frame without errors [47:32]. The number of octets transmitted in valid frames of any type. This counter is 48-bits, and is read through two registers. This count does not include octets from automatically generated pause frames.
ps7_gem0_frames_tx_a:
  addr: 0xe000b108
  mask: 0xffffffff
  name: a
  description: |
    Frames transmitted without error. A 32 bit register counting the number of frames successfully transmitted, i.e., no under run and not too many retries. Excludes pause frames.
ps7_gem0_broadcast_frames_tx_a:
  addr: 0xe000b10c
  mask: 0xffffffff
  name: a
  description: |
    Broadcast frames transmitted without error. A 32 bit register counting the number of broadcast frames successfully transmitted without error, i.e., no under run and not too many retries. Excludes pause frames.
ps7_gem0_multi_frames_tx_a:
  addr: 0xe000b110
  mask: 0xffffffff
  name: a
  description: |
    Multicast frames transmitted without error. A 32 bit register counting the number of multicast frames successfully transmitted without error, i.e., no under run and not too many retries. Excludes pause frames.
ps7_gem0_pause_frames_tx_reserved:
  addr: 0xe000b114
  mask: 0xffff0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem0_pause_frames_tx_pause_frames_tx:
  addr: 0xe000b114
  mask: 0xffff
  name: pause_frames_tx
  description: |
    Transmitted pause frames - a 16 bit register counting the number of pause frames transmitted. Only pause frames triggered by the register interface or through the external pause pins are counted as pause frames. Pause frames received through the external FIFO interface are counted in the frames transmitted counter.
ps7_gem0_frames_64b_tx_a:
  addr: 0xe000b118
  mask: 0xffffffff
  name: a
  description: |
    64 byte frames transmitted without error. A 32 bit register counting the number of 64 byte frames successfully transmitted without error, i.e., no under run and not too many retries. Excludes pause frames.
ps7_gem0_frames_65to127b_tx_a:
  addr: 0xe000b11c
  mask: 0xffffffff
  name: a
  description: |
    65 to127 byte frames transmitted without error. A 32 bit register counting the number of 65 to127 byte frames successfully transmitted without error, i.e., no under run and not too many retries.
ps7_gem0_frames_128to255b_tx_a:
  addr: 0xe000b120
  mask: 0xffffffff
  name: a
  description: |
    128 to 255 byte frames transmitted without error. A 32 bit register counting the number of 128 to 255 byte frames successfully transmitted without error, i.e., no under run and not too many retries.
ps7_gem0_frames_256to511b_tx_a:
  addr: 0xe000b124
  mask: 0xffffffff
  name: a
  description: |
    256 to 511 byte frames transmitted without error. A 32 bit register counting the number of 256 to 511 byte frames successfully transmitted without error, i.e., no under run and not too many retries.
ps7_gem0_frames_512to1023b_tx_a:
  addr: 0xe000b128
  mask: 0xffffffff
  name: a
  description: |
    512 to 1023 byte frames transmitted without error. A 32 bit register counting the number of 512 to 1023 byte frames successfully transmitted without error, i.e., no under run and not too many retries.
ps7_gem0_frames_1024to1518b_tx_a:
  addr: 0xe000b12c
  mask: 0xffffffff
  name: a
  description: |
    1024 to 1518 byte frames transmitted without error. A 32 bit register counting the number of 1024 to 1518 byte frames successfully transmitted without error, i.e., no under run and not too many retries.
ps7_gem0_tx_under_runs_reserved:
  addr: 0xe000b134
  mask: 0xfffffc00
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem0_tx_under_runs_tx_under_runs:
  addr: 0xe000b134
  mask: 0x3ff
  name: tx_under_runs
  description: |
    Transmit under runs - a 10 bit register counting the number of frames not transmitted due to a transmit under run. If this register is incremented then no other statistics register is incremented.
ps7_gem0_single_collisn_frames_reserved:
  addr: 0xe000b138
  mask: 0xfffc0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem0_single_collisn_frames_single_collisn:
  addr: 0xe000b138
  mask: 0x3ffff
  name: single_collisn
  description: |
    Single collision frames - an 18 bit register counting the number of frames experiencing a single collision before being successfully transmitted, i.e. no under run.
ps7_gem0_multi_collisn_frames_reserved:
  addr: 0xe000b13c
  mask: 0xfffc0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem0_multi_collisn_frames_multi_collisn:
  addr: 0xe000b13c
  mask: 0x3ffff
  name: multi_collisn
  description: |
    Multiple collision frames - an 18 bit register counting the number of frames experiencing between two and fifteen collisions prior to being successfully transmitted, i.e., no under run and not too many retries.
ps7_gem0_excessive_collisns_reserved:
  addr: 0xe000b140
  mask: 0xfffffc00
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem0_excessive_collisns_excessive_collisns:
  addr: 0xe000b140
  mask: 0x3ff
  name: excessive_collisns
  description: |
    Excessive collisions - a 10 bit register counting the number of frames that failed to be transmitted because they experienced 16 collisions.
ps7_gem0_late_collisns_reserved:
  addr: 0xe000b144
  mask: 0xfffffc00
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem0_late_collisns_late_collisns:
  addr: 0xe000b144
  mask: 0x3ff
  name: late_collisns
  description: |
    Late collisions - a 10 bit register counting the number of late collision occurring after the slot time (512 bits) has expired. In 10/100 mode, late collisions are counted twice i.e., both as a collision and a late collision. In gigabit mode, a late collision causes the transmission to be aborted, thus the single and multi collision registers are not updated.
ps7_gem0_deferred_tx_frames_reserved:
  addr: 0xe000b148
  mask: 0xfffc0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem0_deferred_tx_frames_deferred_tx:
  addr: 0xe000b148
  mask: 0x3ffff
  name: deferred_tx
  description: |
    Deferred transmission frames - an 18 bit register counting the number of frames experiencing deferral due to carrier sense being active on their first attempt at transmission. Frames involved in any collision are not counted nor are frames that experienced a transmit under run.
ps7_gem0_carrier_sense_errs_reserved:
  addr: 0xe000b14c
  mask: 0xfffffc00
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem0_carrier_sense_errs_carrier_sense_errs:
  addr: 0xe000b14c
  mask: 0x3ff
  name: carrier_sense_errs
  description: |
    Carrier sense errors - a 10 bit register counting the number of frames transmitted where carrier sense was not seen during transmission or where carrier sense was deasserted after being asserted in a transmit frame without collision (no under run). Only incremented in half duplex mode. The only effect of a carrier sense error is to increment this register. The behavior of the other statistics registers is unaffected by the detection of a carrier sense error.
ps7_gem0_octets_rx_bot_octets_rx_bot:
  addr: 0xe000b150
  mask: 0xffffffff
  name: octets_rx_bot
  description: |
    Received octets in frame without errors [31:0]. The number of octets received in valid frames of any type. This counter is 48-bits and is read through two registers. This count does not include octets from pause frames, and is only incremented if the frame is successfully filtered and copied to memory.
ps7_gem0_octets_rx_top_reserved:
  addr: 0xe000b154
  mask: 0xffff0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem0_octets_rx_top_octets_rx_top:
  addr: 0xe000b154
  mask: 0xffff
  name: octets_rx_top
  description: |
    Received octets in frame without errors [47:32]. The number of octets received in valid frames of any type. This counter is 48-bits and is read through two registers. This count does not include octets from pause frames, and is only incremented if the frame is successfully filtered and copied to memory.
ps7_gem0_frames_rx_a:
  addr: 0xe000b158
  mask: 0xffffffff
  name: a
  description: |
    Frames received without error. A 32 bit register counting the number of frames successfully received. Excludes pause frames, and is only incremented if the frame is successfully filtered and copied to memory.
ps7_gem0_bdcast_fames_rx_a:
  addr: 0xe000b15c
  mask: 0xffffffff
  name: a
  description: |
    Broadcast frames received without error. A 32 bit register counting the number of broadcast frames successfully received without error. Excludes pause frames, and is only incremented if the frame is successfully filtered and copied to memory.
ps7_gem0_multi_frames_rx_a:
  addr: 0xe000b160
  mask: 0xffffffff
  name: a
  description: |
    Multicast frames received without error. A 32 bit register counting the number of multicast frames successfully received without error. Excludes pause frames, and is only incremented if the frame is successfully filtered and copied to memory.
ps7_gem0_pause_rx_reserved:
  addr: 0xe000b164
  mask: 0xffff0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem0_pause_rx_pause_rx:
  addr: 0xe000b164
  mask: 0xffff
  name: pause_rx
  description: |
    Received pause frames - a 16 bit register counting the number of pause frames received without error.
ps7_gem0_frames_64b_rx_a:
  addr: 0xe000b168
  mask: 0xffffffff
  name: a
  description: |
    64 byte frames received without error. A 32 bit register counting the number of 64 byte frames successfully received without error. Excludes pause frames, and is only incremented if the frame is successfully filtered and copied to memory.
ps7_gem0_frames_65to127b_rx_a:
  addr: 0xe000b16c
  mask: 0xffffffff
  name: a
  description: |
    65 to 127 byte frames received without error. A 32 bit register counting the number of 65 to 127 byte frames successfully received without error. Excludes pause frames, and is only incremented if the frame is successfully filtered and copied to memory.
ps7_gem0_frames_128to255b_rx_a:
  addr: 0xe000b170
  mask: 0xffffffff
  name: a
  description: |
    128 to 255 byte frames received without error. A 32 bit register counting the number of 128 to 255 byte frames successfully received without error. Excludes pause frames, and is only incremented if the frame is successfully filtered and copied to memory.
ps7_gem0_frames_256to511b_rx_a:
  addr: 0xe000b174
  mask: 0xffffffff
  name: a
  description: |
    256 to 511 byte frames received without error. A 32 bit register counting the number of 256 to 511 byte frames successfully transmitted without error. Excludes pause frames, and is only incremented if the frame is successfully filtered and copied to memory.
ps7_gem0_frames_512to1023b_rx_a:
  addr: 0xe000b178
  mask: 0xffffffff
  name: a
  description: |
    512 to 1023 byte frames received without error. A 32 bit register counting the number of 512 to 1023 byte frames successfully received without error. Excludes pause frames, and is only incremented if the frame is successfully filtered and copied to memory.
ps7_gem0_frames_1024to1518b_rx_a:
  addr: 0xe000b17c
  mask: 0xffffffff
  name: a
  description: |
    1024 to 1518 byte frames received without error. A 32 bit register counting the number of 1024 to 1518 byte frames successfully received without error. Excludes pause frames, and is only incremented if the frame is successfully filtered and copied to memory.
ps7_gem0_undersz_rx_reserved:
  addr: 0xe000b184
  mask: 0xfffffc00
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem0_undersz_rx_undersz_rx:
  addr: 0xe000b184
  mask: 0x3ff
  name: undersz_rx
  description: |
    Undersize frames received - a 10 bit register counting the number of frames received less than 64 bytes in length (10/100 mode or gigabit mode, full duplex) that do not have either a CRC error or an alignment error. In gigabit mode, half duplex, this register counts either frames not conforming to the minimum slot time of 512 bytes or frames not conforming to the minimum frame size once bursting is active.
ps7_gem0_oversz_rx_reserved:
  addr: 0xe000b188
  mask: 0xfffffc00
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem0_oversz_rx_oversz_rx:
  addr: 0xe000b188
  mask: 0x3ff
  name: oversz_rx
  description: |
    Oversize frames received - a 10 bit register counting the number of frames received exceeding 1518 bytes (1536 bytes if bit 8 is set in network configuration register) in length but do not have either a CRC error, an alignment error nor a receive symbol error.
ps7_gem0_jab_rx_reserved:
  addr: 0xe000b18c
  mask: 0xfffffc00
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem0_jab_rx_jab_rx:
  addr: 0xe000b18c
  mask: 0x3ff
  name: jab_rx
  description: |
    Jabbers received - a 10 bit register counting the number of frames received exceeding 1518 bytes (1536 if bit 8 set in network configuration register) in length and have either a CRC error, an alignment error or a receive symbol error.
ps7_gem0_fcs_errors_reserved:
  addr: 0xe000b190
  mask: 0xfffffc00
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem0_fcs_errors_fcs_errors:
  addr: 0xe000b190
  mask: 0x3ff
  name: fcs_errors
  description: |
    Frame check sequence errors - a 10 bit register counting frames that are an integral number of bytes, have bad CRC and are between 64 and 1518 bytes in length. This register is also incremented if a symbol error is detected and the frame is of valid length and has an integral number of bytes. This register is incremented for a frame with bad FCS, regardless of whether it is copied to memory due to ignore FCS mode being enabled in bit 26 of the network configuration register.H524
ps7_gem0_length_field_errors_reserved:
  addr: 0xe000b194
  mask: 0xfffffc00
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem0_length_field_errors_length_field_errors:
  addr: 0xe000b194
  mask: 0x3ff
  name: length_field_errors
  description: |
    Length field frame errors - this 10-bit register counts the number of frames received that have a measured length shorter than that extracted from the length field (bytes 13 and 14). This condition is only counted if the value of the length field is less than 0x0600, the frame is not of excessive length and checking is enabled through bit 16 of the network configuration register.
ps7_gem0_rx_symbol_errors_reserved:
  addr: 0xe000b198
  mask: 0xfffffc00
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem0_rx_symbol_errors_rx_symbol_errors:
  addr: 0xe000b198
  mask: 0x3ff
  name: rx_symbol_errors
  description: |
    Receive symbol errors - a 10-bit register counting the number of frames that had rx_er asserted during reception. For 10/100 mode symbol errors are counted regardless of frame length checks. For gigabit mode the frame must satisfy slot time requirements in order to count a symbol error. Additionally, in gigabit half duplex mode, carrier extension errors are also recorded. Receive symbol errors will also be counted as an FCS or alignment error if the frame is between 64 and 1518 bytes. If the frame is larger it will be recorded as a jabber error.
ps7_gem0_align_errors_reserved:
  addr: 0xe000b19c
  mask: 0xfffffc00
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem0_align_errors_align_errors:
  addr: 0xe000b19c
  mask: 0x3ff
  name: align_errors
  description: |
    Alignment errors - a 10 bit register counting frames that are not an integral number of bytes long and have bad CRC when their length is truncated to an integral number of bytes and are between 64 and 1518 bytes in length. This register is also incremented if a symbol error is detected and the frame is of valid length and does not have an integral number of bytes.
ps7_gem0_rx_resource_errors_reserved:
  addr: 0xe000b1a0
  mask: 0xfffc0000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem0_rx_resource_errors_rx_resource_errors:
  addr: 0xe000b1a0
  mask: 0x3ffff
  name: rx_resource_errors
  description: |
    Receive resource errors - an 18 bit register counting the number of frames that were successfully received by the MAC (correct address matched frame and adequate slot time) but could not be copied to memory because no receive buffer was available. This will be either because the AHB bus was not granted in time or because a hresp not OK was returned.
ps7_gem0_rx_overrun_errors_reserved:
  addr: 0xe000b1a4
  mask: 0xfffffc00
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem0_rx_overrun_errors_rx_overrun_errors:
  addr: 0xe000b1a4
  mask: 0x3ff
  name: rx_overrun_errors
  description: |
    Receive overruns - a 10 bit register counting the number of frames that are address recognized but were not copied to memory due to a receive overrun.
ps7_gem0_ip_hdr_csum_errors_reserved:
  addr: 0xe000b1a8
  mask: 0xffffff00
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem0_ip_hdr_csum_errors_ip_hdr_csum_errors:
  addr: 0xe000b1a8
  mask: 0xff
  name: ip_hdr_csum_errors
  description: |
    0 IP header checksum errors - an 8-bit register counting the number of frames discarded due to an incorrect IP header checksum, but are between 64 and 1518 bytes and do not have a CRC error, an alignment error, nor a symbol error.
ps7_gem0_tcp_csum_errors_reserved:
  addr: 0xe000b1ac
  mask: 0xffffff00
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem0_tcp_csum_errors_tcp_csum_errors:
  addr: 0xe000b1ac
  mask: 0xff
  name: tcp_csum_errors
  description: |
    TCP checksum errors - an 8-bit register counting the number of frames discarded due to an incorrect TCP checksum, but are between 64 and 1518 bytes and do not have a CRC error, an alignment error, nor a symbol error.
ps7_gem0_udp_csum_errors_reserved:
  addr: 0xe000b1b0
  mask: 0xffffff00
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem0_udp_csum_errors_udp_csum_errors:
  addr: 0xe000b1b0
  mask: 0xff
  name: udp_csum_errors
  description: |
    UDP checksum errors - an 8-bit register counting the number of frames discarded due to an incorrect UDP checksum, but are between 64 and 1518 bytes and do not have a CRC error, an alignment error, nor a symbol error.
ps7_gem0_timer_strobe_s_a:
  addr: 0xe000b1c8
  mask: 0xffffffff
  name: a
  description: |
    The value of the Timer Seconds register captured when gem_tsu_ms and gem_tsu_inc_ctrl are zero.
ps7_gem0_timer_strobe_ns_reserved:
  addr: 0xe000b1cc
  mask: 0xc0000000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem0_timer_strobe_ns_ns_reg_val:
  addr: 0xe000b1cc
  mask: 0x3fffffff
  name: ns_reg_val
  description: |
    The value of the Timer Nanoseconds register captured when gem_tsu_ms and gem_tsu_inc_ctrl are zero.
ps7_gem0_timer_s_a:
  addr: 0xe000b1d0
  mask: 0xffffffff
  name: a
  description: |
    Timer count in seconds. This register is writeable. It increments by one when the 1588 nanoseconds counter counts to one second. It may also be incremented when the timer adjust register is written.
ps7_gem0_timer_ns_reserved:
  addr: 0xe000b1d4
  mask: 0xc0000000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem0_timer_ns_timer_ct_ns:
  addr: 0xe000b1d4
  mask: 0x3fffffff
  name: timer_ct_ns
  description: |
    Timer count in nanoseconds. This register is writeable. It can also be adjusted by writes to the 1588 timer adjust register. It increments by the value of the 1588 timer increment register each clock cycle.
ps7_gem0_timer_adjust_add_subn:
  addr: 0xe000b1d8
  mask: 0x80000000
  name: add_subn
  description: |
    Write as one to subtract from the 1588 timer. Write as zero to add to it.
ps7_gem0_timer_adjust_reserved:
  addr: 0xe000b1d8
  mask: 0x40000000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem0_timer_adjust_ns_delta:
  addr: 0xe000b1d8
  mask: 0x3fffffff
  name: ns_delta
  description: |
    The number of nanoseconds to increment or decrement the 1588 timer nanoseconds register. If necessary, the 1588 seconds register will be incremented or decremented.
ps7_gem0_timer_incr_reserved:
  addr: 0xe000b1dc
  mask: 0xff000000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem0_timer_incr_incr_b4_alt:
  addr: 0xe000b1dc
  mask: 0xff0000
  name: incr_b4_alt
  description: |
    The number of increments after which the alternative increment is used.
ps7_gem0_timer_incr_alt_ct_ns_delta:
  addr: 0xe000b1dc
  mask: 0xff00
  name: alt_ct_ns_delta
  description: |
    Alternative count of nanoseconds by which the 1588 timer nanoseconds register will be incremented each clock cycle.
ps7_gem0_timer_incr_ns_delta:
  addr: 0xe000b1dc
  mask: 0xff
  name: ns_delta
  description: |
    A count of nanoseconds by which the 1588 timer nanoseconds register will be incremented each clock cycle.
ps7_gem0_ptp_tx_s_a:
  addr: 0xe000b1e0
  mask: 0xffffffff
  name: a
  description: |
    The register is updated with the value that the 1588 timer seconds register held when the SFD of a PTP transmit primary event crosses the MII interface. The actual update occurs when the GEM recognizes the frame as a PTP sync or delay_req frame. An interrupt is issued when the register is updated.
ps7_gem0_ptp_tx_ns_reserved:
  addr: 0xe000b1e4
  mask: 0xc0000000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem0_ptp_tx_ns_ns_reg_val:
  addr: 0xe000b1e4
  mask: 0x3fffffff
  name: ns_reg_val
  description: |
    The register is updated with the value that the 1588 timer nanoseconds register held when the SFD of a PTP transmit primary event crosses the MII interface. The actual update occurs when the GEM recognizes the frame as a PTP sync or delay_req frame. An interrupt is issued when the register is updated.
ps7_gem0_ptp_rx_s_a:
  addr: 0xe000b1e8
  mask: 0xffffffff
  name: a
  description: |
    The register is updated with the value that the 1588 timer seconds register held when the SFD of a PTP receive primary event crosses the MII interface. The actual update occurs when the GEM recognizes the frame as a PTP sync or delay_req frame. An interrupt is issued when the register is updated.
ps7_gem0_ptp_rx_ns_reserved:
  addr: 0xe000b1ec
  mask: 0xc0000000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem0_ptp_rx_ns_ns_reg_val:
  addr: 0xe000b1ec
  mask: 0x3fffffff
  name: ns_reg_val
  description: |
    The register is updated with the value that the 1588 timer nanoseconds register held when the SFD of a PTP receive primary event crosses the MII interface. The actual update occurs when the GEM recognizes the frame as a PTP sync or delay_req frame. An interrupt is issued when the register is updated.
ps7_gem0_ptp_peer_tx_s_a:
  addr: 0xe000b1f0
  mask: 0xffffffff
  name: a
  description: |
    The register is updated with the value that the 1588 timer seconds register held when the SFD of a PTP transmit peer event crosses the MII interface. The actual update occurs when the GEM recognizes the frame as a PTP pdealy_req or pdelay_resp frame. An interrupt is issued when the register is updated.
ps7_gem0_ptp_peer_tx_ns_reserved:
  addr: 0xe000b1f4
  mask: 0xc0000000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem0_ptp_peer_tx_ns_ns_reg_val:
  addr: 0xe000b1f4
  mask: 0x3fffffff
  name: ns_reg_val
  description: |
    The register is updated with the value that the 1588 timer nanoseconds register held when the SFD of a PTP transmit peer event crosses the MII interface. The actual update occurs when the GEM recognizes the frame as a PTP pdelay_req or pdelay_resp frame. An interrupt is issued when the register is updated.
ps7_gem0_ptp_peer_rx_s_a:
  addr: 0xe000b1f8
  mask: 0xffffffff
  name: a
  description: |
    The register is updated with the value that the 1588 timer seconds register held when the SFD of a PTP receive peer event crosses the MII interface. The actual update occurs when the GEM recognizes the frame as a PTP pdelay_req or pdelay_resp frame. An interrupt is issued when the register is updated.
ps7_gem0_ptp_peer_rx_ns_reserved:
  addr: 0xe000b1fc
  mask: 0xc0000000
  name: reserved
  description: |
    Reserved, read as 0, ignored on write.
ps7_gem0_ptp_peer_rx_ns_ns_reg_val:
  addr: 0xe000b1fc
  mask: 0x3fffffff
  name: ns_reg_val
  description: |
    The register is updated with the value that the 1588 timer nanoseconds register held when the SFD of a PTP receive peer event crosses the MII interface. The actual update occurs when the GEM recognizes the frame as a PTP pdelay_req or pdelay_resp frame. An interrupt is issued when the register is updated.
ps7_gem0_design_cfg2_reserved:
  addr: 0xe000b284
  mask: 0xc0000000
  name: reserved
  description: |
    Reserved. Set to zero.
ps7_gem0_design_cfg2_gem_tx_pbuf_addr:
  addr: 0xe000b284
  mask: 0x3c000000
  name: gem_tx_pbuf_addr
  description: |
    Takes the value of the `gem_tx_pbuf_addr DEFINE. Max address bits for Tx packet buffer (10-bits for maximum 4 kB buffer). Buffer size for Tx packet buffer mode will be 4kB.
    This will allow one standard packet to be received while another is transferred to system memory by the DMA interface.
ps7_gem0_design_cfg2_gem_rx_pbuf_addr:
  addr: 0xe000b284
  mask: 0x3c00000
  name: gem_rx_pbuf_addr
  description: |
    Takes the value of the `gem_rx_pbuf_addr DEFINE. Max address bits for Rx packet buffer (10-bits for maximum 4 kB buffer). Buffer size for Rx packet buffer mode will be 4kB.
    This will allow one standard packet to be received while another is transferred to system memory by the DMA interface.
ps7_gem0_design_cfg2_gem_tx_pkt_buffer:
  addr: 0xe000b284
  mask: 0x200000
  name: gem_tx_pkt_buffer
  description: |
    Takes the value of the `gem_tx_pkt_buffer DEFINE. Defined for Zynq. Includes the transmitter packet buffer
ps7_gem0_design_cfg2_gem_rx_pkt_buffer:
  addr: 0xe000b284
  mask: 0x100000
  name: gem_rx_pkt_buffer
  description: |
    Takes the value of the `gem_rx_pkt_buffer DEFINE. Defined for Zynq. Includes the receiver packet buffer.
ps7_gem0_design_cfg2_gem_hprot_value:
  addr: 0xe000b284
  mask: 0xf0000
  name: gem_hprot_value
  description: |
    Takes the value of the `gem_hprot_value DEFINE. For Zynq, set the fixed AHB HPROT value used during transfers.
ps7_gem0_design_cfg2_gem_jumbo_max_length:
  addr: 0xe000b284
  mask: 0xffff
  name: gem_jumbo_max_length
  description: |
    Takes the value of the `gem_jumbo_max_length DEFINE. Maximum length of jumbo frames accepted by receiver.
    This is set to the size of the smallest of the two packet buffer, minus a margin for packet headers. However, Zynq will not support jumbo frames.
ps7_gem0_design_cfg3_gem_rx_base2_fifo_size:
  addr: 0xe000b288
  mask: 0xffff0000
  name: gem_rx_base2_fifo_size
  description: |
    Takes the value of the `gem_rx_base2_fifo_size DEFINE. Base-2 equivalent of `gem_rx_fifo_size
ps7_gem0_design_cfg3_gem_rx_fifo_size:
  addr: 0xe000b288
  mask: 0xffff
  name: gem_rx_fifo_size
  description: |
    Takes the value of the `gem_rx_fifo_size DEFINE. Set the size of the small Rx FIFO for grant latency. Extended to 16 deep to allow buffering of 64 byte maximum AHB burst size in Zynq.
ps7_gem0_design_cfg4_gem_tx_base2_fifo_size:
  addr: 0xe000b28c
  mask: 0xffff0000
  name: gem_tx_base2_fifo_size
  description: |
    Takes the value of the `gem_tx_base2_fifo_size DEFINE. Base-2 equivalent of `gem_tx_fifo_size.
ps7_gem0_design_cfg4_gem_tx_fifo_size:
  addr: 0xe000b28c
  mask: 0xffff
  name: gem_tx_fifo_size
  description: |
    Takes the value of the `gem_tx_fifo_size DEFINE. Set the size of the small TX FIFO for grant latency
ps7_gem0_design_cfg5_reserved:
  addr: 0xe000b290
  mask: 0xe0000000
  name: reserved
  description: |
    Reserved. Set to zero.
ps7_gem0_design_cfg5_gem_tsu_clk:
  addr: 0xe000b290
  mask: 0x10000000
  name: gem_tsu_clk
  description: |
    Takes the value of the `gem_tsu_clk DEFINE. Undefined in Zynq. 1588 Time Stamp Unit clock sourced from pclk rather than independent tsu_clk.
ps7_gem0_design_cfg5_gem_rx_buffer_length_def:
  addr: 0xe000b290
  mask: 0xff00000
  name: gem_rx_buffer_length_def
  description: |
    Takes the value of the `gem_rx_buffer_length_def DEFINE. Set the default buffer length used by Rx DMA to 128 bytes.
ps7_gem0_design_cfg5_gem_tx_pbuf_size_def:
  addr: 0xe000b290
  mask: 0x80000
  name: gem_tx_pbuf_size_def
  description: |
    Takes the value of the `gem_tx_pbuf_size_def DEFINE. Full 4 kB Tx packet buffer size - dedicated memory resource in Zynq.
ps7_gem0_design_cfg5_gem_rx_pbuf_size_def:
  addr: 0xe000b290
  mask: 0x60000
  name: gem_rx_pbuf_size_def
  description: |
    Takes the value of the `gem_rx_pbuf_size_def DEFINE. Full
    4 kB Rx packet buffer size - dedicated memory resource in Zynq.
ps7_gem0_design_cfg5_gem_endian_swap_def:
  addr: 0xe000b290
  mask: 0x18000
  name: gem_endian_swap_def
  description: |
    Takes the value of the `gem_endian_swap_def DEFINE. Set to big endian data, little endian management descriptors in Zynq.
ps7_gem0_design_cfg5_gem_mdc_clock_div:
  addr: 0xe000b290
  mask: 0x7000
  name: gem_mdc_clock_div
  description: |
    Takes the value of the `gem_mdc_clock_div DEFINE. Set default MDC clock divisor (can still be programmed) in Zynq.
ps7_gem0_design_cfg5_gem_dma_bus_width:
  addr: 0xe000b290
  mask: 0xc00
  name: gem_dma_bus_width
  description: |
    Takes the value of the `gem_dma_bus_width_def DEFINE. Limit to 32-bit AHB bus in Zynq.
ps7_gem0_design_cfg5_gem_phy_ident:
  addr: 0xe000b290
  mask: 0x200
  name: gem_phy_ident
  description: |
    Takes the value of the `gem_phy_ident DEFINE. Undefined in Zynq. Only used in PCS.
ps7_gem0_design_cfg5_gem_tsu:
  addr: 0xe000b290
  mask: 0x100
  name: gem_tsu
  description: |
    Takes the value of the `gem_tsu DEFINE. Defined in Zynq. Include support for 1588 Time Stamp Unit.
ps7_gem0_design_cfg5_gem_tx_fifo_cnt_width:
  addr: 0xe000b290
  mask: 0xf0
  name: gem_tx_fifo_cnt_width
  description: |
    Takes the value of the `gem_tx_fifo_cnt_width DEFINE. Width for `gem_tx_fifo_size
ps7_gem0_design_cfg5_gem_rx_fifo_cnt_width:
  addr: 0xe000b290
  mask: 0xf
  name: gem_rx_fifo_cnt_width
  description: |
    Takes the value of the `gem_rx_fifo_cnt_width DEFINE. Width for `gem_rx_fifo_size.
ps7_qspi_Config_reg_leg_flsh:
  addr: 0xe000d000
  mask: 0x80000000
  name: leg_flsh
  description: |
    Flash memory interface mode control:
    0: legacy SPI mode
    1: Flash memory interface mode
    This control is required to enable or disable automatic recognition of instruction bytes in the first byte of a transfer.
    If this mode is disabled, the core will operate in standard SPI mode, with no dual- or quad-bit input or output capability; the extended bits will be configured as inputs to prevent any driver contention on these pins.
    If enabled, flash memory interface instructions are automatically recognized and the I/O configured accordingly.
ps7_qspi_Config_reg_reserved_5:
  addr: 0xe000d000
  mask: 0x78000000
  name: reserved_5
  description: |
    Reserved, read as zero, ignored on write.
ps7_qspi_Config_reg_endian:
  addr: 0xe000d000
  mask: 0x4000000
  name: endian
  description: |
    0 for little endian format when writing to the transmit data register 0x1C or reading from the receive data register 0x20.
    1 for big endian format when writing to the transmit data register 0x1C or reading from the receive data register 0x20.
ps7_qspi_Config_reg_reserved_4:
  addr: 0xe000d000
  mask: 0x3f00000
  name: reserved_4
  description: |
    Reserved, read as zero, ignored on write.
ps7_qspi_Config_reg_Holdb_dr:
  addr: 0xe000d000
  mask: 0x80000
  name: Holdb_dr
  description: |
    If set, Holdb and WPn pins are actively driven by the qspi controller in 1-bit and 2-bit modes .
    If not set, then external pull up is required on HOLDb and WPn pins .
    Note that this bit doesn't affect the quad(4-bit) mode as Controller always drives these pins in quad mode.
    It is highly recommended to set this bit always(irrespective of mode of operation) while using QSPI
ps7_qspi_Config_reg_reserved_3:
  addr: 0xe000d000
  mask: 0x40000
  name: reserved_3
  description: |
    Reserved
ps7_qspi_Config_reg_reserved_2:
  addr: 0xe000d000
  mask: 0x20000
  name: reserved_2
  description: |
    Reserved, do not modify
ps7_qspi_Config_reg_Man_start_com:
  addr: 0xe000d000
  mask: 0x10000
  name: Man_start_com
  description: |
    Manual Start Command
    1: start transmission of data
    0: don't care
ps7_qspi_Config_reg_Man_start_en:
  addr: 0xe000d000
  mask: 0x8000
  name: Man_start_en
  description: |
    Manual Start Enable
    1: enables manual start
    0: auto mode
ps7_qspi_Config_reg_Manual_CS:
  addr: 0xe000d000
  mask: 0x4000
  name: Manual_CS
  description: |
    Manual CS
    1: manual CS mode
    0: auto mode
ps7_qspi_Config_reg_reserved_1:
  addr: 0xe000d000
  mask: 0x3800
  name: reserved_1
  description: |
    Reserved
ps7_qspi_Config_reg_PCS:
  addr: 0xe000d000
  mask: 0x400
  name: PCS
  description: |
    Peripheral chip select line, directly drive n_ss_out if Manual_C is set
ps7_qspi_Config_reg_reserved:
  addr: 0xe000d000
  mask: 0x200
  name: reserved
  description: |
    Reserved
ps7_qspi_Config_reg_REF_CLK:
  addr: 0xe000d000
  mask: 0x100
  name: REF_CLK
  description: |
    Reserved. Must be 0
ps7_qspi_Config_reg_FIFO_WIDTH:
  addr: 0xe000d000
  mask: 0xc0
  name: FIFO_WIDTH
  description: |
    FIFO width
    Must be set to 2'b11 (32bits). All other settings are not supported.
ps7_qspi_Config_reg_BAUD_RATE_DIV:
  addr: 0xe000d000
  mask: 0x38
  name: BAUD_RATE_DIV
  description: |
    Master mode baud rate divisor
    000: divide by 2. This is the only baud rate setting that can be used if the loopback clock is enabled (USE_LPBK). This setting also works in non-loopback mode.
    001: divide by 4
    010: divide by 8
    011: divide by 16
    100: divide by 32
    101: divide by 64
    110: divide by 128
    111: divide by 256
ps7_qspi_Config_reg_CLK_PH:
  addr: 0xe000d000
  mask: 0x4
  name: CLK_PH
  description: |
    Clock phase
    1: the SPI clock is inactive outside the word
    0: the SPI clock is active outside the word
    Note : For \'7bCLK_PH, CLK_POL\'7d, only 2'b11 and 2'b00 are supported.
ps7_qspi_Config_reg_CLK_POL:
  addr: 0xe000d000
  mask: 0x2
  name: CLK_POL
  description: |
    Clock polarity outside SPI word
    1: The SPI clock is quiescent high
    0: The SPI clock is quiescent low
    Note : For \'7bCLK_PH, CLK_POL\'7d, only 2'b11 and 2'b00 are supported.
ps7_qspi_Config_reg_MODE_SEL:
  addr: 0xe000d000
  mask: 0x1
  name: MODE_SEL
  description: |
    Mode select
    1: The SPI is in master mode
    0: RESERVED
    In QSPI boot mode, ROM code will set this bit. In other boot modes, this bit must be set before using QSPI.
ps7_qspi_Intr_status_REG_reserved_1:
  addr: 0xe000d004
  mask: 0xffffff80
  name: reserved_1
  description: |
    Reserved, read as zero, ignored on write.
ps7_qspi_Intr_status_REG_TX_FIFO_underflow:
  addr: 0xe000d004
  mask: 0x40
  name: TX_FIFO_underflow
  description: |
    TX FIFO underflow, write one to this bit location to clear.
    1: underflow is detected
    0: no underflow has been detected
    Write 1 to this bit location to clear
ps7_qspi_Intr_status_REG_RX_FIFO_full:
  addr: 0xe000d004
  mask: 0x20
  name: RX_FIFO_full
  description: |
    RX FIFO full (current FIFO status)
    1: FIFO is full
    0: FIFO is not full
ps7_qspi_Intr_status_REG_RX_FIFO_not_empty:
  addr: 0xe000d004
  mask: 0x10
  name: RX_FIFO_not_empty
  description: |
    RX FIFO not empty (current FIFO status)
    1: FIFO has more than or equal to THRESHOLD entries
    0: FIFO has less than RX THRESHOLD entries
ps7_qspi_Intr_status_REG_TX_FIFO_full:
  addr: 0xe000d004
  mask: 0x8
  name: TX_FIFO_full
  description: |
    TX FIFO full (current FIFO status)
    1: FIFO is full
    0: FIFO is not full
ps7_qspi_Intr_status_REG_TX_FIFO_not_full:
  addr: 0xe000d004
  mask: 0x4
  name: TX_FIFO_not_full
  description: |
    TX FIFO not full (current FIFO status)
    1: FIFO has less than THRESHOLD entries
    0: FIFO has more than or equal toTHRESHOLD entries
ps7_qspi_Intr_status_REG_reserved:
  addr: 0xe000d004
  mask: 0x2
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_qspi_Intr_status_REG_RX_OVERFLOW:
  addr: 0xe000d004
  mask: 0x1
  name: RX_OVERFLOW
  description: |
    Receive Overflow interrupt, write one to this bit location to clear.
    1: overflow occurred
    0: no overflow occurred
    Write 1 to this bit location to clear
ps7_qspi_Intrpt_en_REG_reserved_1:
  addr: 0xe000d008
  mask: 0xffffff80
  name: reserved_1
  description: |
    Reserved, read as zero, ignored on write.
ps7_qspi_Intrpt_en_REG_TX_FIFO_underflow:
  addr: 0xe000d008
  mask: 0x40
  name: TX_FIFO_underflow
  description: |
    TX FIFO underflow
    enable
    1: enable the interrupt
    0: no effect
ps7_qspi_Intrpt_en_REG_RX_FIFO_full:
  addr: 0xe000d008
  mask: 0x20
  name: RX_FIFO_full
  description: |
    RX FIFO full
    enable
    1: enable the interrupt
    0: no effect
ps7_qspi_Intrpt_en_REG_RX_FIFO_not_empty:
  addr: 0xe000d008
  mask: 0x10
  name: RX_FIFO_not_empty
  description: |
    RX FIFO not empty
    enable
    1: enable the interrupt
    0: no effect
ps7_qspi_Intrpt_en_REG_TX_FIFO_full:
  addr: 0xe000d008
  mask: 0x8
  name: TX_FIFO_full
  description: |
    TX FIFO full
    enable
    1: enable the interrupt
    0: no effect
ps7_qspi_Intrpt_en_REG_TX_FIFO_not_full:
  addr: 0xe000d008
  mask: 0x4
  name: TX_FIFO_not_full
  description: |
    TX FIFO not full
    enable
    1: enable the interrupt
    0: no effect
ps7_qspi_Intrpt_en_REG_reserved:
  addr: 0xe000d008
  mask: 0x2
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_qspi_Intrpt_en_REG_RX_OVERFLOW:
  addr: 0xe000d008
  mask: 0x1
  name: RX_OVERFLOW
  description: |
    Receive Overflow interrupt enable
    1: enable the interrupt
    0: no effect
ps7_qspi_Intrpt_dis_REG_reserved_1:
  addr: 0xe000d00c
  mask: 0xffffff80
  name: reserved_1
  description: |
    Reserved, read as zero, ignored on write.
ps7_qspi_Intrpt_dis_REG_TX_FIFO_underflow:
  addr: 0xe000d00c
  mask: 0x40
  name: TX_FIFO_underflow
  description: |
    TX FIFO underflow
    enable
    1: disables the interrupt
    0: no effect
ps7_qspi_Intrpt_dis_REG_RX_FIFO_full:
  addr: 0xe000d00c
  mask: 0x20
  name: RX_FIFO_full
  description: |
    RX FIFO full
    enable
    1: disables the interrupt
    0: no effect
ps7_qspi_Intrpt_dis_REG_RX_FIFO_not_empty:
  addr: 0xe000d00c
  mask: 0x10
  name: RX_FIFO_not_empty
  description: |
    RX FIFO not empty
    enable
    1: disables the interrupt
    0: no effect
ps7_qspi_Intrpt_dis_REG_TX_FIFO_full:
  addr: 0xe000d00c
  mask: 0x8
  name: TX_FIFO_full
  description: |
    TX FIFO full
    enable
    1: disables the interrupt
    0: no effect
ps7_qspi_Intrpt_dis_REG_TX_FIFO_not_full:
  addr: 0xe000d00c
  mask: 0x4
  name: TX_FIFO_not_full
  description: |
    TX FIFO not full
    enable
    1: disables the interrupt
    0: no effect
ps7_qspi_Intrpt_dis_REG_reserved:
  addr: 0xe000d00c
  mask: 0x2
  name: reserved
  description: |
    Reserved
ps7_qspi_Intrpt_dis_REG_RX_OVERFLOW:
  addr: 0xe000d00c
  mask: 0x1
  name: RX_OVERFLOW
  description: |
    Receive Overflow interrupt enable
    1: disables the interrupt
    0: no effect
ps7_qspi_Intrpt_mask_REG_reserved_1:
  addr: 0xe000d010
  mask: 0xffffff80
  name: reserved_1
  description: |
    Reserved, read as zero, ignored on write.
ps7_qspi_Intrpt_mask_REG_TX_FIFO_underflow:
  addr: 0xe000d010
  mask: 0x40
  name: TX_FIFO_underflow
  description: |
    TX FIFO underflow
    enable
    1: interrupt is disabled
    0: interrupt is enabled
ps7_qspi_Intrpt_mask_REG_RX_FIFO_full:
  addr: 0xe000d010
  mask: 0x20
  name: RX_FIFO_full
  description: |
    RX FIFO full
    enable
    1: interrupt is disabled
    0: interrupt is enabled
ps7_qspi_Intrpt_mask_REG_RX_FIFO_not_empty:
  addr: 0xe000d010
  mask: 0x10
  name: RX_FIFO_not_empty
  description: |
    RX FIFO not empty
    enable
    1: interrupt is disabled
    0: interrupt is enabled
ps7_qspi_Intrpt_mask_REG_TX_FIFO_full:
  addr: 0xe000d010
  mask: 0x8
  name: TX_FIFO_full
  description: |
    TX FIFO full
    enable
    1: interrupt is disabled
    0: interrupt is enabled
ps7_qspi_Intrpt_mask_REG_TX_FIFO_not_full:
  addr: 0xe000d010
  mask: 0x4
  name: TX_FIFO_not_full
  description: |
    TX FIFO not full
    enable
    1: interrupt is disabled
    0: interrupt is enabled
ps7_qspi_Intrpt_mask_REG_reserved:
  addr: 0xe000d010
  mask: 0x2
  name: reserved
  description: |
    Reserved
ps7_qspi_Intrpt_mask_REG_RX_OVERFLOW:
  addr: 0xe000d010
  mask: 0x1
  name: RX_OVERFLOW
  description: |
    Receive Overflow interrupt enable
    1: interrupt is disabled
    0: interrupt is enabled
ps7_qspi_En_REG_reserved:
  addr: 0xe000d014
  mask: 0xfffffffe
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_qspi_En_REG_SPI_EN:
  addr: 0xe000d014
  mask: 0x1
  name: SPI_EN
  description: |
    SPI_Enable
    1: enable the SPI
    0: disable the SPI
ps7_qspi_Delay_REG_d_nss:
  addr: 0xe000d018
  mask: 0xff000000
  name: d_nss
  description: |
    Delay in SPI REFERENCE CLOCK or ext_clk cycles for the length that the master mode chip select outputs are de-asserted between words when cpha=0.
ps7_qspi_Delay_REG_d_btwn:
  addr: 0xe000d018
  mask: 0xff0000
  name: d_btwn
  description: |
    Delay in SPI REFERENCE CLOCK or ext_clk cycles between one chip select being de-activated and the activation of another
ps7_qspi_Delay_REG_d_after:
  addr: 0xe000d018
  mask: 0xff00
  name: d_after
  description: |
    Delay in SPI REFERENCE CLOCK or ext_clk cycles between last bit of current word and the first bit of the next word.
ps7_qspi_Delay_REG_d_int:
  addr: 0xe000d018
  mask: 0xff
  name: d_int
  description: |
    Added delay in SPI REFERENCE CLOCK or ext_clk cycles between setting n_ss_out low and first bit transfer.
ps7_qspi_TXD0_TXD:
  addr: 0xe000d01c
  mask: 0xffffffff
  name: TXD
  description: |
    Data to TX FIFO, for 4-byte instruction for normal read/write data transfer.
ps7_qspi_Rx_data_REG_RX_FIFO_data:
  addr: 0xe000d020
  mask: 0xffffffff
  name: RX_FIFO_data
  description: |
    Data from TX FIFO
ps7_qspi_Slave_Idle_count_REG_reserved:
  addr: 0xe000d024
  mask: 0xffffff00
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_qspi_Slave_Idle_count_REG_Slave_Idle_coun:
  addr: 0xe000d024
  mask: 0xff
  name: Slave_Idle_coun
  description: |
    SPI in slave mode detects a start only when the external SPI master serial clock (sclk_in) is stable (quiescent state) for SPI REFERENCE CLOCK cycles specified by slave idle count register or when the SPI
    is deselected.
ps7_qspi_TX_thres_REG_DEPTH_of_TX_FIFO:
  addr: 0xe000d028
  mask: 0xffffffff
  name: DEPTH_of_TX_FIFO
  description: |
    Defines the level at which the TX FIFO not full interrupt is generated
ps7_qspi_RX_thres_REG_DEPTH_of_RX_FIFO:
  addr: 0xe000d02c
  mask: 0xffffffff
  name: DEPTH_of_RX_FIFO
  description: |
    Defines the level at which the RX FIFO not empty interrupt is generated
ps7_qspi_GPIO_reserved:
  addr: 0xe000d030
  mask: 0xfffffffe
  name: reserved
  description: |
    Reserved for future GPIO.
ps7_qspi_GPIO_WP_N:
  addr: 0xe000d030
  mask: 0x1
  name: WP_N
  description: |
    Write Protect.
    Write Protect output for flash devices supporting this function.
    Active low (may be inverted externally to the core if required for flash devices requiring active high write protect signal.)
ps7_qspi_LPBK_DLY_ADJ_reserved:
  addr: 0xe000d038
  mask: 0xfffffe00
  name: reserved
  description: |
    Reserved.
ps7_qspi_LPBK_DLY_ADJ_LPBK_SEL:
  addr: 0xe000d038
  mask: 0x100
  name: LPBK_SEL
  description: |
    Set to 0, do not modify
ps7_qspi_LPBK_DLY_ADJ_LPBK_PH:
  addr: 0xe000d038
  mask: 0x80
  name: LPBK_PH
  description: |
    Set to 0, do not modify
ps7_qspi_LPBK_DLY_ADJ_reserved_1:
  addr: 0xe000d038
  mask: 0x40
  name: reserved_1
  description: |
    Set to 0, do not modify
ps7_qspi_LPBK_DLY_ADJ_USE_LPBK:
  addr: 0xe000d038
  mask: 0x20
  name: USE_LPBK
  description: |
    Use internal loopback master clock for read data capturing when baud rate divisor (reg 0x00) is 2
ps7_qspi_LPBK_DLY_ADJ_DLY1:
  addr: 0xe000d038
  mask: 0x18
  name: DLY1
  description: |
    Must be set to 00 if Loopback clk used
ps7_qspi_LPBK_DLY_ADJ_DLY0:
  addr: 0xe000d038
  mask: 0x7
  name: DLY0
  description: |
    Must be set to 00 if Loopback clk used
ps7_qspi_TXD1_TXD:
  addr: 0xe000d080
  mask: 0xffffffff
  name: TXD
  description: |
    Data to TX FIFO, for 1-byte instruction, not for normal data transfer.
    In little endian mode (default), only bits 7:0 are valid, bits 31:8 are ignored.
    In big endian mode, only the 8 MS bits are valid.
ps7_qspi_TXD2_TXD:
  addr: 0xe000d084
  mask: 0xffffffff
  name: TXD
  description: |
    Data to TX FIFO, for 2-byte instruction, not for normal data transfer.
    In little endian mode (default), only bits 15:0 are valid, bits 31:16 are ignored.
    In big endian mode, only the 16 MS bits are valid.
ps7_qspi_TXD3_TXD:
  addr: 0xe000d088
  mask: 0xffffffff
  name: TXD
  description: |
    Data to TX FIFO, for 3-byte instruction, not for normal data transfer.
    In little endian mode (default), only bits 23:0 are valid, bits 31:24 are ignored.
    In big endian mode, only the 24 MS bits are valid.
ps7_qspi_LQSPI_CFG_LQ_MODE:
  addr: 0xe000d0a0
  mask: 0x80000000
  name: LQ_MODE
  description: |
    Linear quad SPI mode, if set, else quad SPI mode
ps7_qspi_LQSPI_CFG_TWO_MEM:
  addr: 0xe000d0a0
  mask: 0x40000000
  name: TWO_MEM
  description: |
    Both upper and lower memories are active, if set
ps7_qspi_LQSPI_CFG_SEP_BUS:
  addr: 0xe000d0a0
  mask: 0x20000000
  name: SEP_BUS
  description: |
    Separate memory bus, if set.
    Only has meaning if bit 30 is set
ps7_qspi_LQSPI_CFG_U_PAGE:
  addr: 0xe000d0a0
  mask: 0x10000000
  name: U_PAGE
  description: |
    Upper memory page, if set.
    Only has meaning if bit 30 is set AND bit 29 is clear AND bit 31 is clear.
    In LQSPI mode, address bit 25 will indicate lower (0) or upper (1) page.
    In IO mode, this bit is used to select the lower or upper memory for configuration or read/write operations.
ps7_qspi_LQSPI_CFG_reserved:
  addr: 0xe000d0a0
  mask: 0x8000000
  name: reserved
  description: |
    Reserved
ps7_qspi_LQSPI_CFG_reserved_1:
  addr: 0xe000d0a0
  mask: 0x4000000
  name: reserved_1
  description: |
    Reserved.
    Write to this location may lead to unpredictable behavior.
ps7_qspi_LQSPI_CFG_MODE_EN:
  addr: 0xe000d0a0
  mask: 0x2000000
  name: MODE_EN
  description: |
    Enable MODE_BITS[23:16] to be sent, if set.
    This bit MUST BE SET for dual I/O or quad I/O read (specified through [7:0]).
    This bit MUST BE CLEAR for all other read modes as they do not have mode bits.
    If this bit is 0, bits 24, and [23:16] are ignored.
    Here is a summary of how bits 25, 24 and 23:16 are related:
    if ( [ Bit25 == 0 ] ANDAND [ Bit24 == x ] ) then [ Bits23:16 = x ]
    if ( [ Bit25 == 1 ] ANDAND [ Bit24 == 0 ] ) then [ Bits23:16 = ~(8'bxx10xxxx) ]
    if ( [ Bit25 == 1 ] ANDAND [ Bit24 == 1 ] ) then [ Bits23:16 = 8'bxx10xxxx ]
ps7_qspi_LQSPI_CFG_MODE_ON:
  addr: 0xe000d0a0
  mask: 0x1000000
  name: MODE_ON
  description: |
    This bit is only relevant if bit 25 is set, else it is ignored.
    If this bit is set, instruction code is only sent for the very first read transfer.
    If this bit is clear, instruction code will be sent for all read transfers.
    This bit is configured in association with the MODE_BITS.
    For Winbond devices, this bit MUST BE SET if the MODE_BITS are 8'bxx10xxxx, else this bit MUST BE CLEAR.
ps7_qspi_LQSPI_CFG_MODE_BITS:
  addr: 0xe000d0a0
  mask: 0xff0000
  name: MODE_BITS
  description: |
    These bits are only relevant if bit 25 is set, else it is ignored.
    If bit 25 is set, this value is required for both dual I/O read and quad I/O read.
    See vendor's datasheet for more information.
    For Winbond's device, the continuous read mode value is 8'bxx10xxxx to skip the instruction code for the next read transfer, else instruction code is sent for all read transfers.
    Bit 24 has to be configured accordingly with this value.
ps7_qspi_LQSPI_CFG_reserved_2:
  addr: 0xe000d0a0
  mask: 0xf800
  name: reserved_2
  description: |
    Reserved, value is undefined when read.
ps7_qspi_LQSPI_CFG_DUMMY_BYTE:
  addr: 0xe000d0a0
  mask: 0x700
  name: DUMMY_BYTE
  description: |
    Number of dummy bytes between address and return read data
ps7_qspi_LQSPI_CFG_INST_CODE:
  addr: 0xe000d0a0
  mask: 0xff
  name: INST_CODE
  description: |
    Read instruction code.
    The known read instruction codes are:
    8'h03 - Read
    8'h0B - Fast read
    8'h3B - Fast read dual output
    8'h6B - Fast read quad output
    8'hBB - Fast read dual I/O
    8'hEB - Fast read quad I/O
ps7_qspi_LQSPI_STS_reserved:
  addr: 0xe000d0a4
  mask: 0x1f8
  name: reserved
  description: |
    Reserved
ps7_qspi_LQSPI_STS_D_FSM_ERR:
  addr: 0xe000d0a4
  mask: 0x4
  name: D_FSM_ERR
  description: |
    Data FSM error, if set
ps7_qspi_LQSPI_STS_WR_RECVD:
  addr: 0xe000d0a4
  mask: 0x2
  name: WR_RECVD
  description: |
    AXI write command received, if set
ps7_qspi_LQSPI_STS_reserved_1:
  addr: 0xe000d0a4
  mask: 0x1
  name: reserved_1
  description: |
    Reserved
ps7_qspi_MOD_ID_a:
  addr: 0xe000d0fc
  mask: 0xffffffff
  name: a
  description: |
    Module ID value.
ps7_can1_SRR_reserved:
  addr: 0xe0009000
  mask: 0xfffffffc
  name: reserved
  description: |
    Reserved.
ps7_can1_SRR_CEN:
  addr: 0xe0009000
  mask: 0x2
  name: CEN
  description: |
    Can Enable
    The Enable bit for the CAN controller.
    1: The CAN controller is in Loop Back, Sleep or Normal mode depending on the LBACK and SLEEP bits in the MSR.
    0: The CAN controller is in the Configuration mode.
    If the CEN bit is changed during core operation, it is recommended to reset the core so that operations start afresh.
ps7_can1_SRR_SRST:
  addr: 0xe0009000
  mask: 0x1
  name: SRST
  description: |
    Reset
    The Software reset bit for the CAN controller.
    1: CAN controller is reset.
    If a 1 is written to this bit, all the CAN controller configuration registers (including the SRR) are reset. Reads to this bit always return a 0.
ps7_can1_MSR_reserved:
  addr: 0xe0009004
  mask: 0xfffffff8
  name: reserved
  description: |
    Reserved.
ps7_can1_MSR_SNOOP:
  addr: 0xe0009004
  mask: 0x4
  name: SNOOP
  description: |
    Snoop Mode Select
    The Snoop Mode Select bit.
    1: CAN controller is in Snoop mode.
    0: CAN controller is in Normal, Loop Back, Configuration, or Sleep mode.
    This bit can be written to only when CEN bit in SRR is 0.
ps7_can1_MSR_LBACK:
  addr: 0xe0009004
  mask: 0x2
  name: LBACK
  description: |
    Loop Back Mode Select
    The Loop Back Mode Select bit.
    1: CAN controller is in Loop Back mode.
    0: CAN controller is in Normal, Snoop, Configuration, or Sleep mode.
    This bit can be written to only when CEN bit in SRR is 0.
ps7_can1_MSR_SLEEP:
  addr: 0xe0009004
  mask: 0x1
  name: SLEEP
  description: |
    Sleep Mode Select
    The Sleep Mode select bit.
    1: CAN controller is in Sleep mode.
    0: CAN controller is in Normal, Snoop, Configuration or Loop Back mode.
    This bit is cleared when the CAN controller wakes up from the Sleep mode.
ps7_can1_BRPR_reserved:
  addr: 0xe0009008
  mask: 0xffffff00
  name: reserved
  description: |
    Reserved
ps7_can1_BRPR_BRP:
  addr: 0xe0009008
  mask: 0xff
  name: BRP
  description: |
    Baud Rate Prescaler
    These bits indicate the prescaler value. The actual value ranges from 1 to 256.
ps7_can1_BTR_reserved:
  addr: 0xe000900c
  mask: 0xfffffe00
  name: reserved
  description: |
    Reserved
ps7_can1_BTR_SJW:
  addr: 0xe000900c
  mask: 0x180
  name: SJW
  description: |
    Synchronization Jump Width
    Indicates the Synchronization Jump Width as specified in the CAN 2.0A and CAN 2.0B standard. The actual value is one more than the value written to the register.
ps7_can1_BTR_TS2:
  addr: 0xe000900c
  mask: 0x70
  name: TS2
  description: |
    Time Segment 2
    Indicates Phase Segment 2 as specified in the CAN 2.0A and CAN 2.0B standard. The actual value is one more than the value written to the register.
ps7_can1_BTR_TS1:
  addr: 0xe000900c
  mask: 0xf
  name: TS1
  description: |
    Time Segment 1
    Indicates the Sum of Propagation Segment and Phase
    Segment 1 as specified in the CAN 2.0A and CAN 2.0B standard. The actual value is one more than the value written to the register.
ps7_can1_ECR_reserved:
  addr: 0xe0009010
  mask: 0xffff0000
  name: reserved
  description: |
    Reserved
ps7_can1_ECR_REC:
  addr: 0xe0009010
  mask: 0xff00
  name: REC
  description: |
    Receive Error Counter
    Indicates the Value of the Receive Error Counter.
ps7_can1_ECR_TEC:
  addr: 0xe0009010
  mask: 0xff
  name: TEC
  description: |
    Transmit Error Counter
    Indicates the Value of the Transmit Error Counter.
ps7_can1_ESR_reserved:
  addr: 0xe0009014
  mask: 0xffffffe0
  name: reserved
  description: |
    Reserved
ps7_can1_ESR_ACKER:
  addr: 0xe0009014
  mask: 0x10
  name: ACKER
  description: |
    ACK Error
    Indicates an acknowledgment error.
    1: Indicates an acknowledgment error has occurred.
    0: Indicates an acknowledgment error has not occurred on the bus since the last write to this register.
    If this bit is set, writing a 1 clears it.
ps7_can1_ESR_BERR:
  addr: 0xe0009014
  mask: 0x8
  name: BERR
  description: |
    Bit Error
    Indicates the received bit is not the same as the transmitted bit during bus communication.
    1: Indicates a bit error has occurred.
    0: Indicates a bit error has not occurred on the bus since the last write to this register.
    If this bit is set, writing a 1 clears it.
ps7_can1_ESR_STER:
  addr: 0xe0009014
  mask: 0x4
  name: STER
  description: |
    Stuff Error
    Indicates an error if there is a stuffing violation.
    1: Indicates a stuff error has occurred.
    0: Indicates a stuff error has not occurred on the bus since the last write to this register.
    If this bit is set, writing a 1 clears it.
ps7_can1_ESR_FMER:
  addr: 0xe0009014
  mask: 0x2
  name: FMER
  description: |
    Form Error
    Indicates an error in one of the fixed form fields in the message frame.
    1: Indicates a form error has occurred.
    0: Indicates a form error has not occurred on the bus since the last write to this register.
    If this bit is set, writing a 1 clears it.
ps7_can1_ESR_CRCER:
  addr: 0xe0009014
  mask: 0x1
  name: CRCER
  description: |
    CRC Error
    Indicates a CRC error has occurred.
    1: Indicates a CRC error has occurred.
    0: Indicates a CRC error has not occurred on the
    bus since the last write to this register.
    If this bit is set, writing a 1 clears it.
    In case of a CRC Error and a CRC delimiter corruption, only the FMER bit is set.
ps7_can1_SR_reserved:
  addr: 0xe0009018
  mask: 0xffffe000
  name: reserved
  description: |
    Reserved
ps7_can1_SR_SNOOP:
  addr: 0xe0009018
  mask: 0x1000
  name: SNOOP
  description: |
    Snoop Mode
    Indicates the CAN controller is in Snoop Mode.
    1: Indicates the CAN controller is in Snoop Mode.
    0: Indicates the CAN controller is not in Snoop mode.
ps7_can1_SR_ACFBSY:
  addr: 0xe0009018
  mask: 0x800
  name: ACFBSY
  description: |
    Acceptance Filter Busy
    This bit indicates that the Acceptance Filter Mask Registers and the Acceptance Filter ID Registers cannot be written to.
    1: Acceptance Filter Mask Registers and Acceptance Filter ID Registers cannot be written to.
    0: Acceptance Filter Mask Registers and the Acceptance Filter ID Registers can be written to.
    This bit exists only when the number of acceptance filters is not 0.
    This bit is set when a 0 is written to any of the valid UAF bits in the Acceptance Filter Register.
ps7_can1_SR_TXFLL:
  addr: 0xe0009018
  mask: 0x400
  name: TXFLL
  description: |
    Transmit FIFO Full
    Indicates that the TX FIFO is full.
    1: Indicates the TX FIFO is full.
    0: Indicates the TX FIFO is not full.
ps7_can1_SR_TXBFLL:
  addr: 0xe0009018
  mask: 0x200
  name: TXBFLL
  description: |
    High Priority Transmit Buffer Full
    Indicates the High Priority Transmit Buffer is full.
    1: Indicates the High Priority Transmit Buffer is full.
    0: Indicates the High Priority Transmit Buffer is not full.
ps7_can1_SR_ESTAT:
  addr: 0xe0009018
  mask: 0x180
  name: ESTAT
  description: |
    Error Status
    Indicates the error status of the CAN controller.
    00: Indicates Configuration Mode (CONFIG = 1).
    Error State is undefined.
    01: Indicates Error Active State.
    11: Indicates Error Passive State.
    10: Indicates Bus Off State.
ps7_can1_SR_ERRWRN:
  addr: 0xe0009018
  mask: 0x40
  name: ERRWRN
  description: |
    Error Warning
    Indicates that either the Transmit Error counter or the Receive Error counter has exceeded a value of 96.
    1: One or more error counters have a value greater than or equal to 96.
    0: Neither of the error counters has a value greater than or equal to 96.
ps7_can1_SR_BBSY:
  addr: 0xe0009018
  mask: 0x20
  name: BBSY
  description: |
    Bus Busy
    Indicates the CAN bus status.
    1: Indicates that the CAN controller is either receiving a message or transmitting a message.
    0: Indicates that the CAN controller is either in Configuration mode or the bus is idle.
ps7_can1_SR_BIDLE:
  addr: 0xe0009018
  mask: 0x10
  name: BIDLE
  description: |
    Bus Idle
    Indicates the CAN bus status.
    1: Indicates no bus communication is taking place.
    0: Indicates the CAN controller is either in Configuration mode or the bus is busy.
ps7_can1_SR_NORMAL:
  addr: 0xe0009018
  mask: 0x8
  name: NORMAL
  description: |
    Normal Mode
    Indicates the CAN controller is in Normal Mode.
    1: Indicates the CAN controller is in Normal Mode.
    0: Indicates the CAN controller is not in Normal mode.
ps7_can1_SR_SLEEP:
  addr: 0xe0009018
  mask: 0x4
  name: SLEEP
  description: |
    Sleep Mode
    Indicates the CAN controller is in Sleep mode.
    1: Indicates the CAN controller is in Sleep mode.
    0: Indicates the CAN controller is not in Sleep mode.
ps7_can1_SR_LBACK:
  addr: 0xe0009018
  mask: 0x2
  name: LBACK
  description: |
    Loop Back Mode
    Indicates the CAN controller is in Loop Back mode.
    1: Indicates the CAN controller is in Loop Back
    mode.
    0: Indicates the CAN controller is not in Loop Back
    mode.
ps7_can1_SR_CONFIG:
  addr: 0xe0009018
  mask: 0x1
  name: CONFIG
  description: |
    Configuration Mode Indicator
    Indicates the CAN controller is in Configuration mode.
    1: Indicates the CAN controller is in Configuration mode.
    0: Indicates the CAN controller is not in Configuration mode.
ps7_can1_ISR_reserved:
  addr: 0xe000901c
  mask: 0xffff8000
  name: reserved
  description: |
    reserved
ps7_can1_ISR_TXFEMP:
  addr: 0xe000901c
  mask: 0x4000
  name: TXFEMP
  description: |
    Transmit FIFO EmptyInterrupt
    A 1 indicates that the Transmit FIFO is empty. The interrupt continues to assert as long as the TX FIFO is empty. This bit can be cleared only by writing to the ICR.
ps7_can1_ISR_TXFWMEMP:
  addr: 0xe000901c
  mask: 0x2000
  name: TXFWMEMP
  description: |
    Transmit FIFO Watermark Empty Interrupt
    A 1 indicates that the TX FIFO is empty based on watermark programming.
    The interrupt continues to assert as long as the number of empty spaces in the TX FIFO is greater than TX FIFO
    empty watermark. This bit can be cleared only by writing to the Interrupt Clear Register.
ps7_can1_ISR_RXFWMFLL:
  addr: 0xe000901c
  mask: 0x1000
  name: RXFWMFLL
  description: |
    Receive FIFO Watermark Full Interrupt
    A 1 indicates that the RX FIFO is full based on watermark programming. The interrupt continues to assert as long as the RX FIFO count is above RX FIFO Full watermark. This bit can be cleared only by writing to the Interrupt
    Clear Register.
ps7_can1_ISR_WKUP:
  addr: 0xe000901c
  mask: 0x800
  name: WKUP
  description: |
    Wake up Interrupt
    A 1 indicates that the CAN controller entered Normal
    mode from Sleep Mode.
    This bit can be cleared by writing to the ICR.
    This bit is also cleared when a 0 is written to the CEN
    bit in the SRR.
ps7_can1_ISR_SLP:
  addr: 0xe000901c
  mask: 0x400
  name: SLP
  description: |
    Sleep Interrupt
    A 1 indicates that the CAN controller entered Sleep mode.
    This bit can be cleared by writing to the ICR.
    This bit is also cleared when a 0 is written to the CEN bit in the SRR.
ps7_can1_ISR_BSOFF:
  addr: 0xe000901c
  mask: 0x200
  name: BSOFF
  description: |
    Bus Off Interrupt
    A 1 indicates that the CAN controller entered the Bus Off state. This bit can be cleared by writing to the ICR. This bit is also cleared when a 0 is written to the CEN bit in the SRR.
ps7_can1_ISR_ERROR:
  addr: 0xe000901c
  mask: 0x100
  name: ERROR
  description: |
    Error Interrupt
    A 1 indicates that an error occurred during message transmission or reception.
    This bit can be cleared by writing to the ICR.
    This bit is also cleared when a 0 is written to the CEN bit in the SRR.
ps7_can1_ISR_RXNEMP:
  addr: 0xe000901c
  mask: 0x80
  name: RXNEMP
  description: |
    Receive FIFO Not Empty Interrupt
    A 1 indicates that the Receive FIFO is not empty.
    This bit can be cleared only by writing to the ICR.
ps7_can1_ISR_RXOFLW:
  addr: 0xe000901c
  mask: 0x40
  name: RXOFLW
  description: |
    RX FIFO Overflow Interrupt
    A 1 indicates that a message has been lost. This condition occurs when a new message is being received and the Receive FIFO is Full. This bit can be cleared by writing to the ICR. This bit is also cleared when a 0 is written to the CEN bit in the SRR.
ps7_can1_ISR_RXUFLW:
  addr: 0xe000901c
  mask: 0x20
  name: RXUFLW
  description: |
    RX FIFO Underflow Interrupt
    A 1 indicates that a read operation was attempted on an empty RX FIFO.
    This bit can be cleared only by writing to the ICR.
ps7_can1_ISR_RXOK:
  addr: 0xe000901c
  mask: 0x10
  name: RXOK
  description: |
    New Message Received Interrupt
    A 1 indicates that a message was received successfully and stored into the RX FIFO.
    This bit can be cleared by writing to the ICR.
    This bit is also cleared when a 0 is written to the CEN bit in the SRR.
ps7_can1_ISR_TXBFLL:
  addr: 0xe000901c
  mask: 0x8
  name: TXBFLL
  description: |
    High Priority Transmit Buffer Full Interrupt
    A 1 indicates that the High Priority Transmit Buffer is full.
    The status of the bit is unaffected if write transactions occur on the High Priority Transmit Buffer when it is already full.
    This bit can be cleared only by writing to the ICR.
ps7_can1_ISR_TXFLL:
  addr: 0xe000901c
  mask: 0x4
  name: TXFLL
  description: |
    Transmit FIFO Full Interrupt
    A 1 indicates that the TX FIFO is full.
    The status of the bit is unaffected if write transactions occur on the Transmit FIFO when it is already full.
    This bit can be cleared only by writing to the Interrupt Clear Register.
ps7_can1_ISR_TXOK:
  addr: 0xe000901c
  mask: 0x2
  name: TXOK
  description: |
    Transmission Successful Interrupt
    A 1 indicates that a message was transmitted successfully.
    This bit can be cleared by writing to the ICR.
    This bit is also cleared when a 0 is written to the CEN bit in the SRR.
    In Loop Back mode, both TXOK and RXOK bits are set. The RXOK bit is set before the TXOK bit.
ps7_can1_ISR_ARBLST:
  addr: 0xe000901c
  mask: 0x1
  name: ARBLST
  description: |
    Arbitration Lost Interrupt
    A 1 indicates that arbitration was lost during message transmission.
    This bit can be cleared by writing to the ICR.
    This bit is also cleared when a 0 is written to the CEN bit in the SRR.
ps7_can1_IER_reserved:
  addr: 0xe0009020
  mask: 0xffff8000
  name: reserved
  description: |
    Reserved
ps7_can1_IER_ETXFEMP:
  addr: 0xe0009020
  mask: 0x4000
  name: ETXFEMP
  description: |
    Enable TXFIFO Empty Interrupt
    Writes to this bit enable or disable interrupts when the TXFEMP bit in the ISR is set.
    1: Enable interrupt generation if TXFEMP bit in ISR is set.
    0: Disable interrupt generation if TXFEMP bit in ISR is set.
ps7_can1_IER_ETXFWMEMP:
  addr: 0xe0009020
  mask: 0x2000
  name: ETXFWMEMP
  description: |
    Enable TXFIFO watermark Empty Interrupt
    Writes to this bit enable or disable interrupts when the TXFWMEMP bit in the ISR is set.
    1: Enable interrupt generation if TXFWMEMP bit in ISR is set.
    0: Disable interrupt generation if TXFWMEMP bit in ISR is set.
ps7_can1_IER_ERXFWMFLL:
  addr: 0xe0009020
  mask: 0x1000
  name: ERXFWMFLL
  description: |
    Enable RXFIFO watermark Full Interrupt
    Writes to this bit enable or disable interrupts when the RXFLL bit in the ISR is set.
    1: Enable interrupt generation if RXFWMFLL bit in ISR is set.
    0: Disable interrupt generation if RXFWMFLL bit in ISR is set.
ps7_can1_IER_EWKUP:
  addr: 0xe0009020
  mask: 0x800
  name: EWKUP
  description: |
    Enable Wake up Interrupt
    Writes to this bit enable or disable interrupts when the WKUP bit in the ISR is set.
    1: Enable interrupt generation if WKUP bit in ISR is set.
    0: Disable interrupt generation if WKUP bit in ISR is set.
ps7_can1_IER_ESLP:
  addr: 0xe0009020
  mask: 0x400
  name: ESLP
  description: |
    Enable Sleep Interrupt
    Writes to this bit enable or disable interrupts when the SLP bit in the ISR is set.
    1: Enable interrupt generation if SLP bit in ISR is set.
    0: Disable interrupt generation if SLP bit in ISR is set.
ps7_can1_IER_EBSOFF:
  addr: 0xe0009020
  mask: 0x200
  name: EBSOFF
  description: |
    Enable Bus OFF Interrupt
    Writes to this bit enable or disable interrupts when the BSOFF bit in the ISR is set.
    1: Enable interrupt generation if BSOFF bit in ISR is set.
    0: Disable interrupt generation if BSOFF bit in ISR is set.
ps7_can1_IER_EERROR:
  addr: 0xe0009020
  mask: 0x100
  name: EERROR
  description: |
    Enable Error Interrupt
    Writes to this bit enable or disable interrupts when the ERROR bit in the ISR is set.
    1: Enable interrupt generation if ERROR bit in ISR is set.
    0: Disable interrupt generation if ERROR bit in ISR is set.
ps7_can1_IER_ERXNEMP:
  addr: 0xe0009020
  mask: 0x80
  name: ERXNEMP
  description: |
    Enable Receive FIFO Not Empty Interrupt
    Writes to this bit enable or disable interrupts when the RXNEMP bit in the ISR is set.
    1: Enable interrupt generation if RXNEMP bit in ISR is set.
    0: Disable interrupt generation if RXNEMP bit in ISR is set.
ps7_can1_IER_ERXOFLW:
  addr: 0xe0009020
  mask: 0x40
  name: ERXOFLW
  description: |
    Enable RX FIFO Overflow Interrupt
    Writes to this bit enable or disable interrupts when the RXOFLW bit in the ISR is set.
    1: Enable interrupt generation if RXOFLW bit in ISR is set.
    0: Disable interrupt generation if RXOFLW bit in ISR is set.
ps7_can1_IER_ERXUFLW:
  addr: 0xe0009020
  mask: 0x20
  name: ERXUFLW
  description: |
    Enable RX FIFO Underflow Interrupt
    Writes to this bit enable or disable interrupts when the RXUFLW bit in the ISR is set.
    1: Enable interrupt generation if RXUFLW bit in ISR is set.
    0: Disable interrupt generation if RXUFLW bit in ISR is set.
ps7_can1_IER_ERXOK:
  addr: 0xe0009020
  mask: 0x10
  name: ERXOK
  description: |
    Enable New Message Received Interrupt
    Writes to this bit enable or disable interrupts when the RXOK bit in the ISR is set.
    1: Enable interrupt generation if RXOK bit in ISR is set.
    0: Disable interrupt generation if RXOK bit in ISR is set.
ps7_can1_IER_ETXBFLL:
  addr: 0xe0009020
  mask: 0x8
  name: ETXBFLL
  description: |
    Enable High Priority Transmit Buffer Full Interrupt
    Writes to this bit enable or disable interrupts when the TXBFLL bit in the ISR is set.
    1: Enable interrupt generation if TXBFLL bit in ISR is set.
    0: Disable interrupt generation if TXBFLL bit in ISR is set.
ps7_can1_IER_ETXFLL:
  addr: 0xe0009020
  mask: 0x4
  name: ETXFLL
  description: |
    Enable Transmit FIFO Full Interrupt
    Writes to this bit enable or disable interrupts when TXFLL bit in the ISR is set.
    1: Enable interrupt generation if TXFLL bit in ISR is set.
    0: Disable interrupt generation if TXFLL bit in ISR is set.
ps7_can1_IER_ETXOK:
  addr: 0xe0009020
  mask: 0x2
  name: ETXOK
  description: |
    Enable Transmission Successful Interrupt
    Writes to this bit enable or disable interrupts when the TXOK bit in the ISR is set.
    1: Enable interrupt generation if TXOK bit in ISR is set.
    0: Disable interrupt generation if TXOK bit in ISR is set.
ps7_can1_IER_EARBLST:
  addr: 0xe0009020
  mask: 0x1
  name: EARBLST
  description: |
    Enable Arbitration Lost Interrupt
    Writes to this bit enable or disable interrupts when the ARBLST bit in the ISR is set.
    1: Enable interrupt generation if ARBLST bit in ISR is set.
    0: Disable interrupt generation if ARBLST bit in ISR is set.
ps7_can1_ICR_reserved:
  addr: 0xe0009024
  mask: 0xffff8000
  name: reserved
  description: |
    Reserved
ps7_can1_ICR_CTXFEMP:
  addr: 0xe0009024
  mask: 0x4000
  name: CTXFEMP
  description: |
    Clear TXFIFO Empty Interrupt
    Writing a 1 to this bit clears the TXFEMP bit in the ISR.
ps7_can1_ICR_CTXFWMEMP:
  addr: 0xe0009024
  mask: 0x2000
  name: CTXFWMEMP
  description: |
    Clear TXFIFO Watermark Empty Interrupt
    Writing a 1 to this bit clears the TXFWMEMP bit in the ISR.
ps7_can1_ICR_CRXFWMFLL:
  addr: 0xe0009024
  mask: 0x1000
  name: CRXFWMFLL
  description: |
    Clear RXFIFO Watermark Full Interrupt
    Writing a 1 to this bit clears the RXFWMFLL bit in the ISR.
ps7_can1_ICR_CWKUP:
  addr: 0xe0009024
  mask: 0x800
  name: CWKUP
  description: |
    Clear Wake up Interrupt
    Writing a 1 to this bit clears the WKUP bit in the ISR.
ps7_can1_ICR_CSLP:
  addr: 0xe0009024
  mask: 0x400
  name: CSLP
  description: |
    Clear Sleep Interrupt
    Writing a 1 to this bit clears the SLP bit in the ISR.
ps7_can1_ICR_CBSOFF:
  addr: 0xe0009024
  mask: 0x200
  name: CBSOFF
  description: |
    Clear Bus Off Interrupt
    Writing a 1 to this bit clears the BSOFF bit in the ISR.
ps7_can1_ICR_CERROR:
  addr: 0xe0009024
  mask: 0x100
  name: CERROR
  description: |
    Clear Error Interrupt
    Writing a 1 to this bit clears the ERROR bit in the ISR.
ps7_can1_ICR_CRXNEMP:
  addr: 0xe0009024
  mask: 0x80
  name: CRXNEMP
  description: |
    Clear Receive FIFO Not Empty Interrupt
    Writing a 1 to this bit clears the RXNEMP bit in the ISR.
ps7_can1_ICR_CRXOFLW:
  addr: 0xe0009024
  mask: 0x40
  name: CRXOFLW
  description: |
    Clear RX FIFO Overflow Interrupt
    Writing a 1 to this bit clears the RXOFLW bit in the ISR.
ps7_can1_ICR_CRXUFLW:
  addr: 0xe0009024
  mask: 0x20
  name: CRXUFLW
  description: |
    Clear RX FIFO Underflow Interrupt
    Writing a 1 to this bit clears the RXUFLW bit in the ISR.
ps7_can1_ICR_CRXOK:
  addr: 0xe0009024
  mask: 0x10
  name: CRXOK
  description: |
    Clear New Message Received Interrupt
    Writing a 1 to this bit clears the RXOK bit in the ISR.
ps7_can1_ICR_CTXBFLL:
  addr: 0xe0009024
  mask: 0x8
  name: CTXBFLL
  description: |
    Clear High Priority Transmit Buffer Full Interrupt
    Writing a 1 to this bit clears the TXBFLL bit in the ISR.
ps7_can1_ICR_CTXFLL:
  addr: 0xe0009024
  mask: 0x4
  name: CTXFLL
  description: |
    Clear Transmit FIFO Full Interrupt
    Writing a 1 to this bit clears the TXFLL bit in the ISR.
ps7_can1_ICR_CTXOK:
  addr: 0xe0009024
  mask: 0x2
  name: CTXOK
  description: |
    Clear Transmission Successful Interrupt
    Writing a 1 to this bit clears the CTXOK bit in the ISR.
ps7_can1_ICR_CARBLST:
  addr: 0xe0009024
  mask: 0x1
  name: CARBLST
  description: |
    Clear Arbitration Lost Interrupt
    Writing a 1 to this bit clears the ARBLST bit in the ISR.
ps7_can1_TCR_reserved:
  addr: 0xe0009028
  mask: 0xfffffffe
  name: reserved
  description: |
    reserved
ps7_can1_TCR_CTS:
  addr: 0xe0009028
  mask: 0x1
  name: CTS
  description: |
    Clear Timestamp
    Internal free running counter is cleared to 0 when CTS=1. This bit only needs to be written once with a 1 to clear the counter. The bit will automatically return to 0.
ps7_can1_WIR_reserved:
  addr: 0xe000902c
  mask: 0xffff0000
  name: reserved
  description: |
    reserved
ps7_can1_WIR_EW:
  addr: 0xe000902c
  mask: 0xff00
  name: EW
  description: |
    TXFIFO Empty watermark
    TXFIFO generates an EMPTY interrupt based on the value programmed in this field. The valid range is (1-63). Only bits 18-23 are writable. No protection is given for illegal programming in this field. This field can be written to only when CEN bit in SRR is 0.
ps7_can1_WIR_FW:
  addr: 0xe000902c
  mask: 0xff
  name: FW
  description: |
    RXFIFO Full watermark
    RXFIFO generates FULL interrupt based on the value programmed in this field. The valid range is (1-63). Only bits 26-31 are writable. No protection is given for illegal programming in this field. This field can be written to only when CEN bit in SRR is 0.
ps7_can1_TXFIFO_ID_IDH:
  addr: 0xe0009030
  mask: 0xffe00000
  name: IDH
  description: |
    Standard Message ID
    The Identifier portion for a Standard Frame is 11 bits. These bits indicate the Standard Frame ID. This field is valid for both Standard and Extended Frames.
ps7_can1_TXFIFO_ID_SRRRTR:
  addr: 0xe0009030
  mask: 0x100000
  name: SRRRTR
  description: |
    Substitute Remote Transmission Request
    This bit differentiates between data frames and remote frames. Valid only for Standard Frames. For Extended frames this bit is 1.
    1: Indicates that the message frame is a Remote Frame.
    0: Indicates that the message frame is a Data Frame.
ps7_can1_TXFIFO_ID_IDE:
  addr: 0xe0009030
  mask: 0x80000
  name: IDE
  description: |
    Identifier Extension
    This bit differentiates between frames using the Standard Identifier and those using the Extended Identifier. Valid for both Standard and Extended Frames.
    1: Indicates the use of an Extended Message Identifier.
    0: Indicates the use of a Standard Message Identifier.
ps7_can1_TXFIFO_ID_IDL:
  addr: 0xe0009030
  mask: 0x7fffe
  name: IDL
  description: |
    Extended Message ID
    This field indicates the Extended Identifier. Valid only for Extended Frames. For Standard Frames, reads from this field return 0s. For Standard Frames, writes to this field should be 0s.
ps7_can1_TXFIFO_ID_RTR:
  addr: 0xe0009030
  mask: 0x1
  name: RTR
  description: |
    Remote Transmission Request
    This bit differentiates between data frames and remote frames. Valid only for Extended Frames.
    1: Indicates the message object is a Remote Frame
    0: Indicates the message object is a Data Frame
    For Standard Frames, reads from this bit returns 0
    For Standard Frames, writes to this bit should be 0
ps7_can1_TXFIFO_DLC_DLC:
  addr: 0xe0009034
  mask: 0xf0000000
  name: DLC
  description: |
    Data Length Code
    This is the data length portion of the control field of the CAN frame. This indicates the number valid data bytes in Data Word 1 and Data Word 2 registers.
ps7_can1_TXFIFO_DLC_reserved:
  addr: 0xe0009034
  mask: 0xfffffff
  name: reserved
  description: |
    reserved
ps7_can1_TXFIFO_DATA1_DB0:
  addr: 0xe0009038
  mask: 0xff000000
  name: DB0
  description: |
    Data Byte 0
    Reads from this field return invalid data if the message has no data.
ps7_can1_TXFIFO_DATA1_DB1:
  addr: 0xe0009038
  mask: 0xff0000
  name: DB1
  description: |
    Data Byte 1
    Reads from this field return invalid data if the message has only 1 byte of data or fewer
ps7_can1_TXFIFO_DATA1_DB2:
  addr: 0xe0009038
  mask: 0xff00
  name: DB2
  description: |
    Data Byte 2
    Reads from this field return invalid data if the message has only 2 byte of data or fewer
ps7_can1_TXFIFO_DATA1_DB3:
  addr: 0xe0009038
  mask: 0xff
  name: DB3
  description: |
    Data Byte 3
    Reads from this field return invalid data if the message has only 3 byte of data or fewer
ps7_can1_TXFIFO_DATA2_DB0:
  addr: 0xe000903c
  mask: 0xff000000
  name: DB0
  description: |
    Data Byte 4
    Reads from this field return invalid data if the message has only 4 byte of data or fewer
ps7_can1_TXFIFO_DATA2_DB1:
  addr: 0xe000903c
  mask: 0xff0000
  name: DB1
  description: |
    Data Byte 5
    Reads from this field return invalid data if the message has only 5 byte of data or fewer
ps7_can1_TXFIFO_DATA2_DB2:
  addr: 0xe000903c
  mask: 0xff00
  name: DB2
  description: |
    Data Byte 6
    Reads from this field return invalid data if the message has only 6 byte of data or fewer
ps7_can1_TXFIFO_DATA2_DB3:
  addr: 0xe000903c
  mask: 0xff
  name: DB3
  description: |
    Data Byte 7
    Reads from this field return invalid data if the message has 7 byte of data or fewer
ps7_can1_TXHPB_ID_IDH:
  addr: 0xe0009040
  mask: 0xffe00000
  name: IDH
  description: |
    Standard Message ID
    The Identifier portion for a Standard Frame is 11 bits. These bits indicate the Standard Frame ID. This field is valid for both Standard and Extended Frames.
ps7_can1_TXHPB_ID_SRRRTR:
  addr: 0xe0009040
  mask: 0x100000
  name: SRRRTR
  description: |
    Substitute Remote Transmission Request
    This bit differentiates between data frames and remote frames. Valid only for Standard Frames. For Extended frames this bit is 1.
    1: Indicates that the message frame is a Remote Frame.
    0: Indicates that the message frame is a Data Frame.
ps7_can1_TXHPB_ID_IDE:
  addr: 0xe0009040
  mask: 0x80000
  name: IDE
  description: |
    Identifier Extension
    This bit differentiates between frames using the Standard Identifier and those using the Extended Identifier. Valid for both Standard and Extended Frames.
    1: Indicates the use of an Extended Message Identifier.
    0: Indicates the use of a Standard Message Identifier.
ps7_can1_TXHPB_ID_IDL:
  addr: 0xe0009040
  mask: 0x7fffe
  name: IDL
  description: |
    Extended Message ID
    This field indicates the Extended Identifier. Valid only for Extended Frames. For Standard Frames, reads from this field return 0s. For Standard Frames, writes to this field should be 0s.
ps7_can1_TXHPB_ID_RTR:
  addr: 0xe0009040
  mask: 0x1
  name: RTR
  description: |
    Remote Transmission Request
    This bit differentiates between data frames and remote frames. Valid only for Extended Frames.
    1: Indicates the message object is a Remote Frame
    0: Indicates the message object is a Data Frame
    For Standard Frames, reads from this bit returns 0
    For Standard Frames, writes to this bit should be 0
ps7_can1_TXHPB_DLC_DLC:
  addr: 0xe0009044
  mask: 0xf0000000
  name: DLC
  description: |
    Data Length Code
    This is the data length portion of the control field of the CAN frame. This indicates the number valid data bytes in Data Word 1 and Data Word 2 registers.
ps7_can1_TXHPB_DLC_reserved:
  addr: 0xe0009044
  mask: 0xfffffff
  name: reserved
  description: |
    reserved
ps7_can1_TXHPB_DATA1_DB0:
  addr: 0xe0009048
  mask: 0xff000000
  name: DB0
  description: |
    Data Byte 0
    Reads from this field return invalid data if the message has no data.
ps7_can1_TXHPB_DATA1_DB1:
  addr: 0xe0009048
  mask: 0xff0000
  name: DB1
  description: |
    Data Byte 1
    Reads from this field return invalid data if the message has only 1 byte of data or fewer
ps7_can1_TXHPB_DATA1_DB2:
  addr: 0xe0009048
  mask: 0xff00
  name: DB2
  description: |
    Data Byte 2
    Reads from this field return invalid data if the message has only 2 byte of data or fewer
ps7_can1_TXHPB_DATA1_DB3:
  addr: 0xe0009048
  mask: 0xff
  name: DB3
  description: |
    Data Byte 3
    Reads from this field return invalid data if the message has only 3 byte of data or fewer
ps7_can1_TXHPB_DATA2_DB0:
  addr: 0xe000904c
  mask: 0xff000000
  name: DB0
  description: |
    Data Byte 4
    Reads from this field return invalid data if the message has only 4 byte of data or fewer
ps7_can1_TXHPB_DATA2_DB1:
  addr: 0xe000904c
  mask: 0xff0000
  name: DB1
  description: |
    Data Byte 5
    Reads from this field return invalid data if the message has only 5 byte of data or fewer
ps7_can1_TXHPB_DATA2_DB2:
  addr: 0xe000904c
  mask: 0xff00
  name: DB2
  description: |
    Data Byte 6
    Reads from this field return invalid data if the message has only 6 byte of data or fewer
ps7_can1_TXHPB_DATA2_DB3:
  addr: 0xe000904c
  mask: 0xff
  name: DB3
  description: |
    Data Byte 7
    Reads from this field return invalid data if the message has 7 byte of data or fewer
ps7_can1_RXFIFO_ID_IDH:
  addr: 0xe0009050
  mask: 0xffe00000
  name: IDH
  description: |
    Standard Message ID
    The Identifier portion for a Standard Frame is 11 bits.
    These bits indicate the Standard Frame ID.
    This field is valid for both Standard and Extended Frames.
ps7_can1_RXFIFO_ID_SRRRTR:
  addr: 0xe0009050
  mask: 0x100000
  name: SRRRTR
  description: |
    Substitute Remote Transmission Request
    This bit differentiates between data frames and remote frames. Valid only for Standard Frames. For Extended frames this bit is 1.
    1: Indicates that the message frame is a Remote Frame.
    0: Indicates that the message frame is a Data Frame.
ps7_can1_RXFIFO_ID_IDE:
  addr: 0xe0009050
  mask: 0x80000
  name: IDE
  description: |
    Identifier Extension
    This bit differentiates between frames using the Standard Identifier and those using the Extended Identifier. Valid for both Standard and Extended Frames.
    1: Indicates the use of an Extended Message Identifier.
    0: Indicates the use of a Standard Message Identifier.
ps7_can1_RXFIFO_ID_IDL:
  addr: 0xe0009050
  mask: 0x7fffe
  name: IDL
  description: |
    Extended Message ID
    This field indicates the Extended Identifier.
    Valid only for Extended Frames.
    For Standard Frames, reads from this field return 0s
    For Standard Frames, writes to this field should be 0s
ps7_can1_RXFIFO_ID_RTR:
  addr: 0xe0009050
  mask: 0x1
  name: RTR
  description: |
    Remote Transmission Request
    This bit differentiates between data frames and remote frames.
    Valid only for Extended Frames.
    1: Indicates the message object is a Remote Frame
    0: Indicates the message object is a Data Frame
    For Standard Frames, reads from this bit returns 0
    For Standard Frames, writes to this bit should be 0
ps7_can1_RXFIFO_DLC_DLC:
  addr: 0xe0009054
  mask: 0xf0000000
  name: DLC
  description: |
    Data Length Code
    This is the data length portion of the control field of the CAN frame. This indicates the number valid data bytes in Data Word 1 and Data Word 2 registers.
ps7_can1_RXFIFO_DLC_reserved:
  addr: 0xe0009054
  mask: 0xfff0000
  name: reserved
  description: |
    reserved
ps7_can1_RXFIFO_DLC_RXT:
  addr: 0xe0009054
  mask: 0xffff
  name: RXT
  description: |
    RX Timestamp
ps7_can1_RXFIFO_DATA1_DB0:
  addr: 0xe0009058
  mask: 0xff000000
  name: DB0
  description: |
    Data Byte 0
    Reads from this field return invalid data if the message has no data.
ps7_can1_RXFIFO_DATA1_DB1:
  addr: 0xe0009058
  mask: 0xff0000
  name: DB1
  description: |
    Data Byte 1
    Reads from this field return invalid data if the message has only 1 byte of data or fewer
ps7_can1_RXFIFO_DATA1_DB2:
  addr: 0xe0009058
  mask: 0xff00
  name: DB2
  description: |
    Data Byte 2
    Reads from this field return invalid data if the message has only 2 byte of data or fewer
ps7_can1_RXFIFO_DATA1_DB3:
  addr: 0xe0009058
  mask: 0xff
  name: DB3
  description: |
    Data Byte 3
    Reads from this field return invalid data if the message has only 3 byte of data or fewer
ps7_can1_RXFIFO_DATA2_DB0:
  addr: 0xe000905c
  mask: 0xff000000
  name: DB0
  description: |
    Data Byte 4
    Reads from this field return invalid data if the message has only 4 byte of data or fewer
ps7_can1_RXFIFO_DATA2_DB1:
  addr: 0xe000905c
  mask: 0xff0000
  name: DB1
  description: |
    Data Byte 5
    Reads from this field return invalid data if the message has only 5 byte of data or fewer
ps7_can1_RXFIFO_DATA2_DB2:
  addr: 0xe000905c
  mask: 0xff00
  name: DB2
  description: |
    Data Byte 6
    Reads from this field return invalid data if the message has only 6 byte of data or fewer
ps7_can1_RXFIFO_DATA2_DB3:
  addr: 0xe000905c
  mask: 0xff
  name: DB3
  description: |
    Data Byte 7
    Reads from this field return invalid data if the message has 7 byte of data or fewer
ps7_can1_AFR_reserved:
  addr: 0xe0009060
  mask: 0xfffffff0
  name: reserved
  description: |
    reserved
ps7_can1_AFR_UAF4:
  addr: 0xe0009060
  mask: 0x8
  name: UAF4
  description: |
    Use Acceptance Filter Number 4
    Enables the use of acceptance filter pair 4.
    1: Indicates Acceptance Filter Mask Register 4 and Acceptance Filter ID Register 4 are used for acceptance filtering.
    0: Indicates Acceptance Filter Mask Register 4 and Acceptance Filter ID Register 4 are not used for acceptance filtering.
ps7_can1_AFR_UAF3:
  addr: 0xe0009060
  mask: 0x4
  name: UAF3
  description: |
    Use Acceptance Filter Number 3
    Enables the use of acceptance filter pair 3.
    1: Indicates Acceptance Filter Mask Register 3 and Acceptance Filter ID Register 3 are used for acceptance filtering.
    0: Indicates Acceptance Filter Mask Register 3 and Acceptance Filter ID Register 3 are not used for acceptance filtering.
ps7_can1_AFR_UAF2:
  addr: 0xe0009060
  mask: 0x2
  name: UAF2
  description: |
    Use Acceptance Filter Number 2
    Enables the use of acceptance filter pair 2.
    1: Indicates Acceptance Filter Mask Register 2 and Acceptance Filter ID Register 2 are used for acceptance filtering.
    0: Indicates Acceptance Filter Mask Register 2 and Acceptance Filter ID Register 2 are not used for acceptance filtering.
ps7_can1_AFR_UAF1:
  addr: 0xe0009060
  mask: 0x1
  name: UAF1
  description: |
    Use Acceptance Filter Number 1.
    Enables the use of acceptance filter pair 1.
    1: Indicates Acceptance Filter Mask Register 1 and
    Acceptance Filter ID Register 1 are used for
    acceptance filtering.
    0: Indicates Acceptance Filter Mask Register 1 and
    Acceptance Filter ID Register 1 are not used for
    acceptance filtering.
ps7_can1_AFMR1_AMIDH:
  addr: 0xe0009064
  mask: 0xffe00000
  name: AMIDH
  description: |
    Standard Message ID Mask
    These bits are used for masking the Identifier in a Standard Frame.
    1: Indicates the corresponding bit in Acceptance Mask ID Register is used when comparing the incoming message identifier.
    0: Indicates the corresponding bit in Acceptance Mask ID Register is not used when comparing the incoming message identifier.
ps7_can1_AFMR1_AMSRR:
  addr: 0xe0009064
  mask: 0x100000
  name: AMSRR
  description: |
    Substitute Remote Transmission Request Mask
    This bit is used for masking the RTR bit in a Standard Frame.
    1: Indicates the corresponding bit in Acceptance Mask ID Register is used when comparing the incoming message identifier.
    0: Indicates the corresponding bit in Acceptance Mask ID Register is not used when comparing the incoming message identifier.
ps7_can1_AFMR1_AMIDE:
  addr: 0xe0009064
  mask: 0x80000
  name: AMIDE
  description: |
    Identifier Extension Mask
    Used for masking the IDE bit in CAN frames.
    1: Indicates the corresponding bit in Acceptance Mask ID Register is used when comparing the incoming message identifier.
    0: Indicates the corresponding bit in Acceptance Mask ID Register is not used when comparing the incoming message identifier.
    If AMIDE = 1 and the AIIDE bit in the corresponding Acceptance ID register is 0, this mask is applicable to only Standard frames.
    If AMIDE = 1 and the AIIDE bit in the corresponding Acceptance ID register is 1, this mask is applicable to only extended frames.
    If AMIDE = 0 this mask is applicable to Standard frame.
ps7_can1_AFMR1_AMIDL:
  addr: 0xe0009064
  mask: 0x7fffe
  name: AMIDL
  description: |
    Extended Message ID Mask
    These bits are used for masking the Identifier in an Extended Frame.
    1: Indicates the corresponding bit in Acceptance Mask ID Register is used when comparing the incoming message identifier.
    0: Indicates the corresponding bit in Acceptance Mask ID Register is not used when comparing the incoming message identifier.
ps7_can1_AFMR1_AMRTR:
  addr: 0xe0009064
  mask: 0x1
  name: AMRTR
  description: |
    Remote Transmission Request Mask.
    This bit is used for masking the RTR bit in an Extended Frame.
    1: Indicates the corresponding bit in Acceptance Mask ID Register is used when comparing the incoming message identifier.
    0: Indicates the corresponding bit in Acceptance Mask ID Register is not used when comparing the incoming message identifier.
ps7_can1_AFIR1_AIIDH:
  addr: 0xe0009068
  mask: 0xffe00000
  name: AIIDH
  description: |
    Standard Message ID
    Standard Identifier
ps7_can1_AFIR1_AISRR:
  addr: 0xe0009068
  mask: 0x100000
  name: AISRR
  description: |
    Substitute Remote Transmission Request
    Indicates the Remote Transmission Request bit for Standard frames
ps7_can1_AFIR1_AIIDE:
  addr: 0xe0009068
  mask: 0x80000
  name: AIIDE
  description: |
    Identifier Extension
    Differentiates between Standard and Extended frames
ps7_can1_AFIR1_AIIDL:
  addr: 0xe0009068
  mask: 0x7fffe
  name: AIIDL
  description: |
    Extended Message ID Mask Extended Identifier
ps7_can1_AFIR1_AIRTR:
  addr: 0xe0009068
  mask: 0x1
  name: AIRTR
  description: |
    Remote Transmission Request Mask RTR bit for Extended frames.
ps7_can1_AFMR2_AMIDH:
  addr: 0xe000906c
  mask: 0xffe00000
  name: AMIDH
  description: |
    Standard Message ID Mask
    These bits are used for masking the Identifier in a Standard Frame.
    1: Indicates the corresponding bit in Acceptance Mask ID Register is used when comparing the incoming message identifier.
    0: Indicates the corresponding bit in Acceptance Mask ID Register is not used when comparing the incoming message identifier.
ps7_can1_AFMR2_AMSRR:
  addr: 0xe000906c
  mask: 0x100000
  name: AMSRR
  description: |
    Substitute Remote Transmission Request Mask
    This bit is used for masking the RTR bit in a Standard Frame.
    1: Indicates the corresponding bit in Acceptance Mask ID Register is used when comparing the incoming message identifier.
    0: Indicates the corresponding bit in Acceptance Mask ID Register is not used when comparing the incoming message identifier.
ps7_can1_AFMR2_AMIDE:
  addr: 0xe000906c
  mask: 0x80000
  name: AMIDE
  description: |
    Identifier Extension Mask
    Used for masking the IDE bit in CAN frames.
    1: Indicates the corresponding bit in Acceptance Mask ID Register is used when comparing the incoming message identifier.
    0: Indicates the corresponding bit in Acceptance Mask ID Register is not used when comparing the incoming message identifier.
    If AMIDE = 1 and the AIIDE bit in the corresponding Acceptance ID register is 0, this mask is applicable to only Standard frames.
    If AMIDE = 1 and the AIIDE bit in the corresponding Acceptance ID register is 1, this mask is applicable to only extended frames.
    If AMIDE = 0 this mask is applicable to Standard frame.
ps7_can1_AFMR2_AMIDL:
  addr: 0xe000906c
  mask: 0x7fffe
  name: AMIDL
  description: |
    Extended Message ID Mask
    These bits are used for masking the Identifier in an Extended Frame.
    1: Indicates the corresponding bit in Acceptance Mask ID Register is used when comparing the incoming message identifier.
    0: Indicates the corresponding bit in Acceptance Mask ID Register is not used when comparing the incoming message identifier.
ps7_can1_AFMR2_AMRTR:
  addr: 0xe000906c
  mask: 0x1
  name: AMRTR
  description: |
    Remote Transmission Request Mask.
    This bit is used for masking the RTR bit in an Extended Frame.
    1: Indicates the corresponding bit in Acceptance Mask ID Register is used when comparing the incoming message identifier.
    0: Indicates the corresponding bit in Acceptance Mask ID Register is not used when comparing the incoming message identifier.
ps7_can1_AFIR2_AIIDH:
  addr: 0xe0009070
  mask: 0xffe00000
  name: AIIDH
  description: |
    Standard Message ID
    Standard Identifier
ps7_can1_AFIR2_AISRR:
  addr: 0xe0009070
  mask: 0x100000
  name: AISRR
  description: |
    Substitute Remote Transmission Request
    Indicates the Remote Transmission Request bit for Standard frames
ps7_can1_AFIR2_AIIDE:
  addr: 0xe0009070
  mask: 0x80000
  name: AIIDE
  description: |
    Identifier Extension
    Differentiates between Standard and Extended frames
ps7_can1_AFIR2_AIIDL:
  addr: 0xe0009070
  mask: 0x7fffe
  name: AIIDL
  description: |
    Extended Message ID Mask Extended Identifier
ps7_can1_AFIR2_AIRTR:
  addr: 0xe0009070
  mask: 0x1
  name: AIRTR
  description: |
    Remote Transmission Request Mask RTR bit for Extended frames.
ps7_can1_AFMR3_AMIDH:
  addr: 0xe0009074
  mask: 0xffe00000
  name: AMIDH
  description: |
    Standard Message ID Mask
    These bits are used for masking the Identifier in a Standard Frame.
    1: Indicates the corresponding bit in Acceptance Mask ID Register is used when comparing the incoming message identifier.
    0: Indicates the corresponding bit in Acceptance Mask ID Register is not used when comparing the incoming message identifier.
ps7_can1_AFMR3_AMSRR:
  addr: 0xe0009074
  mask: 0x100000
  name: AMSRR
  description: |
    Substitute Remote Transmission Request Mask
    This bit is used for masking the RTR bit in a Standard Frame.
    1: Indicates the corresponding bit in Acceptance Mask ID Register is used when comparing the incoming message identifier.
    0: Indicates the corresponding bit in Acceptance Mask ID Register is not used when comparing the incoming message identifier.
ps7_can1_AFMR3_AMIDE:
  addr: 0xe0009074
  mask: 0x80000
  name: AMIDE
  description: |
    Identifier Extension Mask
    Used for masking the IDE bit in CAN frames.
    1: Indicates the corresponding bit in Acceptance Mask ID Register is used when comparing the incoming message identifier.
    0: Indicates the corresponding bit in Acceptance Mask ID Register is not used when comparing the incoming message identifier.
    If AMIDE = 1 and the AIIDE bit in the corresponding Acceptance ID register is 0, this mask is applicable to only Standard frames.
    If AMIDE = 1 and the AIIDE bit in the corresponding Acceptance ID register is 1, this mask is applicable to only extended frames.
    If AMIDE = 0 this mask is applicable to Standard frame.
ps7_can1_AFMR3_AMIDL:
  addr: 0xe0009074
  mask: 0x7fffe
  name: AMIDL
  description: |
    Extended Message ID Mask
    These bits are used for masking the Identifier in an Extended Frame.
    1: Indicates the corresponding bit in Acceptance Mask ID Register is used when comparing the incoming message identifier.
    0: Indicates the corresponding bit in Acceptance Mask ID Register is not used when comparing the incoming message identifier.
ps7_can1_AFMR3_AMRTR:
  addr: 0xe0009074
  mask: 0x1
  name: AMRTR
  description: |
    Remote Transmission Request Mask.
    This bit is used for masking the RTR bit in an Extended Frame.
    1: Indicates the corresponding bit in Acceptance Mask ID Register is used when comparing the incoming message identifier.
    0: Indicates the corresponding bit in Acceptance Mask ID Register is not used when comparing the incoming message identifier.
ps7_can1_AFIR3_AIIDH:
  addr: 0xe0009078
  mask: 0xffe00000
  name: AIIDH
  description: |
    Standard Message ID
    Standard Identifier
ps7_can1_AFIR3_AISRR:
  addr: 0xe0009078
  mask: 0x100000
  name: AISRR
  description: |
    Substitute Remote Transmission Request
    Indicates the Remote Transmission Request bit for Standard frames
ps7_can1_AFIR3_AIIDE:
  addr: 0xe0009078
  mask: 0x80000
  name: AIIDE
  description: |
    Identifier Extension
    Differentiates between Standard and Extended frames
ps7_can1_AFIR3_AIIDL:
  addr: 0xe0009078
  mask: 0x7fffe
  name: AIIDL
  description: |
    Extended Message ID Mask Extended Identifier
ps7_can1_AFIR3_AIRTR:
  addr: 0xe0009078
  mask: 0x1
  name: AIRTR
  description: |
    Remote Transmission Request Mask RTR bit for Extended frames.
ps7_can1_AFMR4_AMIDH:
  addr: 0xe000907c
  mask: 0xffe00000
  name: AMIDH
  description: |
    Standard Message ID Mask
    These bits are used for masking the Identifier in a Standard Frame.
    1: Indicates the corresponding bit in Acceptance Mask ID Register is used when comparing the incoming message identifier.
    0: Indicates the corresponding bit in Acceptance Mask ID Register is not used when comparing the incoming message identifier.
ps7_can1_AFMR4_AMSRR:
  addr: 0xe000907c
  mask: 0x100000
  name: AMSRR
  description: |
    Substitute Remote Transmission Request Mask
    This bit is used for masking the RTR bit in a Standard Frame.
    1: Indicates the corresponding bit in Acceptance Mask ID Register is used when comparing the incoming message identifier.
    0: Indicates the corresponding bit in Acceptance Mask ID Register is not used when comparing the incoming message identifier.
ps7_can1_AFMR4_AMIDE:
  addr: 0xe000907c
  mask: 0x80000
  name: AMIDE
  description: |
    Identifier Extension Mask
    Used for masking the IDE bit in CAN frames.
    1: Indicates the corresponding bit in Acceptance Mask ID Register is used when comparing the incoming message identifier.
    0: Indicates the corresponding bit in Acceptance Mask ID Register is not used when comparing the incoming message identifier.
    If AMIDE = 1 and the AIIDE bit in the corresponding Acceptance ID register is 0, this mask is applicable to only Standard frames.
    If AMIDE = 1 and the AIIDE bit in the corresponding Acceptance ID register is 1, this mask is applicable to only extended frames.
    If AMIDE = 0 this mask is applicable to Standard frame.
ps7_can1_AFMR4_AMIDL:
  addr: 0xe000907c
  mask: 0x7fffe
  name: AMIDL
  description: |
    Extended Message ID Mask
    These bits are used for masking the Identifier in an Extended Frame.
    1: Indicates the corresponding bit in Acceptance Mask ID Register is used when comparing the incoming message identifier.
    0: Indicates the corresponding bit in Acceptance Mask ID Register is not used when comparing the incoming message identifier.
ps7_can1_AFMR4_AMRTR:
  addr: 0xe000907c
  mask: 0x1
  name: AMRTR
  description: |
    Remote Transmission Request Mask.
    This bit is used for masking the RTR bit in an Extended Frame.
    1: Indicates the corresponding bit in Acceptance Mask ID Register is used when comparing the incoming message identifier.
    0: Indicates the corresponding bit in Acceptance Mask ID Register is not used when comparing the incoming message identifier.
ps7_can1_AFIR4_AIIDH:
  addr: 0xe0009080
  mask: 0xffe00000
  name: AIIDH
  description: |
    Standard Message ID
    Standard Identifier
ps7_can1_AFIR4_AISRR:
  addr: 0xe0009080
  mask: 0x100000
  name: AISRR
  description: |
    Substitute Remote Transmission Request
    Indicates the Remote Transmission Request bit for Standard frames
ps7_can1_AFIR4_AIIDE:
  addr: 0xe0009080
  mask: 0x80000
  name: AIIDE
  description: |
    Identifier Extension
    Differentiates between Standard and Extended frames
ps7_can1_AFIR4_AIIDL:
  addr: 0xe0009080
  mask: 0x7fffe
  name: AIIDL
  description: |
    Extended Message ID Mask Extended Identifier
ps7_can1_AFIR4_AIRTR:
  addr: 0xe0009080
  mask: 0x1
  name: AIRTR
  description: |
    Remote Transmission Request Mask RTR bit for Extended frames.
ps7_can0_SRR_reserved:
  addr: 0xe0008000
  mask: 0xfffffffc
  name: reserved
  description: |
    Reserved.
ps7_can0_SRR_CEN:
  addr: 0xe0008000
  mask: 0x2
  name: CEN
  description: |
    Can Enable
    The Enable bit for the CAN controller.
    1: The CAN controller is in Loop Back, Sleep or Normal mode depending on the LBACK and SLEEP bits in the MSR.
    0: The CAN controller is in the Configuration mode.
    If the CEN bit is changed during core operation, it is recommended to reset the core so that operations start afresh.
ps7_can0_SRR_SRST:
  addr: 0xe0008000
  mask: 0x1
  name: SRST
  description: |
    Reset
    The Software reset bit for the CAN controller.
    1: CAN controller is reset.
    If a 1 is written to this bit, all the CAN controller configuration registers (including the SRR) are reset. Reads to this bit always return a 0.
ps7_can0_MSR_reserved:
  addr: 0xe0008004
  mask: 0xfffffff8
  name: reserved
  description: |
    Reserved.
ps7_can0_MSR_SNOOP:
  addr: 0xe0008004
  mask: 0x4
  name: SNOOP
  description: |
    Snoop Mode Select
    The Snoop Mode Select bit.
    1: CAN controller is in Snoop mode.
    0: CAN controller is in Normal, Loop Back, Configuration, or Sleep mode.
    This bit can be written to only when CEN bit in SRR is 0.
ps7_can0_MSR_LBACK:
  addr: 0xe0008004
  mask: 0x2
  name: LBACK
  description: |
    Loop Back Mode Select
    The Loop Back Mode Select bit.
    1: CAN controller is in Loop Back mode.
    0: CAN controller is in Normal, Snoop, Configuration, or Sleep mode.
    This bit can be written to only when CEN bit in SRR is 0.
ps7_can0_MSR_SLEEP:
  addr: 0xe0008004
  mask: 0x1
  name: SLEEP
  description: |
    Sleep Mode Select
    The Sleep Mode select bit.
    1: CAN controller is in Sleep mode.
    0: CAN controller is in Normal, Snoop, Configuration or Loop Back mode.
    This bit is cleared when the CAN controller wakes up from the Sleep mode.
ps7_can0_BRPR_reserved:
  addr: 0xe0008008
  mask: 0xffffff00
  name: reserved
  description: |
    Reserved
ps7_can0_BRPR_BRP:
  addr: 0xe0008008
  mask: 0xff
  name: BRP
  description: |
    Baud Rate Prescaler
    These bits indicate the prescaler value. The actual value ranges from 1 to 256.
ps7_can0_BTR_reserved:
  addr: 0xe000800c
  mask: 0xfffffe00
  name: reserved
  description: |
    Reserved
ps7_can0_BTR_SJW:
  addr: 0xe000800c
  mask: 0x180
  name: SJW
  description: |
    Synchronization Jump Width
    Indicates the Synchronization Jump Width as specified in the CAN 2.0A and CAN 2.0B standard. The actual value is one more than the value written to the register.
ps7_can0_BTR_TS2:
  addr: 0xe000800c
  mask: 0x70
  name: TS2
  description: |
    Time Segment 2
    Indicates Phase Segment 2 as specified in the CAN 2.0A and CAN 2.0B standard. The actual value is one more than the value written to the register.
ps7_can0_BTR_TS1:
  addr: 0xe000800c
  mask: 0xf
  name: TS1
  description: |
    Time Segment 1
    Indicates the Sum of Propagation Segment and Phase
    Segment 1 as specified in the CAN 2.0A and CAN 2.0B standard. The actual value is one more than the value written to the register.
ps7_can0_ECR_reserved:
  addr: 0xe0008010
  mask: 0xffff0000
  name: reserved
  description: |
    Reserved
ps7_can0_ECR_REC:
  addr: 0xe0008010
  mask: 0xff00
  name: REC
  description: |
    Receive Error Counter
    Indicates the Value of the Receive Error Counter.
ps7_can0_ECR_TEC:
  addr: 0xe0008010
  mask: 0xff
  name: TEC
  description: |
    Transmit Error Counter
    Indicates the Value of the Transmit Error Counter.
ps7_can0_ESR_reserved:
  addr: 0xe0008014
  mask: 0xffffffe0
  name: reserved
  description: |
    Reserved
ps7_can0_ESR_ACKER:
  addr: 0xe0008014
  mask: 0x10
  name: ACKER
  description: |
    ACK Error
    Indicates an acknowledgment error.
    1: Indicates an acknowledgment error has occurred.
    0: Indicates an acknowledgment error has not occurred on the bus since the last write to this register.
    If this bit is set, writing a 1 clears it.
ps7_can0_ESR_BERR:
  addr: 0xe0008014
  mask: 0x8
  name: BERR
  description: |
    Bit Error
    Indicates the received bit is not the same as the transmitted bit during bus communication.
    1: Indicates a bit error has occurred.
    0: Indicates a bit error has not occurred on the bus since the last write to this register.
    If this bit is set, writing a 1 clears it.
ps7_can0_ESR_STER:
  addr: 0xe0008014
  mask: 0x4
  name: STER
  description: |
    Stuff Error
    Indicates an error if there is a stuffing violation.
    1: Indicates a stuff error has occurred.
    0: Indicates a stuff error has not occurred on the bus since the last write to this register.
    If this bit is set, writing a 1 clears it.
ps7_can0_ESR_FMER:
  addr: 0xe0008014
  mask: 0x2
  name: FMER
  description: |
    Form Error
    Indicates an error in one of the fixed form fields in the message frame.
    1: Indicates a form error has occurred.
    0: Indicates a form error has not occurred on the bus since the last write to this register.
    If this bit is set, writing a 1 clears it.
ps7_can0_ESR_CRCER:
  addr: 0xe0008014
  mask: 0x1
  name: CRCER
  description: |
    CRC Error
    Indicates a CRC error has occurred.
    1: Indicates a CRC error has occurred.
    0: Indicates a CRC error has not occurred on the
    bus since the last write to this register.
    If this bit is set, writing a 1 clears it.
    In case of a CRC Error and a CRC delimiter corruption, only the FMER bit is set.
ps7_can0_SR_reserved:
  addr: 0xe0008018
  mask: 0xffffe000
  name: reserved
  description: |
    Reserved
ps7_can0_SR_SNOOP:
  addr: 0xe0008018
  mask: 0x1000
  name: SNOOP
  description: |
    Snoop Mode
    Indicates the CAN controller is in Snoop Mode.
    1: Indicates the CAN controller is in Snoop Mode.
    0: Indicates the CAN controller is not in Snoop mode.
ps7_can0_SR_ACFBSY:
  addr: 0xe0008018
  mask: 0x800
  name: ACFBSY
  description: |
    Acceptance Filter Busy
    This bit indicates that the Acceptance Filter Mask Registers and the Acceptance Filter ID Registers cannot be written to.
    1: Acceptance Filter Mask Registers and Acceptance Filter ID Registers cannot be written to.
    0: Acceptance Filter Mask Registers and the Acceptance Filter ID Registers can be written to.
    This bit exists only when the number of acceptance filters is not 0.
    This bit is set when a 0 is written to any of the valid UAF bits in the Acceptance Filter Register.
ps7_can0_SR_TXFLL:
  addr: 0xe0008018
  mask: 0x400
  name: TXFLL
  description: |
    Transmit FIFO Full
    Indicates that the TX FIFO is full.
    1: Indicates the TX FIFO is full.
    0: Indicates the TX FIFO is not full.
ps7_can0_SR_TXBFLL:
  addr: 0xe0008018
  mask: 0x200
  name: TXBFLL
  description: |
    High Priority Transmit Buffer Full
    Indicates the High Priority Transmit Buffer is full.
    1: Indicates the High Priority Transmit Buffer is full.
    0: Indicates the High Priority Transmit Buffer is not full.
ps7_can0_SR_ESTAT:
  addr: 0xe0008018
  mask: 0x180
  name: ESTAT
  description: |
    Error Status
    Indicates the error status of the CAN controller.
    00: Indicates Configuration Mode (CONFIG = 1).
    Error State is undefined.
    01: Indicates Error Active State.
    11: Indicates Error Passive State.
    10: Indicates Bus Off State.
ps7_can0_SR_ERRWRN:
  addr: 0xe0008018
  mask: 0x40
  name: ERRWRN
  description: |
    Error Warning
    Indicates that either the Transmit Error counter or the Receive Error counter has exceeded a value of 96.
    1: One or more error counters have a value greater than or equal to 96.
    0: Neither of the error counters has a value greater than or equal to 96.
ps7_can0_SR_BBSY:
  addr: 0xe0008018
  mask: 0x20
  name: BBSY
  description: |
    Bus Busy
    Indicates the CAN bus status.
    1: Indicates that the CAN controller is either receiving a message or transmitting a message.
    0: Indicates that the CAN controller is either in Configuration mode or the bus is idle.
ps7_can0_SR_BIDLE:
  addr: 0xe0008018
  mask: 0x10
  name: BIDLE
  description: |
    Bus Idle
    Indicates the CAN bus status.
    1: Indicates no bus communication is taking place.
    0: Indicates the CAN controller is either in Configuration mode or the bus is busy.
ps7_can0_SR_NORMAL:
  addr: 0xe0008018
  mask: 0x8
  name: NORMAL
  description: |
    Normal Mode
    Indicates the CAN controller is in Normal Mode.
    1: Indicates the CAN controller is in Normal Mode.
    0: Indicates the CAN controller is not in Normal mode.
ps7_can0_SR_SLEEP:
  addr: 0xe0008018
  mask: 0x4
  name: SLEEP
  description: |
    Sleep Mode
    Indicates the CAN controller is in Sleep mode.
    1: Indicates the CAN controller is in Sleep mode.
    0: Indicates the CAN controller is not in Sleep mode.
ps7_can0_SR_LBACK:
  addr: 0xe0008018
  mask: 0x2
  name: LBACK
  description: |
    Loop Back Mode
    Indicates the CAN controller is in Loop Back mode.
    1: Indicates the CAN controller is in Loop Back
    mode.
    0: Indicates the CAN controller is not in Loop Back
    mode.
ps7_can0_SR_CONFIG:
  addr: 0xe0008018
  mask: 0x1
  name: CONFIG
  description: |
    Configuration Mode Indicator
    Indicates the CAN controller is in Configuration mode.
    1: Indicates the CAN controller is in Configuration mode.
    0: Indicates the CAN controller is not in Configuration mode.
ps7_can0_ISR_reserved:
  addr: 0xe000801c
  mask: 0xffff8000
  name: reserved
  description: |
    reserved
ps7_can0_ISR_TXFEMP:
  addr: 0xe000801c
  mask: 0x4000
  name: TXFEMP
  description: |
    Transmit FIFO EmptyInterrupt
    A 1 indicates that the Transmit FIFO is empty. The interrupt continues to assert as long as the TX FIFO is empty. This bit can be cleared only by writing to the ICR.
ps7_can0_ISR_TXFWMEMP:
  addr: 0xe000801c
  mask: 0x2000
  name: TXFWMEMP
  description: |
    Transmit FIFO Watermark Empty Interrupt
    A 1 indicates that the TX FIFO is empty based on watermark programming.
    The interrupt continues to assert as long as the number of empty spaces in the TX FIFO is greater than TX FIFO
    empty watermark. This bit can be cleared only by writing to the Interrupt Clear Register.
ps7_can0_ISR_RXFWMFLL:
  addr: 0xe000801c
  mask: 0x1000
  name: RXFWMFLL
  description: |
    Receive FIFO Watermark Full Interrupt
    A 1 indicates that the RX FIFO is full based on watermark programming. The interrupt continues to assert as long as the RX FIFO count is above RX FIFO Full watermark. This bit can be cleared only by writing to the Interrupt
    Clear Register.
ps7_can0_ISR_WKUP:
  addr: 0xe000801c
  mask: 0x800
  name: WKUP
  description: |
    Wake up Interrupt
    A 1 indicates that the CAN controller entered Normal
    mode from Sleep Mode.
    This bit can be cleared by writing to the ICR.
    This bit is also cleared when a 0 is written to the CEN
    bit in the SRR.
ps7_can0_ISR_SLP:
  addr: 0xe000801c
  mask: 0x400
  name: SLP
  description: |
    Sleep Interrupt
    A 1 indicates that the CAN controller entered Sleep mode.
    This bit can be cleared by writing to the ICR.
    This bit is also cleared when a 0 is written to the CEN bit in the SRR.
ps7_can0_ISR_BSOFF:
  addr: 0xe000801c
  mask: 0x200
  name: BSOFF
  description: |
    Bus Off Interrupt
    A 1 indicates that the CAN controller entered the Bus Off state. This bit can be cleared by writing to the ICR. This bit is also cleared when a 0 is written to the CEN bit in the SRR.
ps7_can0_ISR_ERROR:
  addr: 0xe000801c
  mask: 0x100
  name: ERROR
  description: |
    Error Interrupt
    A 1 indicates that an error occurred during message transmission or reception.
    This bit can be cleared by writing to the ICR.
    This bit is also cleared when a 0 is written to the CEN bit in the SRR.
ps7_can0_ISR_RXNEMP:
  addr: 0xe000801c
  mask: 0x80
  name: RXNEMP
  description: |
    Receive FIFO Not Empty Interrupt
    A 1 indicates that the Receive FIFO is not empty.
    This bit can be cleared only by writing to the ICR.
ps7_can0_ISR_RXOFLW:
  addr: 0xe000801c
  mask: 0x40
  name: RXOFLW
  description: |
    RX FIFO Overflow Interrupt
    A 1 indicates that a message has been lost. This condition occurs when a new message is being received and the Receive FIFO is Full. This bit can be cleared by writing to the ICR. This bit is also cleared when a 0 is written to the CEN bit in the SRR.
ps7_can0_ISR_RXUFLW:
  addr: 0xe000801c
  mask: 0x20
  name: RXUFLW
  description: |
    RX FIFO Underflow Interrupt
    A 1 indicates that a read operation was attempted on an empty RX FIFO.
    This bit can be cleared only by writing to the ICR.
ps7_can0_ISR_RXOK:
  addr: 0xe000801c
  mask: 0x10
  name: RXOK
  description: |
    New Message Received Interrupt
    A 1 indicates that a message was received successfully and stored into the RX FIFO.
    This bit can be cleared by writing to the ICR.
    This bit is also cleared when a 0 is written to the CEN bit in the SRR.
ps7_can0_ISR_TXBFLL:
  addr: 0xe000801c
  mask: 0x8
  name: TXBFLL
  description: |
    High Priority Transmit Buffer Full Interrupt
    A 1 indicates that the High Priority Transmit Buffer is full.
    The status of the bit is unaffected if write transactions occur on the High Priority Transmit Buffer when it is already full.
    This bit can be cleared only by writing to the ICR.
ps7_can0_ISR_TXFLL:
  addr: 0xe000801c
  mask: 0x4
  name: TXFLL
  description: |
    Transmit FIFO Full Interrupt
    A 1 indicates that the TX FIFO is full.
    The status of the bit is unaffected if write transactions occur on the Transmit FIFO when it is already full.
    This bit can be cleared only by writing to the Interrupt Clear Register.
ps7_can0_ISR_TXOK:
  addr: 0xe000801c
  mask: 0x2
  name: TXOK
  description: |
    Transmission Successful Interrupt
    A 1 indicates that a message was transmitted successfully.
    This bit can be cleared by writing to the ICR.
    This bit is also cleared when a 0 is written to the CEN bit in the SRR.
    In Loop Back mode, both TXOK and RXOK bits are set. The RXOK bit is set before the TXOK bit.
ps7_can0_ISR_ARBLST:
  addr: 0xe000801c
  mask: 0x1
  name: ARBLST
  description: |
    Arbitration Lost Interrupt
    A 1 indicates that arbitration was lost during message transmission.
    This bit can be cleared by writing to the ICR.
    This bit is also cleared when a 0 is written to the CEN bit in the SRR.
ps7_can0_IER_reserved:
  addr: 0xe0008020
  mask: 0xffff8000
  name: reserved
  description: |
    Reserved
ps7_can0_IER_ETXFEMP:
  addr: 0xe0008020
  mask: 0x4000
  name: ETXFEMP
  description: |
    Enable TXFIFO Empty Interrupt
    Writes to this bit enable or disable interrupts when the TXFEMP bit in the ISR is set.
    1: Enable interrupt generation if TXFEMP bit in ISR is set.
    0: Disable interrupt generation if TXFEMP bit in ISR is set.
ps7_can0_IER_ETXFWMEMP:
  addr: 0xe0008020
  mask: 0x2000
  name: ETXFWMEMP
  description: |
    Enable TXFIFO watermark Empty Interrupt
    Writes to this bit enable or disable interrupts when the TXFWMEMP bit in the ISR is set.
    1: Enable interrupt generation if TXFWMEMP bit in ISR is set.
    0: Disable interrupt generation if TXFWMEMP bit in ISR is set.
ps7_can0_IER_ERXFWMFLL:
  addr: 0xe0008020
  mask: 0x1000
  name: ERXFWMFLL
  description: |
    Enable RXFIFO watermark Full Interrupt
    Writes to this bit enable or disable interrupts when the RXFLL bit in the ISR is set.
    1: Enable interrupt generation if RXFWMFLL bit in ISR is set.
    0: Disable interrupt generation if RXFWMFLL bit in ISR is set.
ps7_can0_IER_EWKUP:
  addr: 0xe0008020
  mask: 0x800
  name: EWKUP
  description: |
    Enable Wake up Interrupt
    Writes to this bit enable or disable interrupts when the WKUP bit in the ISR is set.
    1: Enable interrupt generation if WKUP bit in ISR is set.
    0: Disable interrupt generation if WKUP bit in ISR is set.
ps7_can0_IER_ESLP:
  addr: 0xe0008020
  mask: 0x400
  name: ESLP
  description: |
    Enable Sleep Interrupt
    Writes to this bit enable or disable interrupts when the SLP bit in the ISR is set.
    1: Enable interrupt generation if SLP bit in ISR is set.
    0: Disable interrupt generation if SLP bit in ISR is set.
ps7_can0_IER_EBSOFF:
  addr: 0xe0008020
  mask: 0x200
  name: EBSOFF
  description: |
    Enable Bus OFF Interrupt
    Writes to this bit enable or disable interrupts when the BSOFF bit in the ISR is set.
    1: Enable interrupt generation if BSOFF bit in ISR is set.
    0: Disable interrupt generation if BSOFF bit in ISR is set.
ps7_can0_IER_EERROR:
  addr: 0xe0008020
  mask: 0x100
  name: EERROR
  description: |
    Enable Error Interrupt
    Writes to this bit enable or disable interrupts when the ERROR bit in the ISR is set.
    1: Enable interrupt generation if ERROR bit in ISR is set.
    0: Disable interrupt generation if ERROR bit in ISR is set.
ps7_can0_IER_ERXNEMP:
  addr: 0xe0008020
  mask: 0x80
  name: ERXNEMP
  description: |
    Enable Receive FIFO Not Empty Interrupt
    Writes to this bit enable or disable interrupts when the RXNEMP bit in the ISR is set.
    1: Enable interrupt generation if RXNEMP bit in ISR is set.
    0: Disable interrupt generation if RXNEMP bit in ISR is set.
ps7_can0_IER_ERXOFLW:
  addr: 0xe0008020
  mask: 0x40
  name: ERXOFLW
  description: |
    Enable RX FIFO Overflow Interrupt
    Writes to this bit enable or disable interrupts when the RXOFLW bit in the ISR is set.
    1: Enable interrupt generation if RXOFLW bit in ISR is set.
    0: Disable interrupt generation if RXOFLW bit in ISR is set.
ps7_can0_IER_ERXUFLW:
  addr: 0xe0008020
  mask: 0x20
  name: ERXUFLW
  description: |
    Enable RX FIFO Underflow Interrupt
    Writes to this bit enable or disable interrupts when the RXUFLW bit in the ISR is set.
    1: Enable interrupt generation if RXUFLW bit in ISR is set.
    0: Disable interrupt generation if RXUFLW bit in ISR is set.
ps7_can0_IER_ERXOK:
  addr: 0xe0008020
  mask: 0x10
  name: ERXOK
  description: |
    Enable New Message Received Interrupt
    Writes to this bit enable or disable interrupts when the RXOK bit in the ISR is set.
    1: Enable interrupt generation if RXOK bit in ISR is set.
    0: Disable interrupt generation if RXOK bit in ISR is set.
ps7_can0_IER_ETXBFLL:
  addr: 0xe0008020
  mask: 0x8
  name: ETXBFLL
  description: |
    Enable High Priority Transmit Buffer Full Interrupt
    Writes to this bit enable or disable interrupts when the TXBFLL bit in the ISR is set.
    1: Enable interrupt generation if TXBFLL bit in ISR is set.
    0: Disable interrupt generation if TXBFLL bit in ISR is set.
ps7_can0_IER_ETXFLL:
  addr: 0xe0008020
  mask: 0x4
  name: ETXFLL
  description: |
    Enable Transmit FIFO Full Interrupt
    Writes to this bit enable or disable interrupts when TXFLL bit in the ISR is set.
    1: Enable interrupt generation if TXFLL bit in ISR is set.
    0: Disable interrupt generation if TXFLL bit in ISR is set.
ps7_can0_IER_ETXOK:
  addr: 0xe0008020
  mask: 0x2
  name: ETXOK
  description: |
    Enable Transmission Successful Interrupt
    Writes to this bit enable or disable interrupts when the TXOK bit in the ISR is set.
    1: Enable interrupt generation if TXOK bit in ISR is set.
    0: Disable interrupt generation if TXOK bit in ISR is set.
ps7_can0_IER_EARBLST:
  addr: 0xe0008020
  mask: 0x1
  name: EARBLST
  description: |
    Enable Arbitration Lost Interrupt
    Writes to this bit enable or disable interrupts when the ARBLST bit in the ISR is set.
    1: Enable interrupt generation if ARBLST bit in ISR is set.
    0: Disable interrupt generation if ARBLST bit in ISR is set.
ps7_can0_ICR_reserved:
  addr: 0xe0008024
  mask: 0xffff8000
  name: reserved
  description: |
    Reserved
ps7_can0_ICR_CTXFEMP:
  addr: 0xe0008024
  mask: 0x4000
  name: CTXFEMP
  description: |
    Clear TXFIFO Empty Interrupt
    Writing a 1 to this bit clears the TXFEMP bit in the ISR.
ps7_can0_ICR_CTXFWMEMP:
  addr: 0xe0008024
  mask: 0x2000
  name: CTXFWMEMP
  description: |
    Clear TXFIFO Watermark Empty Interrupt
    Writing a 1 to this bit clears the TXFWMEMP bit in the ISR.
ps7_can0_ICR_CRXFWMFLL:
  addr: 0xe0008024
  mask: 0x1000
  name: CRXFWMFLL
  description: |
    Clear RXFIFO Watermark Full Interrupt
    Writing a 1 to this bit clears the RXFWMFLL bit in the ISR.
ps7_can0_ICR_CWKUP:
  addr: 0xe0008024
  mask: 0x800
  name: CWKUP
  description: |
    Clear Wake up Interrupt
    Writing a 1 to this bit clears the WKUP bit in the ISR.
ps7_can0_ICR_CSLP:
  addr: 0xe0008024
  mask: 0x400
  name: CSLP
  description: |
    Clear Sleep Interrupt
    Writing a 1 to this bit clears the SLP bit in the ISR.
ps7_can0_ICR_CBSOFF:
  addr: 0xe0008024
  mask: 0x200
  name: CBSOFF
  description: |
    Clear Bus Off Interrupt
    Writing a 1 to this bit clears the BSOFF bit in the ISR.
ps7_can0_ICR_CERROR:
  addr: 0xe0008024
  mask: 0x100
  name: CERROR
  description: |
    Clear Error Interrupt
    Writing a 1 to this bit clears the ERROR bit in the ISR.
ps7_can0_ICR_CRXNEMP:
  addr: 0xe0008024
  mask: 0x80
  name: CRXNEMP
  description: |
    Clear Receive FIFO Not Empty Interrupt
    Writing a 1 to this bit clears the RXNEMP bit in the ISR.
ps7_can0_ICR_CRXOFLW:
  addr: 0xe0008024
  mask: 0x40
  name: CRXOFLW
  description: |
    Clear RX FIFO Overflow Interrupt
    Writing a 1 to this bit clears the RXOFLW bit in the ISR.
ps7_can0_ICR_CRXUFLW:
  addr: 0xe0008024
  mask: 0x20
  name: CRXUFLW
  description: |
    Clear RX FIFO Underflow Interrupt
    Writing a 1 to this bit clears the RXUFLW bit in the ISR.
ps7_can0_ICR_CRXOK:
  addr: 0xe0008024
  mask: 0x10
  name: CRXOK
  description: |
    Clear New Message Received Interrupt
    Writing a 1 to this bit clears the RXOK bit in the ISR.
ps7_can0_ICR_CTXBFLL:
  addr: 0xe0008024
  mask: 0x8
  name: CTXBFLL
  description: |
    Clear High Priority Transmit Buffer Full Interrupt
    Writing a 1 to this bit clears the TXBFLL bit in the ISR.
ps7_can0_ICR_CTXFLL:
  addr: 0xe0008024
  mask: 0x4
  name: CTXFLL
  description: |
    Clear Transmit FIFO Full Interrupt
    Writing a 1 to this bit clears the TXFLL bit in the ISR.
ps7_can0_ICR_CTXOK:
  addr: 0xe0008024
  mask: 0x2
  name: CTXOK
  description: |
    Clear Transmission Successful Interrupt
    Writing a 1 to this bit clears the CTXOK bit in the ISR.
ps7_can0_ICR_CARBLST:
  addr: 0xe0008024
  mask: 0x1
  name: CARBLST
  description: |
    Clear Arbitration Lost Interrupt
    Writing a 1 to this bit clears the ARBLST bit in the ISR.
ps7_can0_TCR_reserved:
  addr: 0xe0008028
  mask: 0xfffffffe
  name: reserved
  description: |
    reserved
ps7_can0_TCR_CTS:
  addr: 0xe0008028
  mask: 0x1
  name: CTS
  description: |
    Clear Timestamp
    Internal free running counter is cleared to 0 when CTS=1. This bit only needs to be written once with a 1 to clear the counter. The bit will automatically return to 0.
ps7_can0_WIR_reserved:
  addr: 0xe000802c
  mask: 0xffff0000
  name: reserved
  description: |
    reserved
ps7_can0_WIR_EW:
  addr: 0xe000802c
  mask: 0xff00
  name: EW
  description: |
    TXFIFO Empty watermark
    TXFIFO generates an EMPTY interrupt based on the value programmed in this field. The valid range is (1-63). Only bits 18-23 are writable. No protection is given for illegal programming in this field. This field can be written to only when CEN bit in SRR is 0.
ps7_can0_WIR_FW:
  addr: 0xe000802c
  mask: 0xff
  name: FW
  description: |
    RXFIFO Full watermark
    RXFIFO generates FULL interrupt based on the value programmed in this field. The valid range is (1-63). Only bits 26-31 are writable. No protection is given for illegal programming in this field. This field can be written to only when CEN bit in SRR is 0.
ps7_can0_TXFIFO_ID_IDH:
  addr: 0xe0008030
  mask: 0xffe00000
  name: IDH
  description: |
    Standard Message ID
    The Identifier portion for a Standard Frame is 11 bits. These bits indicate the Standard Frame ID. This field is valid for both Standard and Extended Frames.
ps7_can0_TXFIFO_ID_SRRRTR:
  addr: 0xe0008030
  mask: 0x100000
  name: SRRRTR
  description: |
    Substitute Remote Transmission Request
    This bit differentiates between data frames and remote frames. Valid only for Standard Frames. For Extended frames this bit is 1.
    1: Indicates that the message frame is a Remote Frame.
    0: Indicates that the message frame is a Data Frame.
ps7_can0_TXFIFO_ID_IDE:
  addr: 0xe0008030
  mask: 0x80000
  name: IDE
  description: |
    Identifier Extension
    This bit differentiates between frames using the Standard Identifier and those using the Extended Identifier. Valid for both Standard and Extended Frames.
    1: Indicates the use of an Extended Message Identifier.
    0: Indicates the use of a Standard Message Identifier.
ps7_can0_TXFIFO_ID_IDL:
  addr: 0xe0008030
  mask: 0x7fffe
  name: IDL
  description: |
    Extended Message ID
    This field indicates the Extended Identifier. Valid only for Extended Frames. For Standard Frames, reads from this field return 0s. For Standard Frames, writes to this field should be 0s.
ps7_can0_TXFIFO_ID_RTR:
  addr: 0xe0008030
  mask: 0x1
  name: RTR
  description: |
    Remote Transmission Request
    This bit differentiates between data frames and remote frames. Valid only for Extended Frames.
    1: Indicates the message object is a Remote Frame
    0: Indicates the message object is a Data Frame
    For Standard Frames, reads from this bit returns 0
    For Standard Frames, writes to this bit should be 0
ps7_can0_TXFIFO_DLC_DLC:
  addr: 0xe0008034
  mask: 0xf0000000
  name: DLC
  description: |
    Data Length Code
    This is the data length portion of the control field of the CAN frame. This indicates the number valid data bytes in Data Word 1 and Data Word 2 registers.
ps7_can0_TXFIFO_DLC_reserved:
  addr: 0xe0008034
  mask: 0xfffffff
  name: reserved
  description: |
    reserved
ps7_can0_TXFIFO_DATA1_DB0:
  addr: 0xe0008038
  mask: 0xff000000
  name: DB0
  description: |
    Data Byte 0
    Reads from this field return invalid data if the message has no data.
ps7_can0_TXFIFO_DATA1_DB1:
  addr: 0xe0008038
  mask: 0xff0000
  name: DB1
  description: |
    Data Byte 1
    Reads from this field return invalid data if the message has only 1 byte of data or fewer
ps7_can0_TXFIFO_DATA1_DB2:
  addr: 0xe0008038
  mask: 0xff00
  name: DB2
  description: |
    Data Byte 2
    Reads from this field return invalid data if the message has only 2 byte of data or fewer
ps7_can0_TXFIFO_DATA1_DB3:
  addr: 0xe0008038
  mask: 0xff
  name: DB3
  description: |
    Data Byte 3
    Reads from this field return invalid data if the message has only 3 byte of data or fewer
ps7_can0_TXFIFO_DATA2_DB0:
  addr: 0xe000803c
  mask: 0xff000000
  name: DB0
  description: |
    Data Byte 4
    Reads from this field return invalid data if the message has only 4 byte of data or fewer
ps7_can0_TXFIFO_DATA2_DB1:
  addr: 0xe000803c
  mask: 0xff0000
  name: DB1
  description: |
    Data Byte 5
    Reads from this field return invalid data if the message has only 5 byte of data or fewer
ps7_can0_TXFIFO_DATA2_DB2:
  addr: 0xe000803c
  mask: 0xff00
  name: DB2
  description: |
    Data Byte 6
    Reads from this field return invalid data if the message has only 6 byte of data or fewer
ps7_can0_TXFIFO_DATA2_DB3:
  addr: 0xe000803c
  mask: 0xff
  name: DB3
  description: |
    Data Byte 7
    Reads from this field return invalid data if the message has 7 byte of data or fewer
ps7_can0_TXHPB_ID_IDH:
  addr: 0xe0008040
  mask: 0xffe00000
  name: IDH
  description: |
    Standard Message ID
    The Identifier portion for a Standard Frame is 11 bits. These bits indicate the Standard Frame ID. This field is valid for both Standard and Extended Frames.
ps7_can0_TXHPB_ID_SRRRTR:
  addr: 0xe0008040
  mask: 0x100000
  name: SRRRTR
  description: |
    Substitute Remote Transmission Request
    This bit differentiates between data frames and remote frames. Valid only for Standard Frames. For Extended frames this bit is 1.
    1: Indicates that the message frame is a Remote Frame.
    0: Indicates that the message frame is a Data Frame.
ps7_can0_TXHPB_ID_IDE:
  addr: 0xe0008040
  mask: 0x80000
  name: IDE
  description: |
    Identifier Extension
    This bit differentiates between frames using the Standard Identifier and those using the Extended Identifier. Valid for both Standard and Extended Frames.
    1: Indicates the use of an Extended Message Identifier.
    0: Indicates the use of a Standard Message Identifier.
ps7_can0_TXHPB_ID_IDL:
  addr: 0xe0008040
  mask: 0x7fffe
  name: IDL
  description: |
    Extended Message ID
    This field indicates the Extended Identifier. Valid only for Extended Frames. For Standard Frames, reads from this field return 0s. For Standard Frames, writes to this field should be 0s.
ps7_can0_TXHPB_ID_RTR:
  addr: 0xe0008040
  mask: 0x1
  name: RTR
  description: |
    Remote Transmission Request
    This bit differentiates between data frames and remote frames. Valid only for Extended Frames.
    1: Indicates the message object is a Remote Frame
    0: Indicates the message object is a Data Frame
    For Standard Frames, reads from this bit returns 0
    For Standard Frames, writes to this bit should be 0
ps7_can0_TXHPB_DLC_DLC:
  addr: 0xe0008044
  mask: 0xf0000000
  name: DLC
  description: |
    Data Length Code
    This is the data length portion of the control field of the CAN frame. This indicates the number valid data bytes in Data Word 1 and Data Word 2 registers.
ps7_can0_TXHPB_DLC_reserved:
  addr: 0xe0008044
  mask: 0xfffffff
  name: reserved
  description: |
    reserved
ps7_can0_TXHPB_DATA1_DB0:
  addr: 0xe0008048
  mask: 0xff000000
  name: DB0
  description: |
    Data Byte 0
    Reads from this field return invalid data if the message has no data.
ps7_can0_TXHPB_DATA1_DB1:
  addr: 0xe0008048
  mask: 0xff0000
  name: DB1
  description: |
    Data Byte 1
    Reads from this field return invalid data if the message has only 1 byte of data or fewer
ps7_can0_TXHPB_DATA1_DB2:
  addr: 0xe0008048
  mask: 0xff00
  name: DB2
  description: |
    Data Byte 2
    Reads from this field return invalid data if the message has only 2 byte of data or fewer
ps7_can0_TXHPB_DATA1_DB3:
  addr: 0xe0008048
  mask: 0xff
  name: DB3
  description: |
    Data Byte 3
    Reads from this field return invalid data if the message has only 3 byte of data or fewer
ps7_can0_TXHPB_DATA2_DB0:
  addr: 0xe000804c
  mask: 0xff000000
  name: DB0
  description: |
    Data Byte 4
    Reads from this field return invalid data if the message has only 4 byte of data or fewer
ps7_can0_TXHPB_DATA2_DB1:
  addr: 0xe000804c
  mask: 0xff0000
  name: DB1
  description: |
    Data Byte 5
    Reads from this field return invalid data if the message has only 5 byte of data or fewer
ps7_can0_TXHPB_DATA2_DB2:
  addr: 0xe000804c
  mask: 0xff00
  name: DB2
  description: |
    Data Byte 6
    Reads from this field return invalid data if the message has only 6 byte of data or fewer
ps7_can0_TXHPB_DATA2_DB3:
  addr: 0xe000804c
  mask: 0xff
  name: DB3
  description: |
    Data Byte 7
    Reads from this field return invalid data if the message has 7 byte of data or fewer
ps7_can0_RXFIFO_ID_IDH:
  addr: 0xe0008050
  mask: 0xffe00000
  name: IDH
  description: |
    Standard Message ID
    The Identifier portion for a Standard Frame is 11 bits.
    These bits indicate the Standard Frame ID.
    This field is valid for both Standard and Extended Frames.
ps7_can0_RXFIFO_ID_SRRRTR:
  addr: 0xe0008050
  mask: 0x100000
  name: SRRRTR
  description: |
    Substitute Remote Transmission Request
    This bit differentiates between data frames and remote frames. Valid only for Standard Frames. For Extended frames this bit is 1.
    1: Indicates that the message frame is a Remote Frame.
    0: Indicates that the message frame is a Data Frame.
ps7_can0_RXFIFO_ID_IDE:
  addr: 0xe0008050
  mask: 0x80000
  name: IDE
  description: |
    Identifier Extension
    This bit differentiates between frames using the Standard Identifier and those using the Extended Identifier. Valid for both Standard and Extended Frames.
    1: Indicates the use of an Extended Message Identifier.
    0: Indicates the use of a Standard Message Identifier.
ps7_can0_RXFIFO_ID_IDL:
  addr: 0xe0008050
  mask: 0x7fffe
  name: IDL
  description: |
    Extended Message ID
    This field indicates the Extended Identifier.
    Valid only for Extended Frames.
    For Standard Frames, reads from this field return 0s
    For Standard Frames, writes to this field should be 0s
ps7_can0_RXFIFO_ID_RTR:
  addr: 0xe0008050
  mask: 0x1
  name: RTR
  description: |
    Remote Transmission Request
    This bit differentiates between data frames and remote frames.
    Valid only for Extended Frames.
    1: Indicates the message object is a Remote Frame
    0: Indicates the message object is a Data Frame
    For Standard Frames, reads from this bit returns 0
    For Standard Frames, writes to this bit should be 0
ps7_can0_RXFIFO_DLC_DLC:
  addr: 0xe0008054
  mask: 0xf0000000
  name: DLC
  description: |
    Data Length Code
    This is the data length portion of the control field of the CAN frame. This indicates the number valid data bytes in Data Word 1 and Data Word 2 registers.
ps7_can0_RXFIFO_DLC_reserved:
  addr: 0xe0008054
  mask: 0xfff0000
  name: reserved
  description: |
    reserved
ps7_can0_RXFIFO_DLC_RXT:
  addr: 0xe0008054
  mask: 0xffff
  name: RXT
  description: |
    RX Timestamp
ps7_can0_RXFIFO_DATA1_DB0:
  addr: 0xe0008058
  mask: 0xff000000
  name: DB0
  description: |
    Data Byte 0
    Reads from this field return invalid data if the message has no data.
ps7_can0_RXFIFO_DATA1_DB1:
  addr: 0xe0008058
  mask: 0xff0000
  name: DB1
  description: |
    Data Byte 1
    Reads from this field return invalid data if the message has only 1 byte of data or fewer
ps7_can0_RXFIFO_DATA1_DB2:
  addr: 0xe0008058
  mask: 0xff00
  name: DB2
  description: |
    Data Byte 2
    Reads from this field return invalid data if the message has only 2 byte of data or fewer
ps7_can0_RXFIFO_DATA1_DB3:
  addr: 0xe0008058
  mask: 0xff
  name: DB3
  description: |
    Data Byte 3
    Reads from this field return invalid data if the message has only 3 byte of data or fewer
ps7_can0_RXFIFO_DATA2_DB0:
  addr: 0xe000805c
  mask: 0xff000000
  name: DB0
  description: |
    Data Byte 4
    Reads from this field return invalid data if the message has only 4 byte of data or fewer
ps7_can0_RXFIFO_DATA2_DB1:
  addr: 0xe000805c
  mask: 0xff0000
  name: DB1
  description: |
    Data Byte 5
    Reads from this field return invalid data if the message has only 5 byte of data or fewer
ps7_can0_RXFIFO_DATA2_DB2:
  addr: 0xe000805c
  mask: 0xff00
  name: DB2
  description: |
    Data Byte 6
    Reads from this field return invalid data if the message has only 6 byte of data or fewer
ps7_can0_RXFIFO_DATA2_DB3:
  addr: 0xe000805c
  mask: 0xff
  name: DB3
  description: |
    Data Byte 7
    Reads from this field return invalid data if the message has 7 byte of data or fewer
ps7_can0_AFR_reserved:
  addr: 0xe0008060
  mask: 0xfffffff0
  name: reserved
  description: |
    reserved
ps7_can0_AFR_UAF4:
  addr: 0xe0008060
  mask: 0x8
  name: UAF4
  description: |
    Use Acceptance Filter Number 4
    Enables the use of acceptance filter pair 4.
    1: Indicates Acceptance Filter Mask Register 4 and Acceptance Filter ID Register 4 are used for acceptance filtering.
    0: Indicates Acceptance Filter Mask Register 4 and Acceptance Filter ID Register 4 are not used for acceptance filtering.
ps7_can0_AFR_UAF3:
  addr: 0xe0008060
  mask: 0x4
  name: UAF3
  description: |
    Use Acceptance Filter Number 3
    Enables the use of acceptance filter pair 3.
    1: Indicates Acceptance Filter Mask Register 3 and Acceptance Filter ID Register 3 are used for acceptance filtering.
    0: Indicates Acceptance Filter Mask Register 3 and Acceptance Filter ID Register 3 are not used for acceptance filtering.
ps7_can0_AFR_UAF2:
  addr: 0xe0008060
  mask: 0x2
  name: UAF2
  description: |
    Use Acceptance Filter Number 2
    Enables the use of acceptance filter pair 2.
    1: Indicates Acceptance Filter Mask Register 2 and Acceptance Filter ID Register 2 are used for acceptance filtering.
    0: Indicates Acceptance Filter Mask Register 2 and Acceptance Filter ID Register 2 are not used for acceptance filtering.
ps7_can0_AFR_UAF1:
  addr: 0xe0008060
  mask: 0x1
  name: UAF1
  description: |
    Use Acceptance Filter Number 1.
    Enables the use of acceptance filter pair 1.
    1: Indicates Acceptance Filter Mask Register 1 and
    Acceptance Filter ID Register 1 are used for
    acceptance filtering.
    0: Indicates Acceptance Filter Mask Register 1 and
    Acceptance Filter ID Register 1 are not used for
    acceptance filtering.
ps7_can0_AFMR1_AMIDH:
  addr: 0xe0008064
  mask: 0xffe00000
  name: AMIDH
  description: |
    Standard Message ID Mask
    These bits are used for masking the Identifier in a Standard Frame.
    1: Indicates the corresponding bit in Acceptance Mask ID Register is used when comparing the incoming message identifier.
    0: Indicates the corresponding bit in Acceptance Mask ID Register is not used when comparing the incoming message identifier.
ps7_can0_AFMR1_AMSRR:
  addr: 0xe0008064
  mask: 0x100000
  name: AMSRR
  description: |
    Substitute Remote Transmission Request Mask
    This bit is used for masking the RTR bit in a Standard Frame.
    1: Indicates the corresponding bit in Acceptance Mask ID Register is used when comparing the incoming message identifier.
    0: Indicates the corresponding bit in Acceptance Mask ID Register is not used when comparing the incoming message identifier.
ps7_can0_AFMR1_AMIDE:
  addr: 0xe0008064
  mask: 0x80000
  name: AMIDE
  description: |
    Identifier Extension Mask
    Used for masking the IDE bit in CAN frames.
    1: Indicates the corresponding bit in Acceptance Mask ID Register is used when comparing the incoming message identifier.
    0: Indicates the corresponding bit in Acceptance Mask ID Register is not used when comparing the incoming message identifier.
    If AMIDE = 1 and the AIIDE bit in the corresponding Acceptance ID register is 0, this mask is applicable to only Standard frames.
    If AMIDE = 1 and the AIIDE bit in the corresponding Acceptance ID register is 1, this mask is applicable to only extended frames.
    If AMIDE = 0 this mask is applicable to Standard frame.
ps7_can0_AFMR1_AMIDL:
  addr: 0xe0008064
  mask: 0x7fffe
  name: AMIDL
  description: |
    Extended Message ID Mask
    These bits are used for masking the Identifier in an Extended Frame.
    1: Indicates the corresponding bit in Acceptance Mask ID Register is used when comparing the incoming message identifier.
    0: Indicates the corresponding bit in Acceptance Mask ID Register is not used when comparing the incoming message identifier.
ps7_can0_AFMR1_AMRTR:
  addr: 0xe0008064
  mask: 0x1
  name: AMRTR
  description: |
    Remote Transmission Request Mask.
    This bit is used for masking the RTR bit in an Extended Frame.
    1: Indicates the corresponding bit in Acceptance Mask ID Register is used when comparing the incoming message identifier.
    0: Indicates the corresponding bit in Acceptance Mask ID Register is not used when comparing the incoming message identifier.
ps7_can0_AFIR1_AIIDH:
  addr: 0xe0008068
  mask: 0xffe00000
  name: AIIDH
  description: |
    Standard Message ID
    Standard Identifier
ps7_can0_AFIR1_AISRR:
  addr: 0xe0008068
  mask: 0x100000
  name: AISRR
  description: |
    Substitute Remote Transmission Request
    Indicates the Remote Transmission Request bit for Standard frames
ps7_can0_AFIR1_AIIDE:
  addr: 0xe0008068
  mask: 0x80000
  name: AIIDE
  description: |
    Identifier Extension
    Differentiates between Standard and Extended frames
ps7_can0_AFIR1_AIIDL:
  addr: 0xe0008068
  mask: 0x7fffe
  name: AIIDL
  description: |
    Extended Message ID Mask Extended Identifier
ps7_can0_AFIR1_AIRTR:
  addr: 0xe0008068
  mask: 0x1
  name: AIRTR
  description: |
    Remote Transmission Request Mask RTR bit for Extended frames.
ps7_can0_AFMR2_AMIDH:
  addr: 0xe000806c
  mask: 0xffe00000
  name: AMIDH
  description: |
    Standard Message ID Mask
    These bits are used for masking the Identifier in a Standard Frame.
    1: Indicates the corresponding bit in Acceptance Mask ID Register is used when comparing the incoming message identifier.
    0: Indicates the corresponding bit in Acceptance Mask ID Register is not used when comparing the incoming message identifier.
ps7_can0_AFMR2_AMSRR:
  addr: 0xe000806c
  mask: 0x100000
  name: AMSRR
  description: |
    Substitute Remote Transmission Request Mask
    This bit is used for masking the RTR bit in a Standard Frame.
    1: Indicates the corresponding bit in Acceptance Mask ID Register is used when comparing the incoming message identifier.
    0: Indicates the corresponding bit in Acceptance Mask ID Register is not used when comparing the incoming message identifier.
ps7_can0_AFMR2_AMIDE:
  addr: 0xe000806c
  mask: 0x80000
  name: AMIDE
  description: |
    Identifier Extension Mask
    Used for masking the IDE bit in CAN frames.
    1: Indicates the corresponding bit in Acceptance Mask ID Register is used when comparing the incoming message identifier.
    0: Indicates the corresponding bit in Acceptance Mask ID Register is not used when comparing the incoming message identifier.
    If AMIDE = 1 and the AIIDE bit in the corresponding Acceptance ID register is 0, this mask is applicable to only Standard frames.
    If AMIDE = 1 and the AIIDE bit in the corresponding Acceptance ID register is 1, this mask is applicable to only extended frames.
    If AMIDE = 0 this mask is applicable to Standard frame.
ps7_can0_AFMR2_AMIDL:
  addr: 0xe000806c
  mask: 0x7fffe
  name: AMIDL
  description: |
    Extended Message ID Mask
    These bits are used for masking the Identifier in an Extended Frame.
    1: Indicates the corresponding bit in Acceptance Mask ID Register is used when comparing the incoming message identifier.
    0: Indicates the corresponding bit in Acceptance Mask ID Register is not used when comparing the incoming message identifier.
ps7_can0_AFMR2_AMRTR:
  addr: 0xe000806c
  mask: 0x1
  name: AMRTR
  description: |
    Remote Transmission Request Mask.
    This bit is used for masking the RTR bit in an Extended Frame.
    1: Indicates the corresponding bit in Acceptance Mask ID Register is used when comparing the incoming message identifier.
    0: Indicates the corresponding bit in Acceptance Mask ID Register is not used when comparing the incoming message identifier.
ps7_can0_AFIR2_AIIDH:
  addr: 0xe0008070
  mask: 0xffe00000
  name: AIIDH
  description: |
    Standard Message ID
    Standard Identifier
ps7_can0_AFIR2_AISRR:
  addr: 0xe0008070
  mask: 0x100000
  name: AISRR
  description: |
    Substitute Remote Transmission Request
    Indicates the Remote Transmission Request bit for Standard frames
ps7_can0_AFIR2_AIIDE:
  addr: 0xe0008070
  mask: 0x80000
  name: AIIDE
  description: |
    Identifier Extension
    Differentiates between Standard and Extended frames
ps7_can0_AFIR2_AIIDL:
  addr: 0xe0008070
  mask: 0x7fffe
  name: AIIDL
  description: |
    Extended Message ID Mask Extended Identifier
ps7_can0_AFIR2_AIRTR:
  addr: 0xe0008070
  mask: 0x1
  name: AIRTR
  description: |
    Remote Transmission Request Mask RTR bit for Extended frames.
ps7_can0_AFMR3_AMIDH:
  addr: 0xe0008074
  mask: 0xffe00000
  name: AMIDH
  description: |
    Standard Message ID Mask
    These bits are used for masking the Identifier in a Standard Frame.
    1: Indicates the corresponding bit in Acceptance Mask ID Register is used when comparing the incoming message identifier.
    0: Indicates the corresponding bit in Acceptance Mask ID Register is not used when comparing the incoming message identifier.
ps7_can0_AFMR3_AMSRR:
  addr: 0xe0008074
  mask: 0x100000
  name: AMSRR
  description: |
    Substitute Remote Transmission Request Mask
    This bit is used for masking the RTR bit in a Standard Frame.
    1: Indicates the corresponding bit in Acceptance Mask ID Register is used when comparing the incoming message identifier.
    0: Indicates the corresponding bit in Acceptance Mask ID Register is not used when comparing the incoming message identifier.
ps7_can0_AFMR3_AMIDE:
  addr: 0xe0008074
  mask: 0x80000
  name: AMIDE
  description: |
    Identifier Extension Mask
    Used for masking the IDE bit in CAN frames.
    1: Indicates the corresponding bit in Acceptance Mask ID Register is used when comparing the incoming message identifier.
    0: Indicates the corresponding bit in Acceptance Mask ID Register is not used when comparing the incoming message identifier.
    If AMIDE = 1 and the AIIDE bit in the corresponding Acceptance ID register is 0, this mask is applicable to only Standard frames.
    If AMIDE = 1 and the AIIDE bit in the corresponding Acceptance ID register is 1, this mask is applicable to only extended frames.
    If AMIDE = 0 this mask is applicable to Standard frame.
ps7_can0_AFMR3_AMIDL:
  addr: 0xe0008074
  mask: 0x7fffe
  name: AMIDL
  description: |
    Extended Message ID Mask
    These bits are used for masking the Identifier in an Extended Frame.
    1: Indicates the corresponding bit in Acceptance Mask ID Register is used when comparing the incoming message identifier.
    0: Indicates the corresponding bit in Acceptance Mask ID Register is not used when comparing the incoming message identifier.
ps7_can0_AFMR3_AMRTR:
  addr: 0xe0008074
  mask: 0x1
  name: AMRTR
  description: |
    Remote Transmission Request Mask.
    This bit is used for masking the RTR bit in an Extended Frame.
    1: Indicates the corresponding bit in Acceptance Mask ID Register is used when comparing the incoming message identifier.
    0: Indicates the corresponding bit in Acceptance Mask ID Register is not used when comparing the incoming message identifier.
ps7_can0_AFIR3_AIIDH:
  addr: 0xe0008078
  mask: 0xffe00000
  name: AIIDH
  description: |
    Standard Message ID
    Standard Identifier
ps7_can0_AFIR3_AISRR:
  addr: 0xe0008078
  mask: 0x100000
  name: AISRR
  description: |
    Substitute Remote Transmission Request
    Indicates the Remote Transmission Request bit for Standard frames
ps7_can0_AFIR3_AIIDE:
  addr: 0xe0008078
  mask: 0x80000
  name: AIIDE
  description: |
    Identifier Extension
    Differentiates between Standard and Extended frames
ps7_can0_AFIR3_AIIDL:
  addr: 0xe0008078
  mask: 0x7fffe
  name: AIIDL
  description: |
    Extended Message ID Mask Extended Identifier
ps7_can0_AFIR3_AIRTR:
  addr: 0xe0008078
  mask: 0x1
  name: AIRTR
  description: |
    Remote Transmission Request Mask RTR bit for Extended frames.
ps7_can0_AFMR4_AMIDH:
  addr: 0xe000807c
  mask: 0xffe00000
  name: AMIDH
  description: |
    Standard Message ID Mask
    These bits are used for masking the Identifier in a Standard Frame.
    1: Indicates the corresponding bit in Acceptance Mask ID Register is used when comparing the incoming message identifier.
    0: Indicates the corresponding bit in Acceptance Mask ID Register is not used when comparing the incoming message identifier.
ps7_can0_AFMR4_AMSRR:
  addr: 0xe000807c
  mask: 0x100000
  name: AMSRR
  description: |
    Substitute Remote Transmission Request Mask
    This bit is used for masking the RTR bit in a Standard Frame.
    1: Indicates the corresponding bit in Acceptance Mask ID Register is used when comparing the incoming message identifier.
    0: Indicates the corresponding bit in Acceptance Mask ID Register is not used when comparing the incoming message identifier.
ps7_can0_AFMR4_AMIDE:
  addr: 0xe000807c
  mask: 0x80000
  name: AMIDE
  description: |
    Identifier Extension Mask
    Used for masking the IDE bit in CAN frames.
    1: Indicates the corresponding bit in Acceptance Mask ID Register is used when comparing the incoming message identifier.
    0: Indicates the corresponding bit in Acceptance Mask ID Register is not used when comparing the incoming message identifier.
    If AMIDE = 1 and the AIIDE bit in the corresponding Acceptance ID register is 0, this mask is applicable to only Standard frames.
    If AMIDE = 1 and the AIIDE bit in the corresponding Acceptance ID register is 1, this mask is applicable to only extended frames.
    If AMIDE = 0 this mask is applicable to Standard frame.
ps7_can0_AFMR4_AMIDL:
  addr: 0xe000807c
  mask: 0x7fffe
  name: AMIDL
  description: |
    Extended Message ID Mask
    These bits are used for masking the Identifier in an Extended Frame.
    1: Indicates the corresponding bit in Acceptance Mask ID Register is used when comparing the incoming message identifier.
    0: Indicates the corresponding bit in Acceptance Mask ID Register is not used when comparing the incoming message identifier.
ps7_can0_AFMR4_AMRTR:
  addr: 0xe000807c
  mask: 0x1
  name: AMRTR
  description: |
    Remote Transmission Request Mask.
    This bit is used for masking the RTR bit in an Extended Frame.
    1: Indicates the corresponding bit in Acceptance Mask ID Register is used when comparing the incoming message identifier.
    0: Indicates the corresponding bit in Acceptance Mask ID Register is not used when comparing the incoming message identifier.
ps7_can0_AFIR4_AIIDH:
  addr: 0xe0008080
  mask: 0xffe00000
  name: AIIDH
  description: |
    Standard Message ID
    Standard Identifier
ps7_can0_AFIR4_AISRR:
  addr: 0xe0008080
  mask: 0x100000
  name: AISRR
  description: |
    Substitute Remote Transmission Request
    Indicates the Remote Transmission Request bit for Standard frames
ps7_can0_AFIR4_AIIDE:
  addr: 0xe0008080
  mask: 0x80000
  name: AIIDE
  description: |
    Identifier Extension
    Differentiates between Standard and Extended frames
ps7_can0_AFIR4_AIIDL:
  addr: 0xe0008080
  mask: 0x7fffe
  name: AIIDL
  description: |
    Extended Message ID Mask Extended Identifier
ps7_can0_AFIR4_AIRTR:
  addr: 0xe0008080
  mask: 0x1
  name: AIRTR
  description: |
    Remote Transmission Request Mask RTR bit for Extended frames.
ps7_gpv_qos301_cpu_qos_cntl_en_awar_ot:
  addr: 0xf894610c
  mask: 0x80
  name: en_awar_ot
  description: |
    Enable combined regulation of outstanding transactions.
ps7_gpv_qos301_cpu_qos_cntl_en_ar_ot:
  addr: 0xf894610c
  mask: 0x40
  name: en_ar_ot
  description: |
    Enable regulation of outstanding read transactions.
ps7_gpv_qos301_cpu_qos_cntl_en_aw_ot:
  addr: 0xf894610c
  mask: 0x20
  name: en_aw_ot
  description: |
    Enable regulation of outstanding write transactions.
ps7_gpv_qos301_cpu_qos_cntl_reserved:
  addr: 0xf894610c
  mask: 0x18
  name: reserved
  description: |
    Reserved
ps7_gpv_qos301_cpu_qos_cntl_en_awar_rate:
  addr: 0xf894610c
  mask: 0x4
  name: en_awar_rate
  description: |
    Enable combined AW/AR rate regulation.
ps7_gpv_qos301_cpu_qos_cntl_en_ar_rate:
  addr: 0xf894610c
  mask: 0x2
  name: en_ar_rate
  description: |
    Enable AR rate regulation.
ps7_gpv_qos301_cpu_qos_cntl_en_aw_rate:
  addr: 0xf894610c
  mask: 0x1
  name: en_aw_rate
  description: |
    Enable AW rate regulation.
ps7_gpv_qos301_cpu_max_ot_ar_max_oti:
  addr: 0xf8946110
  mask: 0x3f000000
  name: ar_max_oti
  description: |
    Integer part of max outstanding AR addresses.
ps7_gpv_qos301_cpu_max_ot_ar_max_otf:
  addr: 0xf8946110
  mask: 0xff0000
  name: ar_max_otf
  description: |
    Fraction part of max outstanding AR addresses.
ps7_gpv_qos301_cpu_max_ot_aw_max_oti:
  addr: 0xf8946110
  mask: 0x3f00
  name: aw_max_oti
  description: |
    Integer part of max outstanding AW addresses.
ps7_gpv_qos301_cpu_max_ot_aw_max_otf:
  addr: 0xf8946110
  mask: 0xff
  name: aw_max_otf
  description: |
    Fraction part of max outstanding AW addresses.
ps7_gpv_qos301_cpu_max_comb_ot_awar_max_oti:
  addr: 0xf8946114
  mask: 0x7f00
  name: awar_max_oti
  description: |
    Integer part of max combined outstanding AW/AR addresses.
ps7_gpv_qos301_cpu_max_comb_ot_awar_max_otf:
  addr: 0xf8946114
  mask: 0xff
  name: awar_max_otf
  description: |
    Fraction part of max combined outstanding AW/AR addresses.
ps7_gpv_qos301_cpu_aw_p_a:
  addr: 0xf8946118
  mask: 0xff
  name: a
  description: |
    channel peak rate. 8-bit fraction of the number of transfers per cycle. A value of 0x80 (decimal 0.5) sets a rate of one transaction every 2 cycles. A value of 0x40 sets a rate of one transaction every 4 cycles, etc.
ps7_gpv_qos301_cpu_aw_b_a:
  addr: 0xf894611c
  mask: 0xffff000000
  name: a
  description: |
    channel burstiness (integer number of transfers)
ps7_gpv_qos301_cpu_aw_r_a:
  addr: 0xf8946120
  mask: 0xfff
  name: a
  description: |
    channel average rate. 12-bit fraction of the number of transfers per cycle. A value of 0x800 (decimal 0.5) sets a rate of one transaction every 2 cycles. A value of 0x400 sets a rate of one transaction every 4 cycles, etc.
ps7_gpv_qos301_cpu_ar_p_a:
  addr: 0xf8946124
  mask: 0xff00000
  name: a
  description: |
    channel peak rate. 8-bit fraction of the number of transfers per cycle. A value of 0x80 (decimal 0.5) sets a rate of one transaction every 2 cycles. A value of 0x40 sets a rate of one transaction every 4 cycles, etc.
ps7_gpv_qos301_cpu_ar_b_a:
  addr: 0xf8946128
  mask: 0xffff000000
  name: a
  description: |
    channel burstiness (integer number of transfers)
ps7_gpv_qos301_cpu_ar_r_a:
  addr: 0xf894612c
  mask: 0xfff
  name: a
  description: |
    channel average rate. 12-bit fraction of the number of transfers per cycle. A value of 0x800 (decimal 0.5) sets a rate of one transaction every 2 cycles. A value of 0x400 sets a rate of one transaction every 4 cycles, etc.
ps7_gpv_qos301_iou_qos_cntl_en_awar_ot:
  addr: 0xf894810c
  mask: 0x80
  name: en_awar_ot
  description: |
    Enable combined regulation of outstanding transactions.
ps7_gpv_qos301_iou_qos_cntl_en_ar_ot:
  addr: 0xf894810c
  mask: 0x40
  name: en_ar_ot
  description: |
    Enable regulation of outstanding read transactions.
ps7_gpv_qos301_iou_qos_cntl_en_aw_ot:
  addr: 0xf894810c
  mask: 0x20
  name: en_aw_ot
  description: |
    Enable regulation of outstanding write transactions.
ps7_gpv_qos301_iou_qos_cntl_reserved:
  addr: 0xf894810c
  mask: 0x18
  name: reserved
  description: |
    Reserved
ps7_gpv_qos301_iou_qos_cntl_en_awar_rate:
  addr: 0xf894810c
  mask: 0x4
  name: en_awar_rate
  description: |
    Enable combined AW/AR rate regulation.
ps7_gpv_qos301_iou_qos_cntl_en_ar_rate:
  addr: 0xf894810c
  mask: 0x2
  name: en_ar_rate
  description: |
    Enable AR rate regulation.
ps7_gpv_qos301_iou_qos_cntl_en_aw_rate:
  addr: 0xf894810c
  mask: 0x1
  name: en_aw_rate
  description: |
    Enable AW rate regulation.
ps7_gpv_qos301_iou_max_ot_ar_max_oti:
  addr: 0xf8948110
  mask: 0x3f000000
  name: ar_max_oti
  description: |
    Integer part of max outstanding AR addresses.
ps7_gpv_qos301_iou_max_ot_ar_max_otf:
  addr: 0xf8948110
  mask: 0xff0000
  name: ar_max_otf
  description: |
    Fraction part of max outstanding AR addresses.
ps7_gpv_qos301_iou_max_ot_aw_max_oti:
  addr: 0xf8948110
  mask: 0x3f00
  name: aw_max_oti
  description: |
    Integer part of max outstanding AW addresses.
ps7_gpv_qos301_iou_max_ot_aw_max_otf:
  addr: 0xf8948110
  mask: 0xff
  name: aw_max_otf
  description: |
    Fraction part of max outstanding AW addresses.
ps7_gpv_qos301_iou_max_comb_ot_awar_max_oti:
  addr: 0xf8948114
  mask: 0x7f00
  name: awar_max_oti
  description: |
    Integer part of max combined outstanding AW/AR addresses.
ps7_gpv_qos301_iou_max_comb_ot_awar_max_otf:
  addr: 0xf8948114
  mask: 0xff
  name: awar_max_otf
  description: |
    Fraction part of max combined outstanding AW/AR addresses.
ps7_gpv_qos301_iou_aw_p_a:
  addr: 0xf8948118
  mask: 0xff
  name: a
  description: |
    channel peak rate. 8-bit fraction of the number of transfers per cycle. A value of 0x80 (decimal 0.5) sets a rate of one transaction every 2 cycles. A value of 0x40 sets a rate of one transaction every 4 cycles, etc.
ps7_gpv_qos301_iou_aw_b_a:
  addr: 0xf894811c
  mask: 0xffff000000
  name: a
  description: |
    channel burstiness (integer number of transfers)
ps7_gpv_qos301_iou_aw_r_a:
  addr: 0xf8948120
  mask: 0xfff
  name: a
  description: |
    channel average rate. 12-bit fraction of the number of transfers per cycle. A value of 0x800 (decimal 0.5) sets a rate of one transaction every 2 cycles. A value of 0x400 sets a rate of one transaction every 4 cycles, etc.
ps7_gpv_qos301_iou_ar_p_a:
  addr: 0xf8948124
  mask: 0xff00000
  name: a
  description: |
    channel peak rate. 8-bit fraction of the number of transfers per cycle. A value of 0x80 (decimal 0.5) sets a rate of one transaction every 2 cycles. A value of 0x40 sets a rate of one transaction every 4 cycles, etc.
ps7_gpv_qos301_iou_ar_b_a:
  addr: 0xf8948128
  mask: 0xffff000000
  name: a
  description: |
    channel burstiness (integer number of transfers)
ps7_gpv_qos301_iou_ar_r_a:
  addr: 0xf894812c
  mask: 0xfff
  name: a
  description: |
    channel average rate. 12-bit fraction of the number of transfers per cycle. A value of 0x800 (decimal 0.5) sets a rate of one transaction every 2 cycles. A value of 0x400 sets a rate of one transaction every 4 cycles, etc.
ps7_gpv_qos301_dmac_qos_cntl_en_awar_ot:
  addr: 0xf894710c
  mask: 0x80
  name: en_awar_ot
  description: |
    Enable combined regulation of outstanding transactions.
ps7_gpv_qos301_dmac_qos_cntl_en_ar_ot:
  addr: 0xf894710c
  mask: 0x40
  name: en_ar_ot
  description: |
    Enable regulation of outstanding read transactions.
ps7_gpv_qos301_dmac_qos_cntl_en_aw_ot:
  addr: 0xf894710c
  mask: 0x20
  name: en_aw_ot
  description: |
    Enable regulation of outstanding write transactions.
ps7_gpv_qos301_dmac_qos_cntl_reserved:
  addr: 0xf894710c
  mask: 0x18
  name: reserved
  description: |
    Reserved
ps7_gpv_qos301_dmac_qos_cntl_en_awar_rate:
  addr: 0xf894710c
  mask: 0x4
  name: en_awar_rate
  description: |
    Enable combined AW/AR rate regulation.
ps7_gpv_qos301_dmac_qos_cntl_en_ar_rate:
  addr: 0xf894710c
  mask: 0x2
  name: en_ar_rate
  description: |
    Enable AR rate regulation.
ps7_gpv_qos301_dmac_qos_cntl_en_aw_rate:
  addr: 0xf894710c
  mask: 0x1
  name: en_aw_rate
  description: |
    Enable AW rate regulation.
ps7_gpv_qos301_dmac_max_ot_ar_max_oti:
  addr: 0xf8947110
  mask: 0x3f000000
  name: ar_max_oti
  description: |
    Integer part of max outstanding AR addresses.
ps7_gpv_qos301_dmac_max_ot_ar_max_otf:
  addr: 0xf8947110
  mask: 0xff0000
  name: ar_max_otf
  description: |
    Fraction part of max outstanding AR addresses.
ps7_gpv_qos301_dmac_max_ot_aw_max_oti:
  addr: 0xf8947110
  mask: 0x3f00
  name: aw_max_oti
  description: |
    Integer part of max outstanding AW addresses.
ps7_gpv_qos301_dmac_max_ot_aw_max_otf:
  addr: 0xf8947110
  mask: 0xff
  name: aw_max_otf
  description: |
    Fraction part of max outstanding AW addresses.
ps7_gpv_qos301_dmac_max_comb_ot_awar_max_oti:
  addr: 0xf8947114
  mask: 0x7f00
  name: awar_max_oti
  description: |
    Integer part of max combined outstanding AW/AR addresses.
ps7_gpv_qos301_dmac_max_comb_ot_awar_max_otf:
  addr: 0xf8947114
  mask: 0xff
  name: awar_max_otf
  description: |
    Fraction part of max combined outstanding AW/AR addresses.
ps7_gpv_qos301_dmac_aw_p_a:
  addr: 0xf8947118
  mask: 0xff
  name: a
  description: |
    channel peak rate. 8-bit fraction of the number of transfers per cycle. A value of 0x80 (decimal 0.5) sets a rate of one transaction every 2 cycles. A value of 0x40 sets a rate of one transaction every 4 cycles, etc.
ps7_gpv_qos301_dmac_aw_b_a:
  addr: 0xf894711c
  mask: 0xffff000000
  name: a
  description: |
    channel burstiness (integer number of transfers)
ps7_gpv_qos301_dmac_aw_r_a:
  addr: 0xf8947120
  mask: 0xfff
  name: a
  description: |
    channel average rate. 12-bit fraction of the number of transfers per cycle. A value of 0x800 (decimal 0.5) sets a rate of one transaction every 2 cycles. A value of 0x400 sets a rate of one transaction every 4 cycles, etc.
ps7_gpv_qos301_dmac_ar_p_a:
  addr: 0xf8947124
  mask: 0xff00000
  name: a
  description: |
    channel peak rate. 8-bit fraction of the number of transfers per cycle. A value of 0x80 (decimal 0.5) sets a rate of one transaction every 2 cycles. A value of 0x40 sets a rate of one transaction every 4 cycles, etc.
ps7_gpv_qos301_dmac_ar_b_a:
  addr: 0xf8947128
  mask: 0xffff000000
  name: a
  description: |
    channel burstiness (integer number of transfers)
ps7_gpv_qos301_dmac_ar_r_a:
  addr: 0xf894712c
  mask: 0xfff
  name: a
  description: |
    channel average rate. 12-bit fraction of the number of transfers per cycle. A value of 0x800 (decimal 0.5) sets a rate of one transaction every 2 cycles. A value of 0x400 sets a rate of one transaction every 4 cycles, etc.
ps7_debug_funnel_Control_MinHoldTime:
  addr: 0xf8804000
  mask: 0xf00
  name: MinHoldTime
  description: |
    The formatting scheme can easily become inefficient if fast switching occurs, so, where possible, this must be minimized. If a source has nothing to transmit, then
    another source is selected irrespective of the minimum number of cycles. Reset is 0x3. The CSTF holds for the minimum hold time and one additional cycle.
    The mFunnelum value that can be entered is 0xE and this equates to 15 cycles.
    0xF is reserved.
ps7_debug_funnel_Control_EnableSlave7:
  addr: 0xf8804000
  mask: 0x80
  name: EnableSlave7
  description: |
    Setting this bit enables this slave port. If the bit is not set then this has the effect of excluding the port from the priority selection scheme.
ps7_debug_funnel_Control_EnableSlave6:
  addr: 0xf8804000
  mask: 0x40
  name: EnableSlave6
  description: |
    Setting this bit enables this slave port. If the bit is not set then this has the effect of excluding the port from the priority selection scheme.
ps7_debug_funnel_Control_EnableSlave5:
  addr: 0xf8804000
  mask: 0x20
  name: EnableSlave5
  description: |
    Setting this bit enables this slave port. If the bit is not set then this has the effect of excluding the port from the priority selection scheme.
ps7_debug_funnel_Control_EnableSlave4:
  addr: 0xf8804000
  mask: 0x10
  name: EnableSlave4
  description: |
    Setting this bit enables this slave port. If the bit is not set then this has the effect of excluding the port from the priority selection scheme.
ps7_debug_funnel_Control_EnableSlave3:
  addr: 0xf8804000
  mask: 0x8
  name: EnableSlave3
  description: |
    Setting this bit enables this slave port. If the bit is not set then this has the effect of excluding the port from the priority selection scheme.
ps7_debug_funnel_Control_EnableSlave2:
  addr: 0xf8804000
  mask: 0x4
  name: EnableSlave2
  description: |
    Setting this bit enables this slave port. If the bit is not set then this has the effect of excluding the port from the priority selection scheme.
ps7_debug_funnel_Control_EnableSlave1:
  addr: 0xf8804000
  mask: 0x2
  name: EnableSlave1
  description: |
    Setting this bit enables this slave port. If the bit is not set then this has the effect of excluding the port from the priority selection scheme.
ps7_debug_funnel_Control_EnableSlave0:
  addr: 0xf8804000
  mask: 0x1
  name: EnableSlave0
  description: |
    Setting this bit enables this slave port. If the bit is not set then this has the effect of excluding the port from the priority selection scheme.
ps7_debug_funnel_PriControl_PriPort7:
  addr: 0xf8804004
  mask: 0xe00000
  name: PriPort7
  description: |
    8th port priority value.
ps7_debug_funnel_PriControl_PriPort6:
  addr: 0xf8804004
  mask: 0x1c0000
  name: PriPort6
  description: |
    7th port priority value.
ps7_debug_funnel_PriControl_PriPort5:
  addr: 0xf8804004
  mask: 0x38000
  name: PriPort5
  description: |
    6th port priority value.
ps7_debug_funnel_PriControl_PriPort4:
  addr: 0xf8804004
  mask: 0x7000
  name: PriPort4
  description: |
    5th port priority value.
ps7_debug_funnel_PriControl_PriPort3:
  addr: 0xf8804004
  mask: 0xe00
  name: PriPort3
  description: |
    4th port priority value.
ps7_debug_funnel_PriControl_PriPort2:
  addr: 0xf8804004
  mask: 0x1c0
  name: PriPort2
  description: |
    3rd port priority value.
ps7_debug_funnel_PriControl_PriPort1:
  addr: 0xf8804004
  mask: 0x38
  name: PriPort1
  description: |
    2nd port priority value.
ps7_debug_funnel_PriControl_PriPort0:
  addr: 0xf8804004
  mask: 0x7
  name: PriPort0
  description: |
    1st port priority value.
ps7_debug_funnel_ITATBDATA0_ATDATA31:
  addr: 0xf8804eec
  mask: 0x10
  name: ATDATA31
  description: |
    Read the value of ATDATAS[31], set the value of ATDATAM[31]
ps7_debug_funnel_ITATBDATA0_ATDATA23:
  addr: 0xf8804eec
  mask: 0x8
  name: ATDATA23
  description: |
    Read the value of ATDATAS[23], set the value of ATDATAM[23]
ps7_debug_funnel_ITATBDATA0_ATDATA15:
  addr: 0xf8804eec
  mask: 0x4
  name: ATDATA15
  description: |
    Read the value of ATDATAS[15], set the value of ATDATAM[15]
ps7_debug_funnel_ITATBDATA0_ATDATA7:
  addr: 0xf8804eec
  mask: 0x2
  name: ATDATA7
  description: |
    Read the value of ATDATAS[7], set the value of ATDATAM[7]
ps7_debug_funnel_ITATBDATA0_ATDATA0:
  addr: 0xf8804eec
  mask: 0x1
  name: ATDATA0
  description: |
    Read the value of ATDATAS[0], set the value of ATDATAM[0]
ps7_debug_funnel_ITATBCTR2_AFREADY:
  addr: 0xf8804ef0
  mask: 0x2
  name: AFREADY
  description: |
    Read the value of AFVALIDM. Set the value of AFVALIDS<n>, where <n> is defined by the status of the CSTF Control Register.
ps7_debug_funnel_ITATBCTR2_a:
  addr: 0xf8804ef0
  mask: 0x1
  name: a
  description: |
    Read the value of ATREADYM. Set the value of ATREADYS<n>, where <n> is defined by the status of the CSTF Control Register.
ps7_debug_funnel_ITATBCTR1_ATID:
  addr: 0xf8804ef4
  mask: 0x7f
  name: ATID
  description: |
    Read the value of ATIDS. Set the value of ATIDM.
ps7_debug_funnel_ITATBCTR0_ATBYTES:
  addr: 0xf8804ef8
  mask: 0x300
  name: ATBYTES
  description: |
    Read the value of ATBYTESS<n>. Set the value of ATBYTESM.
ps7_debug_funnel_ITATBCTR0_reserved:
  addr: 0xf8804ef8
  mask: 0xfc
  name: reserved
  description: |
    Reserved
ps7_debug_funnel_ITATBCTR0_AFREADY:
  addr: 0xf8804ef8
  mask: 0x2
  name: AFREADY
  description: |
    Read the value of AFREADYS<n>. Set the value of AFREADYM.
ps7_debug_funnel_ITATBCTR0_ATVALID:
  addr: 0xf8804ef8
  mask: 0x1
  name: ATVALID
  description: |
    Read the value of ATVALIDS<n>. Set the value of ATVALIDM.
ps7_debug_funnel_IMCR_a:
  addr: 0xf8804f00
  mask: 0x1
  name: a
  description: |
    Enable Integration Test registers.
ps7_debug_funnel_CTSR_a:
  addr: 0xf8804fa0
  mask: 0xf
  name: a
  description: |
    The claim tag register is used for any interrogating tools to determine if the device is being programmed or has been programmed.
    Read:
    1= Claim tag is implemented, 0 = Claim tag is not implemented
    Write:
    1= Set claim tag bit, 0= No effect
ps7_debug_funnel_CTCR_a:
  addr: 0xf8804fa4
  mask: 0xf
  name: a
  description: |
    The claim tag register is used for any interrogating tools to determine if the device is being programmed or has been programmed.
    Read: Current value of claim tag.
    Write: 1= Clear claim tag bit, 0= No effect
ps7_debug_funnel_LAR_a:
  addr: 0xf8804fb0
  mask: 0xffffffff
  name: a
  description: |
    Write Access Code.
    Write behavior depends on PADDRDBG31 pin:
    - PADDRDBG31=0 (lower 2GB):
    After reset (via PRESETDBGn), Funnel is locked, i.e., writes to all other registers using lower 2GB addresses are ignored.
    To unlock, 0xC5ACCE55 must be written this register.
    After the required registers are written, to lock again, write a value other than 0xC5ACCE55 to this register.
    - PADDRDBG31=1 (upper 2GB):
    Funnel is unlocked when upper 2GB addresses are used to write to all the registers.
    However, write to this register is ignored using a upper 2GB address!
    Note: read from this register always returns 0, regardless of PADDRDBG31.
ps7_debug_funnel_LSR_n8BIT:
  addr: 0xf8804fb4
  mask: 0x4
  name: n8BIT
  description: |
    Set to 0 since Funnel implements a 32-bit lock access register
ps7_debug_funnel_LSR_STATUS:
  addr: 0xf8804fb4
  mask: 0x2
  name: STATUS
  description: |
    Read behavior depends on PADDRDBG31 pin:
    - PADDRDBG31=0 (lower 2GB):
    When a lower 2GB address is used to read this register, this bit indicates whether Funnel is in locked state
    (1= locked, 0= unlocked).
    - PADDRDBG31=1 (upper 2GB):
    always returns 0.
ps7_debug_funnel_LSR_IMP:
  addr: 0xf8804fb4
  mask: 0x1
  name: IMP
  description: |
    Read behavior depends on PADDRDBG31 pin:
    - PADDRDBG31=0 (lower 2GB):
    always returns 1, meaning lock mechanism are implemented.
    - PADDRDBG31=1 (upper 2GB):
    always returns 0, meaning lock mechanism is NOT implemented.
ps7_debug_funnel_ASR_a:
  addr: 0xf8804fb8
  mask: 0xff
  name: a
  description: |
    Indicates functionality not implemented
ps7_debug_funnel_DEVID_StaticPrio:
  addr: 0xf8804fc8
  mask: 0xf0
  name: StaticPrio
  description: |
    CSTF implements a static priority scheme
ps7_debug_funnel_DEVID_NumInPorts:
  addr: 0xf8804fc8
  mask: 0xf
  name: NumInPorts
  description: |
    Number of input ports
ps7_debug_funnel_DTIR_a:
  addr: 0xf8804fcc
  mask: 0xff
  name: a
  description: |
    a trace link and specifically a funnel/router
ps7_debug_funnel_PERIPHID4_n4KB_count:
  addr: 0xf8804fd0
  mask: 0xf0
  name: n4KB_count
  description: |
    4KB Count, set to 0
ps7_debug_funnel_PERIPHID4_JEP106ID:
  addr: 0xf8804fd0
  mask: 0xf
  name: JEP106ID
  description: |
    JEP106 continuation code
ps7_debug_funnel_PERIPHID5_a:
  addr: 0xf8804fd4
  mask: 0xff
  name: a
  description: |
    reserved
ps7_debug_funnel_PERIPHID6_a:
  addr: 0xf8804fd8
  mask: 0xff
  name: a
  description: |
    reserved
ps7_debug_funnel_PERIPHID7_a:
  addr: 0xf8804fdc
  mask: 0xff
  name: a
  description: |
    reserved
ps7_debug_funnel_PERIPHID0_a:
  addr: 0xf8804fe0
  mask: 0xff
  name: a
  description: |
    PartNumber0
ps7_debug_funnel_PERIPHID1_JEP106ID:
  addr: 0xf8804fe4
  mask: 0xf0
  name: JEP106ID
  description: |
    JEP106 Identity Code [3:0]
ps7_debug_funnel_PERIPHID1_PartNumber1:
  addr: 0xf8804fe4
  mask: 0xf
  name: PartNumber1
  description: |
    PartNumber1
ps7_debug_funnel_PERIPHID2_RevNum:
  addr: 0xf8804fe8
  mask: 0xf0
  name: RevNum
  description: |
    Revision number of Peripheral
ps7_debug_funnel_PERIPHID2_JEDEC:
  addr: 0xf8804fe8
  mask: 0x8
  name: JEDEC
  description: |
    Indicates that a JEDEC assigned value is used
ps7_debug_funnel_PERIPHID2_JEP106ID:
  addr: 0xf8804fe8
  mask: 0x7
  name: JEP106ID
  description: |
    JEP106 Identity Code [6:4]
ps7_debug_funnel_PERIPHID3_RevAnd:
  addr: 0xf8804fec
  mask: 0xf0
  name: RevAnd
  description: |
    RevAnd, at top level
ps7_debug_funnel_PERIPHID3_CustMod:
  addr: 0xf8804fec
  mask: 0xf
  name: CustMod
  description: |
    Customer Modified
ps7_debug_funnel_COMPID0_a:
  addr: 0xf8804ff0
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_debug_funnel_COMPID1_a:
  addr: 0xf8804ff4
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_debug_funnel_COMPID2_a:
  addr: 0xf8804ff8
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_debug_funnel_COMPID3_a:
  addr: 0xf8804ffc
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_i2c1_Control_reg0_divisor_a:
  addr: 0xe0005000
  mask: 0xc000
  name: divisor_a
  description: |
    Divisor for stage A clock divider.
    0 - 3: Divides the input pclk frequency by divisor_a + 1.
ps7_i2c1_Control_reg0_divisor_b:
  addr: 0xe0005000
  mask: 0x3f00
  name: divisor_b
  description: |
    Divisor for stage B clock divider.
    0 - 63 : Divides the output frequency from divisor_a by divisor_b + 1.
ps7_i2c1_Control_reg0_reserved:
  addr: 0xe0005000
  mask: 0x80
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_i2c1_Control_reg0_CLR_FIFO:
  addr: 0xe0005000
  mask: 0x40
  name: CLR_FIFO
  description: |
    1 - initializes the FIFO to all zeros and clears the transfer size register. Automatically gets cleared on the next APB clock after
    being set.
ps7_i2c1_Control_reg0_SLVMON:
  addr: 0xe0005000
  mask: 0x20
  name: SLVMON
  description: |
    Slave monitor mode
    1 - monitor mode.
    0 - normal operation.
ps7_i2c1_Control_reg0_HOLD:
  addr: 0xe0005000
  mask: 0x10
  name: HOLD
  description: |
    hold_bus
    1 - when no more data is available for transmit or no more data can be received, hold the sclk line low until serviced by the host.
    0 - allow the transfer to terminate as soon as all the data has been transmitted or received.
ps7_i2c1_Control_reg0_ACK_EN:
  addr: 0xe0005000
  mask: 0x8
  name: ACK_EN
  description: |
    This bit needs to be set to 1
    1 - acknowledge enabled, ACK transmitted
    0 - acknowledge disabled, NACK transmitted.
ps7_i2c1_Control_reg0_NEA:
  addr: 0xe0005000
  mask: 0x4
  name: NEA
  description: |
    Addressing mode: This bit is used in master
    mode only.
    1 - normal (7-bit) address
    0 - reserved
ps7_i2c1_Control_reg0_MS:
  addr: 0xe0005000
  mask: 0x2
  name: MS
  description: |
    Overall interface mode:
    1 - master
    0 - slave
ps7_i2c1_Control_reg0_RW:
  addr: 0xe0005000
  mask: 0x1
  name: RW
  description: |
    Direction of transfer:
    This bit is used in master mode only.
    1 - master receiver
    0 - master transmitter.
ps7_i2c1_Status_reg0_reserved_2:
  addr: 0xe0005004
  mask: 0xfe00
  name: reserved_2
  description: |
    Reserved, read as zero, ignored on write.
ps7_i2c1_Status_reg0_BA:
  addr: 0xe0005004
  mask: 0x100
  name: BA
  description: |
    Bus Active
    1 - ongoing transfer on the I2C bus.
ps7_i2c1_Status_reg0_RXOVF:
  addr: 0xe0005004
  mask: 0x80
  name: RXOVF
  description: |
    Receiver Overflow
    1 - This bit is set whenever FIFO is full and a new byte is received. The new byte is not acknowledged and contents of the FIFO remains unchanged.
ps7_i2c1_Status_reg0_TXDV:
  addr: 0xe0005004
  mask: 0x40
  name: TXDV
  description: |
    Transmit Data Valid - SW should not use this to determine data completion, it is the RAW value on the interface.
    Please use COMP in the ISR.
    1 - still a byte of data to be transmitted by the interface.
ps7_i2c1_Status_reg0_RXDV:
  addr: 0xe0005004
  mask: 0x20
  name: RXDV
  description: |
    Receiver Data Valid
    1 -valid, new data to be read from the interface.
ps7_i2c1_Status_reg0_reserved_1:
  addr: 0xe0005004
  mask: 0x10
  name: reserved_1
  description: |
    Reserved, read as zero, ignored on write.
ps7_i2c1_Status_reg0_RXRW:
  addr: 0xe0005004
  mask: 0x8
  name: RXRW
  description: |
    RX read_write
    1 - mode of the transmission received from a master.
ps7_i2c1_Status_reg0_reserved:
  addr: 0xe0005004
  mask: 0x7
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_i2c1_I2C_address_reg0_reserved:
  addr: 0xe0005008
  mask: 0xfc00
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_i2c1_I2C_address_reg0_ADD:
  addr: 0xe0005008
  mask: 0x3ff
  name: ADD
  description: |
    Address
    0 - 1024: Normal addressing mode uses add[6:0]. Extended addressing mode uses add[9:0].
ps7_i2c1_I2C_data_reg0_reserved:
  addr: 0xe000500c
  mask: 0xff00
  name: reserved
  description: |
    HASH(0x110ed9a0)
ps7_i2c1_I2C_data_reg0_DATA:
  addr: 0xe000500c
  mask: 0xff
  name: DATA
  description: |
    data
    0 -255: When written to, the data register sets data to transmit. When read from, the data register reads the last received byte of data.
ps7_i2c1_Interrupt_status_reg0_reserved_1:
  addr: 0xe0005010
  mask: 0xfc00
  name: reserved_1
  description: |
    Reserved, read as zero, ignored on write.
ps7_i2c1_Interrupt_status_reg0_ARB_LOST:
  addr: 0xe0005010
  mask: 0x200
  name: ARB_LOST
  description: |
    arbitration lost
    1 = master loses bus ownership during a transfer due to ongoing arbitration
ps7_i2c1_Interrupt_status_reg0_reserved:
  addr: 0xe0005010
  mask: 0x100
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_i2c1_Interrupt_status_reg0_RX_UNF:
  addr: 0xe0005010
  mask: 0x80
  name: RX_UNF
  description: |
    FIFO receive underflow
    1 = host attempts to read from the I2C data register more times than the value of the transfer size register plus one
ps7_i2c1_Interrupt_status_reg0_TX_OVF:
  addr: 0xe0005010
  mask: 0x40
  name: TX_OVF
  description: |
    FIFO transmit overflow
    1 = host attempts to write to the I2C data register more times than the FIFO depth
ps7_i2c1_Interrupt_status_reg0_RX_OVF:
  addr: 0xe0005010
  mask: 0x20
  name: RX_OVF
  description: |
    Receive overflow
    1 = This bit is set whenever FIFO is full and a new byte is received. The new byte is not acknowledged and contents of the FIFO remains unchanged.
ps7_i2c1_Interrupt_status_reg0_SLV_RDY:
  addr: 0xe0005010
  mask: 0x10
  name: SLV_RDY
  description: |
    Monitored slave ready
    1 =
    addressed slave returns ACK.
ps7_i2c1_Interrupt_status_reg0_TO:
  addr: 0xe0005010
  mask: 0x8
  name: TO
  description: |
    Transfer time out
    1 =
    I2C sclk line is kept low for longer time
ps7_i2c1_Interrupt_status_reg0_NACK:
  addr: 0xe0005010
  mask: 0x4
  name: NACK
  description: |
    Transfer not acknowledged
    1 = slave responds with a NACK or master terminates the transfer before all data is supplied
ps7_i2c1_Interrupt_status_reg0_DATA:
  addr: 0xe0005010
  mask: 0x2
  name: DATA
  description: |
    More data
    1 =
    Data being sent or received
ps7_i2c1_Interrupt_status_reg0_COMP:
  addr: 0xe0005010
  mask: 0x1
  name: COMP
  description: |
    Transfer complete
    1 =
    transfer is complete
ps7_i2c1_Transfer_size_reg0_Transfer_Size:
  addr: 0xe0005014
  mask: 0xff
  name: Transfer_Size
  description: |
    Transfer Size
    0-255
ps7_i2c1_Slave_mon_pause_reg0_reserved:
  addr: 0xe0005018
  mask: 0xf0
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_i2c1_Slave_mon_pause_reg0_Pause:
  addr: 0xe0005018
  mask: 0xf
  name: Pause
  description: |
    pause interval
    0 - 7: pause interval
ps7_i2c1_Time_out_reg0_TO:
  addr: 0xe000501c
  mask: 0xff
  name: TO
  description: |
    Time Out
    127 - 32 : value of time out register
ps7_i2c1_Intrpt_mask_reg0_reserved_1:
  addr: 0xe0005020
  mask: 0xfc00
  name: reserved_1
  description: |
    Reserved, read as zero, ignored on write.
ps7_i2c1_Intrpt_mask_reg0_ARB_LOST:
  addr: 0xe0005020
  mask: 0x200
  name: ARB_LOST
  description: |
    arbitration lost
    1 = Mask this interrupt
    0 = unmask this interrupt
ps7_i2c1_Intrpt_mask_reg0_reserved:
  addr: 0xe0005020
  mask: 0x100
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_i2c1_Intrpt_mask_reg0_RX_UNF:
  addr: 0xe0005020
  mask: 0x80
  name: RX_UNF
  description: |
    FIFO receive underflow
    1 = Mask this interrupt
    0 = unmask this interrupt
ps7_i2c1_Intrpt_mask_reg0_TX_OVF:
  addr: 0xe0005020
  mask: 0x40
  name: TX_OVF
  description: |
    FIFO transmit overflow
    1 = Mask this interrupt
    0 = unmask this interrupt
ps7_i2c1_Intrpt_mask_reg0_RX_OVF:
  addr: 0xe0005020
  mask: 0x20
  name: RX_OVF
  description: |
    Receive overflow
    1 = Mask this interrupt
    0 = unmask this interrupt
ps7_i2c1_Intrpt_mask_reg0_SLV_RDY:
  addr: 0xe0005020
  mask: 0x10
  name: SLV_RDY
  description: |
    Monitored slave ready
    1 = Mask this interrupt
    0 = unmask this interrupt
ps7_i2c1_Intrpt_mask_reg0_TO:
  addr: 0xe0005020
  mask: 0x8
  name: TO
  description: |
    Transfer time out
    1 = Mask this interrupt
    0 = unmask this interrupt
ps7_i2c1_Intrpt_mask_reg0_NACK:
  addr: 0xe0005020
  mask: 0x4
  name: NACK
  description: |
    Transfer not acknowledged
    1 = Mask this interrupt
    0 = unmask this interrupt
ps7_i2c1_Intrpt_mask_reg0_DATA:
  addr: 0xe0005020
  mask: 0x2
  name: DATA
  description: |
    More data
    1 = Mask this interrupt
    0 = unmask this interrupt
ps7_i2c1_Intrpt_mask_reg0_COMP:
  addr: 0xe0005020
  mask: 0x1
  name: COMP
  description: |
    Transfer complete
    1 = Mask this interrupt
    0 = unmask this interrupt
ps7_i2c1_Intrpt_enable_reg0_reserved_1:
  addr: 0xe0005024
  mask: 0xfc00
  name: reserved_1
  description: |
    Reserved, read as zero, ignored on write.
ps7_i2c1_Intrpt_enable_reg0_ARB_LOST:
  addr: 0xe0005024
  mask: 0x200
  name: ARB_LOST
  description: |
    arbitration lost
    1 = enable this interrupt
ps7_i2c1_Intrpt_enable_reg0_reserved:
  addr: 0xe0005024
  mask: 0x100
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_i2c1_Intrpt_enable_reg0_RX_UNF:
  addr: 0xe0005024
  mask: 0x80
  name: RX_UNF
  description: |
    FIFO receive underflow
    1 = enable this interrupt
ps7_i2c1_Intrpt_enable_reg0_TX_OVF:
  addr: 0xe0005024
  mask: 0x40
  name: TX_OVF
  description: |
    FIFO transmit overflow
    1 = enable this interrupt
ps7_i2c1_Intrpt_enable_reg0_RX_OVF:
  addr: 0xe0005024
  mask: 0x20
  name: RX_OVF
  description: |
    Receive overflow
    1 = enable this interrupt
ps7_i2c1_Intrpt_enable_reg0_SLV_RDY:
  addr: 0xe0005024
  mask: 0x10
  name: SLV_RDY
  description: |
    Monitored slave ready
    1 = enable this interrupt
ps7_i2c1_Intrpt_enable_reg0_TO:
  addr: 0xe0005024
  mask: 0x8
  name: TO
  description: |
    Transfer time out
    1 = enable this interrupt
ps7_i2c1_Intrpt_enable_reg0_NACK:
  addr: 0xe0005024
  mask: 0x4
  name: NACK
  description: |
    Transfer not acknowledged
    1 = enable this interrupt
ps7_i2c1_Intrpt_enable_reg0_DATA:
  addr: 0xe0005024
  mask: 0x2
  name: DATA
  description: |
    More data
    1 = enable this interrupt
ps7_i2c1_Intrpt_enable_reg0_COMP:
  addr: 0xe0005024
  mask: 0x1
  name: COMP
  description: |
    Transfer complete
    Will be set when transfer is complete
    1 = enable this interrupt
ps7_i2c1_Intrpt_disable_reg0_reserved_1:
  addr: 0xe0005028
  mask: 0xfc00
  name: reserved_1
  description: |
    Reserved, read as zero, ignored on write.
ps7_i2c1_Intrpt_disable_reg0_ARB_LOST:
  addr: 0xe0005028
  mask: 0x200
  name: ARB_LOST
  description: |
    arbitration lost
    1 = disable this interrupt
ps7_i2c1_Intrpt_disable_reg0_reserved:
  addr: 0xe0005028
  mask: 0x100
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_i2c1_Intrpt_disable_reg0_RX_UNF:
  addr: 0xe0005028
  mask: 0x80
  name: RX_UNF
  description: |
    FIFO receive underflow
    1 = disable this interrupt
ps7_i2c1_Intrpt_disable_reg0_TX_OVF:
  addr: 0xe0005028
  mask: 0x40
  name: TX_OVF
  description: |
    FIFO transmit overflow
    1 = disable this interrupt
ps7_i2c1_Intrpt_disable_reg0_RX_OVF:
  addr: 0xe0005028
  mask: 0x20
  name: RX_OVF
  description: |
    Receive overflow
    1 = disable this interrupt
ps7_i2c1_Intrpt_disable_reg0_SLV_RDY:
  addr: 0xe0005028
  mask: 0x10
  name: SLV_RDY
  description: |
    Monitored slave ready
    1 = disable this interrupt
ps7_i2c1_Intrpt_disable_reg0_TO:
  addr: 0xe0005028
  mask: 0x8
  name: TO
  description: |
    Transfer time out
    1 = disable this interrupt
ps7_i2c1_Intrpt_disable_reg0_NACK:
  addr: 0xe0005028
  mask: 0x4
  name: NACK
  description: |
    Transfer not acknowledged
    1 = disable this interrupt
ps7_i2c1_Intrpt_disable_reg0_DATA:
  addr: 0xe0005028
  mask: 0x2
  name: DATA
  description: |
    Master Write or Slave Transmitter
    Master Read or Slave Receiver
    1 = disable this interrupt
ps7_i2c1_Intrpt_disable_reg0_COMP:
  addr: 0xe0005028
  mask: 0x1
  name: COMP
  description: |
    Transfer complete
    Will be set when transfer is complete
    1 = disable this interrupt
ps7_i2c0_Control_reg0_divisor_a:
  addr: 0xe0004000
  mask: 0xc000
  name: divisor_a
  description: |
    Divisor for stage A clock divider.
    0 - 3: Divides the input pclk frequency by divisor_a + 1.
ps7_i2c0_Control_reg0_divisor_b:
  addr: 0xe0004000
  mask: 0x3f00
  name: divisor_b
  description: |
    Divisor for stage B clock divider.
    0 - 63 : Divides the output frequency from divisor_a by divisor_b + 1.
ps7_i2c0_Control_reg0_reserved:
  addr: 0xe0004000
  mask: 0x80
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_i2c0_Control_reg0_CLR_FIFO:
  addr: 0xe0004000
  mask: 0x40
  name: CLR_FIFO
  description: |
    1 - initializes the FIFO to all zeros and clears the transfer size register. Automatically gets cleared on the next APB clock after
    being set.
ps7_i2c0_Control_reg0_SLVMON:
  addr: 0xe0004000
  mask: 0x20
  name: SLVMON
  description: |
    Slave monitor mode
    1 - monitor mode.
    0 - normal operation.
ps7_i2c0_Control_reg0_HOLD:
  addr: 0xe0004000
  mask: 0x10
  name: HOLD
  description: |
    hold_bus
    1 - when no more data is available for transmit or no more data can be received, hold the sclk line low until serviced by the host.
    0 - allow the transfer to terminate as soon as all the data has been transmitted or received.
ps7_i2c0_Control_reg0_ACK_EN:
  addr: 0xe0004000
  mask: 0x8
  name: ACK_EN
  description: |
    This bit needs to be set to 1
    1 - acknowledge enabled, ACK transmitted
    0 - acknowledge disabled, NACK transmitted.
ps7_i2c0_Control_reg0_NEA:
  addr: 0xe0004000
  mask: 0x4
  name: NEA
  description: |
    Addressing mode: This bit is used in master
    mode only.
    1 - normal (7-bit) address
    0 - reserved
ps7_i2c0_Control_reg0_MS:
  addr: 0xe0004000
  mask: 0x2
  name: MS
  description: |
    Overall interface mode:
    1 - master
    0 - slave
ps7_i2c0_Control_reg0_RW:
  addr: 0xe0004000
  mask: 0x1
  name: RW
  description: |
    Direction of transfer:
    This bit is used in master mode only.
    1 - master receiver
    0 - master transmitter.
ps7_i2c0_Status_reg0_reserved_2:
  addr: 0xe0004004
  mask: 0xfe00
  name: reserved_2
  description: |
    Reserved, read as zero, ignored on write.
ps7_i2c0_Status_reg0_BA:
  addr: 0xe0004004
  mask: 0x100
  name: BA
  description: |
    Bus Active
    1 - ongoing transfer on the I2C bus.
ps7_i2c0_Status_reg0_RXOVF:
  addr: 0xe0004004
  mask: 0x80
  name: RXOVF
  description: |
    Receiver Overflow
    1 - This bit is set whenever FIFO is full and a new byte is received. The new byte is not acknowledged and contents of the FIFO remains unchanged.
ps7_i2c0_Status_reg0_TXDV:
  addr: 0xe0004004
  mask: 0x40
  name: TXDV
  description: |
    Transmit Data Valid - SW should not use this to determine data completion, it is the RAW value on the interface.
    Please use COMP in the ISR.
    1 - still a byte of data to be transmitted by the interface.
ps7_i2c0_Status_reg0_RXDV:
  addr: 0xe0004004
  mask: 0x20
  name: RXDV
  description: |
    Receiver Data Valid
    1 -valid, new data to be read from the interface.
ps7_i2c0_Status_reg0_reserved_1:
  addr: 0xe0004004
  mask: 0x10
  name: reserved_1
  description: |
    Reserved, read as zero, ignored on write.
ps7_i2c0_Status_reg0_RXRW:
  addr: 0xe0004004
  mask: 0x8
  name: RXRW
  description: |
    RX read_write
    1 - mode of the transmission received from a master.
ps7_i2c0_Status_reg0_reserved:
  addr: 0xe0004004
  mask: 0x7
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_i2c0_I2C_address_reg0_reserved:
  addr: 0xe0004008
  mask: 0xfc00
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_i2c0_I2C_address_reg0_ADD:
  addr: 0xe0004008
  mask: 0x3ff
  name: ADD
  description: |
    Address
    0 - 1024: Normal addressing mode uses add[6:0]. Extended addressing mode uses add[9:0].
ps7_i2c0_I2C_data_reg0_reserved:
  addr: 0xe000400c
  mask: 0xff00
  name: reserved
  description: |
    HASH(0x10fef980)
ps7_i2c0_I2C_data_reg0_DATA:
  addr: 0xe000400c
  mask: 0xff
  name: DATA
  description: |
    data
    0 -255: When written to, the data register sets data to transmit. When read from, the data register reads the last received byte of data.
ps7_i2c0_Interrupt_status_reg0_reserved_1:
  addr: 0xe0004010
  mask: 0xfc00
  name: reserved_1
  description: |
    Reserved, read as zero, ignored on write.
ps7_i2c0_Interrupt_status_reg0_ARB_LOST:
  addr: 0xe0004010
  mask: 0x200
  name: ARB_LOST
  description: |
    arbitration lost
    1 = master loses bus ownership during a transfer due to ongoing arbitration
ps7_i2c0_Interrupt_status_reg0_reserved:
  addr: 0xe0004010
  mask: 0x100
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_i2c0_Interrupt_status_reg0_RX_UNF:
  addr: 0xe0004010
  mask: 0x80
  name: RX_UNF
  description: |
    FIFO receive underflow
    1 = host attempts to read from the I2C data register more times than the value of the transfer size register plus one
ps7_i2c0_Interrupt_status_reg0_TX_OVF:
  addr: 0xe0004010
  mask: 0x40
  name: TX_OVF
  description: |
    FIFO transmit overflow
    1 = host attempts to write to the I2C data register more times than the FIFO depth
ps7_i2c0_Interrupt_status_reg0_RX_OVF:
  addr: 0xe0004010
  mask: 0x20
  name: RX_OVF
  description: |
    Receive overflow
    1 = This bit is set whenever FIFO is full and a new byte is received. The new byte is not acknowledged and contents of the FIFO remains unchanged.
ps7_i2c0_Interrupt_status_reg0_SLV_RDY:
  addr: 0xe0004010
  mask: 0x10
  name: SLV_RDY
  description: |
    Monitored slave ready
    1 =
    addressed slave returns ACK.
ps7_i2c0_Interrupt_status_reg0_TO:
  addr: 0xe0004010
  mask: 0x8
  name: TO
  description: |
    Transfer time out
    1 =
    I2C sclk line is kept low for longer time
ps7_i2c0_Interrupt_status_reg0_NACK:
  addr: 0xe0004010
  mask: 0x4
  name: NACK
  description: |
    Transfer not acknowledged
    1 = slave responds with a NACK or master terminates the transfer before all data is supplied
ps7_i2c0_Interrupt_status_reg0_DATA:
  addr: 0xe0004010
  mask: 0x2
  name: DATA
  description: |
    More data
    1 =
    Data being sent or received
ps7_i2c0_Interrupt_status_reg0_COMP:
  addr: 0xe0004010
  mask: 0x1
  name: COMP
  description: |
    Transfer complete
    1 =
    transfer is complete
ps7_i2c0_Transfer_size_reg0_Transfer_Size:
  addr: 0xe0004014
  mask: 0xff
  name: Transfer_Size
  description: |
    Transfer Size
    0-255
ps7_i2c0_Slave_mon_pause_reg0_reserved:
  addr: 0xe0004018
  mask: 0xf0
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_i2c0_Slave_mon_pause_reg0_Pause:
  addr: 0xe0004018
  mask: 0xf
  name: Pause
  description: |
    pause interval
    0 - 7: pause interval
ps7_i2c0_Time_out_reg0_TO:
  addr: 0xe000401c
  mask: 0xff
  name: TO
  description: |
    Time Out
    127 - 32 : value of time out register
ps7_i2c0_Intrpt_mask_reg0_reserved_1:
  addr: 0xe0004020
  mask: 0xfc00
  name: reserved_1
  description: |
    Reserved, read as zero, ignored on write.
ps7_i2c0_Intrpt_mask_reg0_ARB_LOST:
  addr: 0xe0004020
  mask: 0x200
  name: ARB_LOST
  description: |
    arbitration lost
    1 = Mask this interrupt
    0 = unmask this interrupt
ps7_i2c0_Intrpt_mask_reg0_reserved:
  addr: 0xe0004020
  mask: 0x100
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_i2c0_Intrpt_mask_reg0_RX_UNF:
  addr: 0xe0004020
  mask: 0x80
  name: RX_UNF
  description: |
    FIFO receive underflow
    1 = Mask this interrupt
    0 = unmask this interrupt
ps7_i2c0_Intrpt_mask_reg0_TX_OVF:
  addr: 0xe0004020
  mask: 0x40
  name: TX_OVF
  description: |
    FIFO transmit overflow
    1 = Mask this interrupt
    0 = unmask this interrupt
ps7_i2c0_Intrpt_mask_reg0_RX_OVF:
  addr: 0xe0004020
  mask: 0x20
  name: RX_OVF
  description: |
    Receive overflow
    1 = Mask this interrupt
    0 = unmask this interrupt
ps7_i2c0_Intrpt_mask_reg0_SLV_RDY:
  addr: 0xe0004020
  mask: 0x10
  name: SLV_RDY
  description: |
    Monitored slave ready
    1 = Mask this interrupt
    0 = unmask this interrupt
ps7_i2c0_Intrpt_mask_reg0_TO:
  addr: 0xe0004020
  mask: 0x8
  name: TO
  description: |
    Transfer time out
    1 = Mask this interrupt
    0 = unmask this interrupt
ps7_i2c0_Intrpt_mask_reg0_NACK:
  addr: 0xe0004020
  mask: 0x4
  name: NACK
  description: |
    Transfer not acknowledged
    1 = Mask this interrupt
    0 = unmask this interrupt
ps7_i2c0_Intrpt_mask_reg0_DATA:
  addr: 0xe0004020
  mask: 0x2
  name: DATA
  description: |
    More data
    1 = Mask this interrupt
    0 = unmask this interrupt
ps7_i2c0_Intrpt_mask_reg0_COMP:
  addr: 0xe0004020
  mask: 0x1
  name: COMP
  description: |
    Transfer complete
    1 = Mask this interrupt
    0 = unmask this interrupt
ps7_i2c0_Intrpt_enable_reg0_reserved_1:
  addr: 0xe0004024
  mask: 0xfc00
  name: reserved_1
  description: |
    Reserved, read as zero, ignored on write.
ps7_i2c0_Intrpt_enable_reg0_ARB_LOST:
  addr: 0xe0004024
  mask: 0x200
  name: ARB_LOST
  description: |
    arbitration lost
    1 = enable this interrupt
ps7_i2c0_Intrpt_enable_reg0_reserved:
  addr: 0xe0004024
  mask: 0x100
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_i2c0_Intrpt_enable_reg0_RX_UNF:
  addr: 0xe0004024
  mask: 0x80
  name: RX_UNF
  description: |
    FIFO receive underflow
    1 = enable this interrupt
ps7_i2c0_Intrpt_enable_reg0_TX_OVF:
  addr: 0xe0004024
  mask: 0x40
  name: TX_OVF
  description: |
    FIFO transmit overflow
    1 = enable this interrupt
ps7_i2c0_Intrpt_enable_reg0_RX_OVF:
  addr: 0xe0004024
  mask: 0x20
  name: RX_OVF
  description: |
    Receive overflow
    1 = enable this interrupt
ps7_i2c0_Intrpt_enable_reg0_SLV_RDY:
  addr: 0xe0004024
  mask: 0x10
  name: SLV_RDY
  description: |
    Monitored slave ready
    1 = enable this interrupt
ps7_i2c0_Intrpt_enable_reg0_TO:
  addr: 0xe0004024
  mask: 0x8
  name: TO
  description: |
    Transfer time out
    1 = enable this interrupt
ps7_i2c0_Intrpt_enable_reg0_NACK:
  addr: 0xe0004024
  mask: 0x4
  name: NACK
  description: |
    Transfer not acknowledged
    1 = enable this interrupt
ps7_i2c0_Intrpt_enable_reg0_DATA:
  addr: 0xe0004024
  mask: 0x2
  name: DATA
  description: |
    More data
    1 = enable this interrupt
ps7_i2c0_Intrpt_enable_reg0_COMP:
  addr: 0xe0004024
  mask: 0x1
  name: COMP
  description: |
    Transfer complete
    Will be set when transfer is complete
    1 = enable this interrupt
ps7_i2c0_Intrpt_disable_reg0_reserved_1:
  addr: 0xe0004028
  mask: 0xfc00
  name: reserved_1
  description: |
    Reserved, read as zero, ignored on write.
ps7_i2c0_Intrpt_disable_reg0_ARB_LOST:
  addr: 0xe0004028
  mask: 0x200
  name: ARB_LOST
  description: |
    arbitration lost
    1 = disable this interrupt
ps7_i2c0_Intrpt_disable_reg0_reserved:
  addr: 0xe0004028
  mask: 0x100
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_i2c0_Intrpt_disable_reg0_RX_UNF:
  addr: 0xe0004028
  mask: 0x80
  name: RX_UNF
  description: |
    FIFO receive underflow
    1 = disable this interrupt
ps7_i2c0_Intrpt_disable_reg0_TX_OVF:
  addr: 0xe0004028
  mask: 0x40
  name: TX_OVF
  description: |
    FIFO transmit overflow
    1 = disable this interrupt
ps7_i2c0_Intrpt_disable_reg0_RX_OVF:
  addr: 0xe0004028
  mask: 0x20
  name: RX_OVF
  description: |
    Receive overflow
    1 = disable this interrupt
ps7_i2c0_Intrpt_disable_reg0_SLV_RDY:
  addr: 0xe0004028
  mask: 0x10
  name: SLV_RDY
  description: |
    Monitored slave ready
    1 = disable this interrupt
ps7_i2c0_Intrpt_disable_reg0_TO:
  addr: 0xe0004028
  mask: 0x8
  name: TO
  description: |
    Transfer time out
    1 = disable this interrupt
ps7_i2c0_Intrpt_disable_reg0_NACK:
  addr: 0xe0004028
  mask: 0x4
  name: NACK
  description: |
    Transfer not acknowledged
    1 = disable this interrupt
ps7_i2c0_Intrpt_disable_reg0_DATA:
  addr: 0xe0004028
  mask: 0x2
  name: DATA
  description: |
    Master Write or Slave Transmitter
    Master Read or Slave Receiver
    1 = disable this interrupt
ps7_i2c0_Intrpt_disable_reg0_COMP:
  addr: 0xe0004028
  mask: 0x1
  name: COMP
  description: |
    Transfer complete
    Will be set when transfer is complete
    1 = disable this interrupt
ps7_l2cache_reg0_cache_id_implementer:
  addr: 0xf8f02000
  mask: 0xff000000
  name: implementer
  description: |
    0x41, ARM
ps7_l2cache_reg0_cache_id_reserved:
  addr: 0xf8f02000
  mask: 0xff0000
  name: reserved
  description: |
    reserved
ps7_l2cache_reg0_cache_id_cache_id:
  addr: 0xf8f02000
  mask: 0xfc00
  name: cache_id
  description: |
    cache id
ps7_l2cache_reg0_cache_id_part_num:
  addr: 0xf8f02000
  mask: 0x3c0
  name: part_num
  description: |
    part number
ps7_l2cache_reg0_cache_id_rtl_release:
  addr: 0xf8f02000
  mask: 0x3f
  name: rtl_release
  description: |
    RTL release R3p2
ps7_l2cache_reg0_cache_type_data_banking:
  addr: 0xf8f02004
  mask: 0x80000000
  name: data_banking
  description: |
    0 = Data banking not implemented.
    1 = Data banking implemented.
ps7_l2cache_reg0_cache_type_reserved:
  addr: 0xf8f02004
  mask: 0x60000000
  name: reserved
  description: |
    reserved
ps7_l2cache_reg0_cache_type_ctype:
  addr: 0xf8f02004
  mask: 0x1e000000
  name: ctype
  description: |
    11xy, where:
    x=1 if pl310_LOCKDOWN_BY_MASTER is defined, otherwise 0
    y=1 if pl310_LOCKDOWN_BY_LINE is defined, otherwise 0.
ps7_l2cache_reg0_cache_type_H:
  addr: 0xf8f02004
  mask: 0x1000000
  name: H
  description: |
    unified
ps7_l2cache_reg0_cache_type_Dsize_23:
  addr: 0xf8f02004
  mask: 0x800000
  name: Dsize_23
  description: |
    fixed to 0
ps7_l2cache_reg0_cache_type_Dsize_mid:
  addr: 0xf8f02004
  mask: 0x700000
  name: Dsize_mid
  description: |
    L2 cache way size Read from Auxiliary Control Register 19 through 17
ps7_l2cache_reg0_cache_type_Dsize_19:
  addr: 0xf8f02004
  mask: 0x80000
  name: Dsize_19
  description: |
    fixed to 0
ps7_l2cache_reg0_cache_type_L2_assoc_D:
  addr: 0xf8f02004
  mask: 0x40000
  name: L2_assoc_D
  description: |
    Read from Auxiliary Control Register bit 16
ps7_l2cache_reg0_cache_type_reserved_1:
  addr: 0xf8f02004
  mask: 0x3c000
  name: reserved_1
  description: |
    reserved
ps7_l2cache_reg0_cache_type_l2cache_line_len_D:
  addr: 0xf8f02004
  mask: 0x3000
  name: l2cache_line_len_D
  description: |
    L2 cache line length - 00-32 bytes
ps7_l2cache_reg0_cache_type_Isize_11:
  addr: 0xf8f02004
  mask: 0x800
  name: Isize_11
  description: |
    fixed to 0
ps7_l2cache_reg0_cache_type_Isize_mid:
  addr: 0xf8f02004
  mask: 0x700
  name: Isize_mid
  description: |
    L2 cache way size Read from Auxiliary Control Register[19:17]
ps7_l2cache_reg0_cache_type_Isize_7:
  addr: 0xf8f02004
  mask: 0x80
  name: Isize_7
  description: |
    fixed to 0
ps7_l2cache_reg0_cache_type_L2_assoc_I:
  addr: 0xf8f02004
  mask: 0x40
  name: L2_assoc_I
  description: |
    Read from Auxiliary Control Register bit 16
ps7_l2cache_reg0_cache_type_reserved_2:
  addr: 0xf8f02004
  mask: 0x3c
  name: reserved_2
  description: |
    reserved
ps7_l2cache_reg0_cache_type_l2cache_line_len_I:
  addr: 0xf8f02004
  mask: 0x3
  name: l2cache_line_len_I
  description: |
    L2 cache line length - 00-32 bytes
ps7_l2cache_reg1_control_reserved:
  addr: 0xf8f02100
  mask: 0x7ffffffe
  name: reserved
  description: |
    reserved, reserved
ps7_l2cache_reg1_control_l2_enable:
  addr: 0xf8f02100
  mask: 0x1
  name: l2_enable
  description: |
    0 = L2 Cache is disabled. This is the default value.
    1 = L2 Cache is enabled.
ps7_l2cache_reg1_aux_control_reserved:
  addr: 0xf8f02104
  mask: 0x80000000
  name: reserved
  description: |
    reserved, reserved
ps7_l2cache_reg1_aux_control_early_bresp_en:
  addr: 0xf8f02104
  mask: 0x40000000
  name: early_bresp_en
  description: |
    Early BRESP enable
    0 = Early BRESP disabled. This is the default.
    1 = Early BRESP enabled.
ps7_l2cache_reg1_aux_control_instr_prefetch_en:
  addr: 0xf8f02104
  mask: 0x20000000
  name: instr_prefetch_en
  description: |
    Instruction prefetch enable
    0 = Instruction prefetching disabled. This is the default.
    1 = Instruction prefetching enabled.
ps7_l2cache_reg1_aux_control_data_prefetch_en:
  addr: 0xf8f02104
  mask: 0x10000000
  name: data_prefetch_en
  description: |
    Data prefetch enable
    0 = Data prefetching disabled. This is the default.
    1 = Data prefetching enabled.
ps7_l2cache_reg1_aux_control_nonsec_inte_access_ctrl:
  addr: 0xf8f02104
  mask: 0x8000000
  name: nonsec_inte_access_ctrl
  description: |
    Non-secure interrupt access control 0 = Interrupt Clear, 0x220, and Interrupt Mask, 0x214, can only be modified or read
    with secure accesses. This is the default.
    1 = Interrupt Clear, 0x220, and Interrupt Mask, 0x214, can be modified or read with
    secure or non-secure accesses.
ps7_l2cache_reg1_aux_control_nonsec_lockdown_en:
  addr: 0xf8f02104
  mask: 0x4000000
  name: nonsec_lockdown_en
  description: |
    Non-secure lockdown enable
    0 = Lockdown registers cannot be modified using non-secure accesses. This is the
    default.
    1 = Non-secure accesses can write to the lockdown registers.
ps7_l2cache_reg1_aux_control_cache_replace_policy:
  addr: 0xf8f02104
  mask: 0x2000000
  name: cache_replace_policy
  description: |
    Cache replacement policy
    0 = pseudo-random replacement using lfsr.
    1 = round-robin replacement. This is the default.
ps7_l2cache_reg1_aux_control_force_write_alloc:
  addr: 0xf8f02104
  mask: 0x1800000
  name: force_write_alloc
  description: |
    Force write allocate
    b00 = Use AWCACHE attributes for WA. This is the default.
    b01 = Force no allocate, set WA bit always 0.
    b10 = Override AWCACHE attributes, set WA bit always 1, all cacheable write
    misses become write allocated.
    b11 = Internally mapped to 00. See Cache operation on page 2-11 for more
    information.
ps7_l2cache_reg1_aux_control_shared_attr_override_en:
  addr: 0xf8f02104
  mask: 0x400000
  name: shared_attr_override_en
  description: |
    Shared attribute override enable
    0 = Treats shared accesses as specified in Shareable attribute on page 2-15. This
    is the default.
    1 = Shared attribute internally ignored.
ps7_l2cache_reg1_aux_control_parity_en:
  addr: 0xf8f02104
  mask: 0x200000
  name: parity_en
  description: |
    Parity enable
    0 = Disabled. This is the default.
    1 = Enabled
ps7_l2cache_reg1_aux_control_event_mon_bus_en:
  addr: 0xf8f02104
  mask: 0x100000
  name: event_mon_bus_en
  description: |
    Event monitor bus enable
    0 = Disabled. This is the default.
    1 = Enabled
ps7_l2cache_reg1_aux_control_way_size:
  addr: 0xf8f02104
  mask: 0xe0000
  name: way_size
  description: |
    Way-size
    b000 = Reserved, internally mapped to 16KB.
    b001 = 16KB.
    b010 = 32KB.
    b011 = 64KB.
    b100 = 128KB.
    b101 = 256KB.
    b110 = 512KB.
    b111 = Reserved, internally mapped to 512 KB.
ps7_l2cache_reg1_aux_control_associativity:
  addr: 0xf8f02104
  mask: 0x10000
  name: associativity
  description: |
    Associativity
    0 = 8-way.
    1 = 16-way.
ps7_l2cache_reg1_aux_control_reserved_1:
  addr: 0xf8f02104
  mask: 0xc000
  name: reserved_1
  description: |
    reserved, reserved
ps7_l2cache_reg1_aux_control_shared_attr_inva_en:
  addr: 0xf8f02104
  mask: 0x2000
  name: shared_attr_inva_en
  description: |
    Shared Attribute Invalidate
    Enable 0 = Shared invalidate behavior disabled. This is the default.
    1 = Shared invalidate behavior enabled, if Shared Attribute Override Enable bit
    not set. See Shareable attribute on page 2-15.
ps7_l2cache_reg1_aux_control_ex_cache_config:
  addr: 0xf8f02104
  mask: 0x1000
  name: ex_cache_config
  description: |
    Exclusive cache configuration
    0 = Disabled. This is the default.
    1 = Enabled,
ps7_l2cache_reg1_aux_control_store_buff_dev_lim_en:
  addr: 0xf8f02104
  mask: 0x800
  name: store_buff_dev_lim_en
  description: |
    Store buffer device limitation Enable
    0 = Store buffer device limitation disabled. Device writes can take all slots in store
    buffer. This is the default.
    1= Store buffer device limitation enabled. Device writes cannot take all slots in
    store buffer when connected to the Cortex-A9 MPCore processor. There is always
    one available slot to service Normal Memory
ps7_l2cache_reg1_aux_control_high_pr_so_dev_rd_en:
  addr: 0xf8f02104
  mask: 0x400
  name: high_pr_so_dev_rd_en
  description: |
    High Priority for SO and Dev Reads Enable
    0 = Strongly Ordered and Device reads have lower priority than cacheable
    accesses when arbitrated in the L2CC (L2C-310) master ports. This is the default.
    1 = Strongly Ordered and Device reads get the highest priority when arbitrated in
    the L2CC (L2C-310) master ports.
ps7_l2cache_reg1_aux_control_reserved_2:
  addr: 0xf8f02104
  mask: 0x3fe
  name: reserved_2
  description: |
    reserved, reserved
ps7_l2cache_reg1_aux_control_full_line_zero_enable:
  addr: 0xf8f02104
  mask: 0x1
  name: full_line_zero_enable
  description: |
    Full Line of Zero Enable
    0 = Full line of write zero behavior disabled. This is the default.
    1 = Full line of write zero behavior Enabled.
ps7_l2cache_reg1_tag_ram_control_reserved:
  addr: 0xf8f02108
  mask: 0xfffff800
  name: reserved
  description: |
    reserved, reserved
ps7_l2cache_reg1_tag_ram_control_ram_wr_access_lat:
  addr: 0xf8f02108
  mask: 0x700
  name: ram_wr_access_lat
  description: |
    RAM write access latency Default value depends on the value of pl310_TAG_WRITE_LAT
    b000 = 1 cycle of latency, there is no additional latency.
    b001 = 2 cycles of latency.
    b010 = 3 cycles of latency.
    b011 = 4 cycles of latency.
    b100 = 5 cycles of latency.
    b101 = 6 cycles of latency.
    b110 = 7 cycles of latency.
    b111 = 8 cycles of latency
ps7_l2cache_reg1_tag_ram_control_reserved_1:
  addr: 0xf8f02108
  mask: 0x80
  name: reserved_1
  description: |
    reserved, reserved
ps7_l2cache_reg1_tag_ram_control_ram_rd_access_lat:
  addr: 0xf8f02108
  mask: 0x70
  name: ram_rd_access_lat
  description: |
    RAM read access latency Default value depends on the value of pl310_TAG_READ_LAT
    b000 = 1 cycle of latency, there is no additional latency.
    b001 = 2 cycles of latency.
    b010 = 3 cycles of latency.
    b011 = 4 cycles of latency.
    b100 = 5 cycles of latency.
    b101 = 6 cycles of latency.
    b110 = 7 cycles of latency.
    b111 = 8 cycles of latency.
ps7_l2cache_reg1_tag_ram_control_reserved_2:
  addr: 0xf8f02108
  mask: 0x8
  name: reserved_2
  description: |
    reserved, reserved
ps7_l2cache_reg1_tag_ram_control_ram_setup_lat:
  addr: 0xf8f02108
  mask: 0x7
  name: ram_setup_lat
  description: |
    RAM setup latency Default value depends on the value of pl310_TAG_SETUP_LAT
    b000 = 1 cycle of latency, there is no additional latency.
    b001 = 2 cycles of latency.
    b010 = 3 cycles of latency.
    b011 = 4 cycles of latency.
    b100 = 5 cycles of latency.
    b101 = 6 cycles of latency.
    b110 = 7 cycles of latency.
    b111 = 8 cycles of latency.
ps7_l2cache_reg1_data_ram_control_reserved:
  addr: 0xf8f0210c
  mask: 0xfffff800
  name: reserved
  description: |
    reserved, reserved
ps7_l2cache_reg1_data_ram_control_ram_wr_access_lat:
  addr: 0xf8f0210c
  mask: 0x700
  name: ram_wr_access_lat
  description: |
    RAM write access latency Default value depends on the value of pl310_DATA_WRITE_LAT
    b000 = 1 cycle of latency, there is no additional latency.
    b001 = 2 cycles of latency.
    b010 = 3 cycles of latency.
    b011 = 4 cycles of latency.
    b100 = 5 cycles of latency.
    b101 = 6 cycles of latency.
    b110 = 7 cycles of latency.
    b111 = 8 cycles of latency
ps7_l2cache_reg1_data_ram_control_reserved_1:
  addr: 0xf8f0210c
  mask: 0x80
  name: reserved_1
  description: |
    reserved, reserved
ps7_l2cache_reg1_data_ram_control_ram_rd_access_lat:
  addr: 0xf8f0210c
  mask: 0x70
  name: ram_rd_access_lat
  description: |
    RAM read access latency Default value depends on the value of pl310_DATA_READ_LAT
    b000 = 1 cycle of latency, there is no additional latency.
    b001 = 2 cycles of latency.
    b010 = 3 cycles of latency.
    b011 = 4 cycles of latency.
    b100 = 5 cycles of latency.
    b101 = 6 cycles of latency.
    b110 = 7 cycles of latency.
    b111 = 8 cycles of latency.
ps7_l2cache_reg1_data_ram_control_reserved_2:
  addr: 0xf8f0210c
  mask: 0x8
  name: reserved_2
  description: |
    reserved, reserved
ps7_l2cache_reg1_data_ram_control_ran_setup_lat:
  addr: 0xf8f0210c
  mask: 0x7
  name: ran_setup_lat
  description: |
    RAM setup latency Default value depends on the value of pl310_DATA_SETUP_LAT
    b000 = 1 cycle of latency, there is no additional latency.
    b001 = 2 cycles of latency.
    b010 = 3 cycles of latency.
    b011 = 4 cycles of latency.
    b100 = 5 cycles of latency.
    b101 = 6 cycles of latency.
    b110 = 7 cycles of latency.
    b111 = 8 cycles of latency.
ps7_l2cache_reg2_ev_counter_ctrl_reserved:
  addr: 0xf8f02200
  mask: 0xfffffff8
  name: reserved
  description: |
    reserved, reserved
ps7_l2cache_reg2_ev_counter_ctrl_counter_reset:
  addr: 0xf8f02200
  mask: 0x6
  name: counter_reset
  description: |
    Always Read as zero. The following counters are reset when a 1 is written to the following bits:
    bit[2] = Event Counter1 reset
    bit[1] = Event Counter0 reset.
ps7_l2cache_reg2_ev_counter_ctrl_ev_ctr_en:
  addr: 0xf8f02200
  mask: 0x1
  name: ev_ctr_en
  description: |
    Event counter enable 0 = Event Counting Disable. This is the default.
    1 = Event Counting Enable.
ps7_l2cache_reg2_ev_counter1_cfg_reserved:
  addr: 0xf8f02204
  mask: 0xffffffc0
  name: reserved
  description: |
    reserved, reserved
ps7_l2cache_reg2_ev_counter1_cfg_ctr_ev_src:
  addr: 0xf8f02204
  mask: 0x3c
  name: ctr_ev_src
  description: |
    Counter event source Event Encoding
    Counter Disabled b0000
    CO b0001
    DRHIT b0010
    DRREQ b0011
    DWHIT b0100
    DWREQ b0101
    DWTREQ b0110
    IRHIT b0111
    IRREQ b1000
    WA b1001
    IPFALLOC b1010
    EPFHIT b1011
    EPFALLOC b1100
    SRRCVD b1101
    SRCONF b1110
    EPFRCVD b1111
ps7_l2cache_reg2_ev_counter1_cfg_ev_ctr_intr_gen:
  addr: 0xf8f02204
  mask: 0x3
  name: ev_ctr_intr_gen
  description: |
    Event counter interrupt generation b00 = Disabled. This is the default.
    b01 = Enabled: Increment condition.
    b10 = Enabled: Overflow condition.
    b11 = Interrupt generation is disabled.
ps7_l2cache_reg2_ev_counter0_cfg_reserved:
  addr: 0xf8f02208
  mask: 0xffffffc0
  name: reserved
  description: |
    reserved, reserved
ps7_l2cache_reg2_ev_counter0_cfg_ctr_ev_src:
  addr: 0xf8f02208
  mask: 0x3c
  name: ctr_ev_src
  description: |
    Counter event source Event Encoding
    Counter Disabled b0000
    CO b0001
    DRHIT b0010
    DRREQ b0011
    DWHIT b0100
    DWREQ b0101
    DWTREQ b0110
    IRHIT b0111
    IRREQ b1000
    WA b1001
    IPFALLOC b1010
    EPFHIT b1011
    EPFALLOC b1100
    SRRCVD b1101
    SRCONF b1110
    EPFRCVD b1111
ps7_l2cache_reg2_ev_counter0_cfg_ev_ctr_intr_gen:
  addr: 0xf8f02208
  mask: 0x3
  name: ev_ctr_intr_gen
  description: |
    Event counter interrupt generation b00 = Disabled. This is the default.
    b01 = Enabled: Increment condition.
    b10 = Enabled: Overflow condition.
    b11 = Interrupt generation is disabled.
ps7_l2cache_reg2_ev_counter1_counter_val:
  addr: 0xf8f0220c
  mask: 0xffffffff
  name: counter_val
  description: |
    Total of the event selected.
    If a counter reaches its maximum value, it saturates at that value until it is reset.
ps7_l2cache_reg2_ev_counter0_counter_val:
  addr: 0xf8f02210
  mask: 0xffffffff
  name: counter_val
  description: |
    Total of the event selected.
    If a counter reaches its maximum value, it saturates at that value until it is reset.
ps7_l2cache_reg2_int_mask_reserved:
  addr: 0xf8f02214
  mask: 0xfffffe00
  name: reserved
  description: |
    reserved, reserved
ps7_l2cache_reg2_int_mask_DECERR:
  addr: 0xf8f02214
  mask: 0x100
  name: DECERR
  description: |
    DECERR: DECERR from L3
ps7_l2cache_reg2_int_mask_SLVERR:
  addr: 0xf8f02214
  mask: 0x80
  name: SLVERR
  description: |
    SLVERR: SLVERR from L3
ps7_l2cache_reg2_int_mask_ERRRD:
  addr: 0xf8f02214
  mask: 0x40
  name: ERRRD
  description: |
    ERRRD: Error on L2 data RAM, Read
ps7_l2cache_reg2_int_mask_ERRRT:
  addr: 0xf8f02214
  mask: 0x20
  name: ERRRT
  description: |
    ERRRT: Error on L2 tag RAM, Read
ps7_l2cache_reg2_int_mask_ERRWD:
  addr: 0xf8f02214
  mask: 0x10
  name: ERRWD
  description: |
    ERRWD: Error on L2 data RAM, Write
ps7_l2cache_reg2_int_mask_ERRWT:
  addr: 0xf8f02214
  mask: 0x8
  name: ERRWT
  description: |
    ERRWT: Error on L2 tag RAM, Write
ps7_l2cache_reg2_int_mask_PARRD:
  addr: 0xf8f02214
  mask: 0x4
  name: PARRD
  description: |
    PARRD: Parity Error on L2 data RAM, Read
ps7_l2cache_reg2_int_mask_PARRT:
  addr: 0xf8f02214
  mask: 0x2
  name: PARRT
  description: |
    PARRT: Parity Error on L2 tag RAM, Read
ps7_l2cache_reg2_int_mask_ECNTR:
  addr: 0xf8f02214
  mask: 0x1
  name: ECNTR
  description: |
    ECNTR: Event Counter1/0 Overflow Increment
ps7_l2cache_reg2_int_mask_status_reserved:
  addr: 0xf8f02218
  mask: 0xfffffe00
  name: reserved
  description: |
    reserved
ps7_l2cache_reg2_int_mask_status_DECERR:
  addr: 0xf8f02218
  mask: 0x100
  name: DECERR
  description: |
    DECERR: DECERR from L3
ps7_l2cache_reg2_int_mask_status_SLVERR:
  addr: 0xf8f02218
  mask: 0x80
  name: SLVERR
  description: |
    SLVERR: SLVERR from L3
ps7_l2cache_reg2_int_mask_status_ERRRD:
  addr: 0xf8f02218
  mask: 0x40
  name: ERRRD
  description: |
    ERRRD: Error on L2 data RAM, Read
ps7_l2cache_reg2_int_mask_status_ERRRT:
  addr: 0xf8f02218
  mask: 0x20
  name: ERRRT
  description: |
    ERRRT: Error on L2 tag RAM, Read
ps7_l2cache_reg2_int_mask_status_ERRWD:
  addr: 0xf8f02218
  mask: 0x10
  name: ERRWD
  description: |
    ERRWD: Error on L2 data RAM, Write
ps7_l2cache_reg2_int_mask_status_ERRWT:
  addr: 0xf8f02218
  mask: 0x8
  name: ERRWT
  description: |
    ERRWT: Error on L2 tag RAM, Write
ps7_l2cache_reg2_int_mask_status_PARRD:
  addr: 0xf8f02218
  mask: 0x4
  name: PARRD
  description: |
    PARRD: Parity Error on L2 data RAM, Read
ps7_l2cache_reg2_int_mask_status_PARRT:
  addr: 0xf8f02218
  mask: 0x2
  name: PARRT
  description: |
    PARRT: Parity Error on L2 tag RAM, Read
ps7_l2cache_reg2_int_mask_status_ECNTR:
  addr: 0xf8f02218
  mask: 0x1
  name: ECNTR
  description: |
    ECNTR: Event Counter1/0 Overflow Increment
ps7_l2cache_reg2_int_raw_status_reserved:
  addr: 0xf8f0221c
  mask: 0xfffffe00
  name: reserved
  description: |
    reserved
ps7_l2cache_reg2_int_raw_status_DECERR:
  addr: 0xf8f0221c
  mask: 0x100
  name: DECERR
  description: |
    DECERR: DECERR from L3
ps7_l2cache_reg2_int_raw_status_SLVERR:
  addr: 0xf8f0221c
  mask: 0x80
  name: SLVERR
  description: |
    SLVERR: SLVERR from L3
ps7_l2cache_reg2_int_raw_status_ERRRD:
  addr: 0xf8f0221c
  mask: 0x40
  name: ERRRD
  description: |
    ERRRD: Error on L2 data RAM, Read
ps7_l2cache_reg2_int_raw_status_ERRRT:
  addr: 0xf8f0221c
  mask: 0x20
  name: ERRRT
  description: |
    ERRRT: Error on L2 tag RAM, Read
ps7_l2cache_reg2_int_raw_status_ERRWD:
  addr: 0xf8f0221c
  mask: 0x10
  name: ERRWD
  description: |
    ERRWD: Error on L2 data RAM, Write
ps7_l2cache_reg2_int_raw_status_ERRWT:
  addr: 0xf8f0221c
  mask: 0x8
  name: ERRWT
  description: |
    ERRWT: Error on L2 tag RAM, Write
ps7_l2cache_reg2_int_raw_status_PARRD:
  addr: 0xf8f0221c
  mask: 0x4
  name: PARRD
  description: |
    PARRD: Parity Error on L2 data RAM, Read
ps7_l2cache_reg2_int_raw_status_PARRT:
  addr: 0xf8f0221c
  mask: 0x2
  name: PARRT
  description: |
    PARRT: Parity Error on L2 tag RAM, Read
ps7_l2cache_reg2_int_raw_status_ECNTR:
  addr: 0xf8f0221c
  mask: 0x1
  name: ECNTR
  description: |
    ECNTR: Event Counter1/0 Overflow Increment
ps7_l2cache_reg2_int_clear_reserved:
  addr: 0xf8f02220
  mask: 0xfffffe00
  name: reserved
  description: |
    reserved
ps7_l2cache_reg2_int_clear_DECERR:
  addr: 0xf8f02220
  mask: 0x100
  name: DECERR
  description: |
    DECERR: DECERR from L3
ps7_l2cache_reg2_int_clear_SLVERR:
  addr: 0xf8f02220
  mask: 0x80
  name: SLVERR
  description: |
    SLVERR: SLVERR from L3
ps7_l2cache_reg2_int_clear_ERRRD:
  addr: 0xf8f02220
  mask: 0x40
  name: ERRRD
  description: |
    ERRRD: Error on L2 data RAM, Read
ps7_l2cache_reg2_int_clear_ERRRT:
  addr: 0xf8f02220
  mask: 0x20
  name: ERRRT
  description: |
    ERRRT: Error on L2 tag RAM, Read
ps7_l2cache_reg2_int_clear_ERRWD:
  addr: 0xf8f02220
  mask: 0x10
  name: ERRWD
  description: |
    ERRWD: Error on L2 data RAM, Write
ps7_l2cache_reg2_int_clear_ERRWT:
  addr: 0xf8f02220
  mask: 0x8
  name: ERRWT
  description: |
    ERRWT: Error on L2 tag RAM, Write
ps7_l2cache_reg2_int_clear_PARRD:
  addr: 0xf8f02220
  mask: 0x4
  name: PARRD
  description: |
    PARRD: Parity Error on L2 data RAM, Read
ps7_l2cache_reg2_int_clear_PARRT:
  addr: 0xf8f02220
  mask: 0x2
  name: PARRT
  description: |
    PARRT: Parity Error on L2 tag RAM, Read
ps7_l2cache_reg2_int_clear_ECNTR:
  addr: 0xf8f02220
  mask: 0x1
  name: ECNTR
  description: |
    ECNTR: Event Counter1/0 Overflow Increment
ps7_l2cache_reg7_cache_sync_reserved:
  addr: 0xf8f02730
  mask: 0xfffffffe
  name: reserved
  description: |
    reserved
ps7_l2cache_reg7_cache_sync_c:
  addr: 0xf8f02730
  mask: 0x1
  name: c
  description: |
    Cache Sync: Drain the STB. Operation complete when all buffers, LRB, LFB, STB, and EB, are empty.
ps7_l2cache_reg7_inv_pa_tag:
  addr: 0xf8f02770
  mask: 0xfffff000
  name: tag
  description: |
    tag
ps7_l2cache_reg7_inv_pa_index:
  addr: 0xf8f02770
  mask: 0xfe0
  name: index
  description: |
    index
ps7_l2cache_reg7_inv_pa_reserved:
  addr: 0xf8f02770
  mask: 0x1e
  name: reserved
  description: |
    reserved
ps7_l2cache_reg7_inv_pa_c:
  addr: 0xf8f02770
  mask: 0x1
  name: c
  description: |
    C Flag
    When written must be 0.
    When read, indicates that a background operation is in progress
ps7_l2cache_reg7_inv_way_reserved:
  addr: 0xf8f0277c
  mask: 0xffffff00
  name: reserved
  description: |
    reserved
ps7_l2cache_reg7_inv_way_way_bits:
  addr: 0xf8f0277c
  mask: 0xff
  name: way_bits
  description: |
    way bits: You can select multiple ways at the same time, by setting the Way bits to 1
ps7_l2cache_reg7_clean_pa_tag:
  addr: 0xf8f027b0
  mask: 0xfffff000
  name: tag
  description: |
    tag
ps7_l2cache_reg7_clean_pa_index:
  addr: 0xf8f027b0
  mask: 0xfe0
  name: index
  description: |
    index
ps7_l2cache_reg7_clean_pa_reserved:
  addr: 0xf8f027b0
  mask: 0x1e
  name: reserved
  description: |
    reserved
ps7_l2cache_reg7_clean_pa_c:
  addr: 0xf8f027b0
  mask: 0x1
  name: c
  description: |
    C Flag
    When written must be 0.
    When read, indicates that a background operation is in progress
ps7_l2cache_reg7_clean_index_reserved:
  addr: 0xf8f027b8
  mask: 0x80000000
  name: reserved
  description: |
    reserved
ps7_l2cache_reg7_clean_index_way:
  addr: 0xf8f027b8
  mask: 0x70000000
  name: way
  description: |
    way
ps7_l2cache_reg7_clean_index_reserved_1:
  addr: 0xf8f027b8
  mask: 0xffff000
  name: reserved_1
  description: |
    reserved
ps7_l2cache_reg7_clean_index_index:
  addr: 0xf8f027b8
  mask: 0xfe0
  name: index
  description: |
    index
ps7_l2cache_reg7_clean_index_reserved_2:
  addr: 0xf8f027b8
  mask: 0x1e
  name: reserved_2
  description: |
    reserved
ps7_l2cache_reg7_clean_index_c:
  addr: 0xf8f027b8
  mask: 0x1
  name: c
  description: |
    c
ps7_l2cache_reg7_clean_way_reserved:
  addr: 0xf8f027bc
  mask: 0xffffff00
  name: reserved
  description: |
    reserved
ps7_l2cache_reg7_clean_way_way_bits:
  addr: 0xf8f027bc
  mask: 0xff
  name: way_bits
  description: |
    way bits: You can select multiple ways at the same time, by setting the Way bits to 1
ps7_l2cache_reg7_clean_inv_pa_tag:
  addr: 0xf8f027f0
  mask: 0xfffff000
  name: tag
  description: |
    tag
ps7_l2cache_reg7_clean_inv_pa_index:
  addr: 0xf8f027f0
  mask: 0xfe0
  name: index
  description: |
    index
ps7_l2cache_reg7_clean_inv_pa_reserved:
  addr: 0xf8f027f0
  mask: 0x1e
  name: reserved
  description: |
    reserved
ps7_l2cache_reg7_clean_inv_pa_c:
  addr: 0xf8f027f0
  mask: 0x1
  name: c
  description: |
    C Flag
    When written must be 0.
    When read, indicates that a background operation is in progress
ps7_l2cache_reg7_clean_inv_index_reserved:
  addr: 0xf8f027f8
  mask: 0x80000000
  name: reserved
  description: |
    reserved
ps7_l2cache_reg7_clean_inv_index_way:
  addr: 0xf8f027f8
  mask: 0x70000000
  name: way
  description: |
    way
ps7_l2cache_reg7_clean_inv_index_reserved_1:
  addr: 0xf8f027f8
  mask: 0xffff000
  name: reserved_1
  description: |
    reserved
ps7_l2cache_reg7_clean_inv_index_index:
  addr: 0xf8f027f8
  mask: 0xfe0
  name: index
  description: |
    index
ps7_l2cache_reg7_clean_inv_index_reserved_2:
  addr: 0xf8f027f8
  mask: 0x1e
  name: reserved_2
  description: |
    reserved
ps7_l2cache_reg7_clean_inv_index_c:
  addr: 0xf8f027f8
  mask: 0x1
  name: c
  description: |
    c
ps7_l2cache_reg7_clean_inv_way_reserved:
  addr: 0xf8f027fc
  mask: 0xffffff00
  name: reserved
  description: |
    reserved
ps7_l2cache_reg7_clean_inv_way_way_bits:
  addr: 0xf8f027fc
  mask: 0xff
  name: way_bits
  description: |
    way bits: You can select multiple ways at the same time, by setting the Way bits to 1
ps7_l2cache_reg9_d_lockdown0_reserved:
  addr: 0xf8f02900
  mask: 0xffff0000
  name: reserved
  description: |
    reserved
ps7_l2cache_reg9_d_lockdown0_DATALOCK000:
  addr: 0xf8f02900
  mask: 0xffff
  name: DATALOCK000
  description: |
    Use when AR/WUSERSx[7:5] = 000
ps7_l2cache_reg9_i_lockdown0_reserved:
  addr: 0xf8f02904
  mask: 0xffff0000
  name: reserved
  description: |
    reserved
ps7_l2cache_reg9_i_lockdown0_INSTRLOCK000:
  addr: 0xf8f02904
  mask: 0xffff
  name: INSTRLOCK000
  description: |
    Use when AR/WUSERSx[7:5] = 000
ps7_l2cache_reg9_d_lockdown1_reserved:
  addr: 0xf8f02908
  mask: 0xffff0000
  name: reserved
  description: |
    reserved
ps7_l2cache_reg9_d_lockdown1_DATALOCK001:
  addr: 0xf8f02908
  mask: 0xffff
  name: DATALOCK001
  description: |
    Use when AR/WUSERSx[7:5] = 001
ps7_l2cache_reg9_i_lockdown1_reserved:
  addr: 0xf8f0290c
  mask: 0xffff0000
  name: reserved
  description: |
    reserved
ps7_l2cache_reg9_i_lockdown1_INSTRLOCK001:
  addr: 0xf8f0290c
  mask: 0xffff
  name: INSTRLOCK001
  description: |
    Use when AR/WUSERSx[7:5] = 001
ps7_l2cache_reg9_d_lockdown2_reserved:
  addr: 0xf8f02910
  mask: 0xffff0000
  name: reserved
  description: |
    reserved
ps7_l2cache_reg9_d_lockdown2_DATALOCK010:
  addr: 0xf8f02910
  mask: 0xffff
  name: DATALOCK010
  description: |
    Use when AR/WUSERSx[7:5] = 010
ps7_l2cache_reg9_i_lockdown2_reserved:
  addr: 0xf8f02914
  mask: 0xffff0000
  name: reserved
  description: |
    reserved
ps7_l2cache_reg9_i_lockdown2_INSTRLOCK010:
  addr: 0xf8f02914
  mask: 0xffff
  name: INSTRLOCK010
  description: |
    Use when AR/WUSERSx[7:5] = 010
ps7_l2cache_reg9_d_lockdown3_reserved:
  addr: 0xf8f02918
  mask: 0xffff0000
  name: reserved
  description: |
    reserved
ps7_l2cache_reg9_d_lockdown3_DATALOCK011:
  addr: 0xf8f02918
  mask: 0xffff
  name: DATALOCK011
  description: |
    Use when AR/WUSERSx[7:5] = 011
ps7_l2cache_reg9_i_lockdown3_reserved:
  addr: 0xf8f0291c
  mask: 0xffff0000
  name: reserved
  description: |
    reserved
ps7_l2cache_reg9_i_lockdown3_INSTRLOCK011:
  addr: 0xf8f0291c
  mask: 0xffff
  name: INSTRLOCK011
  description: |
    Use when AR/WUSERSx[7:5] = 011
ps7_l2cache_reg9_d_lockdown4_reserved:
  addr: 0xf8f02920
  mask: 0xffff0000
  name: reserved
  description: |
    reserved
ps7_l2cache_reg9_d_lockdown4_DATALOCK100:
  addr: 0xf8f02920
  mask: 0xffff
  name: DATALOCK100
  description: |
    Use when AR/WUSERSx[7:5] = 100
ps7_l2cache_reg9_i_lockdown4_reserved:
  addr: 0xf8f02924
  mask: 0xffff0000
  name: reserved
  description: |
    reserved
ps7_l2cache_reg9_i_lockdown4_INSTRLOCK100:
  addr: 0xf8f02924
  mask: 0xffff
  name: INSTRLOCK100
  description: |
    Use when AR/WUSERSx[7:5] = 100
ps7_l2cache_reg9_d_lockdown5_reserved:
  addr: 0xf8f02928
  mask: 0xffff0000
  name: reserved
  description: |
    reserved
ps7_l2cache_reg9_d_lockdown5_DATALOCK101:
  addr: 0xf8f02928
  mask: 0xffff
  name: DATALOCK101
  description: |
    Use when AR/WUSERSx[7:5] = 101
ps7_l2cache_reg9_i_lockdown5_reserved:
  addr: 0xf8f0292c
  mask: 0xffff0000
  name: reserved
  description: |
    reserved
ps7_l2cache_reg9_i_lockdown5_INSTRLOCK101:
  addr: 0xf8f0292c
  mask: 0xffff
  name: INSTRLOCK101
  description: |
    Use when AR/WUSERSx[7:5] = 101
ps7_l2cache_reg9_d_lockdown6_reserved:
  addr: 0xf8f02930
  mask: 0xffff0000
  name: reserved
  description: |
    reserved
ps7_l2cache_reg9_d_lockdown6_DATALOCK110:
  addr: 0xf8f02930
  mask: 0xffff
  name: DATALOCK110
  description: |
    Use when AR/WUSERSx[7:5] = 110
ps7_l2cache_reg9_i_lockdown6_reserved:
  addr: 0xf8f02934
  mask: 0xffff0000
  name: reserved
  description: |
    reserved
ps7_l2cache_reg9_i_lockdown6_INSTRLOCK110:
  addr: 0xf8f02934
  mask: 0xffff
  name: INSTRLOCK110
  description: |
    Use when AR/WUSERSx[7:5] = 110
ps7_l2cache_reg9_d_lockdown7_reserved:
  addr: 0xf8f02938
  mask: 0xffff0000
  name: reserved
  description: |
    reserved
ps7_l2cache_reg9_d_lockdown7_DATALOCK111:
  addr: 0xf8f02938
  mask: 0xffff
  name: DATALOCK111
  description: |
    Use when AR/WUSERSx[7:5] = 111
ps7_l2cache_reg9_i_lockdown7_reserved:
  addr: 0xf8f0293c
  mask: 0xffff0000
  name: reserved
  description: |
    reserved
ps7_l2cache_reg9_i_lockdown7_INSTRLOCK111:
  addr: 0xf8f0293c
  mask: 0xffff
  name: INSTRLOCK111
  description: |
    Use when AR/WUSERSx[7:5] = 111
ps7_l2cache_reg9_lock_line_en_reserved:
  addr: 0xf8f02950
  mask: 0xfffffffe
  name: reserved
  description: |
    reserved
ps7_l2cache_reg9_lock_line_en_lock_down_by_line_enable:
  addr: 0xf8f02950
  mask: 0x1
  name: lock_down_by_line_enable
  description: |
    0 = Lockdown by line disabled. This is the default.
    1 = Lockdown by line enabled.
ps7_l2cache_reg9_unlock_way_reserved:
  addr: 0xf8f02954
  mask: 0xffff0000
  name: reserved
  description: |
    reserved
ps7_l2cache_reg9_unlock_way_unlock_all_lines_by_way_operation:
  addr: 0xf8f02954
  mask: 0xffff
  name: unlock_all_lines_by_way_operation
  description: |
    For all bits:
    0 = Unlock all lines disabled. This is the default.
    1 = Unlock all lines operation in progress for the corresponding way.
ps7_l2cache_reg12_addr_filtering_start_addr_filtering_start:
  addr: 0xf8f02c00
  mask: 0xfff00000
  name: addr_filtering_start
  description: |
    Address filtering start address.
ps7_l2cache_reg12_addr_filtering_start_reserved:
  addr: 0xf8f02c00
  mask: 0xffffe
  name: reserved
  description: |
    reserved
ps7_l2cache_reg12_addr_filtering_start_addr_filtering_enable:
  addr: 0xf8f02c00
  mask: 0x1
  name: addr_filtering_enable
  description: |
    0 = Address filtering disabled.
    1 = Address filtering enabled
ps7_l2cache_reg12_addr_filtering_end_addr_filtering_end:
  addr: 0xf8f02c04
  mask: 0xfff00000
  name: addr_filtering_end
  description: |
    Address filtering end address.
ps7_l2cache_reg12_addr_filtering_end_reserved:
  addr: 0xf8f02c04
  mask: 0xfffff
  name: reserved
  description: |
    reserved
ps7_l2cache_reg15_debug_ctrl_reserved:
  addr: 0xf8f02f40
  mask: 0xfffffff8
  name: reserved
  description: |
    reserved
ps7_l2cache_reg15_debug_ctrl_SPNIDEN:
  addr: 0xf8f02f40
  mask: 0x4
  name: SPNIDEN
  description: |
    Reads value of SPNIDEN input.
ps7_l2cache_reg15_debug_ctrl_DWB:
  addr: 0xf8f02f40
  mask: 0x2
  name: DWB
  description: |
    DWB: Disable write-back, force WT 0 = Enable write-back behavior. This is the default.
    1 = Force write-through behavior
ps7_l2cache_reg15_debug_ctrl_DCL:
  addr: 0xf8f02f40
  mask: 0x1
  name: DCL
  description: |
    DCL: Disable cache linefill 0 = Enable cache linefills. This is the default.
    1 = Disable cache linefills.
ps7_l2cache_reg15_prefetch_ctrl_reserved:
  addr: 0xf8f02f60
  mask: 0x80000000
  name: reserved
  description: |
    reserved
ps7_l2cache_reg15_prefetch_ctrl_double_linefill_en:
  addr: 0xf8f02f60
  mask: 0x40000000
  name: double_linefill_en
  description: |
    Double linefill enable: You can set the following options for this register bit:
    0 The L2CC always issues 4x64-bit read bursts to L3 on reads
    that miss in the L2 cache. This is the default.
    1 The L2CC issues 8x64-bit read bursts to L3 on reads that
    miss in the L2 cache.
ps7_l2cache_reg15_prefetch_ctrl_inst_pref_en:
  addr: 0xf8f02f60
  mask: 0x20000000
  name: inst_pref_en
  description: |
    Instruction prefetch enable: You can set the following options for this register bit:
    0 Instruction prefetching disabled. This is the default.
    1 Instruction prefetching enabled
ps7_l2cache_reg15_prefetch_ctrl_data_pref_en:
  addr: 0xf8f02f60
  mask: 0x10000000
  name: data_pref_en
  description: |
    Data prefetch enable: You can set the following options for this register bit:
    0 Data prefetching disabled. This is the default.
    1 Data prefetching enabled.
ps7_l2cache_reg15_prefetch_ctrl_double_linefill_on_wrapread_en:
  addr: 0xf8f02f60
  mask: 0x8000000
  name: double_linefill_on_wrapread_en
  description: |
    Double linefill on WRAP read disable: You can set the following options for this register bit:
    0 Double linefill on WRAP read enabled. This is the default.
    1 Double linefill on WRAP read disabled
ps7_l2cache_reg15_prefetch_ctrl_reserved_1:
  addr: 0xf8f02f60
  mask: 0x6000000
  name: reserved_1
  description: |
    reserved
ps7_l2cache_reg15_prefetch_ctrl_pref_drop_en:
  addr: 0xf8f02f60
  mask: 0x1000000
  name: pref_drop_en
  description: |
    Prefetch drop enable: You can set the following options for this register bit:
    0 The L2CC does not discard prefetch reads issued to L3. This
    is the default.
    1 The L2CC discards prefetch reads issued to L3 when there is
    a resource conflict with explicit reads.
ps7_l2cache_reg15_prefetch_ctrl_incr_double_linefill_en:
  addr: 0xf8f02f60
  mask: 0x800000
  name: incr_double_linefill_en
  description: |
    Incr double Linefill enable: You can set the following options for this register bit:
    0 The L2CC does not issue INCR 8x64-bit read bursts to L3 on
    reads that miss in the L2 cache. This is the default.
    1 The L2CC can issue INCR 8x64-bit read bursts to L3 on
    reads that miss in the L2 cache.
ps7_l2cache_reg15_prefetch_ctrl_reserved_2:
  addr: 0xf8f02f60
  mask: 0x400000
  name: reserved_2
  description: |
    reserved
ps7_l2cache_reg15_prefetch_ctrl_not_same_id_on_excl_seq_en:
  addr: 0xf8f02f60
  mask: 0x200000
  name: not_same_id_on_excl_seq_en
  description: |
    Not same ID on exclusive sequence enable: You can set the following options for this register bit:
    0 Read and write portions of a non-cacheable exclusive
    sequence have the same AXI ID when issued to L3. This is
    the default.
    1 Read and write portions of a non-cacheable exclusive
    sequence do not have the same AXI ID when issued to L3.
ps7_l2cache_reg15_prefetch_ctrl_reserved_3:
  addr: 0xf8f02f60
  mask: 0x1fffe0
  name: reserved_3
  description: |
    reserved
ps7_l2cache_reg15_prefetch_ctrl_prefetch_offset:
  addr: 0xf8f02f60
  mask: 0x1f
  name: prefetch_offset
  description: |
    Default = b00000.
ps7_l2cache_reg15_power_ctrl_reserved:
  addr: 0xf8f02f80
  mask: 0xfffffffc
  name: reserved
  description: |
    reserved
ps7_l2cache_reg15_power_ctrl_dynamic_clk_gating_en:
  addr: 0xf8f02f80
  mask: 0x2
  name: dynamic_clk_gating_en
  description: |
    Dynamic clock gating enable.
    1 = Enabled.
    0 = Masked. This is the default.
ps7_l2cache_reg15_power_ctrl_standby_mode_en:
  addr: 0xf8f02f80
  mask: 0x1
  name: standby_mode_en
  description: |
    Standby mode enable.
    1 = Enabled.
    0 = Masked. This is the default
ps7_ocm_OCM_PARITY_CTRL_reserved:
  addr: 0xf800c000
  mask: 0xffe00000
  name: reserved
  description: |
    Returns 0 when read
ps7_ocm_OCM_PARITY_CTRL_OddParityEn:
  addr: 0xf800c000
  mask: 0x1fffe0
  name: OddParityEn
  description: |
    Enable RAM Odd Parity Generation. One control bit per data byte (OddParity[0] controls Data[7:0] e.t.c)
    0: Even Parity generated
    1: Odd
    Parity generated
ps7_ocm_OCM_PARITY_CTRL_LockFailErrIrqEn:
  addr: 0xf800c000
  mask: 0x10
  name: LockFailErrIrqEn
  description: |
    Enable interrupt when
    an AXI LOCK ("locked access") command is detected.
ps7_ocm_OCM_PARITY_CTRL_MultipleParityErrIrqEn:
  addr: 0xf800c000
  mask: 0x8
  name: MultipleParityErrIrqEn
  description: |
    Same as SingleParityErrIrqEn, but enables IRQ on multiple parity errors detected.
    0: IRQ is not generated when parity error detected and ParityCheckDis=0
    1: IRQ is generated when parity error detected and ParityCheckDis=0.
ps7_ocm_OCM_PARITY_CTRL_SingleParityErrIrqEn:
  addr: 0xf800c000
  mask: 0x4
  name: SingleParityErrIrqEn
  description: |
    Enable interrupt when a single parity error is detected. Note that even if this field is 0, the OCM_IRQ_STS register will still log the error if ParityCheckDis=0. This allows software the option of polling if an error occurred.
    0: IRQ is not generated when parity error detected and ParityCheckDis=0
    1: IRQ is generated when parity error detected and ParityCheckDis=0.
ps7_ocm_OCM_PARITY_CTRL_RdRespParityErrEn:
  addr: 0xf800c000
  mask: 0x2
  name: RdRespParityErrEn
  description: |
    Enable AXI read 'SLVERR' response for parity error detection.
    0: Error will not be sent on AXI read channel when parity error detected
    1: Error will be sent on AXI read channel when parity error detected and ParityCheckDis=0
ps7_ocm_OCM_PARITY_CTRL_ParityCheckDis:
  addr: 0xf800c000
  mask: 0x1
  name: ParityCheckDis
  description: |
    Disable RAM Parity Checking. No checking or logging of status will occur when 1.
    0: RAM Parity checking is enabled
    1: RAM Parity checking is disabled
ps7_ocm_OCM_PARITY_ERRADDRESS_reserved:
  addr: 0xf800c004
  mask: 0xffffc000
  name: reserved
  description: |
    Return 0 when read
ps7_ocm_OCM_PARITY_ERRADDRESS_ParityErrAddress:
  addr: 0xf800c004
  mask: 0x3fff
  name: ParityErrAddress
  description: |
    When a parity Error occurs, the access address associated with the error is logged here. The first error address will be held if multiple parity errors occur. Need an explicit write of all '1's' to reset/clear this field.
ps7_ocm_OCM_IRQ_STS_reserved:
  addr: 0xf800c008
  mask: 0xfffffff8
  name: reserved
  description: |
    Return 0 when read
ps7_ocm_OCM_IRQ_STS_LockFailErr:
  addr: 0xf800c008
  mask: 0x4
  name: LockFailErr
  description: |
    When set (1), indicates that an AXI LOCK has been attempted (not supported by OCM). This is a sticky bit. Once set it can only be cleared by explicitly writing a 1 to this field. This field drives the interrupt pin. (Associated irq enable bit must be set)
ps7_ocm_OCM_IRQ_STS_MultipleParityErr:
  addr: 0xf800c008
  mask: 0x2
  name: MultipleParityErr
  description: |
    Status of OCM multiple parity error. This is a sticky bit. Once set it can only be cleared by explicitly writing a 1 to this field. This field drives the interrupt pin. (Associated irq enable bit must be set)
    0: Multiple OCM parity Errors have not occurred
    1: Multiple OCM parity Errors have occurred
ps7_ocm_OCM_IRQ_STS_SingleParityErr:
  addr: 0xf800c008
  mask: 0x1
  name: SingleParityErr
  description: |
    Status of OCM single parity error. This is a sticky bit. Once set it can only be cleared by explicitly writing a 1 to this field. This field drives the interrupt pin (Associated irq enable bit must be set)
    0: Single OCM parity Error has not occurred
    1: Single OCM parity Error has occurred
ps7_ocm_OCM_CONTROL_reserved:
  addr: 0xf800c00c
  mask: 0xfffffff8
  name: reserved
  description: |
    Return 0 when read
ps7_ocm_OCM_CONTROL_ArbShareTopSwScuWrDIs:
  addr: 0xf800c00c
  mask: 0x4
  name: ArbShareTopSwScuWrDIs
  description: |
    Controls the arbitration to memory between the topswitch port and the scuwr port.
    0: The topsw and the scuWr porst share the memory bandwith - 50% each.
    1: The scuWr takes higher priority over the topswitch port (unless the ScuWrPriorityLo bit is set)
ps7_ocm_OCM_CONTROL_reserved_DisableRom:
  addr: 0xf800c00c
  mask: 0x2
  name: reserved_DisableRom
  description: |
    Reserved. Do not modify.
ps7_ocm_OCM_CONTROL_ScuWrPriorityLo:
  addr: 0xf800c00c
  mask: 0x1
  name: ScuWrPriorityLo
  description: |
    When set (1), changes the priority of the SCU write port to LOW from Medium
ps7_debug_cpu_pmu0_PMXEVCNTR0_PMXEVCNTR0:
  addr: 0xf8891000
  mask: 0xffffffff
  name: PMXEVCNTR0
  description: |
    PMU event counter 0
ps7_debug_cpu_pmu0_PMXEVCNTR1_PMXEVCNTR1:
  addr: 0xf8891004
  mask: 0xffffffff
  name: PMXEVCNTR1
  description: |
    PMU event counter 1
ps7_debug_cpu_pmu0_PMXEVCNTR2_PMXEVCNTR2:
  addr: 0xf8891008
  mask: 0xffffffff
  name: PMXEVCNTR2
  description: |
    PMU event counter 2
ps7_debug_cpu_pmu0_PMXEVCNTR3_PMXEVCNTR3:
  addr: 0xf889100c
  mask: 0xffffffff
  name: PMXEVCNTR3
  description: |
    PMU event counter 3
ps7_debug_cpu_pmu0_PMXEVCNTR4_PMXEVCNTR4:
  addr: 0xf8891010
  mask: 0xffffffff
  name: PMXEVCNTR4
  description: |
    PMU event counter 4
ps7_debug_cpu_pmu0_PMXEVCNTR5_PMXEVCNTR5:
  addr: 0xf8891014
  mask: 0xffffffff
  name: PMXEVCNTR5
  description: |
    PMU event counter 5
ps7_debug_cpu_pmu0_PMCCNTR_PMCCNTR:
  addr: 0xf889107c
  mask: 0xffffffff
  name: PMCCNTR
  description: |
    pmccntr
ps7_debug_cpu_pmu0_PMXEVTYPER0_PMXEVTYPER0:
  addr: 0xf8891400
  mask: 0xffffffff
  name: PMXEVTYPER0
  description: |
    pmevtyper0
ps7_debug_cpu_pmu0_PMXEVTYPER1_PMXEVTYPER1:
  addr: 0xf8891404
  mask: 0xffffffff
  name: PMXEVTYPER1
  description: |
    pmevtyper1
ps7_debug_cpu_pmu0_PMXEVTYPER2_PMXEVTYPER2:
  addr: 0xf8891408
  mask: 0xffffffff
  name: PMXEVTYPER2
  description: |
    pmevtyper2
ps7_debug_cpu_pmu0_PMXEVTYPER3_PMXEVTYPER3:
  addr: 0xf889140c
  mask: 0xffffffff
  name: PMXEVTYPER3
  description: |
    pmevtyper3
ps7_debug_cpu_pmu0_PMXEVTYPER4_PMXEVTYPER4:
  addr: 0xf8891410
  mask: 0xffffffff
  name: PMXEVTYPER4
  description: |
    pmevtyper4
ps7_debug_cpu_pmu0_PMXEVTYPER5_PMXEVTYPER5:
  addr: 0xf8891414
  mask: 0xffffffff
  name: PMXEVTYPER5
  description: |
    pmevtyper5
ps7_debug_cpu_pmu0_PMCNTENSET_PMCNTENSET:
  addr: 0xf8891c00
  mask: 0xffffffff
  name: PMCNTENSET
  description: |
    pmcntenset
ps7_debug_cpu_pmu0_PMCNTENCLR_PMCNTENCLR:
  addr: 0xf8891c20
  mask: 0xffffffff
  name: PMCNTENCLR
  description: |
    pmcntenclr
ps7_debug_cpu_pmu0_PMINTENSET_PMINTENSET:
  addr: 0xf8891c40
  mask: 0xffffffff
  name: PMINTENSET
  description: |
    pmintenset
ps7_debug_cpu_pmu0_PMINTENCLR_PMINTENCLR:
  addr: 0xf8891c60
  mask: 0xffffffff
  name: PMINTENCLR
  description: |
    pmintenclr
ps7_debug_cpu_pmu0_PMOVSR_PMOVSR:
  addr: 0xf8891c80
  mask: 0xffffffff
  name: PMOVSR
  description: |
    pmovsr
ps7_debug_cpu_pmu0_PMSWINC_PMSWINC:
  addr: 0xf8891ca0
  mask: 0xffffffff
  name: PMSWINC
  description: |
    pmswinc
ps7_debug_cpu_pmu0_PMCR_PMCR:
  addr: 0xf8891e04
  mask: 0xffffffff
  name: PMCR
  description: |
    pmcr
ps7_debug_cpu_pmu0_PMUSERENR_PMUSERENR:
  addr: 0xf8891e08
  mask: 0xffffffff
  name: PMUSERENR
  description: |
    pmuserenr
    This register is read-only in user mode.
ps7_debug_cpu_pmu1_PMXEVCNTR0_PMXEVCNTR0:
  addr: 0xf8893000
  mask: 0xffffffff
  name: PMXEVCNTR0
  description: |
    PMU event counter 0
ps7_debug_cpu_pmu1_PMXEVCNTR1_PMXEVCNTR1:
  addr: 0xf8893004
  mask: 0xffffffff
  name: PMXEVCNTR1
  description: |
    PMU event counter 1
ps7_debug_cpu_pmu1_PMXEVCNTR2_PMXEVCNTR2:
  addr: 0xf8893008
  mask: 0xffffffff
  name: PMXEVCNTR2
  description: |
    PMU event counter 2
ps7_debug_cpu_pmu1_PMXEVCNTR3_PMXEVCNTR3:
  addr: 0xf889300c
  mask: 0xffffffff
  name: PMXEVCNTR3
  description: |
    PMU event counter 3
ps7_debug_cpu_pmu1_PMXEVCNTR4_PMXEVCNTR4:
  addr: 0xf8893010
  mask: 0xffffffff
  name: PMXEVCNTR4
  description: |
    PMU event counter 4
ps7_debug_cpu_pmu1_PMXEVCNTR5_PMXEVCNTR5:
  addr: 0xf8893014
  mask: 0xffffffff
  name: PMXEVCNTR5
  description: |
    PMU event counter 5
ps7_debug_cpu_pmu1_PMCCNTR_PMCCNTR:
  addr: 0xf889307c
  mask: 0xffffffff
  name: PMCCNTR
  description: |
    pmccntr
ps7_debug_cpu_pmu1_PMXEVTYPER0_PMXEVTYPER0:
  addr: 0xf8893400
  mask: 0xffffffff
  name: PMXEVTYPER0
  description: |
    pmevtyper0
ps7_debug_cpu_pmu1_PMXEVTYPER1_PMXEVTYPER1:
  addr: 0xf8893404
  mask: 0xffffffff
  name: PMXEVTYPER1
  description: |
    pmevtyper1
ps7_debug_cpu_pmu1_PMXEVTYPER2_PMXEVTYPER2:
  addr: 0xf8893408
  mask: 0xffffffff
  name: PMXEVTYPER2
  description: |
    pmevtyper2
ps7_debug_cpu_pmu1_PMXEVTYPER3_PMXEVTYPER3:
  addr: 0xf889340c
  mask: 0xffffffff
  name: PMXEVTYPER3
  description: |
    pmevtyper3
ps7_debug_cpu_pmu1_PMXEVTYPER4_PMXEVTYPER4:
  addr: 0xf8893410
  mask: 0xffffffff
  name: PMXEVTYPER4
  description: |
    pmevtyper4
ps7_debug_cpu_pmu1_PMXEVTYPER5_PMXEVTYPER5:
  addr: 0xf8893414
  mask: 0xffffffff
  name: PMXEVTYPER5
  description: |
    pmevtyper5
ps7_debug_cpu_pmu1_PMCNTENSET_PMCNTENSET:
  addr: 0xf8893c00
  mask: 0xffffffff
  name: PMCNTENSET
  description: |
    pmcntenset
ps7_debug_cpu_pmu1_PMCNTENCLR_PMCNTENCLR:
  addr: 0xf8893c20
  mask: 0xffffffff
  name: PMCNTENCLR
  description: |
    pmcntenclr
ps7_debug_cpu_pmu1_PMINTENSET_PMINTENSET:
  addr: 0xf8893c40
  mask: 0xffffffff
  name: PMINTENSET
  description: |
    pmintenset
ps7_debug_cpu_pmu1_PMINTENCLR_PMINTENCLR:
  addr: 0xf8893c60
  mask: 0xffffffff
  name: PMINTENCLR
  description: |
    pmintenclr
ps7_debug_cpu_pmu1_PMOVSR_PMOVSR:
  addr: 0xf8893c80
  mask: 0xffffffff
  name: PMOVSR
  description: |
    pmovsr
ps7_debug_cpu_pmu1_PMSWINC_PMSWINC:
  addr: 0xf8893ca0
  mask: 0xffffffff
  name: PMSWINC
  description: |
    pmswinc
ps7_debug_cpu_pmu1_PMCR_PMCR:
  addr: 0xf8893e04
  mask: 0xffffffff
  name: PMCR
  description: |
    pmcr
ps7_debug_cpu_pmu1_PMUSERENR_PMUSERENR:
  addr: 0xf8893e08
  mask: 0xffffffff
  name: PMUSERENR
  description: |
    pmuserenr
    This register is read-only in user mode.
ps7_slcr_SCL_reserved:
  addr: 0xf8000000
  mask: 0xfffffffe
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_SCL_LOCK:
  addr: 0xf8000000
  mask: 0x1
  name: LOCK
  description: |
    Secure configuration lock for these slcr registers: SCL, PSS_RST_CTRL, APU_CTRL, and WDT_CLK_SEL.
    Read:
    0: unlocked, Secure writes to secure configuration registers are enabled.
    1: locked, all writes to secure configuration registers are ignored.
    Write:
    0: noaffect.
    1: lock the secure configuration registers.
    Once the secure registers are locked, they remain locked until a power-on reset cycle (PS_POR_B).
ps7_slcr_SLCR_LOCK_reserved:
  addr: 0xf8000004
  mask: 0xffff0000
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_SLCR_LOCK_LOCK_KEY:
  addr: 0xf8000004
  mask: 0xffff
  name: LOCK_KEY
  description: |
    Write the lock key, 0x767B, to write protect the slcr registers: all slcr registers, 0xF800_0000 to 0xF800_0B74, are write protected until the unlock key is written to the SLCR_UNLOCK register. A read of this register returns zero.
ps7_slcr_SLCR_UNLOCK_reserved:
  addr: 0xf8000008
  mask: 0xffff0000
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_SLCR_UNLOCK_UNLOCK_KEY:
  addr: 0xf8000008
  mask: 0xffff
  name: UNLOCK_KEY
  description: |
    Write the unlock key, 0xDF0D, to enable writes to the slcr registers. All slcr registers, 0xF800_0000 to 0xF800_0B74, are writeable until locked using the SLCR_LOCK register. A read of this register returns zero.
ps7_slcr_SLCR_LOCKSTA_reserved:
  addr: 0xf800000c
  mask: 0xfffffffe
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_SLCR_LOCKSTA_LOCK_STATUS:
  addr: 0xf800000c
  mask: 0x1
  name: LOCK_STATUS
  description: |
    Current state of write protection mode of SLCR:
    0: Registers are writeable. Use the slcr.SLCR_LOCK register to lock the slcr registers.
    1: Registers are not writeable.
    Any attempt to write to an slcr register is ignored, but reads will return valid register values.
    Use the slcr.SLCR_UNLOCK register to unlock the slcr registers.
ps7_slcr_ARM_PLL_CTRL_reserved_2:
  addr: 0xf8000100
  mask: 0xfff80000
  name: reserved_2
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_ARM_PLL_CTRL_PLL_FDIV:
  addr: 0xf8000100
  mask: 0x7f000
  name: PLL_FDIV
  description: |
    Provide the feedback divisor for the PLL. Note: Before changing this value, the PLL must first be bypassed and then put into reset mode. Refer to the Zynq-7000 TRM, UG585, Clocks chapter for CP/RES/CNT values for the PLL.
ps7_slcr_ARM_PLL_CTRL_reserved_1:
  addr: 0xf8000100
  mask: 0xfe0
  name: reserved_1
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_ARM_PLL_CTRL_PLL_BYPASS_FORCE:
  addr: 0xf8000100
  mask: 0x10
  name: PLL_BYPASS_FORCE
  description: |
    ARM PLL Bypass override control:
    PLL_BYPASS_QUAL = 0:
    0: enabled, not bypassed.
    1: bypassed.
    PLL_BYPASS_QUAL = 1 (QUAL bit default value):
    0: PLL mode is set based on pin strap setting.
    1: PLL bypassed regardless of the pin strapping.
ps7_slcr_ARM_PLL_CTRL_PLL_BYPASS_QUAL:
  addr: 0xf8000100
  mask: 0x8
  name: PLL_BYPASS_QUAL
  description: |
    Select the source for the ARM PLL Bypass Control:
    0: controlled by the PLL_BYPASS_FORCE bit, bit 4.
    1: controlled by the value of the sampled BOOT_MODE pin strapping resistor PLL_BYPASS. This can be read using the BOOT_MODE[4] bit.
ps7_slcr_ARM_PLL_CTRL_reserved:
  addr: 0xf8000100
  mask: 0x4
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_ARM_PLL_CTRL_PLL_PWRDWN:
  addr: 0xf8000100
  mask: 0x2
  name: PLL_PWRDWN
  description: |
    PLL Power-down control:
    0: PLL powered up
    1: PLL powered down
ps7_slcr_ARM_PLL_CTRL_PLL_RESET:
  addr: 0xf8000100
  mask: 0x1
  name: PLL_RESET
  description: |
    PLL reset control:
    0: de-assert (PLL operating)
    1: assert (PLL held in reset)
ps7_slcr_DDR_PLL_CTRL_reserved_2:
  addr: 0xf8000104
  mask: 0xfff80000
  name: reserved_2
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_DDR_PLL_CTRL_PLL_FDIV:
  addr: 0xf8000104
  mask: 0x7f000
  name: PLL_FDIV
  description: |
    Provide the feedback divisor for the PLL. Note: Before changing this value, the PLL must first be bypassed and then put into reset mode. Refer to the Zynq-7000 TRM, UG585, Clocks chapter for CP/RES/CNT values for the PLL.
ps7_slcr_DDR_PLL_CTRL_reserved_1:
  addr: 0xf8000104
  mask: 0xfe0
  name: reserved_1
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_DDR_PLL_CTRL_PLL_BYPASS_FORCE:
  addr: 0xf8000104
  mask: 0x10
  name: PLL_BYPASS_FORCE
  description: |
    DDR PLL Bypass override control:
    PLL_BYPASS_QUAL = 0
    0: enabled, not bypassed.
    1: bypassed.
    PLL_BYPASS_QUAL = 1 (QUAL bit default value)
    0: PLL mode is set based on pin strap setting.
    1: PLL bypass is enabled regardless of the pin strapping.
ps7_slcr_DDR_PLL_CTRL_PLL_BYPASS_QUAL:
  addr: 0xf8000104
  mask: 0x8
  name: PLL_BYPASS_QUAL
  description: |
    Select the source for the DDR PLL Bypass:
    0: controlled by the PLL_BYPASS_FORCE bit.
    1: controlled by the value of the sampled BOOT_MODE pin strapping resistor PLL_BYPASS. This can be read using the slcr.BOOT_MODE[4] bit.
ps7_slcr_DDR_PLL_CTRL_reserved:
  addr: 0xf8000104
  mask: 0x4
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_DDR_PLL_CTRL_PLL_PWRDWN:
  addr: 0xf8000104
  mask: 0x2
  name: PLL_PWRDWN
  description: |
    PLL Power-down control:
    0: PLL powered up
    1: PLL powered down
ps7_slcr_DDR_PLL_CTRL_PLL_RESET:
  addr: 0xf8000104
  mask: 0x1
  name: PLL_RESET
  description: |
    PLL reset control:
    0: de-assert (PLL operating)
    1: assert (PLL held in reset)
ps7_slcr_IO_PLL_CTRL_reserved_2:
  addr: 0xf8000108
  mask: 0xfff80000
  name: reserved_2
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_IO_PLL_CTRL_PLL_FDIV:
  addr: 0xf8000108
  mask: 0x7f000
  name: PLL_FDIV
  description: |
    Provide the feedback divisor for the PLL. Note: Before changing this value, the PLL must first be bypassed and then put into reset mode. Refer to the Zynq-7000 TRM, UG585, Clocks chapter for CP/RES/CNT values for programming the PLL.
ps7_slcr_IO_PLL_CTRL_reserved_1:
  addr: 0xf8000108
  mask: 0xfe0
  name: reserved_1
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_IO_PLL_CTRL_PLL_BYPASS_FORCE:
  addr: 0xf8000108
  mask: 0x10
  name: PLL_BYPASS_FORCE
  description: |
    IO PLL Bypass override control:
    PLL_BYPASS_QUAL = 0
    0: enabled, not bypassed.
    1: bypassed.
    PLL_BYPASS_QUAL = 1 (QUAL bit default value)
    0: PLL mode is set based on pin strap setting.
    1: PLL bypass is enabled regardless of the pin strapping.
ps7_slcr_IO_PLL_CTRL_PLL_BYPASS_QUAL:
  addr: 0xf8000108
  mask: 0x8
  name: PLL_BYPASS_QUAL
  description: |
    Select the source for the IO PLL Bypass:
    0: controlled by the PLL_BYPASS_FORCE bit.
    1: controlled by the value of the sampled BOOT_MODE pin strapping resistor PLL_BYPASS. This can be read using the slcr.BOOT_MODE[4] bit.
ps7_slcr_IO_PLL_CTRL_reserved:
  addr: 0xf8000108
  mask: 0x4
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_IO_PLL_CTRL_PLL_PWRDWN:
  addr: 0xf8000108
  mask: 0x2
  name: PLL_PWRDWN
  description: |
    PLL Power-down control:
    0: PLL powered up
    1: PLL powered down
ps7_slcr_IO_PLL_CTRL_PLL_RESET:
  addr: 0xf8000108
  mask: 0x1
  name: PLL_RESET
  description: |
    PLL Reset control:
    0: de-assert (PLL operating)
    1: assert (PLL held in reset)
ps7_slcr_PLL_STATUS_reserved:
  addr: 0xf800010c
  mask: 0xffffffc0
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_PLL_STATUS_IO_PLL_STABLE:
  addr: 0xf800010c
  mask: 0x20
  name: IO_PLL_STABLE
  description: |
    IO PLL clock stable status:
    0: not locked and not in bypass
    1: locked or bypassed
ps7_slcr_PLL_STATUS_DDR_PLL_STABLE:
  addr: 0xf800010c
  mask: 0x10
  name: DDR_PLL_STABLE
  description: |
    DDR PLL clock stable status:
    0: not locked and not in bypass
    1: locked or bypassed
ps7_slcr_PLL_STATUS_ARM_PLL_STABLE:
  addr: 0xf800010c
  mask: 0x8
  name: ARM_PLL_STABLE
  description: |
    ARM PLL clock stable status:
    0: not locked and not in bypass
    1: locked or bypassed
ps7_slcr_PLL_STATUS_IO_PLL_LOCK:
  addr: 0xf800010c
  mask: 0x4
  name: IO_PLL_LOCK
  description: |
    IO PLL lock status:
    0: not locked, 1: locked
ps7_slcr_PLL_STATUS_DDR_PLL_LOCK:
  addr: 0xf800010c
  mask: 0x2
  name: DDR_PLL_LOCK
  description: |
    DDR PLL lock status:
    0: not locked, 1: locked
ps7_slcr_PLL_STATUS_ARM_PLL_LOCK:
  addr: 0xf800010c
  mask: 0x1
  name: ARM_PLL_LOCK
  description: |
    ARM PLL lock status:
    0: not locked, 1: locked
ps7_slcr_ARM_PLL_CFG_reserved_1:
  addr: 0xf8000110
  mask: 0xffc00000
  name: reserved_1
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_ARM_PLL_CFG_LOCK_CNT:
  addr: 0xf8000110
  mask: 0x3ff000
  name: LOCK_CNT
  description: |
    Drive the LOCK_CNT[9:0] input of the PLL to set the number of clock cycles the PLL needs to have clkref and clkfb aligned with a certain window before syaing locked.
ps7_slcr_ARM_PLL_CFG_PLL_CP:
  addr: 0xf8000110
  mask: 0xf00
  name: PLL_CP
  description: |
    Drive the PLL_CP[3:0] input of the PLL to set the PLL charge pump control
ps7_slcr_ARM_PLL_CFG_PLL_RES:
  addr: 0xf8000110
  mask: 0xf0
  name: PLL_RES
  description: |
    Drive the PLL_RES[3:0] input of the PLL to set the PLL loop filter resistor control
ps7_slcr_ARM_PLL_CFG_reserved:
  addr: 0xf8000110
  mask: 0xf
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_DDR_PLL_CFG_reserved_1:
  addr: 0xf8000114
  mask: 0xffc00000
  name: reserved_1
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_DDR_PLL_CFG_LOCK_CNT:
  addr: 0xf8000114
  mask: 0x3ff000
  name: LOCK_CNT
  description: |
    Drive the LOCK_CNT[9:0] input of the PLL to set the number of clock cycles the PLL needs to have clkref and clkfb aligned with a certain window before staying locked.
ps7_slcr_DDR_PLL_CFG_PLL_CP:
  addr: 0xf8000114
  mask: 0xf00
  name: PLL_CP
  description: |
    Drive the PLL_CP[3:0] input of the PLL to set the PLL charge pump control.
ps7_slcr_DDR_PLL_CFG_PLL_RES:
  addr: 0xf8000114
  mask: 0xf0
  name: PLL_RES
  description: |
    Drive the PLL_RES[3:0] input of the PLL to set the PLL loop filter resistor control.
ps7_slcr_DDR_PLL_CFG_reserved:
  addr: 0xf8000114
  mask: 0xf
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_IO_PLL_CFG_reserved_1:
  addr: 0xf8000118
  mask: 0xffc00000
  name: reserved_1
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_IO_PLL_CFG_LOCK_CNT:
  addr: 0xf8000118
  mask: 0x3ff000
  name: LOCK_CNT
  description: |
    Drive the LOCK_CNT[9:0] input of the PLL to set the number of clock cycles the PLL needs to have clkref and clkfb aligned with a certain window before staying locked.
ps7_slcr_IO_PLL_CFG_PLL_CP:
  addr: 0xf8000118
  mask: 0xf00
  name: PLL_CP
  description: |
    Drive the PLL_CP[3:0] input of the PLL to set the PLL charge pump control.
ps7_slcr_IO_PLL_CFG_PLL_RES:
  addr: 0xf8000118
  mask: 0xf0
  name: PLL_RES
  description: |
    Drive the PLL_RES[3:0] input of the PLL to set the PLL loop filter resistor control.
ps7_slcr_IO_PLL_CFG_reserved:
  addr: 0xf8000118
  mask: 0xf
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_ARM_CLK_CTRL_reserved_3:
  addr: 0xf8000120
  mask: 0xe0000000
  name: reserved_3
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_ARM_CLK_CTRL_CPU_PERI_CLKACT:
  addr: 0xf8000120
  mask: 0x10000000
  name: CPU_PERI_CLKACT
  description: |
    Clock active:
    0: Clock is disabled
    1: Clock is enabled
ps7_slcr_ARM_CLK_CTRL_CPU_1XCLKACT:
  addr: 0xf8000120
  mask: 0x8000000
  name: CPU_1XCLKACT
  description: |
    CPU_1x Clock control:
    0: disable, 1: enable
ps7_slcr_ARM_CLK_CTRL_CPU_2XCLKACT:
  addr: 0xf8000120
  mask: 0x4000000
  name: CPU_2XCLKACT
  description: |
    CPU_2x Clock control:
    0: disable, 1: enable
ps7_slcr_ARM_CLK_CTRL_CPU_3OR2XCLKACT:
  addr: 0xf8000120
  mask: 0x2000000
  name: CPU_3OR2XCLKACT
  description: |
    CPU_3x2x Clock control:
    0: disable, 1: enable
ps7_slcr_ARM_CLK_CTRL_CPU_6OR4XCLKACT:
  addr: 0xf8000120
  mask: 0x1000000
  name: CPU_6OR4XCLKACT
  description: |
    CPU_6x4x Clock control:
    0: disable, 1: enable
ps7_slcr_ARM_CLK_CTRL_reserved_2:
  addr: 0xf8000120
  mask: 0xffc000
  name: reserved_2
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_ARM_CLK_CTRL_DIVISOR:
  addr: 0xf8000120
  mask: 0x3f00
  name: DIVISOR
  description: |
    Frequency divisor for the CPU clock source.
ps7_slcr_ARM_CLK_CTRL_reserved_1:
  addr: 0xf8000120
  mask: 0xc0
  name: reserved_1
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_ARM_CLK_CTRL_SRCSEL:
  addr: 0xf8000120
  mask: 0x30
  name: SRCSEL
  description: |
    Select the source used to generate the CPU clock:
    0x: ARM PLL
    10: DDR PLL
    11: IO PLL
    This field is reset by POR only.
ps7_slcr_ARM_CLK_CTRL_reserved:
  addr: 0xf8000120
  mask: 0xf
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_DDR_CLK_CTRL_DDR_2XCLK_DIVISOR:
  addr: 0xf8000124
  mask: 0xfc000000
  name: DDR_2XCLK_DIVISOR
  description: |
    Frequency divisor for the ddr_2x clock
ps7_slcr_DDR_CLK_CTRL_DDR_3XCLK_DIVISOR:
  addr: 0xf8000124
  mask: 0x3f00000
  name: DDR_3XCLK_DIVISOR
  description: |
    Frequency divisor for the ddr_3x clock
ps7_slcr_DDR_CLK_CTRL_reserved:
  addr: 0xf8000124
  mask: 0xffffc
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_DDR_CLK_CTRL_DDR_2XCLKACT:
  addr: 0xf8000124
  mask: 0x2
  name: DDR_2XCLKACT
  description: |
    DDR_2x Clock control:
    0: disable, 1: enable
ps7_slcr_DDR_CLK_CTRL_DDR_3XCLKACT:
  addr: 0xf8000124
  mask: 0x1
  name: DDR_3XCLKACT
  description: |
    DDR_3x Clock control:
    0: disable, 1: enable
ps7_slcr_DCI_CLK_CTRL_reserved_2:
  addr: 0xf8000128
  mask: 0xfc000000
  name: reserved_2
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_DCI_CLK_CTRL_DIVISOR1:
  addr: 0xf8000128
  mask: 0x3f00000
  name: DIVISOR1
  description: |
    Provides the divisor used to divide the source clock to generate the required generated clock frequency. Second cascade divider
ps7_slcr_DCI_CLK_CTRL_reserved_1:
  addr: 0xf8000128
  mask: 0xfc000
  name: reserved_1
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_DCI_CLK_CTRL_DIVISOR0:
  addr: 0xf8000128
  mask: 0x3f00
  name: DIVISOR0
  description: |
    Provides the divisor used to divide the source clock to generate the required generated clock frequency.
ps7_slcr_DCI_CLK_CTRL_reserved:
  addr: 0xf8000128
  mask: 0xfe
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_DCI_CLK_CTRL_CLKACT:
  addr: 0xf8000128
  mask: 0x1
  name: CLKACT
  description: |
    DCI clock control - 0: disable, 1: enable
ps7_slcr_APER_CLK_CTRL_reserved_7:
  addr: 0xf800012c
  mask: 0xfe000000
  name: reserved_7
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_APER_CLK_CTRL_SMC_CPU_1XCLKACT:
  addr: 0xf800012c
  mask: 0x1000000
  name: SMC_CPU_1XCLKACT
  description: |
    SMC AMBA Clock control
    0: disable, 1: enable
ps7_slcr_APER_CLK_CTRL_LQSPI_CPU_1XCLKACT:
  addr: 0xf800012c
  mask: 0x800000
  name: LQSPI_CPU_1XCLKACT
  description: |
    Quad SPI AMBA Clock control
    0: disable, 1: enable
ps7_slcr_APER_CLK_CTRL_GPIO_CPU_1XCLKACT:
  addr: 0xf800012c
  mask: 0x400000
  name: GPIO_CPU_1XCLKACT
  description: |
    GPIO AMBA Clock control
    0: disable, 1: enable
ps7_slcr_APER_CLK_CTRL_UART1_CPU_1XCLKACT:
  addr: 0xf800012c
  mask: 0x200000
  name: UART1_CPU_1XCLKACT
  description: |
    UART 1 AMBA Clock control
    0: disable, 1: enable
ps7_slcr_APER_CLK_CTRL_UART0_CPU_1XCLKACT:
  addr: 0xf800012c
  mask: 0x100000
  name: UART0_CPU_1XCLKACT
  description: |
    UART 0 AMBA Clock control
    0: disable, 1: enable
ps7_slcr_APER_CLK_CTRL_I2C1_CPU_1XCLKACT:
  addr: 0xf800012c
  mask: 0x80000
  name: I2C1_CPU_1XCLKACT
  description: |
    I2C 1 AMBA Clock control
    0: disable, 1: enable
ps7_slcr_APER_CLK_CTRL_I2C0_CPU_1XCLKACT:
  addr: 0xf800012c
  mask: 0x40000
  name: I2C0_CPU_1XCLKACT
  description: |
    I2C 0 AMBA Clock control
    0: disable, 1: enable
ps7_slcr_APER_CLK_CTRL_CAN1_CPU_1XCLKACT:
  addr: 0xf800012c
  mask: 0x20000
  name: CAN1_CPU_1XCLKACT
  description: |
    CAN 1 AMBA Clock control
    0: disable, 1: enable
ps7_slcr_APER_CLK_CTRL_CAN0_CPU_1XCLKACT:
  addr: 0xf800012c
  mask: 0x10000
  name: CAN0_CPU_1XCLKACT
  description: |
    CAN 0 AMBA Clock control
    0: disable, 1: enable
ps7_slcr_APER_CLK_CTRL_SPI1_CPU_1XCLKACT:
  addr: 0xf800012c
  mask: 0x8000
  name: SPI1_CPU_1XCLKACT
  description: |
    SPI 1 AMBA Clock control
    0: disable, 1: enable
ps7_slcr_APER_CLK_CTRL_SPI0_CPU_1XCLKACT:
  addr: 0xf800012c
  mask: 0x4000
  name: SPI0_CPU_1XCLKACT
  description: |
    SPI 0 AMBA Clock control
    0: disable, 1: enable
ps7_slcr_APER_CLK_CTRL_reserved_6:
  addr: 0xf800012c
  mask: 0x2000
  name: reserved_6
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_APER_CLK_CTRL_reserved_5:
  addr: 0xf800012c
  mask: 0x1000
  name: reserved_5
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_APER_CLK_CTRL_SDI1_CPU_1XCLKACT:
  addr: 0xf800012c
  mask: 0x800
  name: SDI1_CPU_1XCLKACT
  description: |
    SDIO controller 1 AMBA Clock control
    0: disable, 1: enable
ps7_slcr_APER_CLK_CTRL_SDI0_CPU_1XCLKACT:
  addr: 0xf800012c
  mask: 0x400
  name: SDI0_CPU_1XCLKACT
  description: |
    SDIO controller 0 AMBA Clock
    0: disable,
    1: enable
ps7_slcr_APER_CLK_CTRL_reserved_4:
  addr: 0xf800012c
  mask: 0x200
  name: reserved_4
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_APER_CLK_CTRL_reserved_3:
  addr: 0xf800012c
  mask: 0x100
  name: reserved_3
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_APER_CLK_CTRL_GEM1_CPU_1XCLKACT:
  addr: 0xf800012c
  mask: 0x80
  name: GEM1_CPU_1XCLKACT
  description: |
    Gigabit Ethernet 1 AMBA Clock control
    0: disable, 1: enable
ps7_slcr_APER_CLK_CTRL_GEM0_CPU_1XCLKACT:
  addr: 0xf800012c
  mask: 0x40
  name: GEM0_CPU_1XCLKACT
  description: |
    Gigabit Ethernet 0 AMBA Clock control
    0: disable, 1: enable
ps7_slcr_APER_CLK_CTRL_reserved_2:
  addr: 0xf800012c
  mask: 0x20
  name: reserved_2
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_APER_CLK_CTRL_reserved_1:
  addr: 0xf800012c
  mask: 0x10
  name: reserved_1
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_APER_CLK_CTRL_USB1_CPU_1XCLKACT:
  addr: 0xf800012c
  mask: 0x8
  name: USB1_CPU_1XCLKACT
  description: |
    USB controller 1 AMBA Clock control
    0: disable, 1: enable
ps7_slcr_APER_CLK_CTRL_USB0_CPU_1XCLKACT:
  addr: 0xf800012c
  mask: 0x4
  name: USB0_CPU_1XCLKACT
  description: |
    USB controller 0 AMBA Clock control
    0: disable, 1: enable
ps7_slcr_APER_CLK_CTRL_reserved:
  addr: 0xf800012c
  mask: 0x2
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_APER_CLK_CTRL_DMA_CPU_2XCLKACT:
  addr: 0xf800012c
  mask: 0x1
  name: DMA_CPU_2XCLKACT
  description: |
    DMA controller AMBA Clock control
    0: disable, 1: enable
ps7_slcr_USB0_CLK_CTRL_reserved_3:
  addr: 0xf8000130
  mask: 0xfc000000
  name: reserved_3
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_USB0_CLK_CTRL_reserved_DIVISOR1:
  addr: 0xf8000130
  mask: 0x3f00000
  name: reserved_DIVISOR1
  description: |
    Reserved. Do not modify.
ps7_slcr_USB0_CLK_CTRL_reserved_2:
  addr: 0xf8000130
  mask: 0xfc000
  name: reserved_2
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_USB0_CLK_CTRL_reserved_DIVISOR0:
  addr: 0xf8000130
  mask: 0x3f00
  name: reserved_DIVISOR0
  description: |
    Reserved. Do not modify.
ps7_slcr_USB0_CLK_CTRL_reserved_1:
  addr: 0xf8000130
  mask: 0x80
  name: reserved_1
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_USB0_CLK_CTRL_SRCSEL:
  addr: 0xf8000130
  mask: 0x70
  name: SRCSEL
  description: |
    Select the source to generate USB controller 0 ULPI clock:
    1xx: USB 0 MIO ULPI clock (top level MIO ULPI clock is an input)
ps7_slcr_USB0_CLK_CTRL_reserved:
  addr: 0xf8000130
  mask: 0xe
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_USB0_CLK_CTRL_reserved_CLKACT:
  addr: 0xf8000130
  mask: 0x1
  name: reserved_CLKACT
  description: |
    Reserved. Do not modify.
ps7_slcr_USB1_CLK_CTRL_reserved_3:
  addr: 0xf8000134
  mask: 0xfc000000
  name: reserved_3
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_USB1_CLK_CTRL_reserved_DIVISOR1:
  addr: 0xf8000134
  mask: 0x3f00000
  name: reserved_DIVISOR1
  description: |
    Reserved. Do not modify.
ps7_slcr_USB1_CLK_CTRL_reserved_2:
  addr: 0xf8000134
  mask: 0xfc000
  name: reserved_2
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_USB1_CLK_CTRL_reserved_DIVISOR0:
  addr: 0xf8000134
  mask: 0x3f00
  name: reserved_DIVISOR0
  description: |
    Reserved. Do not modify.
ps7_slcr_USB1_CLK_CTRL_reserved_1:
  addr: 0xf8000134
  mask: 0x80
  name: reserved_1
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_USB1_CLK_CTRL_SRCSEL:
  addr: 0xf8000134
  mask: 0x70
  name: SRCSEL
  description: |
    Select the source to generate USB controller 1 ULPI clock:
    1xx: USB 1 MIO ULPI clock (top level MIO ULPI clock is an input)
ps7_slcr_USB1_CLK_CTRL_reserved:
  addr: 0xf8000134
  mask: 0xe
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_USB1_CLK_CTRL_reserved_CLKACT:
  addr: 0xf8000134
  mask: 0x1
  name: reserved_CLKACT
  description: |
    Reserved. Do not modify.
ps7_slcr_GEM0_RCLK_CTRL_reserved_1:
  addr: 0xf8000138
  mask: 0xffffffe0
  name: reserved_1
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_GEM0_RCLK_CTRL_SRCSEL:
  addr: 0xf8000138
  mask: 0x10
  name: SRCSEL
  description: |
    Select the source of the Rx clock, control and data signals:
    0: MIO
    1: EMIO
ps7_slcr_GEM0_RCLK_CTRL_reserved:
  addr: 0xf8000138
  mask: 0xe
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_GEM0_RCLK_CTRL_CLKACT:
  addr: 0xf8000138
  mask: 0x1
  name: CLKACT
  description: |
    Ethernet Controler 0 Rx Clock control
    0: disable, 1: enable
ps7_slcr_GEM1_RCLK_CTRL_reserved_1:
  addr: 0xf800013c
  mask: 0xffffffe0
  name: reserved_1
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_GEM1_RCLK_CTRL_SRCSEL:
  addr: 0xf800013c
  mask: 0x10
  name: SRCSEL
  description: |
    Select the source of the Rx clock, control and data signals:
    0: MIO
    1: EMIO
ps7_slcr_GEM1_RCLK_CTRL_reserved:
  addr: 0xf800013c
  mask: 0xe
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_GEM1_RCLK_CTRL_CLKACT:
  addr: 0xf800013c
  mask: 0x1
  name: CLKACT
  description: |
    Ethernet Controller 1 Rx Clock control
    0: disable, 1: enable
ps7_slcr_GEM0_CLK_CTRL_reserved_3:
  addr: 0xf8000140
  mask: 0xfc000000
  name: reserved_3
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_GEM0_CLK_CTRL_DIVISOR1:
  addr: 0xf8000140
  mask: 0x3f00000
  name: DIVISOR1
  description: |
    Second divisor for Ethernet controller 0 source clock.
ps7_slcr_GEM0_CLK_CTRL_reserved_2:
  addr: 0xf8000140
  mask: 0xfc000
  name: reserved_2
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_GEM0_CLK_CTRL_DIVISOR:
  addr: 0xf8000140
  mask: 0x3f00
  name: DIVISOR
  description: |
    First divisor for Ethernet controller 0 source clock.
ps7_slcr_GEM0_CLK_CTRL_reserved_1:
  addr: 0xf8000140
  mask: 0x80
  name: reserved_1
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_GEM0_CLK_CTRL_SRCSEL:
  addr: 0xf8000140
  mask: 0x70
  name: SRCSEL
  description: |
    Selects the source to generate the reference clock
    00x: IO PLL.
    010: ARM PLL.
    011: DDR PLL
    1xx: Ethernet controller 0 EMIO clock
ps7_slcr_GEM0_CLK_CTRL_reserved:
  addr: 0xf8000140
  mask: 0xe
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_GEM0_CLK_CTRL_CLKACT:
  addr: 0xf8000140
  mask: 0x1
  name: CLKACT
  description: |
    Ethernet Controller 0 Reference Clock control
    0: disable, 1: enable
ps7_slcr_GEM1_CLK_CTRL_reserved_3:
  addr: 0xf8000144
  mask: 0xfc000000
  name: reserved_3
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_GEM1_CLK_CTRL_DIVISOR1:
  addr: 0xf8000144
  mask: 0x3f00000
  name: DIVISOR1
  description: |
    Second divisor for Ethernet controller 1 source clock.
ps7_slcr_GEM1_CLK_CTRL_reserved_2:
  addr: 0xf8000144
  mask: 0xfc000
  name: reserved_2
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_GEM1_CLK_CTRL_DIVISOR:
  addr: 0xf8000144
  mask: 0x3f00
  name: DIVISOR
  description: |
    First divisor for Ethernet controller 1 source clock.
ps7_slcr_GEM1_CLK_CTRL_reserved_1:
  addr: 0xf8000144
  mask: 0x80
  name: reserved_1
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_GEM1_CLK_CTRL_SRCSEL:
  addr: 0xf8000144
  mask: 0x70
  name: SRCSEL
  description: |
    Selects the source to generate the reference clock
    00x: IO PLL.
    010: ARM PLL.
    011: DDR PLL
    1xx: Ethernet controller 1 EMIO clock
ps7_slcr_GEM1_CLK_CTRL_reserved:
  addr: 0xf8000144
  mask: 0xe
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_GEM1_CLK_CTRL_CLKACT:
  addr: 0xf8000144
  mask: 0x1
  name: CLKACT
  description: |
    Ethernet Controller 1 Reference Clock control
    0: disable, 1: enable
ps7_slcr_SMC_CLK_CTRL_reserved_2:
  addr: 0xf8000148
  mask: 0xffffc000
  name: reserved_2
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_SMC_CLK_CTRL_DIVISOR:
  addr: 0xf8000148
  mask: 0x3f00
  name: DIVISOR
  description: |
    Divisor for SMC source clock.
ps7_slcr_SMC_CLK_CTRL_reserved_1:
  addr: 0xf8000148
  mask: 0xc0
  name: reserved_1
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_SMC_CLK_CTRL_SRCSEL:
  addr: 0xf8000148
  mask: 0x30
  name: SRCSEL
  description: |
    Select clock source generate SMC clock:
    0x: IO PLL, 10: ARM PLL, 11: DDR PLL
ps7_slcr_SMC_CLK_CTRL_reserved:
  addr: 0xf8000148
  mask: 0xe
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_SMC_CLK_CTRL_CLKACT:
  addr: 0xf8000148
  mask: 0x1
  name: CLKACT
  description: |
    SMC Reference Clock control
    0: disable, 1: enable
ps7_slcr_LQSPI_CLK_CTRL_reserved_2:
  addr: 0xf800014c
  mask: 0xffffc000
  name: reserved_2
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_LQSPI_CLK_CTRL_DIVISOR:
  addr: 0xf800014c
  mask: 0x3f00
  name: DIVISOR
  description: |
    Divisor for Quad SPI Controller source clock.
ps7_slcr_LQSPI_CLK_CTRL_reserved_1:
  addr: 0xf800014c
  mask: 0xc0
  name: reserved_1
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_LQSPI_CLK_CTRL_SRCSEL:
  addr: 0xf800014c
  mask: 0x30
  name: SRCSEL
  description: |
    Select clock source generate Quad SPI clock:
    0x: IO PLL, 10: ARM PLL, 11: DDR PLL
ps7_slcr_LQSPI_CLK_CTRL_reserved:
  addr: 0xf800014c
  mask: 0xe
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_LQSPI_CLK_CTRL_CLKACT:
  addr: 0xf800014c
  mask: 0x1
  name: CLKACT
  description: |
    Quad SPI Controller Reference Clock control
    0: disable, 1: enable
ps7_slcr_SDIO_CLK_CTRL_reserved_2:
  addr: 0xf8000150
  mask: 0xffffc000
  name: reserved_2
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_SDIO_CLK_CTRL_DIVISOR:
  addr: 0xf8000150
  mask: 0x3f00
  name: DIVISOR
  description: |
    Provides the divisor used to divide the source clock to generate the required generated clock frequency.
ps7_slcr_SDIO_CLK_CTRL_reserved_1:
  addr: 0xf8000150
  mask: 0xc0
  name: reserved_1
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_SDIO_CLK_CTRL_SRCSEL:
  addr: 0xf8000150
  mask: 0x30
  name: SRCSEL
  description: |
    Select the source used to generate the clock.
    0x: Source for generated clock is IO PLL.
    10: Source for generated clock is ARM PLL.
    11: Source for generated clock is DDR PLL.
ps7_slcr_SDIO_CLK_CTRL_reserved:
  addr: 0xf8000150
  mask: 0xc
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_SDIO_CLK_CTRL_CLKACT1:
  addr: 0xf8000150
  mask: 0x2
  name: CLKACT1
  description: |
    SDIO Controller 1 Clock control.
    0: disable, 1: enable
ps7_slcr_SDIO_CLK_CTRL_CLKACT0:
  addr: 0xf8000150
  mask: 0x1
  name: CLKACT0
  description: |
    SDIO Controller 0 Clock control.
    0: disable, 1: enable
ps7_slcr_UART_CLK_CTRL_reserved_2:
  addr: 0xf8000154
  mask: 0xffffc000
  name: reserved_2
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_UART_CLK_CTRL_DIVISOR:
  addr: 0xf8000154
  mask: 0x3f00
  name: DIVISOR
  description: |
    Divisor for UART Controller source clock.
ps7_slcr_UART_CLK_CTRL_reserved_1:
  addr: 0xf8000154
  mask: 0xc0
  name: reserved_1
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_UART_CLK_CTRL_SRCSEL:
  addr: 0xf8000154
  mask: 0x30
  name: SRCSEL
  description: |
    Selects the PLL source
    to generate the clock.
    0x: IO PLL
    10: ARM PLL
    11: DDR PLL
ps7_slcr_UART_CLK_CTRL_reserved:
  addr: 0xf8000154
  mask: 0xc
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_UART_CLK_CTRL_CLKACT1:
  addr: 0xf8000154
  mask: 0x2
  name: CLKACT1
  description: |
    UART 1 reference clock active:
    0: Clock is disabled
    1: Clock is enabled
ps7_slcr_UART_CLK_CTRL_CLKACT0:
  addr: 0xf8000154
  mask: 0x1
  name: CLKACT0
  description: |
    UART 0 Reference clock control.
    0: disable, 1: enable
ps7_slcr_SPI_CLK_CTRL_reserved_2:
  addr: 0xf8000158
  mask: 0xffffc000
  name: reserved_2
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_SPI_CLK_CTRL_DIVISOR:
  addr: 0xf8000158
  mask: 0x3f00
  name: DIVISOR
  description: |
    Provides the divisor used to divide the source clock to generate the required generated clock frequency.
ps7_slcr_SPI_CLK_CTRL_reserved_1:
  addr: 0xf8000158
  mask: 0xc0
  name: reserved_1
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_SPI_CLK_CTRL_SRCSEL:
  addr: 0xf8000158
  mask: 0x30
  name: SRCSEL
  description: |
    Select the source used to generate the clock:
    0x: Source for generated clock is IO PLL.
    10: Source for generated clock is ARM PLL.
    11: Source for generated clock is DDR PLL.
ps7_slcr_SPI_CLK_CTRL_reserved:
  addr: 0xf8000158
  mask: 0xc
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_SPI_CLK_CTRL_CLKACT1:
  addr: 0xf8000158
  mask: 0x2
  name: CLKACT1
  description: |
    SPI 1 reference clock active:
    0: Clock is disabled
    1: Clock is enabled
ps7_slcr_SPI_CLK_CTRL_CLKACT0:
  addr: 0xf8000158
  mask: 0x1
  name: CLKACT0
  description: |
    SPI 0 reference clock active:
    0: Clock is disabled
    1: Clock is enabled
ps7_slcr_CAN_CLK_CTRL_reserved_3:
  addr: 0xf800015c
  mask: 0xfc000000
  name: reserved_3
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_CAN_CLK_CTRL_DIVISOR1:
  addr: 0xf800015c
  mask: 0x3f00000
  name: DIVISOR1
  description: |
    Provides the divisor used to divide the source clock to generate the required generated clock frequency. Second cascade divider.
ps7_slcr_CAN_CLK_CTRL_reserved_2:
  addr: 0xf800015c
  mask: 0xfc000
  name: reserved_2
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_CAN_CLK_CTRL_DIVISOR0:
  addr: 0xf800015c
  mask: 0x3f00
  name: DIVISOR0
  description: |
    Provides the divisor used to divide the source clock to generate the required generated clock frequency. First cascade divider
ps7_slcr_CAN_CLK_CTRL_reserved_1:
  addr: 0xf800015c
  mask: 0xc0
  name: reserved_1
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_CAN_CLK_CTRL_SRCSEL:
  addr: 0xf800015c
  mask: 0x30
  name: SRCSEL
  description: |
    Select the source used to generate the clock:
    0x: Source for generated clock is IO PLL.
    10: Source for generated clock is ARM PLL.
    11: Source for generated clock is DDR PLL.
ps7_slcr_CAN_CLK_CTRL_reserved:
  addr: 0xf800015c
  mask: 0xc
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_CAN_CLK_CTRL_CLKACT1:
  addr: 0xf800015c
  mask: 0x2
  name: CLKACT1
  description: |
    CAN 1 Reference Clock active:
    0: Clock is disabled
    1: Clock is enabled
ps7_slcr_CAN_CLK_CTRL_CLKACT0:
  addr: 0xf800015c
  mask: 0x1
  name: CLKACT0
  description: |
    CAN 0 Reference Clock active:
    0: Clock is disabled
    1: Clock is enabled
ps7_slcr_CAN_MIOCLK_CTRL_reserved_1:
  addr: 0xf8000160
  mask: 0xff800000
  name: reserved_1
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_CAN_MIOCLK_CTRL_CAN1_REF_SEL:
  addr: 0xf8000160
  mask: 0x400000
  name: CAN1_REF_SEL
  description: |
    CAN 1 Reference Clock selection:
    0: From internal PLL.
    1: From MIO based on the next field
ps7_slcr_CAN_MIOCLK_CTRL_CAN1_MUX:
  addr: 0xf8000160
  mask: 0x3f0000
  name: CAN1_MUX
  description: |
    CAN 1 mux selection for MIO. Setting this to zero will select MIO[0] as the clock source.
    Only values 0-53 are valid.
ps7_slcr_CAN_MIOCLK_CTRL_reserved:
  addr: 0xf8000160
  mask: 0xff80
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_CAN_MIOCLK_CTRL_CAN0_REF_SEL:
  addr: 0xf8000160
  mask: 0x40
  name: CAN0_REF_SEL
  description: |
    CAN 0 Reference Clock selection:
    0: From internal PLL
    1: From MIO based on the next field
ps7_slcr_CAN_MIOCLK_CTRL_CAN0_MUX:
  addr: 0xf8000160
  mask: 0x3f
  name: CAN0_MUX
  description: |
    CAN 0 mux selection for MIO.
    Setting this to zero will select MIO[0] as the clock source.
    Only values 0-53 are valid.
ps7_slcr_DBG_CLK_CTRL_reserved_2:
  addr: 0xf8000164
  mask: 0xffffc000
  name: reserved_2
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_DBG_CLK_CTRL_DIVISOR:
  addr: 0xf8000164
  mask: 0x3f00
  name: DIVISOR
  description: |
    Provides the divisor used to divide the source clock to generate the required generated debug trace clock frequency.
ps7_slcr_DBG_CLK_CTRL_reserved_1:
  addr: 0xf8000164
  mask: 0x80
  name: reserved_1
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_DBG_CLK_CTRL_SRCSEL:
  addr: 0xf8000164
  mask: 0x70
  name: SRCSEL
  description: |
    Select the source used to generate the clock:
    1xx: Source for generated clock EMIO trace clock
    00x: Source for generated clock is IO PLL
    010: Source for generated clock is ARM PLL
    011: Source for generated clock is DDR PLL
ps7_slcr_DBG_CLK_CTRL_reserved:
  addr: 0xf8000164
  mask: 0xc
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_DBG_CLK_CTRL_CPU_1XCLKACT:
  addr: 0xf8000164
  mask: 0x2
  name: CPU_1XCLKACT
  description: |
    Debug
    CPU 1x Clock active. 0 - Clocks are disabled. 1 - Clocks are enabled
ps7_slcr_DBG_CLK_CTRL_CLKACT_TRC:
  addr: 0xf8000164
  mask: 0x1
  name: CLKACT_TRC
  description: |
    Debug Trace Clock active:
    0: Clock is disabled
    1: Clock is enabled
ps7_slcr_PCAP_CLK_CTRL_reserved_2:
  addr: 0xf8000168
  mask: 0xffffc000
  name: reserved_2
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_PCAP_CLK_CTRL_DIVISOR:
  addr: 0xf8000168
  mask: 0x3f00
  name: DIVISOR
  description: |
    Provides the divisor used to divide the source clock to generate the required generated clock frequency.
ps7_slcr_PCAP_CLK_CTRL_reserved_1:
  addr: 0xf8000168
  mask: 0xc0
  name: reserved_1
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_PCAP_CLK_CTRL_SRCSEL:
  addr: 0xf8000168
  mask: 0x30
  name: SRCSEL
  description: |
    Select the source used to generate the clock:
    0x: Source for generated clock is IO PLL.
    10: Source for generated clock is ARM PLL.
    11: Source for generated clock is DDR PLL.
ps7_slcr_PCAP_CLK_CTRL_reserved:
  addr: 0xf8000168
  mask: 0xe
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_PCAP_CLK_CTRL_CLKACT:
  addr: 0xf8000168
  mask: 0x1
  name: CLKACT
  description: |
    Clock active:
    0: Clock is disabled
    1: Clock is enabled
ps7_slcr_TOPSW_CLK_CTRL_reserved:
  addr: 0xf800016c
  mask: 0xfffffffe
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_TOPSW_CLK_CTRL_CLK_DIS:
  addr: 0xf800016c
  mask: 0x1
  name: CLK_DIS
  description: |
    Clock disable control:
    0: Clock is not disabled
    1: Clock can be disabled
ps7_slcr_FPGA0_CLK_CTRL_reserved_3:
  addr: 0xf8000170
  mask: 0xfc000000
  name: reserved_3
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_FPGA0_CLK_CTRL_DIVISOR1:
  addr: 0xf8000170
  mask: 0x3f00000
  name: DIVISOR1
  description: |
    Provides the divisor used to divide the source clock to generate the required generated clock frequency. Second cascade divide
ps7_slcr_FPGA0_CLK_CTRL_reserved_2:
  addr: 0xf8000170
  mask: 0xfc000
  name: reserved_2
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_FPGA0_CLK_CTRL_DIVISOR0:
  addr: 0xf8000170
  mask: 0x3f00
  name: DIVISOR0
  description: |
    Provides the divisor used to divide the source clock to generate the required generated clock frequency. First cascade divider.
ps7_slcr_FPGA0_CLK_CTRL_reserved_1:
  addr: 0xf8000170
  mask: 0xc0
  name: reserved_1
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_FPGA0_CLK_CTRL_SRCSEL:
  addr: 0xf8000170
  mask: 0x30
  name: SRCSEL
  description: |
    Select the source used to generate the clock:
    0x: Source for generated clock is IO PLL.
    10: Source for generated clock is ARM PLL.
    11: Source for generated clock is DDR PLL.
ps7_slcr_FPGA0_CLK_CTRL_reserved:
  addr: 0xf8000170
  mask: 0xf
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_FPGA0_THR_CTRL_reserved:
  addr: 0xf8000174
  mask: 0xfffffff0
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_FPGA0_THR_CTRL_reserved_SYNC:
  addr: 0xf8000174
  mask: 0x8
  name: reserved_SYNC
  description: |
    Reserved. Do not modify.
ps7_slcr_FPGA0_THR_CTRL_reserved_EDGE:
  addr: 0xf8000174
  mask: 0x4
  name: reserved_EDGE
  description: |
    Reserved. Do not modify.
ps7_slcr_FPGA0_THR_CTRL_CNT_RST:
  addr: 0xf8000174
  mask: 0x2
  name: CNT_RST
  description: |
    Reset clock throttle counter when in halt state:
    0: No effect
    1: Causes counter to be reset once HALT state is entered
ps7_slcr_FPGA0_THR_CTRL_CPU_START:
  addr: 0xf8000174
  mask: 0x1
  name: CPU_START
  description: |
    Start or restart count on detection of 0 to 1 transition in the value of this bit. A read will return the written value. (Reminder that bits 2AND3 must be programmed according to description.)
    0: No effect
    1: Start count or restart count if previous value was 0
ps7_slcr_FPGA0_THR_CNT_reserved:
  addr: 0xf8000178
  mask: 0xfff00000
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_FPGA0_THR_CNT_reserved_DLY_CNT:
  addr: 0xf8000178
  mask: 0xf0000
  name: reserved_DLY_CNT
  description: |
    Reserved. Do not modify.
ps7_slcr_FPGA0_THR_CNT_LAST_CNT:
  addr: 0xf8000178
  mask: 0xffff
  name: LAST_CNT
  description: |
    Last count value. Specifies the total number of clocks output in debug mode by the clock throttle logic.
ps7_slcr_FPGA0_THR_STA_reserved:
  addr: 0xf800017c
  mask: 0xfffe0000
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_FPGA0_THR_STA_RUNNING:
  addr: 0xf800017c
  mask: 0x10000
  name: RUNNING
  description: |
    Current running status of FPGA clock output:
    0: Clock is stopped or in normal mode (OK to change configuration).
    1: Clock is running in debug mode (Keep configuration static).
ps7_slcr_FPGA0_THR_STA_CURR_VAL:
  addr: 0xf800017c
  mask: 0xffff
  name: CURR_VAL
  description: |
    Current clock throttle counter value, which indicates the number of clock pulses output so far (only accurate when halted).
ps7_slcr_FPGA1_CLK_CTRL_reserved_3:
  addr: 0xf8000180
  mask: 0xfc000000
  name: reserved_3
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_FPGA1_CLK_CTRL_DIVISOR1:
  addr: 0xf8000180
  mask: 0x3f00000
  name: DIVISOR1
  description: |
    Provides the divisor used to divide the source clock to generate the required generated clock frequency. Second cascade divide
ps7_slcr_FPGA1_CLK_CTRL_reserved_2:
  addr: 0xf8000180
  mask: 0xfc000
  name: reserved_2
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_FPGA1_CLK_CTRL_DIVISOR0:
  addr: 0xf8000180
  mask: 0x3f00
  name: DIVISOR0
  description: |
    Provides the divisor used to divide the source clock to generate the required generated clock frequency. First cascade divider.
ps7_slcr_FPGA1_CLK_CTRL_reserved_1:
  addr: 0xf8000180
  mask: 0xc0
  name: reserved_1
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_FPGA1_CLK_CTRL_SRCSEL:
  addr: 0xf8000180
  mask: 0x30
  name: SRCSEL
  description: |
    Select the source used to generate the clock:
    0x: Source for generated clock is IO PLL.
    10: Source for generated clock is ARM PLL.
    11: Source for generated clock is DDR PLL.
ps7_slcr_FPGA1_CLK_CTRL_reserved:
  addr: 0xf8000180
  mask: 0xf
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_FPGA1_THR_CTRL_reserved:
  addr: 0xf8000184
  mask: 0xfffffff0
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_FPGA1_THR_CTRL_reserved_SYNC:
  addr: 0xf8000184
  mask: 0x8
  name: reserved_SYNC
  description: |
    Reserved. Do not modify.
ps7_slcr_FPGA1_THR_CTRL_reserved_EDGE:
  addr: 0xf8000184
  mask: 0x4
  name: reserved_EDGE
  description: |
    Reserved. Do not modify.
ps7_slcr_FPGA1_THR_CTRL_CNT_RST:
  addr: 0xf8000184
  mask: 0x2
  name: CNT_RST
  description: |
    Reset clock throttle counter when in halt state:
    0: No effect
    1: Causes counter to be reset once HALT state is entered
ps7_slcr_FPGA1_THR_CTRL_CPU_START:
  addr: 0xf8000184
  mask: 0x1
  name: CPU_START
  description: |
    Start or restart count on detection of 0 to 1 transition in the value of this bit. A read will return the written value. (Reminder that bits 2AND3 must be programmed according to description.)
    0: No effect
    1: Start count or restart count if previous value was 0
ps7_slcr_FPGA1_THR_CNT_reserved:
  addr: 0xf8000188
  mask: 0xfff00000
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_FPGA1_THR_CNT_reserved_DLY_CNT:
  addr: 0xf8000188
  mask: 0xf0000
  name: reserved_DLY_CNT
  description: |
    Reserved. Do not modify.
ps7_slcr_FPGA1_THR_CNT_LAST_CNT:
  addr: 0xf8000188
  mask: 0xffff
  name: LAST_CNT
  description: |
    Last count value. Specifies the total number of clocks output in debug mode by the clock throttle logic.
ps7_slcr_FPGA1_THR_STA_reserved:
  addr: 0xf800018c
  mask: 0xfffe0000
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_FPGA1_THR_STA_RUNNING:
  addr: 0xf800018c
  mask: 0x10000
  name: RUNNING
  description: |
    Current running status of FPGA clock output:
    0: Clock is stopped or in normal mode (OK to change configuration).
    1: Clock is running in debug mode (Keep configuration static).
ps7_slcr_FPGA1_THR_STA_CURR_VAL:
  addr: 0xf800018c
  mask: 0xffff
  name: CURR_VAL
  description: |
    Current clock throttle counter value, which indicates the number of clock pulses output so far (only accurate when halted).
ps7_slcr_FPGA2_CLK_CTRL_reserved_3:
  addr: 0xf8000190
  mask: 0xfc000000
  name: reserved_3
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_FPGA2_CLK_CTRL_DIVISOR1:
  addr: 0xf8000190
  mask: 0x3f00000
  name: DIVISOR1
  description: |
    Provides the divisor used to divide the source clock to generate the required generated clock frequency. Second cascade divide
ps7_slcr_FPGA2_CLK_CTRL_reserved_2:
  addr: 0xf8000190
  mask: 0xfc000
  name: reserved_2
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_FPGA2_CLK_CTRL_DIVISOR0:
  addr: 0xf8000190
  mask: 0x3f00
  name: DIVISOR0
  description: |
    Provides the divisor used to divide the source clock to generate the required generated clock frequency. First cascade divider.
ps7_slcr_FPGA2_CLK_CTRL_reserved_1:
  addr: 0xf8000190
  mask: 0xc0
  name: reserved_1
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_FPGA2_CLK_CTRL_SRCSEL:
  addr: 0xf8000190
  mask: 0x30
  name: SRCSEL
  description: |
    Select the source used to generate the clock:
    0x: Source for generated clock is IO PLL.
    10: Source for generated clock is ARM PLL.
    11: Source for generated clock is DDR PLL.
ps7_slcr_FPGA2_CLK_CTRL_reserved:
  addr: 0xf8000190
  mask: 0xf
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_FPGA2_THR_CTRL_reserved:
  addr: 0xf8000194
  mask: 0xfffffff0
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_FPGA2_THR_CTRL_reserved_SYNC:
  addr: 0xf8000194
  mask: 0x8
  name: reserved_SYNC
  description: |
    Reserved. Do not modify.
ps7_slcr_FPGA2_THR_CTRL_reserved_EDGE:
  addr: 0xf8000194
  mask: 0x4
  name: reserved_EDGE
  description: |
    Reserved. Do not modify.
ps7_slcr_FPGA2_THR_CTRL_CNT_RST:
  addr: 0xf8000194
  mask: 0x2
  name: CNT_RST
  description: |
    Reset clock throttle counter when in halt state:
    0: No effect
    1: Causes counter to be reset once HALT state is entered
ps7_slcr_FPGA2_THR_CTRL_CPU_START:
  addr: 0xf8000194
  mask: 0x1
  name: CPU_START
  description: |
    Start or restart count on detection of 0 to 1 transition in the value of this bit. A read will return the written value. (Reminder that bits 2AND3 must be programmed according to description.)
    0: No effect
    1: Start count or restart count if previous value was 0
ps7_slcr_FPGA2_THR_CNT_reserved:
  addr: 0xf8000198
  mask: 0xfff00000
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_FPGA2_THR_CNT_reserved_DLY_CNT:
  addr: 0xf8000198
  mask: 0xf0000
  name: reserved_DLY_CNT
  description: |
    Reserved. Do not modify.
ps7_slcr_FPGA2_THR_CNT_LAST_CNT:
  addr: 0xf8000198
  mask: 0xffff
  name: LAST_CNT
  description: |
    Last count value. Specifies the total number of clocks output in debug mode by the clock throttle logic.
ps7_slcr_FPGA2_THR_STA_reserved:
  addr: 0xf800019c
  mask: 0xfffe0000
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_FPGA2_THR_STA_RUNNING:
  addr: 0xf800019c
  mask: 0x10000
  name: RUNNING
  description: |
    Current running status of FPGA clock output:
    0: Clock is stopped or in normal mode (OK to change configuration).
    1: Clock is running in debug mode (Keep configuration static).
ps7_slcr_FPGA2_THR_STA_CURR_VAL:
  addr: 0xf800019c
  mask: 0xffff
  name: CURR_VAL
  description: |
    Current clock throttle counter value, which indicates the number of clock pulses output so far (only accurate when halted).
ps7_slcr_FPGA3_CLK_CTRL_reserved_3:
  addr: 0xf80001a0
  mask: 0xfc000000
  name: reserved_3
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_FPGA3_CLK_CTRL_DIVISOR1:
  addr: 0xf80001a0
  mask: 0x3f00000
  name: DIVISOR1
  description: |
    Provides the divisor used to divide the source clock to generate the required generated clock frequency. Second cascade divide
ps7_slcr_FPGA3_CLK_CTRL_reserved_2:
  addr: 0xf80001a0
  mask: 0xfc000
  name: reserved_2
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_FPGA3_CLK_CTRL_DIVISOR0:
  addr: 0xf80001a0
  mask: 0x3f00
  name: DIVISOR0
  description: |
    Provides the divisor used to divide the source clock to generate the required generated clock frequency. First cascade divider.
ps7_slcr_FPGA3_CLK_CTRL_reserved_1:
  addr: 0xf80001a0
  mask: 0xc0
  name: reserved_1
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_FPGA3_CLK_CTRL_SRCSEL:
  addr: 0xf80001a0
  mask: 0x30
  name: SRCSEL
  description: |
    Select the source used to generate the clock:
    0x: Source for generated clock is IO PLL.
    10: Source for generated clock is ARM PLL.
    11: Source for generated clock is DDR PLL.
ps7_slcr_FPGA3_CLK_CTRL_reserved:
  addr: 0xf80001a0
  mask: 0xf
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_FPGA3_THR_CTRL_reserved:
  addr: 0xf80001a4
  mask: 0xfffffff0
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_FPGA3_THR_CTRL_reserved_SYNC:
  addr: 0xf80001a4
  mask: 0x8
  name: reserved_SYNC
  description: |
    Reserved. Do not modify.
ps7_slcr_FPGA3_THR_CTRL_reserved_EDGE:
  addr: 0xf80001a4
  mask: 0x4
  name: reserved_EDGE
  description: |
    Reserved. Do not modify.
ps7_slcr_FPGA3_THR_CTRL_CNT_RST:
  addr: 0xf80001a4
  mask: 0x2
  name: CNT_RST
  description: |
    Reset clock throttle counter when in halt state:
    0: No effect
    1: Causes counter to be reset once HALT state is entered
ps7_slcr_FPGA3_THR_CTRL_CPU_START:
  addr: 0xf80001a4
  mask: 0x1
  name: CPU_START
  description: |
    Start or restart count on detection of 0 to 1 transition in the value of this bit. A read will return the written value. (Reminder that bits 2AND3 must be programmed according to description.)
    0: No effect
    1: Start count or restart count if previous value was 0
ps7_slcr_FPGA3_THR_CNT_reserved:
  addr: 0xf80001a8
  mask: 0xfff00000
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_FPGA3_THR_CNT_reserved_DLY_CNT:
  addr: 0xf80001a8
  mask: 0xf0000
  name: reserved_DLY_CNT
  description: |
    Reserved. Do not modify.
ps7_slcr_FPGA3_THR_CNT_LAST_CNT:
  addr: 0xf80001a8
  mask: 0xffff
  name: LAST_CNT
  description: |
    Last count value. Specifies the total number of clocks output in debug mode by the clock throttle logic.
ps7_slcr_FPGA3_THR_STA_reserved:
  addr: 0xf80001ac
  mask: 0xfffe0000
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_FPGA3_THR_STA_RUNNING:
  addr: 0xf80001ac
  mask: 0x10000
  name: RUNNING
  description: |
    Current running status of FPGA clock output:
    0: Clock is stopped or in normal mode (OK to change configuration).
    1: Clock is running in debug mode (Keep configuration static).
ps7_slcr_FPGA3_THR_STA_CURR_VAL:
  addr: 0xf80001ac
  mask: 0xffff
  name: CURR_VAL
  description: |
    Current clock throttle counter value, which indicates the number of clock pulses output so far (only accurate when halted).
ps7_slcr_CLK_621_TRUE_reserved:
  addr: 0xf80001c4
  mask: 0xfffffffe
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_CLK_621_TRUE_CLK_621_TRUE:
  addr: 0xf80001c4
  mask: 0x1
  name: CLK_621_TRUE
  description: |
    Select the CPU clock ratio:
    (When this register changes, no access are allowed to OCM.)
    0: 4:2:1
    1: 6:2:1
ps7_slcr_PSS_RST_CTRL_reserved:
  addr: 0xf8000200
  mask: 0xfffffffe
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_PSS_RST_CTRL_SOFT_RST:
  addr: 0xf8000200
  mask: 0x1
  name: SOFT_RST
  description: |
    Processing System software reset control signal.
    0: no affect
    1: asserts PS software reset pulse (entire system except clock generator)
    There is no need to write a 0, the hardware generates a pulse everytime a 1 is written.
ps7_slcr_DDR_RST_CTRL_reserved:
  addr: 0xf8000204
  mask: 0xfffffffe
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_DDR_RST_CTRL_DDR_RST:
  addr: 0xf8000204
  mask: 0x1
  name: DDR_RST
  description: |
    DDR software reset control signal
    0: disable, 1: enable
ps7_slcr_TOPSW_RST_CTRL_reserved:
  addr: 0xf8000208
  mask: 0xfffffffe
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_TOPSW_RST_CTRL_TOPSW_RST:
  addr: 0xf8000208
  mask: 0x1
  name: TOPSW_RST
  description: |
    Central Interconnect Reset Control:
    0: de-assert (no reset)
    1: assert
    Care must be taken to ensure that the AXI interconnect does not have outstanding transactions and the bus is idle.
ps7_slcr_DMAC_RST_CTRL_reserved:
  addr: 0xf800020c
  mask: 0xfffffffe
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_DMAC_RST_CTRL_DMAC_RST:
  addr: 0xf800020c
  mask: 0x1
  name: DMAC_RST
  description: |
    DMA Controller software reset signal.
    0: de-assert (DMA controller TrustZone register is read only)
    1: assert (DMA controller TrustZone register is writeable)
ps7_slcr_USB_RST_CTRL_reserved:
  addr: 0xf8000210
  mask: 0xfffffffc
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_USB_RST_CTRL_USB1_CPU1X_RST:
  addr: 0xf8000210
  mask: 0x2
  name: USB1_CPU1X_RST
  description: |
    USB 1 master and slave AMBA interfaces software reset:
    0: de-assert (no reset)
    1: assert (held in reset)
ps7_slcr_USB_RST_CTRL_USB0_CPU1X_RST:
  addr: 0xf8000210
  mask: 0x1
  name: USB0_CPU1X_RST
  description: |
    USB 0 master and slave AMBA interfaces software reset:
    0: de-assert (no reset)
    1: assert (held in reset)
ps7_slcr_GEM_RST_CTRL_reserved_1:
  addr: 0xf8000214
  mask: 0xffffff00
  name: reserved_1
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_GEM_RST_CTRL_GEM1_REF_RST:
  addr: 0xf8000214
  mask: 0x80
  name: GEM1_REF_RST
  description: |
    Gigabit Ethernet 1 reference clock reset:
    0: de-assert (no reset)
    1: assert (interfaces are held in reset)
ps7_slcr_GEM_RST_CTRL_GEM0_REF_RST:
  addr: 0xf8000214
  mask: 0x40
  name: GEM0_REF_RST
  description: |
    Gigabit Ethernet 0 reference clock domain reset:
    0: de-assert (no reset)
    1: assert (controller is held in reset)
ps7_slcr_GEM_RST_CTRL_GEM1_RX_RST:
  addr: 0xf8000214
  mask: 0x20
  name: GEM1_RX_RST
  description: |
    Gigabit Ethernet 1 Rx clock domain reset:
    0: de-assert (no reset)
    1: assert (held in reset)
ps7_slcr_GEM_RST_CTRL_GEM0_RX_RST:
  addr: 0xf8000214
  mask: 0x10
  name: GEM0_RX_RST
  description: |
    Gigabit Ethernet 0 Rx clock domain reset:
    0: de-assert (no reset)
    1: assert (held in reset)
ps7_slcr_GEM_RST_CTRL_reserved:
  addr: 0xf8000214
  mask: 0xc
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_GEM_RST_CTRL_GEM1_CPU1X_RST:
  addr: 0xf8000214
  mask: 0x2
  name: GEM1_CPU1X_RST
  description: |
    Gigabit Ethernet 1 CPU_1x clock domain reset:
    0: de-assert (no reset)
    1: assert (held in reset)
ps7_slcr_GEM_RST_CTRL_GEM0_CPU1X_RST:
  addr: 0xf8000214
  mask: 0x1
  name: GEM0_CPU1X_RST
  description: |
    Gigabit Ethernet 0 CPU_1x clock domain reset:
    0: de-assert (no reset)
    1: assert (held in reset)
ps7_slcr_SDIO_RST_CTRL_reserved_1:
  addr: 0xf8000218
  mask: 0xffffffc0
  name: reserved_1
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_SDIO_RST_CTRL_SDIO1_REF_RST:
  addr: 0xf8000218
  mask: 0x20
  name: SDIO1_REF_RST
  description: |
    SDIO 1 reference clock domain reset:
    0: de-assert (no reset)
    1: assert (controller is held in reset)
ps7_slcr_SDIO_RST_CTRL_SDIO0_REF_RST:
  addr: 0xf8000218
  mask: 0x10
  name: SDIO0_REF_RST
  description: |
    SDIO 0 reference clock domain reset:
    0: de-assert (no reset)
    1: assert (controller is held in reset)
ps7_slcr_SDIO_RST_CTRL_reserved:
  addr: 0xf8000218
  mask: 0xc
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_SDIO_RST_CTRL_SDIO1_CPU1X_RST:
  addr: 0xf8000218
  mask: 0x2
  name: SDIO1_CPU1X_RST
  description: |
    SDIO 1 master and slave AMBA interfaces reset:
    0: de-assert (no reset)
    1: assert (held in reset)
ps7_slcr_SDIO_RST_CTRL_SDIO0_CPU1X_RST:
  addr: 0xf8000218
  mask: 0x1
  name: SDIO0_CPU1X_RST
  description: |
    SDIO 0 master and slave AMBA interfaces reset:
    0: de-assert (no reset)
    1: assert (held in reset)
ps7_slcr_SPI_RST_CTRL_reserved:
  addr: 0xf800021c
  mask: 0xfffffff0
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_SPI_RST_CTRL_SPI1_REF_RST:
  addr: 0xf800021c
  mask: 0x8
  name: SPI1_REF_RST
  description: |
    SPI 1 Reference software reset. On assertion of this reset, the Reference clock portion of the SPI 1 subsystem will be reset.
    0: No reset
    1: Reference clock portion of SPI 1 subsytem held in reset
ps7_slcr_SPI_RST_CTRL_SPI0_REF_RST:
  addr: 0xf800021c
  mask: 0x4
  name: SPI0_REF_RST
  description: |
    SPI 0 Reference software reset. On assertion of this reset, the Reference clock portion of the SPI 0 subsystem will be reset.
    0: No reset
    1: Reference clock portion of SPI 0 subsytem held in reset
ps7_slcr_SPI_RST_CTRL_SPI1_CPU1X_RST:
  addr: 0xf800021c
  mask: 0x2
  name: SPI1_CPU1X_RST
  description: |
    SPI 1 AMBA software reset. On assertion of this reset, the AMBA clock portion of the SPI 1 subsystem will be reset.
    0: No reset
    1: AMBA clock portion of SPI 1 subsytem held in reset
ps7_slcr_SPI_RST_CTRL_SPI0_CPU1X_RST:
  addr: 0xf800021c
  mask: 0x1
  name: SPI0_CPU1X_RST
  description: |
    SPI 0 AMBA software reset. On assertion of this reset, the AMBA clock portion of the SPI 0 subsystem will be reset.
    0: No reset
    1: AMBA clock portion of SPI 0 subsytem held in reset
ps7_slcr_CAN_RST_CTRL_reserved_2:
  addr: 0xf8000220
  mask: 0xfffffff0
  name: reserved_2
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_CAN_RST_CTRL_reserved_1:
  addr: 0xf8000220
  mask: 0x8
  name: reserved_1
  description: |
    Reserved.
    Writes will maintain value
ps7_slcr_CAN_RST_CTRL_reserved:
  addr: 0xf8000220
  mask: 0x4
  name: reserved
  description: |
    Reserved.
    Writes will maintain value
ps7_slcr_CAN_RST_CTRL_CAN1_CPU1X_RST:
  addr: 0xf8000220
  mask: 0x2
  name: CAN1_CPU1X_RST
  description: |
    CAN 1 AMBA software reset. On assertion of this reset, the AMBA clock portion of the CAN 1 subsystem will be reset.
    0: No reset
    1: AMBA clock portion of CAN 1 subsytem held in reset
ps7_slcr_CAN_RST_CTRL_CAN0_CPU1X_RST:
  addr: 0xf8000220
  mask: 0x1
  name: CAN0_CPU1X_RST
  description: |
    CAN 0 AMBA software reset. On assertion of this reset, the AMBA clock portion of the CAN 0 subsystem will be reset.
    0: No reset
    1: AMBA clock portion of CAN 0 subsytem held in reset
ps7_slcr_I2C_RST_CTRL_reserved:
  addr: 0xf8000224
  mask: 0xfffffffc
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_I2C_RST_CTRL_I2C1_CPU1X_RST:
  addr: 0xf8000224
  mask: 0x2
  name: I2C1_CPU1X_RST
  description: |
    I2C 1 AMBA software reset. On assertion of this reset, the AMBA clock portion of the I2C 1 subsystem will be reset.
    0: No reset
    1: AMBA clock portion of I2C 1 subsytem held in reset
ps7_slcr_I2C_RST_CTRL_I2C0_CPU1X_RST:
  addr: 0xf8000224
  mask: 0x1
  name: I2C0_CPU1X_RST
  description: |
    I2C 0 AMBA software reset. On assertion of this reset, the AMBA clock portion of the I2C 0 subsystem will be reset.
    0: No reset
    1: AMBA clock portion of I2C 0 subsytem held in reset
ps7_slcr_UART_RST_CTRL_reserved:
  addr: 0xf8000228
  mask: 0xfffffff0
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_UART_RST_CTRL_UART1_REF_RST:
  addr: 0xf8000228
  mask: 0x8
  name: UART1_REF_RST
  description: |
    UART 1 Reference software reset.
    0: deassert soft reset
    1: assert soft reset
ps7_slcr_UART_RST_CTRL_UART0_REF_RST:
  addr: 0xf8000228
  mask: 0x4
  name: UART0_REF_RST
  description: |
    UART 0 Reference software reset.
    0: deassert soft reset
    1: assert soft reset
ps7_slcr_UART_RST_CTRL_UART1_CPU1X_RST:
  addr: 0xf8000228
  mask: 0x2
  name: UART1_CPU1X_RST
  description: |
    UART 1 AMBA software reset. On assertion of this reset, the AMBA clock portion of the UART 1 subsystem will be reset.
    0: No reset
    1: AMBA clock portion of UART 1 subsytem held in reset
ps7_slcr_UART_RST_CTRL_UART0_CPU1X_RST:
  addr: 0xf8000228
  mask: 0x1
  name: UART0_CPU1X_RST
  description: |
    UART 0 AMBA software reset. On assertion of this reset, the AMBA clock portion of the UART 0 subsystem will be reset.
    0: No reset
    1: AMBA clock portion of UART 0 subsytem held in reset
ps7_slcr_GPIO_RST_CTRL_reserved:
  addr: 0xf800022c
  mask: 0xfffffffe
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_GPIO_RST_CTRL_GPIO_CPU1X_RST:
  addr: 0xf800022c
  mask: 0x1
  name: GPIO_CPU1X_RST
  description: |
    GPIO AMBA software reset. On assertion of this reset, the AMBA clock portion of the GPIO subsystem will be reset.
    0: No reset
    1: AMBA clock portion of GPIO subsytem held in reset
ps7_slcr_LQSPI_RST_CTRL_reserved:
  addr: 0xf8000230
  mask: 0xfffffffc
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_LQSPI_RST_CTRL_QSPI_REF_RST:
  addr: 0xf8000230
  mask: 0x2
  name: QSPI_REF_RST
  description: |
    Quad SPI Reference software reset. On assertion of this reset, the Reference clock portion of the QSPI subsystem will be reset.
    0: No reset.
    1: Reference clock portion of QSPI subsytem held in reset.
ps7_slcr_LQSPI_RST_CTRL_LQSPI_CPU1X_RST:
  addr: 0xf8000230
  mask: 0x1
  name: LQSPI_CPU1X_RST
  description: |
    Quad SPI AMBA software reset. On assertion of this reset, the AMBA clock portion of the LQSPI subsystem will be reset.
    0: No reset
    1: AMBA clock portion of QSPI subsytem held in reset
ps7_slcr_SMC_RST_CTRL_reserved:
  addr: 0xf8000234
  mask: 0xfffffffc
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_SMC_RST_CTRL_SMC_REF_RST:
  addr: 0xf8000234
  mask: 0x2
  name: SMC_REF_RST
  description: |
    SMC Reference software reset. On assertion of this reset, the Reference clock portion of the SMC subsystem will be reset.
    0: No reset
    1: Reference clock portion of SMC subsytem held in reset
ps7_slcr_SMC_RST_CTRL_SMC_CPU1X_RST:
  addr: 0xf8000234
  mask: 0x1
  name: SMC_CPU1X_RST
  description: |
    SMC AMBA software reset. On assertion of this reset, the AMBA clock portion of the SMC subsystem will be reset.
    0: No reset
    1: AMBA clock portion of SMC subsytem held in reset
ps7_slcr_OCM_RST_CTRL_reserved:
  addr: 0xf8000238
  mask: 0xfffffffe
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_OCM_RST_CTRL_OCM_RST:
  addr: 0xf8000238
  mask: 0x1
  name: OCM_RST
  description: |
    OCM software reset. On assertion of this reset, the OCM subsystem will be reset.
    0: No reset
    1: OCM subsytem held in reset
ps7_slcr_DEVCI_RST_CTRL_reserved:
  addr: 0xf800023c
  mask: 0xfffffffc
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_DEVCI_RST_CTRL_DEVCI_CPU1X_RST:
  addr: 0xf800023c
  mask: 0x2
  name: DEVCI_CPU1X_RST
  description: |
    Device Configuration AMBA software reset. On assertion of this reset, the AMBA clock portion of the Device Config subsystem will be reset.
    0: No reset
    1: AMBA clock portion of Device Configuration subsytem held in reset
ps7_slcr_DEVCI_RST_CTRL_PCAP2X_RST:
  addr: 0xf800023c
  mask: 0x1
  name: PCAP2X_RST
  description: |
    Device Configuration PCAP2X software reset. On assertion of this reset, the PCAP2X clock portion of the Device Config subsystem will be reset.
    0: No reset
    1: PCAP2X clock portion of Device Configuration subsytem held in reset
ps7_slcr_FPGA_RST_CTRL_reserved_3:
  addr: 0xf8000240
  mask: 0xfe000000
  name: reserved_3
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_FPGA_RST_CTRL_reserved_FPGA_ACP_RST:
  addr: 0xf8000240
  mask: 0x1000000
  name: reserved_FPGA_ACP_RST
  description: |
    Reserved. Do not modify.
ps7_slcr_FPGA_RST_CTRL_reserved_FPGA_AXDS3_RST:
  addr: 0xf8000240
  mask: 0x800000
  name: reserved_FPGA_AXDS3_RST
  description: |
    Reserved. Do not modify.
ps7_slcr_FPGA_RST_CTRL_reserved_FPGA_AXDS2_RST:
  addr: 0xf8000240
  mask: 0x400000
  name: reserved_FPGA_AXDS2_RST
  description: |
    Reserved. Do not modify.
ps7_slcr_FPGA_RST_CTRL_reserved_FPGA_AXDS1_RST:
  addr: 0xf8000240
  mask: 0x200000
  name: reserved_FPGA_AXDS1_RST
  description: |
    Reserved. Do not modify.
ps7_slcr_FPGA_RST_CTRL_reserved_FPGA_AXDS0_RST:
  addr: 0xf8000240
  mask: 0x100000
  name: reserved_FPGA_AXDS0_RST
  description: |
    Reserved. Do not modify.
ps7_slcr_FPGA_RST_CTRL_reserved_2:
  addr: 0xf8000240
  mask: 0xc0000
  name: reserved_2
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_FPGA_RST_CTRL_reserved_FSSW1_FPGA_RST:
  addr: 0xf8000240
  mask: 0x20000
  name: reserved_FSSW1_FPGA_RST
  description: |
    Reserved. Do not modify.
ps7_slcr_FPGA_RST_CTRL_reserved_FSSW0_FPGA_RST:
  addr: 0xf8000240
  mask: 0x10000
  name: reserved_FSSW0_FPGA_RST
  description: |
    Reserved. Do not modify.
ps7_slcr_FPGA_RST_CTRL_reserved_1:
  addr: 0xf8000240
  mask: 0xc000
  name: reserved_1
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_FPGA_RST_CTRL_reserved_FPGA_FMSW1_RST:
  addr: 0xf8000240
  mask: 0x2000
  name: reserved_FPGA_FMSW1_RST
  description: |
    Reserved. Do not modify.
ps7_slcr_FPGA_RST_CTRL_reserved_FPGA_FMSW0_RST:
  addr: 0xf8000240
  mask: 0x1000
  name: reserved_FPGA_FMSW0_RST
  description: |
    Reserved. Do not modify.
ps7_slcr_FPGA_RST_CTRL_reserved_FPGA_DMA3_RST:
  addr: 0xf8000240
  mask: 0x800
  name: reserved_FPGA_DMA3_RST
  description: |
    Reserved. Do not modify.
ps7_slcr_FPGA_RST_CTRL_reserved_FPGA_DMA2_RST:
  addr: 0xf8000240
  mask: 0x400
  name: reserved_FPGA_DMA2_RST
  description: |
    Reserved. Do not modify.
ps7_slcr_FPGA_RST_CTRL_reserved_FPGA_DMA1_RST:
  addr: 0xf8000240
  mask: 0x200
  name: reserved_FPGA_DMA1_RST
  description: |
    Reserved. Do not modify.
ps7_slcr_FPGA_RST_CTRL_reserved_FPGA_DMA0_RST:
  addr: 0xf8000240
  mask: 0x100
  name: reserved_FPGA_DMA0_RST
  description: |
    Reserved. Do not modify.
ps7_slcr_FPGA_RST_CTRL_reserved:
  addr: 0xf8000240
  mask: 0xf0
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_FPGA_RST_CTRL_FPGA3_OUT_RST:
  addr: 0xf8000240
  mask: 0x8
  name: FPGA3_OUT_RST
  description: |
    PL Reset 3 (FCLKRESETN3 output signal). Refer to the PS7 wrapper in EDK for possible signal inversion. Logic level on the FCLKRESETN3 signal:
    0: De-assert reset (High logic level).
    1: Assert Reset (Low logic state)
ps7_slcr_FPGA_RST_CTRL_FPGA2_OUT_RST:
  addr: 0xf8000240
  mask: 0x4
  name: FPGA2_OUT_RST
  description: |
    PL Reset 2 (FCLKRESETN2 output signal). Refer to the PS7 wrapper in EDK for possible signal inversion. Logic level on the FCLKRESETN2 signal:
    0: De-assert reset (High logic level).
    1: Assert Reset (Low logic state)
ps7_slcr_FPGA_RST_CTRL_FPGA1_OUT_RST:
  addr: 0xf8000240
  mask: 0x2
  name: FPGA1_OUT_RST
  description: |
    PL Reset 1 (FCLKRESETN1 output signal). Refer to the PS7 wrapper in EDK for possible signal inversion. Logic level on the FCLKRESETN1 signal:
    0: De-assert reset (High logic level).
    1: Assert Reset (Low logic state)
ps7_slcr_FPGA_RST_CTRL_FPGA0_OUT_RST:
  addr: 0xf8000240
  mask: 0x1
  name: FPGA0_OUT_RST
  description: |
    PL Reset 0 (FCLKRESETN0 output signal). Refer to the PS7 wrapper in EDK for possible signal inversion. Logic level on the FCLKRESETN0 signal:
    0: De-assert reset (High logic level).
    1: Assert Reset (Low logic state)
ps7_slcr_A9_CPU_RST_CTRL_reserved_2:
  addr: 0xf8000244
  mask: 0xfffffe00
  name: reserved_2
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_A9_CPU_RST_CTRL_PERI_RST:
  addr: 0xf8000244
  mask: 0x100
  name: PERI_RST
  description: |
    CPU peripheral soft reset.
    0: de-assert (no reset)
    1: assert (held in reset)
ps7_slcr_A9_CPU_RST_CTRL_reserved_1:
  addr: 0xf8000244
  mask: 0xc0
  name: reserved_1
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_A9_CPU_RST_CTRL_A9_CLKSTOP1:
  addr: 0xf8000244
  mask: 0x20
  name: A9_CLKSTOP1
  description: |
    CPU 1 clock stop control:
    0: no stop (CPU runs)
    1: clock stopped
ps7_slcr_A9_CPU_RST_CTRL_A9_CLKSTOP0:
  addr: 0xf8000244
  mask: 0x10
  name: A9_CLKSTOP0
  description: |
    CPU 0 clock stop control:
    0: no stop (CPU runs)
    1: clock stopped
ps7_slcr_A9_CPU_RST_CTRL_reserved:
  addr: 0xf8000244
  mask: 0xc
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_A9_CPU_RST_CTRL_A9_RST1:
  addr: 0xf8000244
  mask: 0x2
  name: A9_RST1
  description: |
    CPU 0 software reset control:
    0: de-assert (no reset)
    1: assert (held in reset)
ps7_slcr_A9_CPU_RST_CTRL_A9_RST0:
  addr: 0xf8000244
  mask: 0x1
  name: A9_RST0
  description: |
    CPU 0 software reset control:
    0: de-assert (no reset)
    1: assert (held in reset)
ps7_slcr_RS_AWDT_CTRL_reserved:
  addr: 0xf800024c
  mask: 0xfffffffc
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_RS_AWDT_CTRL_CTRL1:
  addr: 0xf800024c
  mask: 0x2
  name: CTRL1
  description: |
    Select the target for the APU watchdog timer 1 reset signal. Route the WDT reset to:
    0: the same system level as PS_SRST_B
    1: the CPU associated with the watchdog timer
ps7_slcr_RS_AWDT_CTRL_CTRL0:
  addr: 0xf800024c
  mask: 0x1
  name: CTRL0
  description: |
    Select the target for the APU watchdog timer 0 reset signal. Route the WDT reset to:
    0: the same system level as PS_SRST_B
    1: the CPU associated with the watchdog timer
ps7_slcr_REBOOT_STATUS_REBOOT_STATE:
  addr: 0xf8000258
  mask: 0xff000000
  name: REBOOT_STATE
  description: |
    General 32-bit R/W field to allow software to store information that persists through all resets except power-on reset.
    This field is reset by POR only. The ROM will put the last known reset reason into this register.
ps7_slcr_REBOOT_STATUS_reserved:
  addr: 0xf8000258
  mask: 0x800000
  name: reserved
  description: |
    Reserved.
ps7_slcr_REBOOT_STATUS_POR:
  addr: 0xf8000258
  mask: 0x400000
  name: POR
  description: |
    Last reset was due to POR (power on reset), if set.
    This field is written by ROM code.
ps7_slcr_REBOOT_STATUS_SRST_B:
  addr: 0xf8000258
  mask: 0x200000
  name: SRST_B
  description: |
    Last reset was due to SRST_B (soft reset), if set.
    This field is written by ROM code.
ps7_slcr_REBOOT_STATUS_DBG_RST:
  addr: 0xf8000258
  mask: 0x100000
  name: DBG_RST
  description: |
    Last reset was due to debug system
    reset, if set. This field is written by ROM code.
ps7_slcr_REBOOT_STATUS_SLC_RST:
  addr: 0xf8000258
  mask: 0x80000
  name: SLC_RST
  description: |
    Last reset was due to SLC soft reset, if set.
    This field is written by ROM code.
ps7_slcr_REBOOT_STATUS_AWDT1_RST:
  addr: 0xf8000258
  mask: 0x40000
  name: AWDT1_RST
  description: |
    Last reset was due to APU watchdog timer 1, if set. This field is written by ROM code.
ps7_slcr_REBOOT_STATUS_AWDT0_RST:
  addr: 0xf8000258
  mask: 0x20000
  name: AWDT0_RST
  description: |
    Last reset was due to APU watchdog timer 0, if set.
    This field is written by ROM code
ps7_slcr_REBOOT_STATUS_SWDT_RST:
  addr: 0xf8000258
  mask: 0x10000
  name: SWDT_RST
  description: |
    Last reset was due to system watchdog timeout, if set (see watchdog status for more details). This field is written by ROM code
ps7_slcr_REBOOT_STATUS_BOOTROM_ERROR_CODE:
  addr: 0xf8000258
  mask: 0xffff
  name: BOOTROM_ERROR_CODE
  description: |
    This field is written by the BootROM to describe errors that occur during the boot proceess. Refer to the BootROM debug status section in the Zynq-7000 Technical Reference Manual, UG585.
ps7_slcr_BOOT_MODE_reserved:
  addr: 0xf800025c
  mask: 0xffffffe0
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_BOOT_MODE_PLL_BYPASS:
  addr: 0xf800025c
  mask: 0x10
  name: PLL_BYPASS
  description: |
    Boot mode pins are sampled when Power-on Reset deasserts. The logic levels are stored in this register. The PLL_BYPASS pin sets the initial operating mode of all three PLL clocks (ARM, IO and DDR):
    0: PLLs are enabled and their outputs are routed to the clock generators
    1: PLLs are disabled and bypassed
ps7_slcr_BOOT_MODE_BOOT_MODE:
  addr: 0xf800025c
  mask: 0xf
  name: BOOT_MODE
  description: |
    Boot mode pins are sampled when Power-on Reset deasserts. The logic levels are stored in this register. The interpretation of these boot mode values are explained in the boot mode section of the Zynq Technical Reference Manual.
ps7_slcr_APU_CTRL_reserved:
  addr: 0xf8000300
  mask: 0xfffffff8
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_APU_CTRL_CFGSDISABLE:
  addr: 0xf8000300
  mask: 0x4
  name: CFGSDISABLE
  description: |
    Disable write access to some system control processor registers, and some GIC registers. Set only. Once set, individual core reset cannot reset this value.
    This field is reset by POR only.
ps7_slcr_APU_CTRL_CP15SDISABLE:
  addr: 0xf8000300
  mask: 0x3
  name: CP15SDISABLE
  description: |
    Disable write access to some system control processor (CP15) registers, in each processor. Set only. Once set, individual core reset cannot reset this value.
    This field is reset by POR only.
ps7_slcr_WDT_CLK_SEL_reserved:
  addr: 0xf8000304
  mask: 0xfffffffe
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_WDT_CLK_SEL_SEL:
  addr: 0xf8000304
  mask: 0x1
  name: SEL
  description: |
    System watchdog timer clock source selection:
    0: CPU_1x clock
    1: wdt_clk_in from PL via EMIO
ps7_slcr_PSS_IDCODE_REVISION:
  addr: 0xf8000530
  mask: 0xf0000000
  name: REVISION
  description: |
    Revision code
ps7_slcr_PSS_IDCODE_FAMILY:
  addr: 0xf8000530
  mask: 0xfe00000
  name: FAMILY
  description: |
    Family code
ps7_slcr_PSS_IDCODE_SUBFAMILY:
  addr: 0xf8000530
  mask: 0x1e0000
  name: SUBFAMILY
  description: |
    Subfamily code
ps7_slcr_PSS_IDCODE_DEVICE:
  addr: 0xf8000530
  mask: 0x1f000
  name: DEVICE
  description: |
    Device code
    7z010 - 0x02
    7z020 - 0x07
    7z030 - 0x0c
    7z045 - 0x11
ps7_slcr_PSS_IDCODE_MANUFACTURER_ID:
  addr: 0xf8000530
  mask: 0xffe
  name: MANUFACTURER_ID
  description: |
    Manufacturer ID
ps7_slcr_PSS_IDCODE_reserved:
  addr: 0xf8000530
  mask: 0x1
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is one.
ps7_slcr_DDR_URGENT_reserved:
  addr: 0xf8000600
  mask: 0xffffff00
  name: reserved
  description: |
    Reserved
ps7_slcr_DDR_URGENT_S3_ARURGENT:
  addr: 0xf8000600
  mask: 0x80
  name: S3_ARURGENT
  description: |
    Set Read port 3 prioritization.
ps7_slcr_DDR_URGENT_S2_ARURGENT:
  addr: 0xf8000600
  mask: 0x40
  name: S2_ARURGENT
  description: |
    Set Read port 3 prioritization.
ps7_slcr_DDR_URGENT_S1_ARURGENT:
  addr: 0xf8000600
  mask: 0x20
  name: S1_ARURGENT
  description: |
    Set Read port 2 prioritization.
ps7_slcr_DDR_URGENT_S0_ARURGENT:
  addr: 0xf8000600
  mask: 0x10
  name: S0_ARURGENT
  description: |
    Set Read port 0 prioritization.
ps7_slcr_DDR_URGENT_S3_AWURGENT:
  addr: 0xf8000600
  mask: 0x8
  name: S3_AWURGENT
  description: |
    Set Write port 3 prioritization.
ps7_slcr_DDR_URGENT_S2_AWURGENT:
  addr: 0xf8000600
  mask: 0x4
  name: S2_AWURGENT
  description: |
    Set Write port 2 prioritization.
ps7_slcr_DDR_URGENT_S1_AWURGENT:
  addr: 0xf8000600
  mask: 0x2
  name: S1_AWURGENT
  description: |
    Set Write port 1 prioritization.
ps7_slcr_DDR_URGENT_S0_AWURGENT:
  addr: 0xf8000600
  mask: 0x1
  name: S0_AWURGENT
  description: |
    Set Write port 0 prioritization.
ps7_slcr_DDR_CAL_START_reserved:
  addr: 0xf800060c
  mask: 0xfffffffc
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_DDR_CAL_START_START_CAL_DLL:
  addr: 0xf800060c
  mask: 0x2
  name: START_CAL_DLL
  description: |
    This register creates a pulse that is first synchronised into the ddr_clk domain and then directly drives the co_gs_dll_calib input into the DDR controller. This signal is a command that indicates to the controller to issue a dll_calib to the DRAM. This signal should pulse for 1 ddrc_core_clk clock cycle to request a dll_calib to be issued. This is only required if the DDR controller register reg_ddrc_dis_dll_calib is 1. If reg_ddrc_dis_dll_calib is 0, the controller will automatically issue DLL Calibs.
    0: Do nothing.
    1: Start DLL calibration command.
    A read of this register returns zero.
ps7_slcr_DDR_CAL_START_START_CAL_SHORT:
  addr: 0xf800060c
  mask: 0x1
  name: START_CAL_SHORT
  description: |
    This register creates a pulse that is first synchronized into the ddr_clk domain and then directly drives the co_gs_zq_calib_short input into the DDR controller. This is required to pulse for 1 clock to issue ZQ Calibration Short Command to the DDR. There should be a minimum of 512 clks gap between 2 ZQ Calib Short commands from the core. If DDR controller register reg_ddrc_dis_auto_zq=0, asserting co_gs_zq_calib_short is not required, as this will be done automatically. If reg_ddrc_dis_auto_zq=1, then the core logic is required to assert co_gs_zq_calib_short periodically to update DDR3 ZQ calibration.
    0: Do nothing.
    1: Start ZQ calibration short command.
    A read of this register returns zero.
ps7_slcr_DDR_REF_START_reserved:
  addr: 0xf8000614
  mask: 0xfffffffe
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_DDR_REF_START_START_REF:
  addr: 0xf8000614
  mask: 0x1
  name: START_REF
  description: |
    This register creates a pulse that is first synchronized into the ddr_clk domain and then directly drives the co_gs_rank_refresh input into the DDR controller. This register must be used with the Virage DRAM controller register bit reg_ddrc_dis_auto_refresh.
    This signal is a command that indicates to the controller to issue a refresh to the DRAM. One bit per rank. This signal should pulse for 1 ddrc_core_clk clock cycle to request a refresh to be issued.
    0: Do nothing.
    1: Start refresh.
    A read of this register returns zero.
ps7_slcr_DDR_CMD_STA_reserved:
  addr: 0xf8000618
  mask: 0xfffffffe
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_DDR_CMD_STA_CMD_Q_NEMPTY:
  addr: 0xf8000618
  mask: 0x1
  name: CMD_Q_NEMPTY
  description: |
    DDR controller command store fill status.
    0: indicates DDRC command store is empty.
    1: indicates there are commands pending in DDRC command store.
    This register is a continuous monitor of the ddrc_co_q_not_empty output from the DDR controller, which is first synchronised from ddr_clk into amba1x_clk.
ps7_slcr_DDR_URGENT_SEL_reserved:
  addr: 0xf800061c
  mask: 0xffff0000
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_DDR_URGENT_SEL_S3_ARQOS_MODE:
  addr: 0xf800061c
  mask: 0xc000
  name: S3_ARQOS_MODE
  description: |
    Selects between the AXI port s3_awqos[3], fabric signal or static register to drive the DDRC urgent bit.
    00: DDRC s3_awurgent bit is driven from the 'S3_AWURGENT' field of the DDR_URGENT_VAL register.
    01: DDRC s3_awurgent bit is driven from the s3_awqos bit.
    10: DDRC s3_awurgent bit is driven from the fabric ddr_arb[3] input.
    11: undefined
ps7_slcr_DDR_URGENT_SEL_S2_ARQOS_MODE:
  addr: 0xf800061c
  mask: 0x3000
  name: S2_ARQOS_MODE
  description: |
    Selects between the AXI port s2_arqos[3], fabric signal or static register  to drive the DDRC urgent bit.
    00: DDRC s2_arurgent bit is driven from the 'S2_ARURGENT' field of the DDR_URGENT_VAL register.
    01: DDRC s2_arurgent bit is driven from the s2_arqos bit.
    10: DDRC s2_arurgent bit is driven from the fabric ddr_arb[2] input.
    11: undefined
ps7_slcr_DDR_URGENT_SEL_S1_ARQOS_MODE:
  addr: 0xf800061c
  mask: 0xc00
  name: S1_ARQOS_MODE
  description: |
    Selects between the AXI port s1_arqos[3], fabric signal or static register  to drive the DDRC urgent bit.
    00: DDRC s1_arurgent bit is driven from the 'S1_ARURGENT' field of the DDR_URGENT_VAL register.
    01: DDRC s1_arurgent bit is driven from the s1_arqos bit.
    10: DDRC s1_arurgent bit is driven from the fabric ddr_arb[1] input.
    11: undefined.
ps7_slcr_DDR_URGENT_SEL_S0_ARQOS_MODE:
  addr: 0xf800061c
  mask: 0x300
  name: S0_ARQOS_MODE
  description: |
    Selects between the fabric signal or static register  to drive the DDRC urgent bit.
    00: DDRC s0_arurgent bit is driven from the 'S0_ARURGENT' field of the DDR_URGENT_VAL register.
    x1: undefined
    10: DDRC s0_arurgent bit is driven from the fabric ddr_arb[0] input.
    11: undefined
ps7_slcr_DDR_URGENT_SEL_S3_AWQOS_MODE:
  addr: 0xf800061c
  mask: 0xc0
  name: S3_AWQOS_MODE
  description: |
    Selects between the AXI port s3_awqos[3], fabric signal or static register to drive the DDRC urgent bit.
    00: DDRC s3_awurgent bit is driven from the 'S3_AWURGENT' field of the DDR_URGENT_VAL register.
    01: DDRC s3_awurgent bit is driven from the s3_awqos bit.
    10: DDRC s3_awurgent bit is driven from the fabric ddr_arb[3] input.
    11: undefined
ps7_slcr_DDR_URGENT_SEL_S2_AWQOS_MODE:
  addr: 0xf800061c
  mask: 0x30
  name: S2_AWQOS_MODE
  description: |
    Selects between the AXI port s2_awqos[3], fabric signal or static register to drive the DDRC urgent bit.
    00: DDRC s2_awurgent bit is driven from the 'S2_AWURGENT' field of the DDR_URGENT_VAL register.
    01: DDRC s2_awurgent bit is driven from the s2_awqos bit.
    10: DDRC s2_awurgent bit is driven from the fabric ddr_arb[2] input.
    11: undefined
ps7_slcr_DDR_URGENT_SEL_S1_AWQOS_MODE:
  addr: 0xf800061c
  mask: 0xc
  name: S1_AWQOS_MODE
  description: |
    Selects between the AXI port s1_awqos[3], fabric signal or static register  to drive the DDRC urgent bit.
    00: DDRC s1_awurgent bit is driven from the 'S1_AWURGENT' field of the DDR_URGENT_VAL register.
    01: DDRC s1_awurgent bit is driven from the s1_awqos bit.
    10: DDRC s1_awurgent bit is driven from the fabric ddr_arb[1] input.
    11: undefined
ps7_slcr_DDR_URGENT_SEL_S0_AWQOS_MODE:
  addr: 0xf800061c
  mask: 0x3
  name: S0_AWQOS_MODE
  description: |
    Selects between the fabric signal or static register to drive the DDRC urgent bit.
    00: The DDRC s0_awurgent bit is driven from the 'S0_AWURGENT' field of the DDR_URGENT_VAL register.
    x1: undefined
    10: The DDRC s0_awurgent bit is driven from the fabric ddr_arb[0] input.
    11: undefined
ps7_slcr_DDR_DFI_STATUS_reserved:
  addr: 0xf8000620
  mask: 0xfffffffe
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_DDR_DFI_STATUS_DFI_CAL_ST:
  addr: 0xf8000620
  mask: 0x1
  name: DFI_CAL_ST
  description: |
    This signal is intended to allow a calibration of the IOB's at a time when the DDR controller is in its calibration mode, i.e. during an idle period.
ps7_slcr_MIO_PIN_00_reserved:
  addr: 0xf8000700
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_00_DisableRcvr:
  addr: 0xf8000700
  mask: 0x2000
  name: DisableRcvr
  description: |
    Disable HSTL Input Buffer to save power when it is an output-only (IO_Type must be HSTL).
    0: enable
    1: disable
ps7_slcr_MIO_PIN_00_PULLUP:
  addr: 0xf8000700
  mask: 0x1000
  name: PULLUP
  description: |
    Enables Pullup on IO Buffer pin
    0: disable
    1: enable
ps7_slcr_MIO_PIN_00_IO_Type:
  addr: 0xf8000700
  mask: 0xe00
  name: IO_Type
  description: |
    Select the IO Buffer Type.
    000: Reserved
    001: LVCMOS18
    010: LVCMOS25
    011, 101, 110, 111: LVCMOS33
    100: HSTL
ps7_slcr_MIO_PIN_00_Speed:
  addr: 0xf8000700
  mask: 0x100
  name: Speed
  description: |
    Select IO Buffer Edge Rate, applicable when IO_Type is LVCMOS18, LVCMOS25 or LVCMOS33.
    0: Slow CMOS edge
    1: Fast CMOS edge
ps7_slcr_MIO_PIN_00_L3_SEL:
  addr: 0xf8000700
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 0 (bank 0), Input/Output
    others: reserved
ps7_slcr_MIO_PIN_00_L2_SEL:
  addr: 0xf8000700
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: SRAM/NOR Chip Select 0, Output
    10: NAND Flash Chip Select, Output
    11: SDIO 0 Power Control, Output
ps7_slcr_MIO_PIN_00_L1_SEL:
  addr: 0xf8000700
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: reserved
ps7_slcr_MIO_PIN_00_L0_SEL:
  addr: 0xf8000700
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: Quad SPI 1 chip select, Output
ps7_slcr_MIO_PIN_00_TRI_ENABLE:
  addr: 0xf8000700
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Tri-state enable, active high.
    0: disable
    1: enable
ps7_slcr_MIO_PIN_01_reserved:
  addr: 0xf8000704
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_01_DisableRcvr:
  addr: 0xf8000704
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_01_PULLUP:
  addr: 0xf8000704
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_01_IO_Type:
  addr: 0xf8000704
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_01_Speed:
  addr: 0xf8000704
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_01_L3_SEL:
  addr: 0xf8000704
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 1 (bank 0), Input/Output
    others: reserved
ps7_slcr_MIO_PIN_01_L2_SEL:
  addr: 0xf8000704
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: SRAM Address Bit 25, Output
    10: SRAM/NOR Chip Select 1, Output
    11: SDIO 1 Power Control, Output
ps7_slcr_MIO_PIN_01_L1_SEL:
  addr: 0xf8000704
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: reserved
ps7_slcr_MIO_PIN_01_L0_SEL:
  addr: 0xf8000704
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: Quad SPI 0 Chip Select, Output
ps7_slcr_MIO_PIN_01_TRI_ENABLE:
  addr: 0xf8000704
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_02_reserved:
  addr: 0xf8000708
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_02_DisableRcvr:
  addr: 0xf8000708
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_02_PULLUP:
  addr: 0xf8000708
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_02_IO_Type:
  addr: 0xf8000708
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_02_Speed:
  addr: 0xf8000708
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_02_L3_SEL:
  addr: 0xf8000708
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 2 (bank 0), Input/Output
    others: reserved
ps7_slcr_MIO_PIN_02_L2_SEL:
  addr: 0xf8000708
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: reserved
    10: NAND Flash ALEn, Output
    11: SDIO 0 Power Control, Output
ps7_slcr_MIO_PIN_02_L1_SEL:
  addr: 0xf8000708
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: Trace Port Data Bit 8, Output
ps7_slcr_MIO_PIN_02_L0_SEL:
  addr: 0xf8000708
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: Quad SPI 0 IO Bit 0, Input/Output
ps7_slcr_MIO_PIN_02_TRI_ENABLE:
  addr: 0xf8000708
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_03_reserved:
  addr: 0xf800070c
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_03_DisableRcvr:
  addr: 0xf800070c
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_03_PULLUP:
  addr: 0xf800070c
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_03_IO_Type:
  addr: 0xf800070c
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_03_Speed:
  addr: 0xf800070c
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_03_L3_SEL:
  addr: 0xf800070c
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 3 (bank 0), Input/Output
    others: reserved
ps7_slcr_MIO_PIN_03_L2_SEL:
  addr: 0xf800070c
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: SRAM/NOR Data bit 0, Input/Output
    10: NAND WE_B, Output
    11: SDIO 1 Card Power, Output
ps7_slcr_MIO_PIN_03_L1_SEL:
  addr: 0xf800070c
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: Trace Port Data Bit 9, Output
ps7_slcr_MIO_PIN_03_L0_SEL:
  addr: 0xf800070c
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: Quad SPI 0 IO Bit 1, Input/Output
ps7_slcr_MIO_PIN_03_TRI_ENABLE:
  addr: 0xf800070c
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_04_reserved:
  addr: 0xf8000710
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_04_DisableRcvr:
  addr: 0xf8000710
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_04_PULLUP:
  addr: 0xf8000710
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_04_IO_Type:
  addr: 0xf8000710
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_04_Speed:
  addr: 0xf8000710
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_04_L3_SEL:
  addr: 0xf8000710
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 4 (bank 0), Input/Output
    others: reserved
ps7_slcr_MIO_PIN_04_L2_SEL:
  addr: 0xf8000710
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: SRAM/NOR Data Bit 1, Input/Output
    10: NAND Flash IO Bit 2, Input/Output
    11: SDIO 0 Power Control, Output
ps7_slcr_MIO_PIN_04_L1_SEL:
  addr: 0xf8000710
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: Trace Port Data Bit 10, Output
ps7_slcr_MIO_PIN_04_L0_SEL:
  addr: 0xf8000710
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: Quad SPI 0 IO Bit 2, Input/Output
ps7_slcr_MIO_PIN_04_TRI_ENABLE:
  addr: 0xf8000710
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_05_reserved:
  addr: 0xf8000714
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_05_DisableRcvr:
  addr: 0xf8000714
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_05_PULLUP:
  addr: 0xf8000714
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_05_IO_Type:
  addr: 0xf8000714
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_05_Speed:
  addr: 0xf8000714
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_05_L3_SEL:
  addr: 0xf8000714
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 5 (bank 0), Input/Output
    others: reserved
ps7_slcr_MIO_PIN_05_L2_SEL:
  addr: 0xf8000714
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: SRAM/NOR Data Bit 2, Input/Output
    10: NAND Flash IO Bit 0, Input/Output
    11: SDIO 1
    Power Control, Output
ps7_slcr_MIO_PIN_05_L1_SEL:
  addr: 0xf8000714
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: Trace Port Data Bit 11, Output
ps7_slcr_MIO_PIN_05_L0_SEL:
  addr: 0xf8000714
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: Quad SPI 0 IO Bit 3, Input/Output
ps7_slcr_MIO_PIN_05_TRI_ENABLE:
  addr: 0xf8000714
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_06_reserved:
  addr: 0xf8000718
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_06_DisableRcvr:
  addr: 0xf8000718
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_06_PULLUP:
  addr: 0xf8000718
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_06_IO_Type:
  addr: 0xf8000718
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_06_Speed:
  addr: 0xf8000718
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_06_L3_SEL:
  addr: 0xf8000718
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 6 (bank 0), Input/Output
    others: reserved
ps7_slcr_MIO_PIN_06_L2_SEL:
  addr: 0xf8000718
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: SRAM/NOR Data Bit 3, Input/Output
    10: NAND Flash IO Bit 1, Input/Output
    11: SDIO 0 Power Control, Output
ps7_slcr_MIO_PIN_06_L1_SEL:
  addr: 0xf8000718
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: Trace Port Data Bit 12, Output
ps7_slcr_MIO_PIN_06_L0_SEL:
  addr: 0xf8000718
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: Quad SPI 0 Clock, Output
ps7_slcr_MIO_PIN_06_TRI_ENABLE:
  addr: 0xf8000718
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_07_reserved:
  addr: 0xf800071c
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_07_DisableRcvr:
  addr: 0xf800071c
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_07_PULLUP:
  addr: 0xf800071c
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_07_IO_Type:
  addr: 0xf800071c
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_07_Speed:
  addr: 0xf800071c
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_07_L3_SEL:
  addr: 0xf800071c
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 7 (bank 0), Output-only
    others: reserved
ps7_slcr_MIO_PIN_07_L2_SEL:
  addr: 0xf800071c
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: SRAM/NOR OE_B, Output
    10: NAND Flash CLE_B, Output
    11: SDIO 1 Power Control, Output
ps7_slcr_MIO_PIN_07_L1_SEL:
  addr: 0xf800071c
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: Trace Port Data Bit 13, Output
ps7_slcr_MIO_PIN_07_L0_SEL:
  addr: 0xf800071c
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: reserved
ps7_slcr_MIO_PIN_07_TRI_ENABLE:
  addr: 0xf800071c
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_08_reserved:
  addr: 0xf8000720
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_08_DisableRcvr:
  addr: 0xf8000720
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_08_PULLUP:
  addr: 0xf8000720
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_08_IO_Type:
  addr: 0xf8000720
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_08_Speed:
  addr: 0xf8000720
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_08_L3_SEL:
  addr: 0xf8000720
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 8 (bank 0), Output-only
    001: CAN 1 Tx, Output
    010: SRAM/NOR BLS_B, Output
    011 to 110: reserved
    111: UART 1 TxD, Output
ps7_slcr_MIO_PIN_08_L2_SEL:
  addr: 0xf8000720
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: reserved
    10: NAND Flash RD_B, Output
    11: SDIO 0 Power Control, Output
ps7_slcr_MIO_PIN_08_L1_SEL:
  addr: 0xf8000720
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: Trace Port Data Bit 14, Output
ps7_slcr_MIO_PIN_08_L0_SEL:
  addr: 0xf8000720
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: Quad SPI Feedback Clock, Output
ps7_slcr_MIO_PIN_08_TRI_ENABLE:
  addr: 0xf8000720
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_09_reserved:
  addr: 0xf8000724
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_09_DisableRcvr:
  addr: 0xf8000724
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_09_PULLUP:
  addr: 0xf8000724
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_09_IO_Type:
  addr: 0xf8000724
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_09_Speed:
  addr: 0xf8000724
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_09_L3_SEL:
  addr: 0xf8000724
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 9 (bank 0), Input/Output
    001: CAN 1 Rx, Input
    010 to 110: reserved
    111: UART 1 RxD, Input
ps7_slcr_MIO_PIN_09_L2_SEL:
  addr: 0xf8000724
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: SRAM/NOR Data Bit 6, Input/Output
    10: NAND Flash IO Bit 4, Input/Output
    11: SDIO 1
    Power Control, Output
ps7_slcr_MIO_PIN_09_L1_SEL:
  addr: 0xf8000724
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: Trace Port Data Bit 15, Output
ps7_slcr_MIO_PIN_09_L0_SEL:
  addr: 0xf8000724
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: Quad SPI 1 Flash Memory Clock, Output
ps7_slcr_MIO_PIN_09_TRI_ENABLE:
  addr: 0xf8000724
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_10_reserved:
  addr: 0xf8000728
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_10_DisableRcvr:
  addr: 0xf8000728
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_10_PULLUP:
  addr: 0xf8000728
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_10_IO_Type:
  addr: 0xf8000728
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_10_Speed:
  addr: 0xf8000728
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_10_L3_SEL:
  addr: 0xf8000728
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 10 (bank 0), Input/Output
    001: CAN 0 Rx, Input
    010: I2C 0 Serial Clock, Input/Ouput
    011: PJTAG TDI, Input
    100: SDIO 1 IO Bit 0, Input/Output
    101: SPI 1 MOSI, Input/Output
    110: reserved
    111: UART 0 RxD, Input
ps7_slcr_MIO_PIN_10_L2_SEL:
  addr: 0xf8000728
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: SRAM/NOR Data Bit 7, Input/Output
    10: NAND Flash IO Bit 5, Input/Output
    11: SDIO 0 Power Control, Output
ps7_slcr_MIO_PIN_10_L1_SEL:
  addr: 0xf8000728
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: Trace Port Data Bit 2, Output
ps7_slcr_MIO_PIN_10_L0_SEL:
  addr: 0xf8000728
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: Quad SPI 1 IO Bit 0, Input/Output
ps7_slcr_MIO_PIN_10_TRI_ENABLE:
  addr: 0xf8000728
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_11_reserved:
  addr: 0xf800072c
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_11_DisableRcvr:
  addr: 0xf800072c
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_11_PULLUP:
  addr: 0xf800072c
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_11_IO_Type:
  addr: 0xf800072c
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_11_Speed:
  addr: 0xf800072c
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_11_L3_SEL:
  addr: 0xf800072c
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 11 (bank 0), Input/Output
    001: CAN 0 Tx, Output
    010: I2C 0 Serial Data, Input/Output
    011: PJTAG TDO, Output
    100: SDIO 1 Command, Input/Output
    101: SPI 1 MISO, Input/Output
    110: reserved
    111: UART 0 TxD, Output
ps7_slcr_MIO_PIN_11_L2_SEL:
  addr: 0xf800072c
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: SRAM/NOR Data Bit 4, Input/Output
    10: NAND Flash IO Bit 6, Input/Output
    11: SDIO 1
    Power Control, Output
ps7_slcr_MIO_PIN_11_L1_SEL:
  addr: 0xf800072c
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: Trace Port Data Bit 3, Output
ps7_slcr_MIO_PIN_11_L0_SEL:
  addr: 0xf800072c
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: Quad SPI 1 IO Bit 1, Input/Output
ps7_slcr_MIO_PIN_11_TRI_ENABLE:
  addr: 0xf800072c
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_12_reserved:
  addr: 0xf8000730
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_12_DisableRcvr:
  addr: 0xf8000730
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_12_PULLUP:
  addr: 0xf8000730
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_12_IO_Type:
  addr: 0xf8000730
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_12_Speed:
  addr: 0xf8000730
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_12_L3_SEL:
  addr: 0xf8000730
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 12 (bank 0), Input/Output
    001: CAN 1 Tx, Output
    010: I2C 1 Serial Clock, Input/Output
    011: PJTAG TCK, Input
    100: SDIO 1 Clock, Input/Output
    101: SPI 1 Serial Clock, Input/Output
    110: reserved
    111: UART 1 TxD, Output
ps7_slcr_MIO_PIN_12_L2_SEL:
  addr: 0xf8000730
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: SRAM/NOR Wait, Input
    10: NAND Flash IO Bit 7, Input/Output
    11: SDIO 0 Power Control, Output
ps7_slcr_MIO_PIN_12_L1_SEL:
  addr: 0xf8000730
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: Trace Port Clock, Output
ps7_slcr_MIO_PIN_12_L0_SEL:
  addr: 0xf8000730
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: Quad SPI 1 IO Bit 2, Input/Output
ps7_slcr_MIO_PIN_12_TRI_ENABLE:
  addr: 0xf8000730
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_13_reserved:
  addr: 0xf8000734
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_13_DisableRcvr:
  addr: 0xf8000734
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_13_PULLUP:
  addr: 0xf8000734
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_13_IO_Type:
  addr: 0xf8000734
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_13_Speed:
  addr: 0xf8000734
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_13_L3_SEL:
  addr: 0xf8000734
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 13 (bank 0), Input/Output
    001: CAN 1 Rx, Input
    010: I2C 1 Serial Data, Input/Output
    011: PJTAG TMS, Input
    100: SDIO 1 IO Bit 1, Input/Output
    101: SPI 1 Slave Select 0, Input/Output
    110: reserved
    111: UART 1 RxD, Input
ps7_slcr_MIO_PIN_13_L2_SEL:
  addr: 0xf8000734
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: SRAM/NOR Data Bit 5, Input/Output
    10: NAND Flash IO Bit 3, Input/Output
    11:
    SDIO 1 Power Control, Output
ps7_slcr_MIO_PIN_13_L1_SEL:
  addr: 0xf8000734
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: Trace Port Control Signal, Output
ps7_slcr_MIO_PIN_13_L0_SEL:
  addr: 0xf8000734
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: Quad SPI 1 IO Bit 3, Input/Output
ps7_slcr_MIO_PIN_13_TRI_ENABLE:
  addr: 0xf8000734
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_14_reserved:
  addr: 0xf8000738
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_14_DisableRcvr:
  addr: 0xf8000738
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_14_PULLUP:
  addr: 0xf8000738
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_14_IO_Type:
  addr: 0xf8000738
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_14_Speed:
  addr: 0xf8000738
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_14_L3_SEL:
  addr: 0xf8000738
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 14 (bank 0), Input/Output
    001: CAN 0 Rx, Input
    010: I2C 0 Serial Clock, Input/Ouput
    011: SWDT Clock, Input
    100: SDIO 1 IO Bit 2, Input/Output
    101: SPI 1 slave select 1, Output
    110: reserved
    111: UART 0 RxD, Input
ps7_slcr_MIO_PIN_14_L2_SEL:
  addr: 0xf8000738
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: reserved
    10: NAND Flash Busy, Input
    11: SDIO 0 Power Control, Output
ps7_slcr_MIO_PIN_14_L1_SEL:
  addr: 0xf8000738
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: Trace Port Data Bit 0, Output
ps7_slcr_MIO_PIN_14_L0_SEL:
  addr: 0xf8000738
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1= Not Used
ps7_slcr_MIO_PIN_14_TRI_ENABLE:
  addr: 0xf8000738
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_15_reserved:
  addr: 0xf800073c
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_15_DisableRcvr:
  addr: 0xf800073c
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_15_PULLUP:
  addr: 0xf800073c
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_15_IO_Type:
  addr: 0xf800073c
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_15_Speed:
  addr: 0xf800073c
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_15_L3_SEL:
  addr: 0xf800073c
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 15 (bank 0), Input/Output
    001: CAN 0 Tx, Output
    010: I2C 0 Serial Data, Input/Output
    011: SWDT Reset, Output
    100: SDIO 1 IO Bit 3, Input/Output
    101: SPI 1 Slave Select 2, Output
    110: reserved
    111: UART 0 TxD, Output
ps7_slcr_MIO_PIN_15_L2_SEL:
  addr: 0xf800073c
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: SRAM/NOR Address Bit 0, Output
    10: reserved
    11: SDIO 1 Power Control, Output
ps7_slcr_MIO_PIN_15_L1_SEL:
  addr: 0xf800073c
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: Trace Port Data Bit 1, Output
ps7_slcr_MIO_PIN_15_L0_SEL:
  addr: 0xf800073c
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1= Not Used
ps7_slcr_MIO_PIN_15_TRI_ENABLE:
  addr: 0xf800073c
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_16_reserved:
  addr: 0xf8000740
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_16_DisableRcvr:
  addr: 0xf8000740
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_16_PULLUP:
  addr: 0xf8000740
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_16_IO_Type:
  addr: 0xf8000740
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_16_Speed:
  addr: 0xf8000740
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_16_L3_SEL:
  addr: 0xf8000740
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 16 (bank 0), Input/Output
    001: CAN 1 Tx, Output
    010: I2C 1 Serial Clock, Input/Output
    011: reserved
    100: SDIO 0 Clock, Input/Output
    101: SPI 0 Serial Clock, Input/Output
    110: TTC 1 Wave, Output
    111: UART 1 TxD, Output
ps7_slcr_MIO_PIN_16_L2_SEL:
  addr: 0xf8000740
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: SRAM/NOR Address Bit 1, Output
    10: NAND Flash IO Bit 8, Input/Output
    11: SDIO 0 Power Control, Output
ps7_slcr_MIO_PIN_16_L1_SEL:
  addr: 0xf8000740
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: Trace Port Data Bit 4, Output
ps7_slcr_MIO_PIN_16_L0_SEL:
  addr: 0xf8000740
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: Ethernet 0 RGMII Tx Clock, Output
ps7_slcr_MIO_PIN_16_TRI_ENABLE:
  addr: 0xf8000740
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_17_reserved:
  addr: 0xf8000744
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_17_DisableRcvr:
  addr: 0xf8000744
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_17_PULLUP:
  addr: 0xf8000744
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_17_IO_Type:
  addr: 0xf8000744
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_17_Speed:
  addr: 0xf8000744
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_17_L3_SEL:
  addr: 0xf8000744
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 17 (bank 0), Input/Output
    001: CAN 1 Rx, Input
    010: I2C 1 Serial Data, Input/Output
    011: reserved
    100: SDIO 0 Command, Input/Output
    101: SPI 0 MISO, Input/Output
    110 TTC 1 Clock, Input
    111: UART 1 RxD, Input
ps7_slcr_MIO_PIN_17_L2_SEL:
  addr: 0xf8000744
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: SRAM/NOR Address Bit 2, Output
    10: NAND Flash IO Bit 9, Input/Output
    11: SDIO 1 Power Control, Output
ps7_slcr_MIO_PIN_17_L1_SEL:
  addr: 0xf8000744
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: Trace Port Data Bit 5, Output
ps7_slcr_MIO_PIN_17_L0_SEL:
  addr: 0xf8000744
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: Ethernet 0 RGMII TxD Bit 0, Output
ps7_slcr_MIO_PIN_17_TRI_ENABLE:
  addr: 0xf8000744
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_18_reserved:
  addr: 0xf8000748
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_18_DisableRcvr:
  addr: 0xf8000748
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_18_PULLUP:
  addr: 0xf8000748
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_18_IO_Type:
  addr: 0xf8000748
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_18_Speed:
  addr: 0xf8000748
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_18_L3_SEL:
  addr: 0xf8000748
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 18 (bank 0), Input/Output
    001: CAN 0 Rx, Input
    010: I2C 0 Serial Clock, Input/Ouput
    011: reserved
    100: SDIO 0 IO Bit 0, Input/Output
    101: SPI 0 Slave Select 0, Input/Output
    110: TTC 0 Wave, Output
    111: UART 0 RxD, Input
ps7_slcr_MIO_PIN_18_L2_SEL:
  addr: 0xf8000748
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: SRAM/NOR Address Bit 3, Output
    10: NAND Flash IO Bit 10, Input/Output
    11: SDIO 0 Power Control, Output
ps7_slcr_MIO_PIN_18_L1_SEL:
  addr: 0xf8000748
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: Trace Port Data Bit 6, Output
ps7_slcr_MIO_PIN_18_L0_SEL:
  addr: 0xf8000748
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: Ethernet 0 RGMII TxD Bit 1, Output
ps7_slcr_MIO_PIN_18_TRI_ENABLE:
  addr: 0xf8000748
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_19_reserved:
  addr: 0xf800074c
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_19_DisableRcvr:
  addr: 0xf800074c
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_19_PULLUP:
  addr: 0xf800074c
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_19_IO_Type:
  addr: 0xf800074c
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_19_Speed:
  addr: 0xf800074c
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_19_L3_SEL:
  addr: 0xf800074c
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 19 (bank 0), Input/Output
    001: CAN 0 Tx, Output
    010: I2C 0 Serial Data, Input/Output
    011: reserved
    100: SDIO 0 IO Bit 1, Input/Output
    101: SPI 0 Slave Select 1, Output
    110: TTC 0 Clock, Input
    111: UART 0 TxD, Output
ps7_slcr_MIO_PIN_19_L2_SEL:
  addr: 0xf800074c
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: SRAM/NOR Address Bit 4, Output
    10: NAND Flash IO Bit 11, Input/Output
    111: SDIO 1 Power Control, Output
ps7_slcr_MIO_PIN_19_L1_SEL:
  addr: 0xf800074c
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: Trace Port Data Bit 7, Output
ps7_slcr_MIO_PIN_19_L0_SEL:
  addr: 0xf800074c
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: Ethernet 0 RGMII TxD Bit 2, Output
ps7_slcr_MIO_PIN_19_TRI_ENABLE:
  addr: 0xf800074c
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_20_reserved:
  addr: 0xf8000750
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_20_DisableRcvr:
  addr: 0xf8000750
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_20_PULLUP:
  addr: 0xf8000750
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_20_IO_Type:
  addr: 0xf8000750
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_20_Speed:
  addr: 0xf8000750
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_20_L3_SEL:
  addr: 0xf8000750
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 20 (bank 0), Input/Output
    001: CAN 1 Tx, Output
    010: I2C 1 Serial Clock, Input/Output
    011: reserved
    100: SDIO 0 IO Bit 2, Input/Output
    101: SPI 0 Slave Select 2, Output
    110: reserved
    111: UART 1 TxD, Output
ps7_slcr_MIO_PIN_20_L2_SEL:
  addr: 0xf8000750
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: SRAM/NOR Address Bit 5, Output
    10: NAND Flash IO Bit 12, Input/Output
    11: SDIO 0 Power Control, Output
ps7_slcr_MIO_PIN_20_L1_SEL:
  addr: 0xf8000750
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: reserved
ps7_slcr_MIO_PIN_20_L0_SEL:
  addr: 0xf8000750
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: Ethernet 0 RGMII TxD Bit 3, Output
ps7_slcr_MIO_PIN_20_TRI_ENABLE:
  addr: 0xf8000750
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_21_reserved:
  addr: 0xf8000754
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_21_DisableRcvr:
  addr: 0xf8000754
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_21_PULLUP:
  addr: 0xf8000754
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_21_IO_Type:
  addr: 0xf8000754
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_21_Speed:
  addr: 0xf8000754
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_21_L3_SEL:
  addr: 0xf8000754
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 21 (bank 0), Input/Output
    001: CAN 1 Rx, Input
    010: I2C 1 Serial Data, Input/Output
    011: reserved
    100: SDIO 0 IO Bit 3, Input/Output
    101: SPI 0 MOSI, Input/Output
    110: reserved
    111: UART 1 RxD, Input
ps7_slcr_MIO_PIN_21_L2_SEL:
  addr: 0xf8000754
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: SRAM/NOR Address Bit 6, Output
    10: NAND Flash IO Bit 13, Input/Output
    11: SDIO 1 Power Control, Output
ps7_slcr_MIO_PIN_21_L1_SEL:
  addr: 0xf8000754
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: reserved
ps7_slcr_MIO_PIN_21_L0_SEL:
  addr: 0xf8000754
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: Ethernet 0 RGMII Tx Control, Output
ps7_slcr_MIO_PIN_21_TRI_ENABLE:
  addr: 0xf8000754
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_22_reserved:
  addr: 0xf8000758
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_22_DisableRcvr:
  addr: 0xf8000758
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_22_PULLUP:
  addr: 0xf8000758
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_22_IO_Type:
  addr: 0xf8000758
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_22_Speed:
  addr: 0xf8000758
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_22_L3_SEL:
  addr: 0xf8000758
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 22 (bank 0), Input/Output
    001: CAN 0 Rx, Input
    010: I2C 0 Serial Clock, Input/Ouput
    011: PJTAG TDI, Input
    100: SDIO 1 IO Bit 0, Input/Output
    101: SPI 1 MOSI, Input/Output
    110: reserved
    111: UART 0 RxD, Input
ps7_slcr_MIO_PIN_22_L2_SEL:
  addr: 0xf8000758
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: SRAM/NOR Address Bit 7, Output
    10: NAND Flash IO Bit 14, Input/Output
    11: SDIO 0 Power Control, Output
ps7_slcr_MIO_PIN_22_L1_SEL:
  addr: 0xf8000758
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: Trace Port Data Bit 2, Output
ps7_slcr_MIO_PIN_22_L0_SEL:
  addr: 0xf8000758
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: Ethernet 0 RGMII Rx Clock, Input
ps7_slcr_MIO_PIN_22_TRI_ENABLE:
  addr: 0xf8000758
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_23_reserved:
  addr: 0xf800075c
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_23_DisableRcvr:
  addr: 0xf800075c
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_23_PULLUP:
  addr: 0xf800075c
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_23_IO_Type:
  addr: 0xf800075c
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_23_Speed:
  addr: 0xf800075c
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_23_L3_SEL:
  addr: 0xf800075c
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 23 (bank 0), Input/Output
    001: CAN 0 Tx, Output
    010: I2C 0 Serial Data, Input/Output
    011: PJTAG TDO, Output
    100: SDIO 1 Command, Input/Output
    101: SPI 1 MISO, Input/Output
    110: reserved
    111: UART 0 TxD, Output
ps7_slcr_MIO_PIN_23_L2_SEL:
  addr: 0xf800075c
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: SRAM/NOR Address Bit 8, Output
    10: NAND Flash IO Bit 15, Input/Output
    11: SDIO 1 Power Control, Output
ps7_slcr_MIO_PIN_23_L1_SEL:
  addr: 0xf800075c
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: Trace Port Data Bit 3, Output
ps7_slcr_MIO_PIN_23_L0_SEL:
  addr: 0xf800075c
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: Ethernet 0 RGMII RxD 0, Input
ps7_slcr_MIO_PIN_23_TRI_ENABLE:
  addr: 0xf800075c
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_24_reserved:
  addr: 0xf8000760
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_24_DisableRcvr:
  addr: 0xf8000760
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_24_PULLUP:
  addr: 0xf8000760
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_24_IO_Type:
  addr: 0xf8000760
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_24_Speed:
  addr: 0xf8000760
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_24_L3_SEL:
  addr: 0xf8000760
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 24 (bank 0), Input/Output
    001: CAN 1 Tx, Output
    010: I2C 1 Serial Clock, Input/Output
    011: PJTAG TCK, Input
    100: SDIO 1 Clock, Input/Output
    101: SPI 1 Serial Clock, Input/Output
    110: reserved
    111: UART 1 TxD, Output
ps7_slcr_MIO_PIN_24_L2_SEL:
  addr: 0xf8000760
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: SRAM/NOR Address Bit 9, Output
    10: reserved
    11: SDIO 0 Power Control, Output
ps7_slcr_MIO_PIN_24_L1_SEL:
  addr: 0xf8000760
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: Trace Port Clock output, Output
ps7_slcr_MIO_PIN_24_L0_SEL:
  addr: 0xf8000760
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: Ethernet 0 RGMII RxD Bit 1, Input
ps7_slcr_MIO_PIN_24_TRI_ENABLE:
  addr: 0xf8000760
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_25_reserved:
  addr: 0xf8000764
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_25_DisableRcvr:
  addr: 0xf8000764
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_25_PULLUP:
  addr: 0xf8000764
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_25_IO_Type:
  addr: 0xf8000764
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_25_Speed:
  addr: 0xf8000764
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_25_L3_SEL:
  addr: 0xf8000764
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 25 (bank 0), Input/Output
    001: CAN 1 Rx, Input
    010: I2C 1 Serial Data, Input/Output
    011: PJTAG TMS, Input
    100: SDIO 1 IO Bit 1, Input/Output
    101: SPI 1 Slave Select 0, Input/Output
    110: reserved
    111: UART 1 RxD, Input
ps7_slcr_MIO_PIN_25_L2_SEL:
  addr: 0xf8000764
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: SRAM/NOR Address Bit 10, Output
    10: reserved
    11: SDIO 1 Power Control, Output
ps7_slcr_MIO_PIN_25_L1_SEL:
  addr: 0xf8000764
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: Trace Port Control Signal, Output
ps7_slcr_MIO_PIN_25_L0_SEL:
  addr: 0xf8000764
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: Ethernet 0 RGMII RxD Bit2, Input
ps7_slcr_MIO_PIN_25_TRI_ENABLE:
  addr: 0xf8000764
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_26_reserved:
  addr: 0xf8000768
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_26_DisableRcvr:
  addr: 0xf8000768
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_26_PULLUP:
  addr: 0xf8000768
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_26_IO_Type:
  addr: 0xf8000768
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_26_Speed:
  addr: 0xf8000768
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_26_L3_SEL:
  addr: 0xf8000768
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 26 (bank 0), Input/Output
    001: CAN 0 Rx, Input
    010: I2C 0 Serial Clock, Input/Ouput
    011: SWDT Clock, Input
    100: SDIO 1 IO Bit 2, Input/Output
    101: SPI 1 Slave Select 1, Output
    110: reserved
    111: UART 0 RxD, Input
ps7_slcr_MIO_PIN_26_L2_SEL:
  addr: 0xf8000768
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: SRAM/NOR Address Bit 11, Output
    10: reserved
    11: SDIO 0 Power Control, Output
ps7_slcr_MIO_PIN_26_L1_SEL:
  addr: 0xf8000768
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: Trace Port Data Bit 0, Output
ps7_slcr_MIO_PIN_26_L0_SEL:
  addr: 0xf8000768
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: Ethernet 0 RGMII RxD Bit 3, Input
ps7_slcr_MIO_PIN_26_TRI_ENABLE:
  addr: 0xf8000768
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_27_reserved:
  addr: 0xf800076c
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_27_DisableRcvr:
  addr: 0xf800076c
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_27_PULLUP:
  addr: 0xf800076c
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_27_IO_Type:
  addr: 0xf800076c
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_27_Speed:
  addr: 0xf800076c
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_27_L3_SEL:
  addr: 0xf800076c
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 27 (bank 0), Input/Output
    001: CAN 0 Tx, Output
    010: I2C 0 Serial Data, Input/Output
    011: SWDT Reset, Output
    100: SDIO 1 IO Bit 3, Input/Output
    101: SPI 1 Slave Select 2, Output
    110: reserved
    111: UART 0 TxD, Output
ps7_slcr_MIO_PIN_27_L2_SEL:
  addr: 0xf800076c
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: SRAM/NOR Address Bit 12, Output
    10: reserved
    11: SDIO 1 Power Control, Output
ps7_slcr_MIO_PIN_27_L1_SEL:
  addr: 0xf800076c
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: Trace Port Data Bit 1, Output
ps7_slcr_MIO_PIN_27_L0_SEL:
  addr: 0xf800076c
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: Ethernet 0 RGMII Rx Control, Input
ps7_slcr_MIO_PIN_27_TRI_ENABLE:
  addr: 0xf800076c
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_28_reserved:
  addr: 0xf8000770
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_28_DisableRcvr:
  addr: 0xf8000770
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_28_PULLUP:
  addr: 0xf8000770
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_28_IO_Type:
  addr: 0xf8000770
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_28_Speed:
  addr: 0xf8000770
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_28_L3_SEL:
  addr: 0xf8000770
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 28 (bank 0), Input/Output
    001: CAN 1 Tx, Output
    010: I2C 1 Serial Clock, Input/Output
    011: reserved
    100: SDIO 0 Clock, Input/Output
    101: SPI 0 Serial Clock, Input/Output
    110: TTC 1 Wave, Output
    111: UART 1 TxD, Output
ps7_slcr_MIO_PIN_28_L2_SEL:
  addr: 0xf8000770
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: SRAM/NOR Address Bit 13, Output
    10: reserved
    11: SDIO 0 Power Control, Output
ps7_slcr_MIO_PIN_28_L1_SEL:
  addr: 0xf8000770
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: USB 0 ULPI Data Bit 4, Input/Output
ps7_slcr_MIO_PIN_28_L0_SEL:
  addr: 0xf8000770
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: Ethernet 1 RGMII Tx Clock, Output
ps7_slcr_MIO_PIN_28_TRI_ENABLE:
  addr: 0xf8000770
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_29_reserved:
  addr: 0xf8000774
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_29_DisableRcvr:
  addr: 0xf8000774
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_29_PULLUP:
  addr: 0xf8000774
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_29_IO_Type:
  addr: 0xf8000774
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_29_Speed:
  addr: 0xf8000774
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_29_L3_SEL:
  addr: 0xf8000774
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 29 (bank 0), Input/Output
    001: CAN 1 Rx, Input
    010: I2C 1 Serial Data, Input/Output
    011: reserved
    100: SDIO 0 Command, Input/Output
    101: SPI 0 MISO, Input/Output
    110: TTC 1 Clock, Input
    111: UART 1 RxD, Input
ps7_slcr_MIO_PIN_29_L2_SEL:
  addr: 0xf8000774
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: SRAM/NOR Address Bit 14, Output
    10: reserved
    11: SDIO 1 Power Control, Output
ps7_slcr_MIO_PIN_29_L1_SEL:
  addr: 0xf8000774
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: USB 0 ULPI Direction, Input
ps7_slcr_MIO_PIN_29_L0_SEL:
  addr: 0xf8000774
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: Ethernet 1 RGMII TxD Bit 0, Output
ps7_slcr_MIO_PIN_29_TRI_ENABLE:
  addr: 0xf8000774
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_30_reserved:
  addr: 0xf8000778
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_30_DisableRcvr:
  addr: 0xf8000778
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_30_PULLUP:
  addr: 0xf8000778
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_30_IO_Type:
  addr: 0xf8000778
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_30_Speed:
  addr: 0xf8000778
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_30_L3_SEL:
  addr: 0xf8000778
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 30 (bank 0), Input/Output
    001: CAN 0 Rx, Input
    010: I2C 0 Serial Clock, Input/Ouput
    011: reserved
    100: SDIO 0 IO Bit 0, Input/Output
    101: SPI 0 Slave Select 0, Input/Output
    110: TTC 0 Wave, Output
    111: UART 0 RxD, Input
ps7_slcr_MIO_PIN_30_L2_SEL:
  addr: 0xf8000778
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: SRAM/NOR Address Bit 15, Output
    10: reserved
    11: SDIO 0 Power Control, Output
ps7_slcr_MIO_PIN_30_L1_SEL:
  addr: 0xf8000778
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: USB 0 ULPI Stop, Output
ps7_slcr_MIO_PIN_30_L0_SEL:
  addr: 0xf8000778
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: Ethernet 1 RGMII TxD Bit 1, Output
ps7_slcr_MIO_PIN_30_TRI_ENABLE:
  addr: 0xf8000778
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_31_reserved:
  addr: 0xf800077c
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_31_DisableRcvr:
  addr: 0xf800077c
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_31_PULLUP:
  addr: 0xf800077c
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_31_IO_Type:
  addr: 0xf800077c
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_31_Speed:
  addr: 0xf800077c
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_31_L3_SEL:
  addr: 0xf800077c
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 31 (bank 0), Input/Output
    001: CAN 0 Tx, Output
    010: I2C 0 Serial Data, Input/Output
    011: reserved
    100: SDIO 0 IO Bit 1, Input/Output
    101: SPI 0 Slave Select 1, Output
    110: TTC 0 Clock, Input
    111: UART 0 TxD, Output
ps7_slcr_MIO_PIN_31_L2_SEL:
  addr: 0xf800077c
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: SRAM/NOR Address Bit 16, Output
    10: reserved
    11: SDIO 1 Power Control, Output
ps7_slcr_MIO_PIN_31_L1_SEL:
  addr: 0xf800077c
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: USB 0 ULPI Next, Input
ps7_slcr_MIO_PIN_31_L0_SEL:
  addr: 0xf800077c
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: Ethernet 1 RGMII TxD Bit 2, Output
ps7_slcr_MIO_PIN_31_TRI_ENABLE:
  addr: 0xf800077c
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_32_reserved:
  addr: 0xf8000780
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_32_DisableRcvr:
  addr: 0xf8000780
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_32_PULLUP:
  addr: 0xf8000780
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_32_IO_Type:
  addr: 0xf8000780
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_32_Speed:
  addr: 0xf8000780
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_32_L3_SEL:
  addr: 0xf8000780
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 32 (bank 1), Input/Output
    001: CAN 1 Tx, Output
    010: I2C 1 Serial Clock, Input/Output
    011: reserved
    100: SDIO 0 IO Bit 2, Input/Output
    101: SPI 0 Slave Select 2, Output
    110: reserved
    111: UART 1 TxD, Output
ps7_slcr_MIO_PIN_32_L2_SEL:
  addr: 0xf8000780
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: SRAM/NOR Address Bit 17, Output
    10: reserved
    11: SDIO 0 Power Control, Output
ps7_slcr_MIO_PIN_32_L1_SEL:
  addr: 0xf8000780
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: USB 0 ULPI Data Bit 0, Input/Output
ps7_slcr_MIO_PIN_32_L0_SEL:
  addr: 0xf8000780
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: Ethernet 1 RGMII TxD Bit 3, Output
ps7_slcr_MIO_PIN_32_TRI_ENABLE:
  addr: 0xf8000780
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_33_reserved:
  addr: 0xf8000784
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_33_DisableRcvr:
  addr: 0xf8000784
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_33_PULLUP:
  addr: 0xf8000784
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_33_IO_Type:
  addr: 0xf8000784
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_33_Speed:
  addr: 0xf8000784
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_33_L3_SEL:
  addr: 0xf8000784
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 33 (Bank 1), Input/Output
    001: CAN 1 Rx, Input
    010: I2C 1 Serial Data, Input/Output
    011: reserved
    100: SDIO 0 IO Bit 3, Input/Output
    101: SPI 0 MOSI, Input/Output
    110: reserved
    111: UART 1 RxD, Input
ps7_slcr_MIO_PIN_33_L2_SEL:
  addr: 0xf8000784
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: SRAM/NOR Address Bit 18, Output
    10: reserved
    11: SDIO 1 Power Control, Output
ps7_slcr_MIO_PIN_33_L1_SEL:
  addr: 0xf8000784
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: USB 0 ULPI Data Bit 1, Input/Output
ps7_slcr_MIO_PIN_33_L0_SEL:
  addr: 0xf8000784
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: Ethernet 1 RGMII Tx Control, Output
ps7_slcr_MIO_PIN_33_TRI_ENABLE:
  addr: 0xf8000784
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_34_reserved:
  addr: 0xf8000788
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_34_DisableRcvr:
  addr: 0xf8000788
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_34_PULLUP:
  addr: 0xf8000788
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_34_IO_Type:
  addr: 0xf8000788
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_34_Speed:
  addr: 0xf8000788
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_34_L3_SEL:
  addr: 0xf8000788
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 34 (bank 1), Input/Output
    001: CAN 0 Rx, Input
    010: I2C 0 Serial Clock, Input/Ouput
    011: PJTAG TDI, Input
    100: SDIO 1 IO Bit 0, Input/Output
    110: reserved
    111: UART 0 RxD, Input
ps7_slcr_MIO_PIN_34_L2_SEL:
  addr: 0xf8000788
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: SRAM/NOR Address Bit 19, Output
    10: reserved
    11: SDIO 0 Power Control, Output
ps7_slcr_MIO_PIN_34_L1_SEL:
  addr: 0xf8000788
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: USB 0 ULPI Data Bit 2, Input/Output
ps7_slcr_MIO_PIN_34_L0_SEL:
  addr: 0xf8000788
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: Ethernet 1 RGMII Rx Clock, Input
ps7_slcr_MIO_PIN_34_TRI_ENABLE:
  addr: 0xf8000788
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_35_reserved:
  addr: 0xf800078c
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_35_DisableRcvr:
  addr: 0xf800078c
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_35_PULLUP:
  addr: 0xf800078c
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_35_IO_Type:
  addr: 0xf800078c
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_35_Speed:
  addr: 0xf800078c
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_35_L3_SEL:
  addr: 0xf800078c
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 35 (bank 1), Input/Output
    001: CAN 0 Tx, Output
    010: I2C 0 Serial Data, Input/Output
    011: PJTAG TDO, Output
    100: SDIO 1 Command, Input/Output
    101: SPI 1 MISO, Input/Output
    110: reserved
    111: UART 0 TxD, Output
ps7_slcr_MIO_PIN_35_L2_SEL:
  addr: 0xf800078c
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: SRAM/NOR Address Bit 20, Output
    10: reserved
    11: SDIO 1 Power Control, Output
ps7_slcr_MIO_PIN_35_L1_SEL:
  addr: 0xf800078c
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: USB 0 ULPI Data Bit 3, Input/Output
ps7_slcr_MIO_PIN_35_L0_SEL:
  addr: 0xf800078c
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: Ethernet 1 RGMII RxD data Bit 0, Input
ps7_slcr_MIO_PIN_35_TRI_ENABLE:
  addr: 0xf800078c
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_36_reserved:
  addr: 0xf8000790
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_36_DisableRcvr:
  addr: 0xf8000790
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_36_PULLUP:
  addr: 0xf8000790
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_36_IO_Type:
  addr: 0xf8000790
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_36_Speed:
  addr: 0xf8000790
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_36_L3_SEL:
  addr: 0xf8000790
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 36 (bank 1), Input/Output
    001: CAN 1 Tx, Output
    010: I2C 1 Serial Clock, Input/Output
    011: PJTAG TCK, Input
    100: SDIO 1 Clock, Input/Output
    101: SPI 1 Clock, Input/Output
    110: reserved
    111: UART 1 TxD, Output
ps7_slcr_MIO_PIN_36_L2_SEL:
  addr: 0xf8000790
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: SRAM/NOR Address Bit 21, Output
    10: reserved
    11: SDIO
    0 Power Control, Output
ps7_slcr_MIO_PIN_36_L1_SEL:
  addr: 0xf8000790
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: USB 0 ULPI Clock, Input/Output
ps7_slcr_MIO_PIN_36_L0_SEL:
  addr: 0xf8000790
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: Ethernet 1 RGMII Data Bit 1
ps7_slcr_MIO_PIN_36_TRI_ENABLE:
  addr: 0xf8000790
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_37_reserved:
  addr: 0xf8000794
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_37_DisableRcvr:
  addr: 0xf8000794
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_37_PULLUP:
  addr: 0xf8000794
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_37_IO_Type:
  addr: 0xf8000794
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_37_Speed:
  addr: 0xf8000794
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_37_L3_SEL:
  addr: 0xf8000794
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 37 (bank 1), Input/Output
    001: CAN 1 Rx, Input
    010: I2C 1 Serial Data, Input/Output
    011: PJTAG TMS, Input
    100: SDIO 1 IO Bit 1, Input/Output
    101: SPI 1 Slave Select 0, Input/Output
    110: reserved
    111: UART 1 RxD, Input
ps7_slcr_MIO_PIN_37_L2_SEL:
  addr: 0xf8000794
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: SRAM/NOR Address Bit 22, Output
    10: reserved
    11: SDIO 1 Power Control, Output
ps7_slcr_MIO_PIN_37_L1_SEL:
  addr: 0xf8000794
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: USB 0 ULPI Data Bit 5, Input/Output
ps7_slcr_MIO_PIN_37_L0_SEL:
  addr: 0xf8000794
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: Ethernet 1 RGMII RxD Data Bit 2, Input
ps7_slcr_MIO_PIN_37_TRI_ENABLE:
  addr: 0xf8000794
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_38_reserved:
  addr: 0xf8000798
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_38_DisableRcvr:
  addr: 0xf8000798
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_38_PULLUP:
  addr: 0xf8000798
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_38_IO_Type:
  addr: 0xf8000798
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_38_Speed:
  addr: 0xf8000798
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_38_L3_SEL:
  addr: 0xf8000798
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 38 (bank 1), Input/Output
    001: CAN 0 Rx, Input
    010: I2C 0 Serial Clock, Input/Ouput
    011: SWDT Clock, Input
    100: SDIO 1 IO Bit 2, Input/Output
    101: SPI 1 Slave Select 1, Output
    110: reserved
    111: UART 0 RxD, Input
ps7_slcr_MIO_PIN_38_L2_SEL:
  addr: 0xf8000798
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: SRAM/NOR Address Bit 23, Output
    10: reserved
    11: SDIO 0 Power Control, Output
ps7_slcr_MIO_PIN_38_L1_SEL:
  addr: 0xf8000798
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: USB 0 ULPI Data Bit 6, Input/Output
ps7_slcr_MIO_PIN_38_L0_SEL:
  addr: 0xf8000798
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: Ethernet 1 RGMII RxD Data Bit 3, Input
ps7_slcr_MIO_PIN_38_TRI_ENABLE:
  addr: 0xf8000798
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_39_reserved:
  addr: 0xf800079c
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_39_DisableRcvr:
  addr: 0xf800079c
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_39_PULLUP:
  addr: 0xf800079c
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_39_IO_Type:
  addr: 0xf800079c
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_39_Speed:
  addr: 0xf800079c
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_39_L3_SEL:
  addr: 0xf800079c
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 39 (bank 1), Input/Output
    001: CAN 0 Tx, Output
    010: I2C 0 Serial Data, Input/Output
    011: SWDT Reset, Output
    100: SDIO 1 IO Bit 3, Input/Output
    101: SPI 1 Slave Select 2, Output
    110: reserved
    111: UART 0 TxD, Output
ps7_slcr_MIO_PIN_39_L2_SEL:
  addr: 0xf800079c
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: SRAM/NOR Address Bit 24, Output
    10: reserved
    11: SDIO 1 Power Control, Output
ps7_slcr_MIO_PIN_39_L1_SEL:
  addr: 0xf800079c
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: USB 0 ULPI Data Bit 7, Input/Output
ps7_slcr_MIO_PIN_39_L0_SEL:
  addr: 0xf800079c
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: Ethernet 1 RGMII Rx Control, Input
ps7_slcr_MIO_PIN_39_TRI_ENABLE:
  addr: 0xf800079c
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_40_reserved:
  addr: 0xf80007a0
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_40_DisableRcvr:
  addr: 0xf80007a0
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_40_PULLUP:
  addr: 0xf80007a0
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_40_IO_Type:
  addr: 0xf80007a0
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_40_Speed:
  addr: 0xf80007a0
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_40_L3_SEL:
  addr: 0xf80007a0
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 40 (bank 1), Input/Output
    001: CAN 1 Tx, Output
    010: I2C 1 Serial Clock, Input/Output
    011: reserved
    100: SDIO 0 Clock, Input/Output
    101: SPI 0 Serial Clock, Input/Output
    110: TTC 1 Wave, Output
    111: UART 1 TxD, Output
ps7_slcr_MIO_PIN_40_L2_SEL:
  addr: 0xf80007a0
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: reserved
    10: reserved
    11: SDIO 0 Power Control, Output
ps7_slcr_MIO_PIN_40_L1_SEL:
  addr: 0xf80007a0
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: USB 1 ULPI Data Bit 4, Input/Output
ps7_slcr_MIO_PIN_40_L0_SEL:
  addr: 0xf80007a0
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: reserved
ps7_slcr_MIO_PIN_40_TRI_ENABLE:
  addr: 0xf80007a0
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_41_reserved:
  addr: 0xf80007a4
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_41_DisableRcvr:
  addr: 0xf80007a4
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_41_PULLUP:
  addr: 0xf80007a4
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_41_IO_Type:
  addr: 0xf80007a4
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_41_Speed:
  addr: 0xf80007a4
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_41_L3_SEL:
  addr: 0xf80007a4
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 41 (bank 1), Input/Output
    001: CAN 1 Rx, Input
    010: I2C 1 Serial Data, Input/Output
    011: reserved
    100: SDIO 0 Command, Input/Output
    101: SPI 0 MISO, Input/Output
    110: TTC 1 Clock, Input
    111: UART 1 RxD, Input
ps7_slcr_MIO_PIN_41_L2_SEL:
  addr: 0xf80007a4
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: reserved
    10: reserved
    11: SDIO 1 Power Control, Output
ps7_slcr_MIO_PIN_41_L1_SEL:
  addr: 0xf80007a4
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: USB 1 ULPI Direction, Input
ps7_slcr_MIO_PIN_41_L0_SEL:
  addr: 0xf80007a4
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: reserved
ps7_slcr_MIO_PIN_41_TRI_ENABLE:
  addr: 0xf80007a4
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_42_reserved:
  addr: 0xf80007a8
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_42_DisableRcvr:
  addr: 0xf80007a8
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_42_PULLUP:
  addr: 0xf80007a8
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_42_IO_Type:
  addr: 0xf80007a8
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_42_Speed:
  addr: 0xf80007a8
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_42_L3_SEL:
  addr: 0xf80007a8
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 42 (bank 1), Input/Output
    001: CAN 0 Rx, Input
    010: I2C 0 Serial Clock, Input/Ouput
    011: reserved
    100: SDIO 0 IO Bit 0, Input/Output
    101: SPI 0 Slave Select 0, Input/Output
    110: TTC 0 Wave, Output
    111: UART 0 RxD, Input
ps7_slcr_MIO_PIN_42_L2_SEL:
  addr: 0xf80007a8
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: reserved
    10: reserved
    11: SDIO 0 Power Control, Output
ps7_slcr_MIO_PIN_42_L1_SEL:
  addr: 0xf80007a8
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: USB 1 ULPI Stop, Output
ps7_slcr_MIO_PIN_42_L0_SEL:
  addr: 0xf80007a8
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1= Not Used
ps7_slcr_MIO_PIN_42_TRI_ENABLE:
  addr: 0xf80007a8
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_43_reserved:
  addr: 0xf80007ac
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_43_DisableRcvr:
  addr: 0xf80007ac
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_43_PULLUP:
  addr: 0xf80007ac
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_43_IO_Type:
  addr: 0xf80007ac
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_43_Speed:
  addr: 0xf80007ac
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_43_L3_SEL:
  addr: 0xf80007ac
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 43 (bank 1), Input/Output
    001: CAN 0 Tx, Output
    010: I2C 0 Serial Data, Input/Output
    011: reserved
    100: SDIO 0 IO Bit 1, Input/Output
    101: SPI 0 Slave Select 1, Output
    110: TTC 0 Clock, Input
    111: UART 0 TxD, Output
ps7_slcr_MIO_PIN_43_L2_SEL:
  addr: 0xf80007ac
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: reserved
    10: reserved
    11: SDIO 1 Power Control, Output
ps7_slcr_MIO_PIN_43_L1_SEL:
  addr: 0xf80007ac
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: USB 1 ULPI Next, Input
ps7_slcr_MIO_PIN_43_L0_SEL:
  addr: 0xf80007ac
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: reserved
ps7_slcr_MIO_PIN_43_TRI_ENABLE:
  addr: 0xf80007ac
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_44_reserved:
  addr: 0xf80007b0
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_44_DisableRcvr:
  addr: 0xf80007b0
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_44_PULLUP:
  addr: 0xf80007b0
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_44_IO_Type:
  addr: 0xf80007b0
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_44_Speed:
  addr: 0xf80007b0
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_44_L3_SEL:
  addr: 0xf80007b0
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 44 (bank 1), Input/Output
    001: CAN 1 Tx, Output
    010: I2C 1 Serial Clock, Input/Output
    011: reserved
    100: SDIO 0 IO Bit 2, Input/Output
    101: SPI 0 Slave Select 2, Output
    110: reserved
    111: UART 1 TxD, Output
ps7_slcr_MIO_PIN_44_L2_SEL:
  addr: 0xf80007b0
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: reserved
    10: reserved
    11: SDIO 0 Power Control, Output
ps7_slcr_MIO_PIN_44_L1_SEL:
  addr: 0xf80007b0
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: USB 1 ULPI Data Bit 0, Input/Output
ps7_slcr_MIO_PIN_44_L0_SEL:
  addr: 0xf80007b0
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: reserved
ps7_slcr_MIO_PIN_44_TRI_ENABLE:
  addr: 0xf80007b0
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_45_reserved:
  addr: 0xf80007b4
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_45_DisableRcvr:
  addr: 0xf80007b4
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_45_PULLUP:
  addr: 0xf80007b4
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_45_IO_Type:
  addr: 0xf80007b4
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_45_Speed:
  addr: 0xf80007b4
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_45_L3_SEL:
  addr: 0xf80007b4
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 45 (bank 1), Input/Output
    001: CAN 1 Rx, Input
    010: I2C 1 Serial Data, Input/Output
    011: reserved
    100: SDIO 0 IO Bit 3, Input/Output
    101: SPI 0 MOSI, Input/Output
    110: reserved
    111: UART 1 RxD, Input
ps7_slcr_MIO_PIN_45_L2_SEL:
  addr: 0xf80007b4
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: reserved
    10: reserved
    11: SDIO 1 Power Control, Output
ps7_slcr_MIO_PIN_45_L1_SEL:
  addr: 0xf80007b4
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: USB 1 ULPI Data Bit 1, Input/Output
ps7_slcr_MIO_PIN_45_L0_SEL:
  addr: 0xf80007b4
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: reserved
ps7_slcr_MIO_PIN_45_TRI_ENABLE:
  addr: 0xf80007b4
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_46_reserved:
  addr: 0xf80007b8
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_46_DisableRcvr:
  addr: 0xf80007b8
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_46_PULLUP:
  addr: 0xf80007b8
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_46_IO_Type:
  addr: 0xf80007b8
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_46_Speed:
  addr: 0xf80007b8
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_46_L3_SEL:
  addr: 0xf80007b8
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 46 (bank 1), Input/Output
    001: CAN 0 Rx, Input
    010: I2C 0 Serial Clock, Input/Ouput
    011: PJTAG TDI, Input
    100: SDIO 1 IO Bit 0, Input/Output
    101: SPI 1 MOSI, Input/Output
    110: reserved
    111: UART 0 RxD, Input
ps7_slcr_MIO_PIN_46_L2_SEL:
  addr: 0xf80007b8
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: reserved
    10: reserved
    11: SDIO 0 Power Control, Output
ps7_slcr_MIO_PIN_46_L1_SEL:
  addr: 0xf80007b8
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: USB 1 ULPI Data Bit 2, Input/Output
ps7_slcr_MIO_PIN_46_L0_SEL:
  addr: 0xf80007b8
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: reserved
ps7_slcr_MIO_PIN_46_TRI_ENABLE:
  addr: 0xf80007b8
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_47_reserved:
  addr: 0xf80007bc
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_47_DisableRcvr:
  addr: 0xf80007bc
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_47_PULLUP:
  addr: 0xf80007bc
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_47_IO_Type:
  addr: 0xf80007bc
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_47_Speed:
  addr: 0xf80007bc
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_47_L3_SEL:
  addr: 0xf80007bc
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 47 (bank 1), Input/Output
    001: CAN 0 Tx, Output
    010: I2C 0 Serial Data, Input/Output
    011: PJTAG TDO, Output
    100: SDIO 1 Command, Input/Output
    101: SPI 1 MISO, Input/Output
    110: reserved
    111: UART 0 TxD, Output
ps7_slcr_MIO_PIN_47_L2_SEL:
  addr: 0xf80007bc
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: reserved
    10: reserved
    11: SDIO 1 Power Control, Output
ps7_slcr_MIO_PIN_47_L1_SEL:
  addr: 0xf80007bc
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: USB 1 ULPI Data Bit 3, Input/Output
ps7_slcr_MIO_PIN_47_L0_SEL:
  addr: 0xf80007bc
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: reserved
ps7_slcr_MIO_PIN_47_TRI_ENABLE:
  addr: 0xf80007bc
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_48_reserved:
  addr: 0xf80007c0
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_48_DisableRcvr:
  addr: 0xf80007c0
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_48_PULLUP:
  addr: 0xf80007c0
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_48_IO_Type:
  addr: 0xf80007c0
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_48_Speed:
  addr: 0xf80007c0
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_48_L3_SEL:
  addr: 0xf80007c0
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 48 (bank 1), Input/Output
    001: CAN 1 Tx, Output
    010: I2C 1 Serial Clock, Input/Output
    011: PJTAG TCK, Input
    100: SDIO 1 Clock, Input/Output
    101: SPI 1 Serial Clock, Input/Output
    110: reserved
    111: UART 1 TxD, Output
ps7_slcr_MIO_PIN_48_L2_SEL:
  addr: 0xf80007c0
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: reserved
    10: reserved
    11: SDIO 0 Power Control, Output
ps7_slcr_MIO_PIN_48_L1_SEL:
  addr: 0xf80007c0
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: USB 1 ULPI Clock, Input/Output
ps7_slcr_MIO_PIN_48_L0_SEL:
  addr: 0xf80007c0
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: reserved
ps7_slcr_MIO_PIN_48_TRI_ENABLE:
  addr: 0xf80007c0
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_49_reserved:
  addr: 0xf80007c4
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_49_DisableRcvr:
  addr: 0xf80007c4
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_49_PULLUP:
  addr: 0xf80007c4
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_49_IO_Type:
  addr: 0xf80007c4
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_49_Speed:
  addr: 0xf80007c4
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_49_L3_SEL:
  addr: 0xf80007c4
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 49 (bank 1), Input/Output
    001: CAN 1 Rx, Input
    010: I2C 1 Serial Data, Input/Output
    011: PJTAG TMS, Input
    100: SDIO 1 IO Bit 1, Input/Output
    101: SPI 1 Select 0, Input/Output
    110: reserved
    111: UART 1 RxD, Input
ps7_slcr_MIO_PIN_49_L2_SEL:
  addr: 0xf80007c4
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: reserved
    10: reserved
    11: SDIO 1 Power Control, Output
ps7_slcr_MIO_PIN_49_L1_SEL:
  addr: 0xf80007c4
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: USB 1 ULPI Data Bit 5, Input/Output
ps7_slcr_MIO_PIN_49_L0_SEL:
  addr: 0xf80007c4
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: reserved
ps7_slcr_MIO_PIN_49_TRI_ENABLE:
  addr: 0xf80007c4
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_50_reserved:
  addr: 0xf80007c8
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_50_DisableRcvr:
  addr: 0xf80007c8
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_50_PULLUP:
  addr: 0xf80007c8
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_50_IO_Type:
  addr: 0xf80007c8
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_50_Speed:
  addr: 0xf80007c8
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_50_L3_SEL:
  addr: 0xf80007c8
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 50 (bank 1), Input/Output
    001: CAN 0 Rx, Input
    010: I2C 0 Serial Clock, Input/Ouput
    011: SWDT Clock, Input
    100: SDIO 1 IO Bit 2, Input/Output
    101: SPI 1 Slave Select 1, Output
    110: reserved
    111: UART 0 RxD, Input
ps7_slcr_MIO_PIN_50_L2_SEL:
  addr: 0xf80007c8
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: reserved
    10: reserved
    11: SDIO 0 Power Control, Output
ps7_slcr_MIO_PIN_50_L1_SEL:
  addr: 0xf80007c8
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: USB 1 ULPI Data Bit 6, Input/Output
ps7_slcr_MIO_PIN_50_L0_SEL:
  addr: 0xf80007c8
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: reserved
ps7_slcr_MIO_PIN_50_TRI_ENABLE:
  addr: 0xf80007c8
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_51_reserved:
  addr: 0xf80007cc
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_51_DisableRcvr:
  addr: 0xf80007cc
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_51_PULLUP:
  addr: 0xf80007cc
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_51_IO_Type:
  addr: 0xf80007cc
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_51_Speed:
  addr: 0xf80007cc
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_51_L3_SEL:
  addr: 0xf80007cc
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 51 (bank 1), Input/Output
    001: CAN 0 Tx, Output
    010: I2C 0 Serial Data, Input/Output
    011: SWDT Reset, Output
    100: SDIO 1 IO Bit 3, Input/Output
    101: SPI 1 Slave Select 2, Output
    110: reserved
    111: UART 0 TxD, Output
ps7_slcr_MIO_PIN_51_L2_SEL:
  addr: 0xf80007cc
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: reserved
    10: reserved
    11: SDIO 1 Power Control, Output
ps7_slcr_MIO_PIN_51_L1_SEL:
  addr: 0xf80007cc
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: USB 1 ULPI Data Bit 7, Input/Output
ps7_slcr_MIO_PIN_51_L0_SEL:
  addr: 0xf80007cc
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: reserved
ps7_slcr_MIO_PIN_51_TRI_ENABLE:
  addr: 0xf80007cc
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_52_reserved:
  addr: 0xf80007d0
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_52_DisableRcvr:
  addr: 0xf80007d0
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_52_PULLUP:
  addr: 0xf80007d0
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_52_IO_Type:
  addr: 0xf80007d0
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_52_Speed:
  addr: 0xf80007d0
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_52_L3_SEL:
  addr: 0xf80007d0
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 52 (bank 1), Input/Output
    001: CAN 1 Tx, Output
    010: I2C 1 Serial Clock, Input/Output
    011: SWDT Clock, Input
    100: MDIO 0 Clock, Output
    101: MDIO 1 Clock, Output
    110: reserved
    111: UART 1 TxD, Output
ps7_slcr_MIO_PIN_52_L2_SEL:
  addr: 0xf80007d0
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: reserved
    10: reserved
    11: SDIO 0 Power Control, Output
ps7_slcr_MIO_PIN_52_L1_SEL:
  addr: 0xf80007d0
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: reserved
ps7_slcr_MIO_PIN_52_L0_SEL:
  addr: 0xf80007d0
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: reserved
ps7_slcr_MIO_PIN_52_TRI_ENABLE:
  addr: 0xf80007d0
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_PIN_53_reserved:
  addr: 0xf80007d4
  mask: 0xffffc000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_PIN_53_DisableRcvr:
  addr: 0xf80007d4
  mask: 0x2000
  name: DisableRcvr
  description: |
    Operates the same as MIO_PIN_00[DisableRcvr]
ps7_slcr_MIO_PIN_53_PULLUP:
  addr: 0xf80007d4
  mask: 0x1000
  name: PULLUP
  description: |
    Operates the same as MIO_PIN_00[PULLUP]
ps7_slcr_MIO_PIN_53_IO_Type:
  addr: 0xf80007d4
  mask: 0xe00
  name: IO_Type
  description: |
    Operates the same as MIO_PIN_00[IO_Type]
ps7_slcr_MIO_PIN_53_Speed:
  addr: 0xf80007d4
  mask: 0x100
  name: Speed
  description: |
    Operates the same as MIO_PIN_00[Speed]
ps7_slcr_MIO_PIN_53_L3_SEL:
  addr: 0xf80007d4
  mask: 0xe0
  name: L3_SEL
  description: |
    Level 3 Mux Select
    000: GPIO 53 (bank 1), Input/Output
    001: CAN 1 Rx, Input
    010: I2C 1 Serial Data, Input/Output
    011: SWDT Reset, Output
    100: MDIO 0 Data, Input/Output
    101: MDIO 1 Data, Input/Output
    110: reserved
    111: UART 1 RxD, Input
ps7_slcr_MIO_PIN_53_L2_SEL:
  addr: 0xf80007d4
  mask: 0x18
  name: L2_SEL
  description: |
    Level 2 Mux Select
    00: Level 3 Mux
    01: reserved
    10: reserved
    11: SDIO 1 Power Control, Output
ps7_slcr_MIO_PIN_53_L1_SEL:
  addr: 0xf80007d4
  mask: 0x4
  name: L1_SEL
  description: |
    Level 1 Mux Select
    0: Level 2 Mux
    1: reserved
ps7_slcr_MIO_PIN_53_L0_SEL:
  addr: 0xf80007d4
  mask: 0x2
  name: L0_SEL
  description: |
    Level 0 Mux Select
    0: Level 1 Mux
    1: reserved
ps7_slcr_MIO_PIN_53_TRI_ENABLE:
  addr: 0xf80007d4
  mask: 0x1
  name: TRI_ENABLE
  description: |
    Operates the same as MIO_PIN_00[TRI_ENABLE]
ps7_slcr_MIO_LOOPBACK_reserved:
  addr: 0xf8000804
  mask: 0xfffffff0
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_LOOPBACK_I2C0_LOOP_I2C1:
  addr: 0xf8000804
  mask: 0x8
  name: I2C0_LOOP_I2C1
  description: |
    I2C Loopback Control.
    0 = Connect I2C inputs according to MIO mapping.
    1 = Loop I2C 0 outputs to I2C 1 inputs, and I2C 1 outputs
    to I2C 0 inputs.
ps7_slcr_MIO_LOOPBACK_CAN0_LOOP_CAN1:
  addr: 0xf8000804
  mask: 0x4
  name: CAN0_LOOP_CAN1
  description: |
    CAN Loopback Control.
    0 = Connect CAN inputs according to MIO mapping.
    1 = Loop CAN 0 Tx to CAN 1 Rx, and CAN 1 Tx to CAN 0 Rx.
ps7_slcr_MIO_LOOPBACK_UA0_LOOP_UA1:
  addr: 0xf8000804
  mask: 0x2
  name: UA0_LOOP_UA1
  description: |
    UART Loopback Control.
    0 = Connect UART inputs according to MIO mapping.
    1 = Loop UART 0 outputs to UART 1 inputs, and UART 1 outputs to UART 0 inputs.
    RXD/TXD cross-connected.
    RTS/CTS cross-connected.
    DSR, DTR, DCD and RI not used.
ps7_slcr_MIO_LOOPBACK_SPI0_LOOP_SPI1:
  addr: 0xf8000804
  mask: 0x1
  name: SPI0_LOOP_SPI1
  description: |
    SPI Loopback Control.
    0 = Connect SPI inputs according to MIO mapping.
    1 = Loop SPI 0 outputs to SPI 1 inputs, and SPI 1 outputs to SPI 0 inputs.
    The other SPI core will appear on the LS Slave Select.
ps7_slcr_MIO_MST_TRI0_PIN_31_TRI:
  addr: 0xf800080c
  mask: 0x80000000
  name: PIN_31_TRI
  description: |
    Master Tri-state Enable for pin 31, active high
ps7_slcr_MIO_MST_TRI0_PIN_30_TRI:
  addr: 0xf800080c
  mask: 0x40000000
  name: PIN_30_TRI
  description: |
    Master Tri-state Enable for pin 30, active high
ps7_slcr_MIO_MST_TRI0_PIN_29_TRI:
  addr: 0xf800080c
  mask: 0x20000000
  name: PIN_29_TRI
  description: |
    Master Tri-state Enable for pin 29, active high
ps7_slcr_MIO_MST_TRI0_PIN_28_TRI:
  addr: 0xf800080c
  mask: 0x10000000
  name: PIN_28_TRI
  description: |
    Master Tri-state Enable for pin 28, active high
ps7_slcr_MIO_MST_TRI0_PIN_27_TRI:
  addr: 0xf800080c
  mask: 0x8000000
  name: PIN_27_TRI
  description: |
    Master Tri-state Enable for pin 27, active high
ps7_slcr_MIO_MST_TRI0_PIN_26_TRI:
  addr: 0xf800080c
  mask: 0x4000000
  name: PIN_26_TRI
  description: |
    Master Tri-state Enable for pin 26, active high
ps7_slcr_MIO_MST_TRI0_PIN_25_TRI:
  addr: 0xf800080c
  mask: 0x2000000
  name: PIN_25_TRI
  description: |
    Master Tri-state Enable for pin 25, active high
ps7_slcr_MIO_MST_TRI0_PIN_24_TRI:
  addr: 0xf800080c
  mask: 0x1000000
  name: PIN_24_TRI
  description: |
    Master Tri-state Enable for pin 24, active high
ps7_slcr_MIO_MST_TRI0_PIN_23_TRI:
  addr: 0xf800080c
  mask: 0x800000
  name: PIN_23_TRI
  description: |
    Master Tri-state Enable for pin 23, active high
ps7_slcr_MIO_MST_TRI0_PIN_22_TRI:
  addr: 0xf800080c
  mask: 0x400000
  name: PIN_22_TRI
  description: |
    Master Tri-state Enable for pin 22, active high
ps7_slcr_MIO_MST_TRI0_PIN_21_TRI:
  addr: 0xf800080c
  mask: 0x200000
  name: PIN_21_TRI
  description: |
    Master Tri-state Enable for pin 21, active high
ps7_slcr_MIO_MST_TRI0_PIN_20_TRI:
  addr: 0xf800080c
  mask: 0x100000
  name: PIN_20_TRI
  description: |
    Master Tri-state Enable for pin 20, active high
ps7_slcr_MIO_MST_TRI0_PIN_19_TRI:
  addr: 0xf800080c
  mask: 0x80000
  name: PIN_19_TRI
  description: |
    Master Tri-state Enable for pin 19, active high
ps7_slcr_MIO_MST_TRI0_PIN_18_TRI:
  addr: 0xf800080c
  mask: 0x40000
  name: PIN_18_TRI
  description: |
    Master Tri-state Enable for pin 18, active high
ps7_slcr_MIO_MST_TRI0_PIN_17_TRI:
  addr: 0xf800080c
  mask: 0x20000
  name: PIN_17_TRI
  description: |
    Master Tri-state Enable for pin 17, active high
ps7_slcr_MIO_MST_TRI0_PIN_16_TRI:
  addr: 0xf800080c
  mask: 0x10000
  name: PIN_16_TRI
  description: |
    Master Tri-state Enable for pin 16, active high
ps7_slcr_MIO_MST_TRI0_PIN_15_TRI:
  addr: 0xf800080c
  mask: 0x8000
  name: PIN_15_TRI
  description: |
    Master Tri-state Enable for pin 15, active high
ps7_slcr_MIO_MST_TRI0_PIN_14_TRI:
  addr: 0xf800080c
  mask: 0x4000
  name: PIN_14_TRI
  description: |
    Master Tri-state Enable for pin 14, active high
ps7_slcr_MIO_MST_TRI0_PIN_13_TRI:
  addr: 0xf800080c
  mask: 0x2000
  name: PIN_13_TRI
  description: |
    Master Tri-state Enable for pin 13, active high
ps7_slcr_MIO_MST_TRI0_PIN_12_TRI:
  addr: 0xf800080c
  mask: 0x1000
  name: PIN_12_TRI
  description: |
    Master Tri-state Enable for pin 12, active high
ps7_slcr_MIO_MST_TRI0_PIN_11_TRI:
  addr: 0xf800080c
  mask: 0x800
  name: PIN_11_TRI
  description: |
    Master Tri-state Enable for pin 11, active high
ps7_slcr_MIO_MST_TRI0_PIN_10_TRI:
  addr: 0xf800080c
  mask: 0x400
  name: PIN_10_TRI
  description: |
    Master Tri-state Enable for pin 10, active high
ps7_slcr_MIO_MST_TRI0_PIN_09_TRI:
  addr: 0xf800080c
  mask: 0x200
  name: PIN_09_TRI
  description: |
    Master Tri-state Enable for pin 9, active high
ps7_slcr_MIO_MST_TRI0_PIN_08_TRI:
  addr: 0xf800080c
  mask: 0x100
  name: PIN_08_TRI
  description: |
    Master Tri-state Enable for pin 8, active high
ps7_slcr_MIO_MST_TRI0_PIN_07_TRI:
  addr: 0xf800080c
  mask: 0x80
  name: PIN_07_TRI
  description: |
    Master Tri-state Enable for pin 7, active high
ps7_slcr_MIO_MST_TRI0_PIN_06_TRI:
  addr: 0xf800080c
  mask: 0x40
  name: PIN_06_TRI
  description: |
    Master Tri-state Enable for pin 6, active high
ps7_slcr_MIO_MST_TRI0_PIN_05_TRI:
  addr: 0xf800080c
  mask: 0x20
  name: PIN_05_TRI
  description: |
    Master Tri-state Enable for pin 5, active high
ps7_slcr_MIO_MST_TRI0_PIN_04_TRI:
  addr: 0xf800080c
  mask: 0x10
  name: PIN_04_TRI
  description: |
    Master Tri-state Enable for pin 4, active high
ps7_slcr_MIO_MST_TRI0_PIN_03_TRI:
  addr: 0xf800080c
  mask: 0x8
  name: PIN_03_TRI
  description: |
    Master Tri-state Enable for pin 3, active high
ps7_slcr_MIO_MST_TRI0_PIN_02_TRI:
  addr: 0xf800080c
  mask: 0x4
  name: PIN_02_TRI
  description: |
    Master Tri-state Enable for pin 2, active high
ps7_slcr_MIO_MST_TRI0_PIN_01_TRI:
  addr: 0xf800080c
  mask: 0x2
  name: PIN_01_TRI
  description: |
    Master Tri-state Enable for pin 1, active high
ps7_slcr_MIO_MST_TRI0_PIN_00_TRI:
  addr: 0xf800080c
  mask: 0x1
  name: PIN_00_TRI
  description: |
    Master Tri-state Enable for pin 0, active high
ps7_slcr_MIO_MST_TRI1_reserved:
  addr: 0xf8000810
  mask: 0xffc00000
  name: reserved
  description: |
    reserved
ps7_slcr_MIO_MST_TRI1_PIN_53_TRI:
  addr: 0xf8000810
  mask: 0x200000
  name: PIN_53_TRI
  description: |
    Master Tri-state Enable for pin 53, active high
ps7_slcr_MIO_MST_TRI1_PIN_52_TRI:
  addr: 0xf8000810
  mask: 0x100000
  name: PIN_52_TRI
  description: |
    Master Tri-state Enable for pin 52, active high
ps7_slcr_MIO_MST_TRI1_PIN_51_TRI:
  addr: 0xf8000810
  mask: 0x80000
  name: PIN_51_TRI
  description: |
    Master Tri-state Enable for pin 51, active high
ps7_slcr_MIO_MST_TRI1_PIN_50_TRI:
  addr: 0xf8000810
  mask: 0x40000
  name: PIN_50_TRI
  description: |
    Master Tri-state Enable for pin 50, active high
ps7_slcr_MIO_MST_TRI1_PIN_49_TRI:
  addr: 0xf8000810
  mask: 0x20000
  name: PIN_49_TRI
  description: |
    Master Tri-state Enable for pin 49, active high
ps7_slcr_MIO_MST_TRI1_PIN_48_TRI:
  addr: 0xf8000810
  mask: 0x10000
  name: PIN_48_TRI
  description: |
    Master Tri-state Enable for pin 48, active high
ps7_slcr_MIO_MST_TRI1_PIN_47_TRI:
  addr: 0xf8000810
  mask: 0x8000
  name: PIN_47_TRI
  description: |
    Master Tri-state Enable for pin 47, active high
ps7_slcr_MIO_MST_TRI1_PIN_46_TRI:
  addr: 0xf8000810
  mask: 0x4000
  name: PIN_46_TRI
  description: |
    Master Tri-state Enable for pin 46, active high
ps7_slcr_MIO_MST_TRI1_PIN_45_TRI:
  addr: 0xf8000810
  mask: 0x2000
  name: PIN_45_TRI
  description: |
    Master Tri-state Enable for pin 45, active high
ps7_slcr_MIO_MST_TRI1_PIN_44_TRI:
  addr: 0xf8000810
  mask: 0x1000
  name: PIN_44_TRI
  description: |
    Master Tri-state Enable for pin 44, active high
ps7_slcr_MIO_MST_TRI1_PIN_43_TRI:
  addr: 0xf8000810
  mask: 0x800
  name: PIN_43_TRI
  description: |
    Master Tri-state Enable for pin 43, active high
ps7_slcr_MIO_MST_TRI1_PIN_42_TRI:
  addr: 0xf8000810
  mask: 0x400
  name: PIN_42_TRI
  description: |
    Master Tri-state Enable for pin 42, active high
ps7_slcr_MIO_MST_TRI1_PIN_41_TRI:
  addr: 0xf8000810
  mask: 0x200
  name: PIN_41_TRI
  description: |
    Master Tri-state Enable for pin 41, active high
ps7_slcr_MIO_MST_TRI1_PIN_40_TRI:
  addr: 0xf8000810
  mask: 0x100
  name: PIN_40_TRI
  description: |
    Master Tri-state Enable for pin 40, active high
ps7_slcr_MIO_MST_TRI1_PIN_39_TRI:
  addr: 0xf8000810
  mask: 0x80
  name: PIN_39_TRI
  description: |
    Master Tri-state Enable for pin 39, active high
ps7_slcr_MIO_MST_TRI1_PIN_38_TRI:
  addr: 0xf8000810
  mask: 0x40
  name: PIN_38_TRI
  description: |
    Master Tri-state Enable for pin 38, active high
ps7_slcr_MIO_MST_TRI1_PIN_37_TRI:
  addr: 0xf8000810
  mask: 0x20
  name: PIN_37_TRI
  description: |
    Master Tri-state Enable for pin 37, active high
ps7_slcr_MIO_MST_TRI1_PIN_36_TRI:
  addr: 0xf8000810
  mask: 0x10
  name: PIN_36_TRI
  description: |
    Master Tri-state Enable for pin 36, active high
ps7_slcr_MIO_MST_TRI1_PIN_35_TRI:
  addr: 0xf8000810
  mask: 0x8
  name: PIN_35_TRI
  description: |
    Master Tri-state Enable for pin 35, active high
ps7_slcr_MIO_MST_TRI1_PIN_34_TRI:
  addr: 0xf8000810
  mask: 0x4
  name: PIN_34_TRI
  description: |
    Master Tri-state Enable for pin 34, active high
ps7_slcr_MIO_MST_TRI1_PIN_33_TRI:
  addr: 0xf8000810
  mask: 0x2
  name: PIN_33_TRI
  description: |
    Master Tri-state Enable for pin 33, active high
ps7_slcr_MIO_MST_TRI1_PIN_32_TRI:
  addr: 0xf8000810
  mask: 0x1
  name: PIN_32_TRI
  description: |
    Master Tri-state Enable for pin 32, active high
ps7_slcr_SD0_WP_CD_SEL_reserved_1:
  addr: 0xf8000830
  mask: 0xffc00000
  name: reserved_1
  description: |
    reserved
ps7_slcr_SD0_WP_CD_SEL_SDIO0_CD_SEL:
  addr: 0xf8000830
  mask: 0x3f0000
  name: SDIO0_CD_SEL
  description: |
    SDIO 0 CD Select.
    Values 53:0 select MIO input (any pin except bits 7 and 8)
    Values 63:54 select EMIO input
ps7_slcr_SD0_WP_CD_SEL_reserved:
  addr: 0xf8000830
  mask: 0xffc0
  name: reserved
  description: |
    reserved
ps7_slcr_SD0_WP_CD_SEL_SDIO0_WP_SEL:
  addr: 0xf8000830
  mask: 0x3f
  name: SDIO0_WP_SEL
  description: |
    SDIO 0 WP Select.
    Values 53:0 select MIO input (any pin except 7 and 8)
    Values 63:54 select EMIO input
ps7_slcr_SD1_WP_CD_SEL_reserved_1:
  addr: 0xf8000834
  mask: 0xffc00000
  name: reserved_1
  description: |
    reserved
ps7_slcr_SD1_WP_CD_SEL_SDIO1_CD_SEL:
  addr: 0xf8000834
  mask: 0x3f0000
  name: SDIO1_CD_SEL
  description: |
    SDIO 1 CD Select.
    Values 53:0 select MIO input (any pin except bits 7 and 8)
    Values 63:54 select EMIO input
ps7_slcr_SD1_WP_CD_SEL_reserved:
  addr: 0xf8000834
  mask: 0xffc0
  name: reserved
  description: |
    reserved
ps7_slcr_SD1_WP_CD_SEL_SDIO1_WP_SEL:
  addr: 0xf8000834
  mask: 0x3f
  name: SDIO1_WP_SEL
  description: |
    SDIO 1 WP Select.
    Values 53:0 select MIO input (any pin except 7 and 8)
    Values 63:54 select EMIO input
ps7_slcr_LVL_SHFTR_EN_reserved:
  addr: 0xf8000900
  mask: 0xffffffe0
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_LVL_SHFTR_EN_reserved_TEST_LVL_SHFTR_EN:
  addr: 0xf8000900
  mask: 0x10
  name: reserved_TEST_LVL_SHFTR_EN
  description: |
    Reserved. Do not modify.
ps7_slcr_LVL_SHFTR_EN_USER_LVL_INP_EN_0:
  addr: 0xf8000900
  mask: 0x8
  name: USER_LVL_INP_EN_0
  description: |
    Level shifter enable to drive signals from PL to PS
ps7_slcr_LVL_SHFTR_EN_USER_LVL_OUT_EN_0:
  addr: 0xf8000900
  mask: 0x4
  name: USER_LVL_OUT_EN_0
  description: |
    Level shifter enable to drive signals from PS to PL
ps7_slcr_LVL_SHFTR_EN_USER_LVL_INP_EN_1:
  addr: 0xf8000900
  mask: 0x2
  name: USER_LVL_INP_EN_1
  description: |
    Level shifter enable to drive signals from PL to PS
ps7_slcr_LVL_SHFTR_EN_USER_LVL_OUT_EN_1:
  addr: 0xf8000900
  mask: 0x1
  name: USER_LVL_OUT_EN_1
  description: |
    Level shifter enable to drive signals from PS to PL
ps7_slcr_OCM_CFG_reserved:
  addr: 0xf8000910
  mask: 0xffffffe0
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_OCM_CFG_reserved_SWAP:
  addr: 0xf8000910
  mask: 0x10
  name: reserved_SWAP
  description: |
    Reserved. Do not modify.
ps7_slcr_OCM_CFG_RAM_HI:
  addr: 0xf8000910
  mask: 0xf
  name: RAM_HI
  description: |
    Maps the OCM RAM (in 64 KB sections) to the high or low address space:
    0: low address.
    1: high address.
    RAM_HI [0] is first 64 KB
    RAM_HI [1] is second 64 KB
    RAM_HI [2] is third 64 KB
    RAM_HI [3] is fourth 64 KB
    Refer to the OCM chapter for more details.
ps7_slcr_GPIOB_CTRL_reserved:
  addr: 0xf8000b00
  mask: 0xfffff000
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_GPIOB_CTRL_VREF_SW_EN:
  addr: 0xf8000b00
  mask: 0x800
  name: VREF_SW_EN
  description: |
    Enables the VREF switch
    0: internal
    1: external
ps7_slcr_GPIOB_CTRL_reserved_VREF_EXT:
  addr: 0xf8000b00
  mask: 0x400
  name: reserved_VREF_EXT
  description: |
    Reserved. Do not modify.
ps7_slcr_GPIOB_CTRL_reserved_SRSTN_PULLUP_EN:
  addr: 0xf8000b00
  mask: 0x200
  name: reserved_SRSTN_PULLUP_EN
  description: |
    Reserved. Do not modify.
ps7_slcr_GPIOB_CTRL_reserved_CLK_PULLUP_EN:
  addr: 0xf8000b00
  mask: 0x100
  name: reserved_CLK_PULLUP_EN
  description: |
    Reserved. Do not modify.
ps7_slcr_GPIOB_CTRL_reserved_VDETECT_MUX:
  addr: 0xf8000b00
  mask: 0x80
  name: reserved_VDETECT_MUX
  description: |
    Reserved. Do not modify.
ps7_slcr_GPIOB_CTRL_VREF_SEL:
  addr: 0xf8000b00
  mask: 0x70
  name: VREF_SEL
  description: |
    Specifies GPIO VREF Selection
    000 - VREF = Disabled
    001 - VREF = 0.9V
    010 - VREF = test only - 1.8V
    100 - VREF = test only - 1.25V
    Other values reserved
ps7_slcr_GPIOB_CTRL_reserved_VDETECT_CLOCK:
  addr: 0xf8000b00
  mask: 0x8
  name: reserved_VDETECT_CLOCK
  description: |
    Reserved. Do not modify.
ps7_slcr_GPIOB_CTRL_reserved_VDETECT_DISABLE:
  addr: 0xf8000b00
  mask: 0x4
  name: reserved_VDETECT_DISABLE
  description: |
    Reserved. Do not modify.
ps7_slcr_GPIOB_CTRL_reserved_VREF_PULLUP_EN:
  addr: 0xf8000b00
  mask: 0x2
  name: reserved_VREF_PULLUP_EN
  description: |
    Reserved. Do not modify.
ps7_slcr_GPIOB_CTRL_VREF_EN:
  addr: 0xf8000b00
  mask: 0x1
  name: VREF_EN
  description: |
    Enables VREF internal generator
ps7_slcr_GPIOB_CFG_CMOS18_reserved:
  addr: 0xf8000b04
  mask: 0xf0000000
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_GPIOB_CFG_CMOS18_reserved_m_nslew_slow:
  addr: 0xf8000b04
  mask: 0xe000000
  name: reserved_m_nslew_slow
  description: |
    Reserved. Do not modify.
ps7_slcr_GPIOB_CFG_CMOS18_reserved_m_nslew_fast:
  addr: 0xf8000b04
  mask: 0x1c00000
  name: reserved_m_nslew_fast
  description: |
    Reserved. Do not modify.
ps7_slcr_GPIOB_CFG_CMOS18_reserved_m_pslew_slow:
  addr: 0xf8000b04
  mask: 0x380000
  name: reserved_m_pslew_slow
  description: |
    Reserved. Do not modify.
ps7_slcr_GPIOB_CFG_CMOS18_reserved_m_pslew_fast:
  addr: 0xf8000b04
  mask: 0x70000
  name: reserved_m_pslew_fast
  description: |
    Reserved. Do not modify.
ps7_slcr_GPIOB_CFG_CMOS18_reserved_m_ndrv_slow:
  addr: 0xf8000b04
  mask: 0xf000
  name: reserved_m_ndrv_slow
  description: |
    Reserved. Do not modify.
ps7_slcr_GPIOB_CFG_CMOS18_reserved_m_ndrv_fast:
  addr: 0xf8000b04
  mask: 0xf00
  name: reserved_m_ndrv_fast
  description: |
    Reserved. Do not modify.
ps7_slcr_GPIOB_CFG_CMOS18_reserved_m_pdrv_slow:
  addr: 0xf8000b04
  mask: 0xf0
  name: reserved_m_pdrv_slow
  description: |
    Reserved. Do not modify.
ps7_slcr_GPIOB_CFG_CMOS18_reserved_m_pdrv_fast:
  addr: 0xf8000b04
  mask: 0xf
  name: reserved_m_pdrv_fast
  description: |
    Reserved. Do not modify.
ps7_slcr_GPIOB_CFG_CMOS25_reserved:
  addr: 0xf8000b08
  mask: 0xf0000000
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_GPIOB_CFG_CMOS25_reserved_m_nslew_slow:
  addr: 0xf8000b08
  mask: 0xe000000
  name: reserved_m_nslew_slow
  description: |
    Reserved. Do not modify.
ps7_slcr_GPIOB_CFG_CMOS25_reserved_m_nslew_fast:
  addr: 0xf8000b08
  mask: 0x1c00000
  name: reserved_m_nslew_fast
  description: |
    Reserved. Do not modify.
ps7_slcr_GPIOB_CFG_CMOS25_reserved_m_pslew_slow:
  addr: 0xf8000b08
  mask: 0x380000
  name: reserved_m_pslew_slow
  description: |
    Reserved. Do not modify.
ps7_slcr_GPIOB_CFG_CMOS25_reserved_m_pslew_fast:
  addr: 0xf8000b08
  mask: 0x70000
  name: reserved_m_pslew_fast
  description: |
    Reserved. Do not modify.
ps7_slcr_GPIOB_CFG_CMOS25_reserved_m_ndrv_slow:
  addr: 0xf8000b08
  mask: 0xf000
  name: reserved_m_ndrv_slow
  description: |
    Reserved. Do not modify.
ps7_slcr_GPIOB_CFG_CMOS25_reserved_m_ndrv_fast:
  addr: 0xf8000b08
  mask: 0xf00
  name: reserved_m_ndrv_fast
  description: |
    Reserved. Do not modify.
ps7_slcr_GPIOB_CFG_CMOS25_reserved_m_pdrv_slow:
  addr: 0xf8000b08
  mask: 0xf0
  name: reserved_m_pdrv_slow
  description: |
    Reserved. Do not modify.
ps7_slcr_GPIOB_CFG_CMOS25_reserved_m_pdrv_fast:
  addr: 0xf8000b08
  mask: 0xf
  name: reserved_m_pdrv_fast
  description: |
    Reserved. Do not modify.
ps7_slcr_GPIOB_CFG_CMOS33_reserved:
  addr: 0xf8000b0c
  mask: 0xf0000000
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_GPIOB_CFG_CMOS33_reserved_m_nslew_slow:
  addr: 0xf8000b0c
  mask: 0xe000000
  name: reserved_m_nslew_slow
  description: |
    Reserved. Do not modify.
ps7_slcr_GPIOB_CFG_CMOS33_reserved_m_nslew_fast:
  addr: 0xf8000b0c
  mask: 0x1c00000
  name: reserved_m_nslew_fast
  description: |
    Reserved. Do not modify.
ps7_slcr_GPIOB_CFG_CMOS33_reserved_m_pslew_slow:
  addr: 0xf8000b0c
  mask: 0x380000
  name: reserved_m_pslew_slow
  description: |
    Reserved. Do not modify.
ps7_slcr_GPIOB_CFG_CMOS33_reserved_m_pslew_fast:
  addr: 0xf8000b0c
  mask: 0x70000
  name: reserved_m_pslew_fast
  description: |
    Reserved. Do not modify.
ps7_slcr_GPIOB_CFG_CMOS33_reserved_m_ndrv_slow:
  addr: 0xf8000b0c
  mask: 0xf000
  name: reserved_m_ndrv_slow
  description: |
    Reserved. Do not modify.
ps7_slcr_GPIOB_CFG_CMOS33_reserved_m_ndrv_fast:
  addr: 0xf8000b0c
  mask: 0xf00
  name: reserved_m_ndrv_fast
  description: |
    Reserved. Do not modify.
ps7_slcr_GPIOB_CFG_CMOS33_reserved_m_pdrv_slow:
  addr: 0xf8000b0c
  mask: 0xf0
  name: reserved_m_pdrv_slow
  description: |
    Reserved. Do not modify.
ps7_slcr_GPIOB_CFG_CMOS33_reserved_m_pdrv_fast:
  addr: 0xf8000b0c
  mask: 0xf
  name: reserved_m_pdrv_fast
  description: |
    Reserved. Do not modify.
ps7_slcr_GPIOB_CFG_HSTL_reserved:
  addr: 0xf8000b14
  mask: 0xf0000000
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_GPIOB_CFG_HSTL_reserved_m_nslew_slow:
  addr: 0xf8000b14
  mask: 0xe000000
  name: reserved_m_nslew_slow
  description: |
    Reserved. Do not modify.
ps7_slcr_GPIOB_CFG_HSTL_reserved_m_nslew_fast:
  addr: 0xf8000b14
  mask: 0x1c00000
  name: reserved_m_nslew_fast
  description: |
    Reserved. Do not modify.
ps7_slcr_GPIOB_CFG_HSTL_reserved_m_pslew_slow:
  addr: 0xf8000b14
  mask: 0x380000
  name: reserved_m_pslew_slow
  description: |
    Reserved. Do not modify.
ps7_slcr_GPIOB_CFG_HSTL_reserved_m_pslew_fast:
  addr: 0xf8000b14
  mask: 0x70000
  name: reserved_m_pslew_fast
  description: |
    Reserved. Do not modify.
ps7_slcr_GPIOB_CFG_HSTL_reserved_m_ndrv_slow:
  addr: 0xf8000b14
  mask: 0xf000
  name: reserved_m_ndrv_slow
  description: |
    Reserved. Do not modify.
ps7_slcr_GPIOB_CFG_HSTL_reserved_m_ndrv_fast:
  addr: 0xf8000b14
  mask: 0xf00
  name: reserved_m_ndrv_fast
  description: |
    Reserved. Do not modify.
ps7_slcr_GPIOB_CFG_HSTL_reserved_m_pdrv_slow:
  addr: 0xf8000b14
  mask: 0xf0
  name: reserved_m_pdrv_slow
  description: |
    Reserved. Do not modify.
ps7_slcr_GPIOB_CFG_HSTL_reserved_m_pdrv_fast:
  addr: 0xf8000b14
  mask: 0xf
  name: reserved_m_pdrv_fast
  description: |
    Reserved. Do not modify.
ps7_slcr_GPIOB_DRVR_BIAS_CTRL_RB_VCFG:
  addr: 0xf8000b18
  mask: 0x80000000
  name: RB_VCFG
  description: |
    Right Bank VCFG (Read Only)
ps7_slcr_GPIOB_DRVR_BIAS_CTRL_RB_DRVR_BIAS:
  addr: 0xf8000b18
  mask: 0x7fff0000
  name: RB_DRVR_BIAS
  description: |
    Right Bank driver bias control
ps7_slcr_GPIOB_DRVR_BIAS_CTRL_LB_VCFG:
  addr: 0xf8000b18
  mask: 0x8000
  name: LB_VCFG
  description: |
    Left Bank VCFG (Read Only)
ps7_slcr_GPIOB_DRVR_BIAS_CTRL_LB_DRVR_BIAS:
  addr: 0xf8000b18
  mask: 0x7fff
  name: LB_DRVR_BIAS
  description: |
    Left Bank driver bias control
ps7_slcr_DDRIOB_ADDR0_reserved:
  addr: 0xf8000b40
  mask: 0xfffff000
  name: reserved
  description: |
    Reserved
ps7_slcr_DDRIOB_ADDR0_PULLUP_EN:
  addr: 0xf8000b40
  mask: 0x800
  name: PULLUP_EN
  description: |
    enables pullup on output
    0: no pullup
    1: pullup enabled
ps7_slcr_DDRIOB_ADDR0_OUTPUT_EN:
  addr: 0xf8000b40
  mask: 0x600
  name: OUTPUT_EN
  description: |
    Enables output mode to enable output ties to
    00: ibuf
    01 and 10: reserved
    11: obuf
ps7_slcr_DDRIOB_ADDR0_TERM_DISABLE_MODE:
  addr: 0xf8000b40
  mask: 0x100
  name: TERM_DISABLE_MODE
  description: |
    Termination is used during read transactions and may be disabled (automatically by hardware) when there are no reads taking place through the DDR Interface. Disabling termination reduces power consumption.
    0: termination always enabled
    1: use 'dynamic_dci_ts' to disable termination when not in use
    NOTE: This bit must be 0 during DRAM init/training. It may be set to 1 after init/training completes.
ps7_slcr_DDRIOB_ADDR0_IBUF_DISABLE_MODE:
  addr: 0xf8000b40
  mask: 0x80
  name: IBUF_DISABLE_MODE
  description: |
    Use ibuf_disable_into control ibuf
    0: ibuf is enabled
    1: use ibuf_disable_in_to control enable
    NOTE: This must be 0 during DRAM init/training and can only be set to 1 after init/training completes.
ps7_slcr_DDRIOB_ADDR0_DCI_TYPE:
  addr: 0xf8000b40
  mask: 0x60
  name: DCI_TYPE
  description: |
    DCI Mode Selection:
    00: DCI Disabled (DDR2/3 ADDR and CLOCK)
    01: DCI Drive (LPDDR2)
    10: reserved
    11: DCI Termination (DDR2/3 DATA and DIFF)
ps7_slcr_DDRIOB_ADDR0_TERM_EN:
  addr: 0xf8000b40
  mask: 0x10
  name: TERM_EN
  description: |
    Tri State Termination Enable:
    0: disable
    1: enable
ps7_slcr_DDRIOB_ADDR0_DCI_UPDATE_B:
  addr: 0xf8000b40
  mask: 0x8
  name: DCI_UPDATE_B
  description: |
    DCI Update Enable:
    0: disable
    1: enable
ps7_slcr_DDRIOB_ADDR0_INP_TYPE:
  addr: 0xf8000b40
  mask: 0x6
  name: INP_TYPE
  description: |
    Input buffer control:
    00: Input off (input signal to selected controller is driven Low).
    01: Vref based differential receiver for SSTL, HSTL.
    10: Differential input receiver.
    11: LVCMOS receiver.
ps7_slcr_DDRIOB_ADDR0_reserved_INP_POWER:
  addr: 0xf8000b40
  mask: 0x1
  name: reserved_INP_POWER
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_ADDR1_reserved:
  addr: 0xf8000b44
  mask: 0xfffff000
  name: reserved
  description: |
    Reserved
ps7_slcr_DDRIOB_ADDR1_PULLUP_EN:
  addr: 0xf8000b44
  mask: 0x800
  name: PULLUP_EN
  description: |
    enables pullup on output
    0: no pullup
    1: pullup enabled
ps7_slcr_DDRIOB_ADDR1_OUTPUT_EN:
  addr: 0xf8000b44
  mask: 0x600
  name: OUTPUT_EN
  description: |
    Enables output mode to enable output ties to
    00: ibuf
    01 and 10: reserved
    11: obuf
ps7_slcr_DDRIOB_ADDR1_TERM_DISABLE_MODE:
  addr: 0xf8000b44
  mask: 0x100
  name: TERM_DISABLE_MODE
  description: |
    Termination is used during read transactions and may be disabled (automatically by hardware) when there are no reads taking place through the DDR Interface. Disabling termination reduces power consumption.
    0: termination always enabled
    1: use 'dynamic_dci_ts' to disable termination when not in use
    NOTE: This bit must be 0 during DRAM init/training. It may be set to 1 after init/training completes.
ps7_slcr_DDRIOB_ADDR1_IBUF_DISABLE_MODE:
  addr: 0xf8000b44
  mask: 0x80
  name: IBUF_DISABLE_MODE
  description: |
    Use ibuf_disable_into control ibuf
    0: ibuf is enabled
    1: use ibuf_disable_in_to control enable
    NOTE: This must be 0 during DRAM init/training and can only be set to 1 after init/training completes.
ps7_slcr_DDRIOB_ADDR1_DCI_TYPE:
  addr: 0xf8000b44
  mask: 0x60
  name: DCI_TYPE
  description: |
    DCI Mode Selection:
    00: DCI Disabled (DDR2/3 ADDR and CLOCK)
    01: DCI Drive (LPDDR2)
    10: reserved
    11: DCI Termination (DDR2/3 DATA and DIFF)
ps7_slcr_DDRIOB_ADDR1_TERM_EN:
  addr: 0xf8000b44
  mask: 0x10
  name: TERM_EN
  description: |
    Tri State Termination Enable:
    0: disable
    1: enable
ps7_slcr_DDRIOB_ADDR1_DCI_UPDATE_B:
  addr: 0xf8000b44
  mask: 0x8
  name: DCI_UPDATE_B
  description: |
    DCI Update Enable:
    0: disable
    1: enable
ps7_slcr_DDRIOB_ADDR1_INP_TYPE:
  addr: 0xf8000b44
  mask: 0x6
  name: INP_TYPE
  description: |
    Input buffer control:
    00: Input off (input signal to selected controller is driven Low).
    01: Vref based differential receiver for SSTL, HSTL.
    10: Differential input receiver.
    11: LVCMOS receiver.
ps7_slcr_DDRIOB_ADDR1_reserved_INP_POWER:
  addr: 0xf8000b44
  mask: 0x1
  name: reserved_INP_POWER
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DATA0_reserved:
  addr: 0xf8000b48
  mask: 0xfffff000
  name: reserved
  description: |
    Reserved
ps7_slcr_DDRIOB_DATA0_PULLUP_EN:
  addr: 0xf8000b48
  mask: 0x800
  name: PULLUP_EN
  description: |
    enables pullup on output
    0: no pullup
    1: pullup enabled
ps7_slcr_DDRIOB_DATA0_OUTPUT_EN:
  addr: 0xf8000b48
  mask: 0x600
  name: OUTPUT_EN
  description: |
    Enables output mode to enable output ties to
    00: ibuf
    01 and 10: reserved
    11: obuf
ps7_slcr_DDRIOB_DATA0_TERM_DISABLE_MODE:
  addr: 0xf8000b48
  mask: 0x100
  name: TERM_DISABLE_MODE
  description: |
    Termination is used during read transactions and may be disabled (automatically by hardware) when there are no reads taking place through the DDR Interface. Disabling termination reduces power consumption.
    0: termination always enabled
    1: use 'dynamic_dci_ts' to disable termination when not in use
    NOTE: This bit must be 0 during DRAM init/training. It may be set to 1 after init/training completes.
ps7_slcr_DDRIOB_DATA0_IBUF_DISABLE_MODE:
  addr: 0xf8000b48
  mask: 0x80
  name: IBUF_DISABLE_MODE
  description: |
    Use ibuf_disable_into control ibuf
    0: ibuf is enabled
    1: use ibuf_disable_in_to control enable
    NOTE: This must be 0 during DRAM init/training and can only be set to 1 after init/training completes.
ps7_slcr_DDRIOB_DATA0_DCI_TYPE:
  addr: 0xf8000b48
  mask: 0x60
  name: DCI_TYPE
  description: |
    DCI Mode Selection:
    00: DCI Disabled (DDR2/3 ADDR and CLOCK)
    01: DCI Drive (LPDDR2)
    10: reserved
    11: DCI Termination (DDR2/3 DATA and DIFF)
ps7_slcr_DDRIOB_DATA0_TERM_EN:
  addr: 0xf8000b48
  mask: 0x10
  name: TERM_EN
  description: |
    Tri State Termination Enable:
    0: disable
    1: enable
ps7_slcr_DDRIOB_DATA0_DCI_UPDATE_B:
  addr: 0xf8000b48
  mask: 0x8
  name: DCI_UPDATE_B
  description: |
    DCI Update Enable:
    0: disable
    1: enable
ps7_slcr_DDRIOB_DATA0_INP_TYPE:
  addr: 0xf8000b48
  mask: 0x6
  name: INP_TYPE
  description: |
    Input buffer control:
    00: Input off (input signal to selected controller is driven Low).
    01: Vref based differential receiver for SSTL, HSTL.
    10: Differential input receiver.
    11: LVCMOS receiver.
ps7_slcr_DDRIOB_DATA0_reserved_INP_POWER:
  addr: 0xf8000b48
  mask: 0x1
  name: reserved_INP_POWER
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DATA1_reserved:
  addr: 0xf8000b4c
  mask: 0xfffff000
  name: reserved
  description: |
    Reserved
ps7_slcr_DDRIOB_DATA1_PULLUP_EN:
  addr: 0xf8000b4c
  mask: 0x800
  name: PULLUP_EN
  description: |
    enables pullup on output
    0: no pullup
    1: pullup enabled
ps7_slcr_DDRIOB_DATA1_OUTPUT_EN:
  addr: 0xf8000b4c
  mask: 0x600
  name: OUTPUT_EN
  description: |
    Enables output mode to enable output ties to
    00: ibuf
    01 and 10: reserved
    11: obuf
ps7_slcr_DDRIOB_DATA1_TERM_DISABLE_MODE:
  addr: 0xf8000b4c
  mask: 0x100
  name: TERM_DISABLE_MODE
  description: |
    Termination is used during read transactions and may be disabled (automatically by hardware) when there are no reads taking place through the DDR Interface. Disabling termination reduces power consumption.
    0: termination always enabled
    1: use 'dynamic_dci_ts' to disable termination when not in use
    NOTE: This bit must be 0 during DRAM init/training. It may be set to 1 after init/training completes.
ps7_slcr_DDRIOB_DATA1_IBUF_DISABLE_MODE:
  addr: 0xf8000b4c
  mask: 0x80
  name: IBUF_DISABLE_MODE
  description: |
    Use ibuf_disable_into control ibuf
    0: ibuf is enabled
    1: use ibuf_disable_in_to control enable
    NOTE: This must be 0 during DRAM init/training and can only be set to 1 after init/training completes.
ps7_slcr_DDRIOB_DATA1_DCI_TYPE:
  addr: 0xf8000b4c
  mask: 0x60
  name: DCI_TYPE
  description: |
    DCI Mode Selection:
    00: DCI Disabled (DDR2/3 ADDR and CLOCK)
    01: DCI Drive (LPDDR2)
    10: reserved
    11: DCI Termination (DDR2/3 DATA and DIFF)
ps7_slcr_DDRIOB_DATA1_TERM_EN:
  addr: 0xf8000b4c
  mask: 0x10
  name: TERM_EN
  description: |
    Tri State Termination Enable:
    0: disable
    1: enable
ps7_slcr_DDRIOB_DATA1_DCI_UPDATE_B:
  addr: 0xf8000b4c
  mask: 0x8
  name: DCI_UPDATE_B
  description: |
    DCI Update Enable:
    0: disable
    1: enable
ps7_slcr_DDRIOB_DATA1_INP_TYPE:
  addr: 0xf8000b4c
  mask: 0x6
  name: INP_TYPE
  description: |
    Input buffer control:
    00: Input off (input signal to selected controller is driven Low).
    01: Vref based differential receiver for SSTL, HSTL.
    10: Differential input receiver.
    11: LVCMOS receiver.
ps7_slcr_DDRIOB_DATA1_reserved_INP_POWER:
  addr: 0xf8000b4c
  mask: 0x1
  name: reserved_INP_POWER
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DIFF0_reserved:
  addr: 0xf8000b50
  mask: 0xfffff000
  name: reserved
  description: |
    Reserved
ps7_slcr_DDRIOB_DIFF0_PULLUP_EN:
  addr: 0xf8000b50
  mask: 0x800
  name: PULLUP_EN
  description: |
    enables pullup on output
    0: no pullup
    1: pullup enabled
ps7_slcr_DDRIOB_DIFF0_OUTPUT_EN:
  addr: 0xf8000b50
  mask: 0x600
  name: OUTPUT_EN
  description: |
    Enables output mode to enable output ties to
    00: ibuf
    01 and 10: reserved
    11: obuf
ps7_slcr_DDRIOB_DIFF0_TERM_DISABLE_MODE:
  addr: 0xf8000b50
  mask: 0x100
  name: TERM_DISABLE_MODE
  description: |
    Termination is used during read transactions and may be disabled (automatically by hardware) when there are no reads taking place through the DDR Interface. Disabling termination reduces power consumption.
    0: termination always enabled
    1: use 'dynamic_dci_ts' to disable termination when not in use
    NOTE: This bit must be 0 during DRAM init/training. It may be set to 1 after init/training completes.
ps7_slcr_DDRIOB_DIFF0_IBUF_DISABLE_MODE:
  addr: 0xf8000b50
  mask: 0x80
  name: IBUF_DISABLE_MODE
  description: |
    Use ibuf_disable_into control ibuf
    0: ibuf is enabled
    1: use ibuf_disable_in_to control enable
    NOTE: This must be 0 during DRAM init/training and can only be set to 1 after init/training completes.
ps7_slcr_DDRIOB_DIFF0_DCI_TYPE:
  addr: 0xf8000b50
  mask: 0x60
  name: DCI_TYPE
  description: |
    DCI Mode Selection:
    00: DCI Disabled (DDR2/3 ADDR and CLOCK)
    01: DCI Drive (LPDDR2)
    10: reserved
    11: DCI Termination (DDR2/3 DATA and DIFF)
ps7_slcr_DDRIOB_DIFF0_TERM_EN:
  addr: 0xf8000b50
  mask: 0x10
  name: TERM_EN
  description: |
    Tri State Termination Enable:
    0: disable
    1: enable
ps7_slcr_DDRIOB_DIFF0_DCI_UPDATE_B:
  addr: 0xf8000b50
  mask: 0x8
  name: DCI_UPDATE_B
  description: |
    DCI Update Enable:
    0: disable
    1: enable
ps7_slcr_DDRIOB_DIFF0_INP_TYPE:
  addr: 0xf8000b50
  mask: 0x6
  name: INP_TYPE
  description: |
    Input buffer control:
    00: Input off (input signal to selected controller is driven Low).
    01: Vref based differential receiver for SSTL, HSTL.
    10: Differential input receiver.
    11: LVCMOS receiver.
ps7_slcr_DDRIOB_DIFF0_reserved_INP_POWER:
  addr: 0xf8000b50
  mask: 0x1
  name: reserved_INP_POWER
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DIFF1_reserved:
  addr: 0xf8000b54
  mask: 0xfffff000
  name: reserved
  description: |
    Reserved
ps7_slcr_DDRIOB_DIFF1_PULLUP_EN:
  addr: 0xf8000b54
  mask: 0x800
  name: PULLUP_EN
  description: |
    enables pullup on output
    0: no pullup
    1: pullup enabled
ps7_slcr_DDRIOB_DIFF1_OUTPUT_EN:
  addr: 0xf8000b54
  mask: 0x600
  name: OUTPUT_EN
  description: |
    Enables output mode to enable output ties to
    00: ibuf
    01 and 10: reserved
    11: obuf
ps7_slcr_DDRIOB_DIFF1_TERM_DISABLE_MODE:
  addr: 0xf8000b54
  mask: 0x100
  name: TERM_DISABLE_MODE
  description: |
    Termination is used during read transactions and may be disabled (automatically by hardware) when there are no reads taking place through the DDR Interface. Disabling termination reduces power consumption.
    0: termination always enabled
    1: use 'dynamic_dci_ts' to disable termination when not in use
    NOTE: This bit must be 0 during DRAM init/training. It may be set to 1 after init/training completes.
ps7_slcr_DDRIOB_DIFF1_IBUF_DISABLE_MODE:
  addr: 0xf8000b54
  mask: 0x80
  name: IBUF_DISABLE_MODE
  description: |
    Use ibuf_disable_into control ibuf
    0: ibuf is enabled
    1: use ibuf_disable_in_to control enable
    NOTE: This must be 0 during DRAM init/training and can only be set to 1 after init/training completes.
ps7_slcr_DDRIOB_DIFF1_DCI_TYPE:
  addr: 0xf8000b54
  mask: 0x60
  name: DCI_TYPE
  description: |
    DCI Mode Selection:
    00: DCI Disabled (DDR2/3 ADDR and CLOCK)
    01: DCI Drive (LPDDR2)
    10: reserved
    11: DCI Termination (DDR2/3 DATA and DIFF)
ps7_slcr_DDRIOB_DIFF1_TERM_EN:
  addr: 0xf8000b54
  mask: 0x10
  name: TERM_EN
  description: |
    Tri State Termination Enable:
    0: disable
    1: enable
ps7_slcr_DDRIOB_DIFF1_DCI_UPDATE_B:
  addr: 0xf8000b54
  mask: 0x8
  name: DCI_UPDATE_B
  description: |
    DCI Update Enable:
    0: disable
    1: enable
ps7_slcr_DDRIOB_DIFF1_INP_TYPE:
  addr: 0xf8000b54
  mask: 0x6
  name: INP_TYPE
  description: |
    Input buffer control:
    00: Input off (input signal to selected controller is driven Low).
    01: Vref based differential receiver for SSTL, HSTL.
    10: Differential input receiver.
    11: LVCMOS receiver.
ps7_slcr_DDRIOB_DIFF1_reserved_INP_POWER:
  addr: 0xf8000b54
  mask: 0x1
  name: reserved_INP_POWER
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_CLOCK_reserved:
  addr: 0xf8000b58
  mask: 0xfffff000
  name: reserved
  description: |
    Reserved
ps7_slcr_DDRIOB_CLOCK_PULLUP_EN:
  addr: 0xf8000b58
  mask: 0x800
  name: PULLUP_EN
  description: |
    enables pullup on output
    0: no pullup
    1: pullup enabled
ps7_slcr_DDRIOB_CLOCK_OUTPUT_EN:
  addr: 0xf8000b58
  mask: 0x600
  name: OUTPUT_EN
  description: |
    Enables output mode to enable output ties to
    00: ibuf
    01 and 10: reserved
    11: obuf
ps7_slcr_DDRIOB_CLOCK_TERM_DISABLE_MODE:
  addr: 0xf8000b58
  mask: 0x100
  name: TERM_DISABLE_MODE
  description: |
    Termination is used during read transactions and may be disabled (automatically by hardware) when there are no reads taking place through the DDR Interface. Disabling termination reduces power consumption.
    0: termination always enabled
    1: use 'dynamic_dci_ts' to disable termination when not in use
    NOTE: This bit must be 0 during DRAM init/training. It may be set to 1 after init/training completes.
ps7_slcr_DDRIOB_CLOCK_IBUF_DISABLE_MODE:
  addr: 0xf8000b58
  mask: 0x80
  name: IBUF_DISABLE_MODE
  description: |
    Use ibuf_disable_into control ibuf
    0: ibuf is enabled
    1: use ibuf_disable_in_to control enable
    NOTE: This must be 0 during DRAM init/training and can only be set to 1 after init/training completes.
ps7_slcr_DDRIOB_CLOCK_DCI_TYPE:
  addr: 0xf8000b58
  mask: 0x60
  name: DCI_TYPE
  description: |
    DCI Mode Selection:
    00: DCI Disabled (DDR2/3 ADDR and CLOCK)
    01: DCI Drive (LPDDR2)
    10: reserved
    11: DCI Termination (DDR2/3 DATA and DIFF)
ps7_slcr_DDRIOB_CLOCK_TERM_EN:
  addr: 0xf8000b58
  mask: 0x10
  name: TERM_EN
  description: |
    Tri State Termination Enable:
    0: disable
    1: enable
ps7_slcr_DDRIOB_CLOCK_DCI_UPDATE_B:
  addr: 0xf8000b58
  mask: 0x8
  name: DCI_UPDATE_B
  description: |
    DCI Update Enable:
    0: disable
    1: enable
ps7_slcr_DDRIOB_CLOCK_INP_TYPE:
  addr: 0xf8000b58
  mask: 0x6
  name: INP_TYPE
  description: |
    Input buffer control:
    00: Input off (input signal to selected controller is driven Low).
    01: Vref based differential receiver for SSTL, HSTL.
    10: Differential input receiver.
    11: LVCMOS receiver.
ps7_slcr_DDRIOB_CLOCK_reserved_INP_POWER:
  addr: 0xf8000b58
  mask: 0x1
  name: reserved_INP_POWER
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DRIVE_SLEW_ADDR_reserved_RTERM:
  addr: 0xf8000b5c
  mask: 0xf8000000
  name: reserved_RTERM
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DRIVE_SLEW_ADDR_reserved_GTL:
  addr: 0xf8000b5c
  mask: 0x7000000
  name: reserved_GTL
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DRIVE_SLEW_ADDR_reserved_SLEW_N:
  addr: 0xf8000b5c
  mask: 0xf80000
  name: reserved_SLEW_N
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DRIVE_SLEW_ADDR_reserved_SLEW_P:
  addr: 0xf8000b5c
  mask: 0x7c000
  name: reserved_SLEW_P
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DRIVE_SLEW_ADDR_reserved_DRIVE_N:
  addr: 0xf8000b5c
  mask: 0x3f80
  name: reserved_DRIVE_N
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DRIVE_SLEW_ADDR_reserved_DRIVE_P:
  addr: 0xf8000b5c
  mask: 0x7f
  name: reserved_DRIVE_P
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DRIVE_SLEW_DATA_reserved_RTERM:
  addr: 0xf8000b60
  mask: 0xf8000000
  name: reserved_RTERM
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DRIVE_SLEW_DATA_reserved_GTL:
  addr: 0xf8000b60
  mask: 0x7000000
  name: reserved_GTL
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DRIVE_SLEW_DATA_reserved_SLEW_N:
  addr: 0xf8000b60
  mask: 0xf80000
  name: reserved_SLEW_N
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DRIVE_SLEW_DATA_reserved_SLEW_P:
  addr: 0xf8000b60
  mask: 0x7c000
  name: reserved_SLEW_P
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DRIVE_SLEW_DATA_reserved_DRIVE_N:
  addr: 0xf8000b60
  mask: 0x3f80
  name: reserved_DRIVE_N
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DRIVE_SLEW_DATA_reserved_DRIVE_P:
  addr: 0xf8000b60
  mask: 0x7f
  name: reserved_DRIVE_P
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DRIVE_SLEW_DIFF_reserved_RTERM:
  addr: 0xf8000b64
  mask: 0xf8000000
  name: reserved_RTERM
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DRIVE_SLEW_DIFF_reserved_GTL:
  addr: 0xf8000b64
  mask: 0x7000000
  name: reserved_GTL
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DRIVE_SLEW_DIFF_reserved_SLEW_N:
  addr: 0xf8000b64
  mask: 0xf80000
  name: reserved_SLEW_N
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DRIVE_SLEW_DIFF_reserved_SLEW_P:
  addr: 0xf8000b64
  mask: 0x7c000
  name: reserved_SLEW_P
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DRIVE_SLEW_DIFF_reserved_DRIVE_N:
  addr: 0xf8000b64
  mask: 0x3f80
  name: reserved_DRIVE_N
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DRIVE_SLEW_DIFF_reserved_DRIVE_P:
  addr: 0xf8000b64
  mask: 0x7f
  name: reserved_DRIVE_P
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DRIVE_SLEW_CLOCK_reserved_RTERM:
  addr: 0xf8000b68
  mask: 0xf8000000
  name: reserved_RTERM
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DRIVE_SLEW_CLOCK_reserved_GTL:
  addr: 0xf8000b68
  mask: 0x7000000
  name: reserved_GTL
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DRIVE_SLEW_CLOCK_reserved_SLEW_N:
  addr: 0xf8000b68
  mask: 0xf80000
  name: reserved_SLEW_N
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DRIVE_SLEW_CLOCK_reserved_SLEW_P:
  addr: 0xf8000b68
  mask: 0x7c000
  name: reserved_SLEW_P
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DRIVE_SLEW_CLOCK_reserved_DRIVE_N:
  addr: 0xf8000b68
  mask: 0x3f80
  name: reserved_DRIVE_N
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DRIVE_SLEW_CLOCK_reserved_DRIVE_P:
  addr: 0xf8000b68
  mask: 0x7f
  name: reserved_DRIVE_P
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DDR_CTRL_reserved:
  addr: 0xf8000b6c
  mask: 0xffff8000
  name: reserved
  description: |
    reserved
ps7_slcr_DDRIOB_DDR_CTRL_reserved_CKE_PULLUP_EN:
  addr: 0xf8000b6c
  mask: 0x4000
  name: reserved_CKE_PULLUP_EN
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DDR_CTRL_reserved_DRST_B_PULLUP_EN:
  addr: 0xf8000b6c
  mask: 0x2000
  name: reserved_DRST_B_PULLUP_EN
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DDR_CTRL_reserved_REFIO_PULLUP_EN:
  addr: 0xf8000b6c
  mask: 0x1000
  name: reserved_REFIO_PULLUP_EN
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DDR_CTRL_reserved_REFIO_TEST:
  addr: 0xf8000b6c
  mask: 0xc00
  name: reserved_REFIO_TEST
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DDR_CTRL_REFIO_EN:
  addr: 0xf8000b6c
  mask: 0x200
  name: REFIO_EN
  description: |
    Enables VRP,VRN
    0: VRP/VRN not used
    1: VRP/VRN used as refio
ps7_slcr_DDRIOB_DDR_CTRL_reserved_VREF_PULLUP_EN:
  addr: 0xf8000b6c
  mask: 0x180
  name: reserved_VREF_PULLUP_EN
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DDR_CTRL_VREF_EXT_EN:
  addr: 0xf8000b6c
  mask: 0x60
  name: VREF_EXT_EN
  description: |
    Enables External VREF input
    x0: Disable External VREF for lower 16 bits
    x1: Enable External VREF for lower 16 bits
    0x: Disable External VREF for upper 16 bits
    1x: Enable External VREF for upper 16 bits
ps7_slcr_DDRIOB_DDR_CTRL_VREF_SEL:
  addr: 0xf8000b6c
  mask: 0x1e
  name: VREF_SEL
  description: |
    Specifies DDR IOB Vref generator output:
    0001: VREF = 0.6V for LPDDR2 with 1.2V IO
    0100: VREF = 0.75V for DDR3 with 1.5V IO
    1000: VREF = 0.90V for DDR2 with 1.8V IO
ps7_slcr_DDRIOB_DDR_CTRL_VREF_INT_EN:
  addr: 0xf8000b6c
  mask: 0x1
  name: VREF_INT_EN
  description: |
    Enables VREF internal generator
ps7_slcr_DDRIOB_DCI_CTRL_reserved_1:
  addr: 0xf8000b70
  mask: 0xf0000000
  name: reserved_1
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_DDRIOB_DCI_CTRL_reserved_DCI_FREQ_CNT:
  addr: 0xf8000b70
  mask: 0x8000000
  name: reserved_DCI_FREQ_CNT
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DCI_CTRL_reserved_INT_DCI_EN:
  addr: 0xf8000b70
  mask: 0x4000000
  name: reserved_INT_DCI_EN
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DCI_CTRL_reserved_TST_RST:
  addr: 0xf8000b70
  mask: 0x2000000
  name: reserved_TST_RST
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DCI_CTRL_reserved_TST_HLP:
  addr: 0xf8000b70
  mask: 0x1000000
  name: reserved_TST_HLP
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DCI_CTRL_reserved_TST_HLN:
  addr: 0xf8000b70
  mask: 0x800000
  name: reserved_TST_HLN
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DCI_CTRL_reserved_TST_CLK:
  addr: 0xf8000b70
  mask: 0x400000
  name: reserved_TST_CLK
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DCI_CTRL_reserved_INIT_COMPLETE:
  addr: 0xf8000b70
  mask: 0x200000
  name: reserved_INIT_COMPLETE
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DCI_CTRL_UPDATE_CONTROL:
  addr: 0xf8000b70
  mask: 0x100000
  name: UPDATE_CONTROL
  description: |
    DCI Update Mode. Use the values in the Calibration Table.
ps7_slcr_DDRIOB_DCI_CTRL_PREF_OPT2:
  addr: 0xf8000b70
  mask: 0xe0000
  name: PREF_OPT2
  description: |
    DCI Calibration. Use the values in the Calibration Table.
ps7_slcr_DDRIOB_DCI_CTRL_reserved:
  addr: 0xf8000b70
  mask: 0x10000
  name: reserved
  description: |
    Reserved
ps7_slcr_DDRIOB_DCI_CTRL_PREF_OPT1:
  addr: 0xf8000b70
  mask: 0xc000
  name: PREF_OPT1
  description: |
    DCI Calibration. Use the values in the Calibration Table.
ps7_slcr_DDRIOB_DCI_CTRL_NREF_OPT4:
  addr: 0xf8000b70
  mask: 0x3800
  name: NREF_OPT4
  description: |
    DCI Calibration. Use the values in the Calibration Table.
ps7_slcr_DDRIOB_DCI_CTRL_NREF_OPT2:
  addr: 0xf8000b70
  mask: 0x700
  name: NREF_OPT2
  description: |
    DCI Calibration. Use the values in the Calibration Table.
ps7_slcr_DDRIOB_DCI_CTRL_NREF_OPT1:
  addr: 0xf8000b70
  mask: 0xc0
  name: NREF_OPT1
  description: |
    DCI Calibration. Use the values in the Calibration Table.
ps7_slcr_DDRIOB_DCI_CTRL_reserved_VRN_OUT:
  addr: 0xf8000b70
  mask: 0x20
  name: reserved_VRN_OUT
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DCI_CTRL_reserved_VRP_OUT:
  addr: 0xf8000b70
  mask: 0x10
  name: reserved_VRP_OUT
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DCI_CTRL_reserved_VRN_TRI:
  addr: 0xf8000b70
  mask: 0x8
  name: reserved_VRN_TRI
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DCI_CTRL_reserved_VRP_TRI:
  addr: 0xf8000b70
  mask: 0x4
  name: reserved_VRP_TRI
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DCI_CTRL_ENABLE:
  addr: 0xf8000b70
  mask: 0x2
  name: ENABLE
  description: |
    DCI System Enable. Set to 1 if any IOs in DDR IO Bank use DCI Termination. DDR2, DDR3 and LPDDR2 (Silicon Revision 2.0+) configurations require this bit set to 1
ps7_slcr_DDRIOB_DCI_CTRL_RESET:
  addr: 0xf8000b70
  mask: 0x1
  name: RESET
  description: |
    At least toggle once to initialize flops in DCI system
ps7_slcr_DDRIOB_DCI_STATUS_reserved_1:
  addr: 0xf8000b74
  mask: 0xffffc000
  name: reserved_1
  description: |
    Reserved. Writes are ignored, read data is zero.
ps7_slcr_DDRIOB_DCI_STATUS_DONE:
  addr: 0xf8000b74
  mask: 0x2000
  name: DONE
  description: |
    DCI done signal
ps7_slcr_DDRIOB_DCI_STATUS_reserved_HL_P_B_INIT:
  addr: 0xf8000b74
  mask: 0x1000
  name: reserved_HL_P_B_INIT
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DCI_STATUS_reserved_HL_N_B_INIT:
  addr: 0xf8000b74
  mask: 0x800
  name: reserved_HL_N_B_INIT
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DCI_STATUS_reserved_SCK:
  addr: 0xf8000b74
  mask: 0x400
  name: reserved_SCK
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DCI_STATUS_reserved_REFIO_UPDATE:
  addr: 0xf8000b74
  mask: 0x200
  name: reserved_REFIO_UPDATE
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DCI_STATUS_reserved_NORP:
  addr: 0xf8000b74
  mask: 0x100
  name: reserved_NORP
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DCI_STATUS_reserved_IO_UPDATE:
  addr: 0xf8000b74
  mask: 0x80
  name: reserved_IO_UPDATE
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DCI_STATUS_reserved_DATA:
  addr: 0xf8000b74
  mask: 0x40
  name: reserved_DATA
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DCI_STATUS_reserved_reserved:
  addr: 0xf8000b74
  mask: 0x20
  name: reserved_reserved
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DCI_STATUS_reserved_ADDR:
  addr: 0xf8000b74
  mask: 0x18
  name: reserved_ADDR
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DCI_STATUS_reserved_VRN_IN:
  addr: 0xf8000b74
  mask: 0x4
  name: reserved_VRN_IN
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DCI_STATUS_reserved_VRP_IN:
  addr: 0xf8000b74
  mask: 0x2
  name: reserved_VRP_IN
  description: |
    Reserved. Do not modify.
ps7_slcr_DDRIOB_DCI_STATUS_LOCK:
  addr: 0xf8000b74
  mask: 0x1
  name: LOCK
  description: |
    DCI Status input Read Only
ps7_spi1_Config_reg0_reserved_1:
  addr: 0xe0007000
  mask: 0xfffc0000
  name: reserved_1
  description: |
    Reserved, read as zero, ignored on write.
ps7_spi1_Config_reg0_Modefail_gen_en:
  addr: 0xe0007000
  mask: 0x20000
  name: Modefail_gen_en
  description: |
    ModeFail Generation Enable
    1: enable
    0: disable
ps7_spi1_Config_reg0_Man_start_com:
  addr: 0xe0007000
  mask: 0x10000
  name: Man_start_com
  description: |
    Manual Start Command
    1: start transmission of data
    0: don't care
ps7_spi1_Config_reg0_Man_start_en:
  addr: 0xe0007000
  mask: 0x8000
  name: Man_start_en
  description: |
    Manual Start Enable
    1: enables manual start
    0: auto mode
ps7_spi1_Config_reg0_Manual_CS:
  addr: 0xe0007000
  mask: 0x4000
  name: Manual_CS
  description: |
    Manual CS
    1: manual CS mode
    0: auto mode
ps7_spi1_Config_reg0_CS:
  addr: 0xe0007000
  mask: 0x3c00
  name: CS
  description: |
    Peripheral chip select lines (only valid if Manual_CS=1)
    xxx0 - slave 0 selected
    xx01 - slave 1 selected
    x011 - slave 2 selected
    0111 - reserved
    1111 - No slave selected
ps7_spi1_Config_reg0_PERI_SEL:
  addr: 0xe0007000
  mask: 0x200
  name: PERI_SEL
  description: |
    Peripheral select decode
    1: allow external 3-to-8 decode
    0: only 1 of 3 selects
ps7_spi1_Config_reg0_REF_CLK:
  addr: 0xe0007000
  mask: 0x100
  name: REF_CLK
  description: |
    Master reference clock select
    1: not supported
    0: use SPI REFERENCE CLOCK
ps7_spi1_Config_reg0_reserved:
  addr: 0xe0007000
  mask: 0xc0
  name: reserved
  description: |
    Reserved, read as zero, write with 00
ps7_spi1_Config_reg0_BAUD_RATE_DIV:
  addr: 0xe0007000
  mask: 0x38
  name: BAUD_RATE_DIV
  description: |
    Master mode baud rate divisor controls the amount the spi_ref_clk is divided inside the SPI block
    000: not supported
    001: divide by 4
    010: divide by 8
    011: divide by 16
    100: divide by 32
    101: divide by 64
    110: divide by 128
    111: divide by 256
ps7_spi1_Config_reg0_CLK_PH:
  addr: 0xe0007000
  mask: 0x4
  name: CLK_PH
  description: |
    Clock phase
    1: the SPI clock is inactive outside the word
    0: the SPI clock is active outside the word
ps7_spi1_Config_reg0_CLK_POL:
  addr: 0xe0007000
  mask: 0x2
  name: CLK_POL
  description: |
    Clock polarity outside SPI word
    1: the SPI clock is quiescent high
    0: the SPI clock is quiescent low
ps7_spi1_Config_reg0_MODE_SEL:
  addr: 0xe0007000
  mask: 0x1
  name: MODE_SEL
  description: |
    Mode select
    1: the SPI is in master mode
    0: the SPI is in slave mode
ps7_spi1_Intr_status_reg0_reserved:
  addr: 0xe0007004
  mask: 0xffffff80
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_spi1_Intr_status_reg0_TX_FIFO_underflow:
  addr: 0xe0007004
  mask: 0x40
  name: TX_FIFO_underflow
  description: |
    TX FIFO underflow, write one to this bit location to clear.
    1: underflow is detected
    0: no underflow has been detected
ps7_spi1_Intr_status_reg0_RX_FIFO_full:
  addr: 0xe0007004
  mask: 0x20
  name: RX_FIFO_full
  description: |
    RX FIFO full
    1: FIFO is full
    0: FIFO is not full
ps7_spi1_Intr_status_reg0_RX_FIFO_not_empty:
  addr: 0xe0007004
  mask: 0x10
  name: RX_FIFO_not_empty
  description: |
    RX FIFO not empty
    1: FIFO has more than or equal to THRESHOLD entries
    0: FIFO has less than RX THRESHOLD entries
ps7_spi1_Intr_status_reg0_TX_FIFO_full:
  addr: 0xe0007004
  mask: 0x8
  name: TX_FIFO_full
  description: |
    TX FIFO full
    1: FIFO is full
    0: FIFO is not full
ps7_spi1_Intr_status_reg0_TX_FIFO_not_full:
  addr: 0xe0007004
  mask: 0x4
  name: TX_FIFO_not_full
  description: |
    TX FIFO not full
    1: FIFO has less than THRESHOLD entries
    0: FIFO has more than or equal toTHRESHOLD entries
ps7_spi1_Intr_status_reg0_MODE_FAIL:
  addr: 0xe0007004
  mask: 0x2
  name: MODE_FAIL
  description: |
    ModeFail interrupt, write one to this bit location to clear.
    1: a mode fault has occurred
    0: no mode fault has been detected
ps7_spi1_Intr_status_reg0_RX_OVERFLOW:
  addr: 0xe0007004
  mask: 0x1
  name: RX_OVERFLOW
  description: |
    Receive Overflow interrupt, write one to this bit location to clear.
    1: overflow occured
    0: no overflow occurred
ps7_spi1_Intrpt_en_reg0_reserved:
  addr: 0xe0007008
  mask: 0xffffff80
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_spi1_Intrpt_en_reg0_TX_FIFO_underflow:
  addr: 0xe0007008
  mask: 0x40
  name: TX_FIFO_underflow
  description: |
    TX FIFO underflow
    enable
    1: enable the interrupt
    0: no effect
ps7_spi1_Intrpt_en_reg0_RX_FIFO_full:
  addr: 0xe0007008
  mask: 0x20
  name: RX_FIFO_full
  description: |
    RX FIFO full
    enable
    1: enable the interrupt
    0: no effect
ps7_spi1_Intrpt_en_reg0_RX_FIFO_not_empty:
  addr: 0xe0007008
  mask: 0x10
  name: RX_FIFO_not_empty
  description: |
    RX FIFO not empty
    enable
    1: enable the interrupt
    0: no effect
ps7_spi1_Intrpt_en_reg0_TX_FIFO_full:
  addr: 0xe0007008
  mask: 0x8
  name: TX_FIFO_full
  description: |
    TX FIFO full
    enable
    1: enable the interrupt
    0: no effect
ps7_spi1_Intrpt_en_reg0_TX_FIFO_not_full:
  addr: 0xe0007008
  mask: 0x4
  name: TX_FIFO_not_full
  description: |
    TX FIFO not full
    enable
    1: enable the interrupt
    0: no effect
ps7_spi1_Intrpt_en_reg0_MODE_FAIL:
  addr: 0xe0007008
  mask: 0x2
  name: MODE_FAIL
  description: |
    ModeFail interrupt
    enable
    1: enable the interrupt
    0: no effect
ps7_spi1_Intrpt_en_reg0_RX_OVERFLOW:
  addr: 0xe0007008
  mask: 0x1
  name: RX_OVERFLOW
  description: |
    Receive Overflow interrupt enable
    1: enable the interrupt
    0: no effect
ps7_spi1_Intrpt_dis_reg0_reserved:
  addr: 0xe000700c
  mask: 0xffffff80
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_spi1_Intrpt_dis_reg0_TX_FIFO_underflow:
  addr: 0xe000700c
  mask: 0x40
  name: TX_FIFO_underflow
  description: |
    TX FIFO underflow
    enable
    1: disables the interrupt
    0: no effect
ps7_spi1_Intrpt_dis_reg0_RX_FIFO_full:
  addr: 0xe000700c
  mask: 0x20
  name: RX_FIFO_full
  description: |
    RX FIFO full
    enable
    1: disables the interrupt
    0: no effect
ps7_spi1_Intrpt_dis_reg0_RX_FIFO_not_empty:
  addr: 0xe000700c
  mask: 0x10
  name: RX_FIFO_not_empty
  description: |
    RX FIFO not empty
    enable
    1: disables the interrupt
    0: no effect
ps7_spi1_Intrpt_dis_reg0_TX_FIFO_full:
  addr: 0xe000700c
  mask: 0x8
  name: TX_FIFO_full
  description: |
    TX FIFO full
    enable
    1: disables the interrupt
    0: no effect
ps7_spi1_Intrpt_dis_reg0_TX_FIFO_not_full:
  addr: 0xe000700c
  mask: 0x4
  name: TX_FIFO_not_full
  description: |
    TX FIFO not full
    enable
    1: disables the interrupt
    0: no effect
ps7_spi1_Intrpt_dis_reg0_MODE_FAIL:
  addr: 0xe000700c
  mask: 0x2
  name: MODE_FAIL
  description: |
    ModeFail interrupt
    enable
    1: disables the interrupt
    0: no effect
ps7_spi1_Intrpt_dis_reg0_RX_OVERFLOW:
  addr: 0xe000700c
  mask: 0x1
  name: RX_OVERFLOW
  description: |
    Receive Overflow interrupt enable
    1: disables the interrupt
    0: no effect
ps7_spi1_Intrpt_mask_reg0_reserved:
  addr: 0xe0007010
  mask: 0xffffff80
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_spi1_Intrpt_mask_reg0_TX_FIFO_underflow:
  addr: 0xe0007010
  mask: 0x40
  name: TX_FIFO_underflow
  description: |
    TX FIFO underflow
    enable
    1: interrupt is disabled
    0: interrupt is enabled
ps7_spi1_Intrpt_mask_reg0_RX_FIFO_full:
  addr: 0xe0007010
  mask: 0x20
  name: RX_FIFO_full
  description: |
    RX FIFO full
    enable
    1: interrupt is disabled
    0: interrupt is enabled
ps7_spi1_Intrpt_mask_reg0_RX_FIFO_not_empty:
  addr: 0xe0007010
  mask: 0x10
  name: RX_FIFO_not_empty
  description: |
    RX FIFO not empty
    enable
    1: interrupt is disabled
    0: interrupt is enabled
ps7_spi1_Intrpt_mask_reg0_TX_FIFO_full:
  addr: 0xe0007010
  mask: 0x8
  name: TX_FIFO_full
  description: |
    TX FIFO full
    enable
    1: interrupt is disabled
    0: interrupt is enabled
ps7_spi1_Intrpt_mask_reg0_TX_FIFO_not_full:
  addr: 0xe0007010
  mask: 0x4
  name: TX_FIFO_not_full
  description: |
    TX FIFO not full
    enable
    1: interrupt is disabled
    0: interrupt is enabled
ps7_spi1_Intrpt_mask_reg0_MODE_FAIL:
  addr: 0xe0007010
  mask: 0x2
  name: MODE_FAIL
  description: |
    ModeFail interrupt
    enable
    1: interrupt is disabled
    0: interrupt is enabled
ps7_spi1_Intrpt_mask_reg0_RX_OVERFLOW:
  addr: 0xe0007010
  mask: 0x1
  name: RX_OVERFLOW
  description: |
    Receive Overflow interrupt enable
    1: interrupt is disabled
    0: interrupt is enabled
ps7_spi1_En_reg0_reserved:
  addr: 0xe0007014
  mask: 0xfffffffe
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_spi1_En_reg0_SPI_EN:
  addr: 0xe0007014
  mask: 0x1
  name: SPI_EN
  description: |
    SPI_Enable
    1: enable the SPI
    0: disable the SPI
ps7_spi1_Delay_reg0_d_nss:
  addr: 0xe0007018
  mask: 0xff000000
  name: d_nss
  description: |
    Delay in SPI REFERENCE CLOCK or ext_clk cycles
    for the length that the master mode chip select outputs are de-asserted between words when cpha=0.
ps7_spi1_Delay_reg0_d_btwn:
  addr: 0xe0007018
  mask: 0xff0000
  name: d_btwn
  description: |
    Delay in SPI REFERENCE CLOCK or ext_clk cycles
    between one chip select being de-activated and the
    activation of another
ps7_spi1_Delay_reg0_d_after:
  addr: 0xe0007018
  mask: 0xff00
  name: d_after
  description: |
    Delay in SPI REFERENCE CLOCK or ext_clk cycles between last bit of current word and the first bit of the next word.
ps7_spi1_Delay_reg0_d_int:
  addr: 0xe0007018
  mask: 0xff
  name: d_int
  description: |
    Added delay in SPI REFERENCE CLOCK or ext_clk
    cycles between setting n_ss_out low and first bit
    transfer.
ps7_spi1_Tx_data_reg0_TX_FIFO_data:
  addr: 0xe000701c
  mask: 0xffffffff
  name: TX_FIFO_data
  description: |
    Data to TX FIFO
ps7_spi1_Rx_data_reg0_RX_FIFO_data:
  addr: 0xe0007020
  mask: 0xffffffff
  name: RX_FIFO_data
  description: |
    Data from TX FIFO
ps7_spi1_Slave_Idle_count_reg0_reserved:
  addr: 0xe0007024
  mask: 0xffffff00
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_spi1_Slave_Idle_count_reg0_Slave_Idle_coun:
  addr: 0xe0007024
  mask: 0xff
  name: Slave_Idle_coun
  description: |
    SPI in slave mode detects a start only when the
    external SPI master serial clock (sclk_in) is stable
    (quiescent state) for SPI REFERENCE CLOCK cycles
    specified by slave idle count register or when the SPI
    is deselected.
ps7_spi1_TX_thres_reg0_DEPTH_of_TX_FIFO:
  addr: 0xe0007028
  mask: 0xffffffff
  name: DEPTH_of_TX_FIFO
  description: |
    Defines the level at which the TX FIFO not full interrupt is generated
ps7_spi1_RX_thres_reg0_DEPTH_of_RX_FIFO:
  addr: 0xe000702c
  mask: 0xffffffff
  name: DEPTH_of_RX_FIFO
  description: |
    Defines the level at which the RX FIFO not empty interrupt is generated
ps7_spi1_Mod_id_reg0_reserved:
  addr: 0xe00070fc
  mask: 0xfe000000
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_spi1_Mod_id_reg0_module_ID:
  addr: 0xe00070fc
  mask: 0x1ffffff
  name: module_ID
  description: |
    Module ID number
ps7_spi0_Config_reg0_reserved_1:
  addr: 0xe0006000
  mask: 0xfffc0000
  name: reserved_1
  description: |
    Reserved, read as zero, ignored on write.
ps7_spi0_Config_reg0_Modefail_gen_en:
  addr: 0xe0006000
  mask: 0x20000
  name: Modefail_gen_en
  description: |
    ModeFail Generation Enable
    1: enable
    0: disable
ps7_spi0_Config_reg0_Man_start_com:
  addr: 0xe0006000
  mask: 0x10000
  name: Man_start_com
  description: |
    Manual Start Command
    1: start transmission of data
    0: don't care
ps7_spi0_Config_reg0_Man_start_en:
  addr: 0xe0006000
  mask: 0x8000
  name: Man_start_en
  description: |
    Manual Start Enable
    1: enables manual start
    0: auto mode
ps7_spi0_Config_reg0_Manual_CS:
  addr: 0xe0006000
  mask: 0x4000
  name: Manual_CS
  description: |
    Manual CS
    1: manual CS mode
    0: auto mode
ps7_spi0_Config_reg0_CS:
  addr: 0xe0006000
  mask: 0x3c00
  name: CS
  description: |
    Peripheral chip select lines (only valid if Manual_CS=1)
    xxx0 - slave 0 selected
    xx01 - slave 1 selected
    x011 - slave 2 selected
    0111 - reserved
    1111 - No slave selected
ps7_spi0_Config_reg0_PERI_SEL:
  addr: 0xe0006000
  mask: 0x200
  name: PERI_SEL
  description: |
    Peripheral select decode
    1: allow external 3-to-8 decode
    0: only 1 of 3 selects
ps7_spi0_Config_reg0_REF_CLK:
  addr: 0xe0006000
  mask: 0x100
  name: REF_CLK
  description: |
    Master reference clock select
    1: not supported
    0: use SPI REFERENCE CLOCK
ps7_spi0_Config_reg0_reserved:
  addr: 0xe0006000
  mask: 0xc0
  name: reserved
  description: |
    Reserved, read as zero, write with 00
ps7_spi0_Config_reg0_BAUD_RATE_DIV:
  addr: 0xe0006000
  mask: 0x38
  name: BAUD_RATE_DIV
  description: |
    Master mode baud rate divisor controls the amount the spi_ref_clk is divided inside the SPI block
    000: not supported
    001: divide by 4
    010: divide by 8
    011: divide by 16
    100: divide by 32
    101: divide by 64
    110: divide by 128
    111: divide by 256
ps7_spi0_Config_reg0_CLK_PH:
  addr: 0xe0006000
  mask: 0x4
  name: CLK_PH
  description: |
    Clock phase
    1: the SPI clock is inactive outside the word
    0: the SPI clock is active outside the word
ps7_spi0_Config_reg0_CLK_POL:
  addr: 0xe0006000
  mask: 0x2
  name: CLK_POL
  description: |
    Clock polarity outside SPI word
    1: the SPI clock is quiescent high
    0: the SPI clock is quiescent low
ps7_spi0_Config_reg0_MODE_SEL:
  addr: 0xe0006000
  mask: 0x1
  name: MODE_SEL
  description: |
    Mode select
    1: the SPI is in master mode
    0: the SPI is in slave mode
ps7_spi0_Intr_status_reg0_reserved:
  addr: 0xe0006004
  mask: 0xffffff80
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_spi0_Intr_status_reg0_TX_FIFO_underflow:
  addr: 0xe0006004
  mask: 0x40
  name: TX_FIFO_underflow
  description: |
    TX FIFO underflow, write one to this bit location to clear.
    1: underflow is detected
    0: no underflow has been detected
ps7_spi0_Intr_status_reg0_RX_FIFO_full:
  addr: 0xe0006004
  mask: 0x20
  name: RX_FIFO_full
  description: |
    RX FIFO full
    1: FIFO is full
    0: FIFO is not full
ps7_spi0_Intr_status_reg0_RX_FIFO_not_empty:
  addr: 0xe0006004
  mask: 0x10
  name: RX_FIFO_not_empty
  description: |
    RX FIFO not empty
    1: FIFO has more than or equal to THRESHOLD entries
    0: FIFO has less than RX THRESHOLD entries
ps7_spi0_Intr_status_reg0_TX_FIFO_full:
  addr: 0xe0006004
  mask: 0x8
  name: TX_FIFO_full
  description: |
    TX FIFO full
    1: FIFO is full
    0: FIFO is not full
ps7_spi0_Intr_status_reg0_TX_FIFO_not_full:
  addr: 0xe0006004
  mask: 0x4
  name: TX_FIFO_not_full
  description: |
    TX FIFO not full
    1: FIFO has less than THRESHOLD entries
    0: FIFO has more than or equal toTHRESHOLD entries
ps7_spi0_Intr_status_reg0_MODE_FAIL:
  addr: 0xe0006004
  mask: 0x2
  name: MODE_FAIL
  description: |
    ModeFail interrupt, write one to this bit location to clear.
    1: a mode fault has occurred
    0: no mode fault has been detected
ps7_spi0_Intr_status_reg0_RX_OVERFLOW:
  addr: 0xe0006004
  mask: 0x1
  name: RX_OVERFLOW
  description: |
    Receive Overflow interrupt, write one to this bit location to clear.
    1: overflow occured
    0: no overflow occurred
ps7_spi0_Intrpt_en_reg0_reserved:
  addr: 0xe0006008
  mask: 0xffffff80
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_spi0_Intrpt_en_reg0_TX_FIFO_underflow:
  addr: 0xe0006008
  mask: 0x40
  name: TX_FIFO_underflow
  description: |
    TX FIFO underflow
    enable
    1: enable the interrupt
    0: no effect
ps7_spi0_Intrpt_en_reg0_RX_FIFO_full:
  addr: 0xe0006008
  mask: 0x20
  name: RX_FIFO_full
  description: |
    RX FIFO full
    enable
    1: enable the interrupt
    0: no effect
ps7_spi0_Intrpt_en_reg0_RX_FIFO_not_empty:
  addr: 0xe0006008
  mask: 0x10
  name: RX_FIFO_not_empty
  description: |
    RX FIFO not empty
    enable
    1: enable the interrupt
    0: no effect
ps7_spi0_Intrpt_en_reg0_TX_FIFO_full:
  addr: 0xe0006008
  mask: 0x8
  name: TX_FIFO_full
  description: |
    TX FIFO full
    enable
    1: enable the interrupt
    0: no effect
ps7_spi0_Intrpt_en_reg0_TX_FIFO_not_full:
  addr: 0xe0006008
  mask: 0x4
  name: TX_FIFO_not_full
  description: |
    TX FIFO not full
    enable
    1: enable the interrupt
    0: no effect
ps7_spi0_Intrpt_en_reg0_MODE_FAIL:
  addr: 0xe0006008
  mask: 0x2
  name: MODE_FAIL
  description: |
    ModeFail interrupt
    enable
    1: enable the interrupt
    0: no effect
ps7_spi0_Intrpt_en_reg0_RX_OVERFLOW:
  addr: 0xe0006008
  mask: 0x1
  name: RX_OVERFLOW
  description: |
    Receive Overflow interrupt enable
    1: enable the interrupt
    0: no effect
ps7_spi0_Intrpt_dis_reg0_reserved:
  addr: 0xe000600c
  mask: 0xffffff80
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_spi0_Intrpt_dis_reg0_TX_FIFO_underflow:
  addr: 0xe000600c
  mask: 0x40
  name: TX_FIFO_underflow
  description: |
    TX FIFO underflow
    enable
    1: disables the interrupt
    0: no effect
ps7_spi0_Intrpt_dis_reg0_RX_FIFO_full:
  addr: 0xe000600c
  mask: 0x20
  name: RX_FIFO_full
  description: |
    RX FIFO full
    enable
    1: disables the interrupt
    0: no effect
ps7_spi0_Intrpt_dis_reg0_RX_FIFO_not_empty:
  addr: 0xe000600c
  mask: 0x10
  name: RX_FIFO_not_empty
  description: |
    RX FIFO not empty
    enable
    1: disables the interrupt
    0: no effect
ps7_spi0_Intrpt_dis_reg0_TX_FIFO_full:
  addr: 0xe000600c
  mask: 0x8
  name: TX_FIFO_full
  description: |
    TX FIFO full
    enable
    1: disables the interrupt
    0: no effect
ps7_spi0_Intrpt_dis_reg0_TX_FIFO_not_full:
  addr: 0xe000600c
  mask: 0x4
  name: TX_FIFO_not_full
  description: |
    TX FIFO not full
    enable
    1: disables the interrupt
    0: no effect
ps7_spi0_Intrpt_dis_reg0_MODE_FAIL:
  addr: 0xe000600c
  mask: 0x2
  name: MODE_FAIL
  description: |
    ModeFail interrupt
    enable
    1: disables the interrupt
    0: no effect
ps7_spi0_Intrpt_dis_reg0_RX_OVERFLOW:
  addr: 0xe000600c
  mask: 0x1
  name: RX_OVERFLOW
  description: |
    Receive Overflow interrupt enable
    1: disables the interrupt
    0: no effect
ps7_spi0_Intrpt_mask_reg0_reserved:
  addr: 0xe0006010
  mask: 0xffffff80
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_spi0_Intrpt_mask_reg0_TX_FIFO_underflow:
  addr: 0xe0006010
  mask: 0x40
  name: TX_FIFO_underflow
  description: |
    TX FIFO underflow
    enable
    1: interrupt is disabled
    0: interrupt is enabled
ps7_spi0_Intrpt_mask_reg0_RX_FIFO_full:
  addr: 0xe0006010
  mask: 0x20
  name: RX_FIFO_full
  description: |
    RX FIFO full
    enable
    1: interrupt is disabled
    0: interrupt is enabled
ps7_spi0_Intrpt_mask_reg0_RX_FIFO_not_empty:
  addr: 0xe0006010
  mask: 0x10
  name: RX_FIFO_not_empty
  description: |
    RX FIFO not empty
    enable
    1: interrupt is disabled
    0: interrupt is enabled
ps7_spi0_Intrpt_mask_reg0_TX_FIFO_full:
  addr: 0xe0006010
  mask: 0x8
  name: TX_FIFO_full
  description: |
    TX FIFO full
    enable
    1: interrupt is disabled
    0: interrupt is enabled
ps7_spi0_Intrpt_mask_reg0_TX_FIFO_not_full:
  addr: 0xe0006010
  mask: 0x4
  name: TX_FIFO_not_full
  description: |
    TX FIFO not full
    enable
    1: interrupt is disabled
    0: interrupt is enabled
ps7_spi0_Intrpt_mask_reg0_MODE_FAIL:
  addr: 0xe0006010
  mask: 0x2
  name: MODE_FAIL
  description: |
    ModeFail interrupt
    enable
    1: interrupt is disabled
    0: interrupt is enabled
ps7_spi0_Intrpt_mask_reg0_RX_OVERFLOW:
  addr: 0xe0006010
  mask: 0x1
  name: RX_OVERFLOW
  description: |
    Receive Overflow interrupt enable
    1: interrupt is disabled
    0: interrupt is enabled
ps7_spi0_En_reg0_reserved:
  addr: 0xe0006014
  mask: 0xfffffffe
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_spi0_En_reg0_SPI_EN:
  addr: 0xe0006014
  mask: 0x1
  name: SPI_EN
  description: |
    SPI_Enable
    1: enable the SPI
    0: disable the SPI
ps7_spi0_Delay_reg0_d_nss:
  addr: 0xe0006018
  mask: 0xff000000
  name: d_nss
  description: |
    Delay in SPI REFERENCE CLOCK or ext_clk cycles
    for the length that the master mode chip select outputs are de-asserted between words when cpha=0.
ps7_spi0_Delay_reg0_d_btwn:
  addr: 0xe0006018
  mask: 0xff0000
  name: d_btwn
  description: |
    Delay in SPI REFERENCE CLOCK or ext_clk cycles
    between one chip select being de-activated and the
    activation of another
ps7_spi0_Delay_reg0_d_after:
  addr: 0xe0006018
  mask: 0xff00
  name: d_after
  description: |
    Delay in SPI REFERENCE CLOCK or ext_clk cycles between last bit of current word and the first bit of the next word.
ps7_spi0_Delay_reg0_d_int:
  addr: 0xe0006018
  mask: 0xff
  name: d_int
  description: |
    Added delay in SPI REFERENCE CLOCK or ext_clk
    cycles between setting n_ss_out low and first bit
    transfer.
ps7_spi0_Tx_data_reg0_TX_FIFO_data:
  addr: 0xe000601c
  mask: 0xffffffff
  name: TX_FIFO_data
  description: |
    Data to TX FIFO
ps7_spi0_Rx_data_reg0_RX_FIFO_data:
  addr: 0xe0006020
  mask: 0xffffffff
  name: RX_FIFO_data
  description: |
    Data from TX FIFO
ps7_spi0_Slave_Idle_count_reg0_reserved:
  addr: 0xe0006024
  mask: 0xffffff00
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_spi0_Slave_Idle_count_reg0_Slave_Idle_coun:
  addr: 0xe0006024
  mask: 0xff
  name: Slave_Idle_coun
  description: |
    SPI in slave mode detects a start only when the
    external SPI master serial clock (sclk_in) is stable
    (quiescent state) for SPI REFERENCE CLOCK cycles
    specified by slave idle count register or when the SPI
    is deselected.
ps7_spi0_TX_thres_reg0_DEPTH_of_TX_FIFO:
  addr: 0xe0006028
  mask: 0xffffffff
  name: DEPTH_of_TX_FIFO
  description: |
    Defines the level at which the TX FIFO not full interrupt is generated
ps7_spi0_RX_thres_reg0_DEPTH_of_RX_FIFO:
  addr: 0xe000602c
  mask: 0xffffffff
  name: DEPTH_of_RX_FIFO
  description: |
    Defines the level at which the RX FIFO not empty interrupt is generated
ps7_spi0_Mod_id_reg0_reserved:
  addr: 0xe00060fc
  mask: 0xfe000000
  name: reserved
  description: |
    Reserved, read as zero, ignored on write.
ps7_spi0_Mod_id_reg0_module_ID:
  addr: 0xe00060fc
  mask: 0x1ffffff
  name: module_ID
  description: |
    Module ID number
ps7_swdt_MODE_ZKEY:
  addr: 0xf8005000
  mask: 0xfff000
  name: ZKEY
  description: |
    Zero access key - writes to the zero mode register are only valid if this field is set to 0xABC; this field is write only.
ps7_swdt_MODE_reserved_1:
  addr: 0xf8005000
  mask: 0xe00
  name: reserved_1
  description: |
    Should be zero (sbz)
ps7_swdt_MODE_IRQLN:
  addr: 0xf8005000
  mask: 0x180
  name: IRQLN
  description: |
    Interrupt request length - selects the number of pclk cycles during which an interrupt request is held active after it is invoked:
    00 = 4
    01 = 8
    10 = 16
    11 = 32
ps7_swdt_MODE_RSTLN:
  addr: 0xf8005000
  mask: 0x70
  name: RSTLN
  description: |
    Reset length - selects the number of clock cycles (pclk) during which the internal system reset is held active after it is invoked:
    000 = 2
    001 = 4
    010 = 8
    011 = 16
    100 = 32
    101 = 64
    110 = 128 111 = 256
    Note: The minimum number of cycles required for an AMBA reset is two.
ps7_swdt_MODE_reserved:
  addr: 0xf8005000
  mask: 0x8
  name: reserved
  description: |
    Should be zero (sbz)
ps7_swdt_MODE_IRQEN:
  addr: 0xf8005000
  mask: 0x4
  name: IRQEN
  description: |
    Interrupt request enable - if set, the watchdog will issue an interrupt request when the counter reaches zero, if WDEN = 1.
ps7_swdt_MODE_RSTEN:
  addr: 0xf8005000
  mask: 0x2
  name: RSTEN
  description: |
    Reset enable - if set, the watchdog will issue an internal reset when the counter reaches zero, if WDEN = 1.
ps7_swdt_MODE_WDEN:
  addr: 0xf8005000
  mask: 0x1
  name: WDEN
  description: |
    Watchdog enable - if set, the watchdog is enabled and can generate any signals that are enabled.
ps7_swdt_CONTROL_CKEY:
  addr: 0xf8005004
  mask: 0x3ffc000
  name: CKEY
  description: |
    Counter access key - writes to the control register are only valid if this field is set to 0x248; this field is write only.
ps7_swdt_CONTROL_CRV:
  addr: 0xf8005004
  mask: 0x3ffc
  name: CRV
  description: |
    Counter restart value - the counter is restarted with the value 0xNNNFFF, where NNN is the value of this field.
ps7_swdt_CONTROL_CLKSEL:
  addr: 0xf8005004
  mask: 0x3
  name: CLKSEL
  description: |
    Counter clock prescale - selects the prescaler division ratio:
    00 = pclk divided by 8
    01 = pclk divided by 64
    10 = pclk divided by 512
    11 = pclk divided by 4096
    Note: If a restart signal is received the prescaler should be reset.
ps7_swdt_RESTART_RSTKEY:
  addr: 0xf8005008
  mask: 0xffff
  name: RSTKEY
  description: |
    Restart key - the watchdog is restarted if this field is set to the value 0x1999
ps7_swdt_STATUS_WDZ:
  addr: 0xf800500c
  mask: 0x1
  name: WDZ
  description: |
    set when the watchdog reaches zero count
ps7_dmac0_ns_DSR_reserved:
  addr: 0xf8004000
  mask: 0xfffffc00
  name: reserved
  description: |
    Reserved, read undefined
ps7_dmac0_ns_DSR_DNS:
  addr: 0xf8004000
  mask: 0x200
  name: DNS
  description: |
    Provides the security status of the DMA manager thread:
    0: Secure state
    1: Non-secure state
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_DSR_Wakeup_event:
  addr: 0xf8004000
  mask: 0x1f0
  name: Wakeup_event
  description: |
    When the DMA manager executes a DMAWFE instruction, it is waiting for one of the following events to occur from any of the DMA channel treads:
    0 0000: event[0]
    0 0001: event[1]
    ...
    0 1111: event[15]
    1 xxxx: reserved
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_DSR_DMA_status:
  addr: 0xf8004000
  mask: 0xf
  name: DMA_status
  description: |
    The current operating state of the DMA manager:
    0000: Stopped
    0001: Executing
    0010: Cache miss
    0011: Updating PC
    0100: Waiting for event
    0101 to 1110: reserved
    1111: Faulting.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_DPC_pc_mgr:
  addr: 0xf8004004
  mask: 0xffffffff
  name: pc_mgr
  description: |
    Program counter for the DMA manager thread
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_INTEN_event_irq_select:
  addr: 0xf8004020
  mask: 0xffffffff
  name: event_irq_select
  description: |
    Control the respond of a DMA channel thread when it executes a DMASEV instruction. The channel thread will either signal the same DMASEV instruction to the other threads, or assert its interrupt signal. Bits [7:0] correspond to channels [7:0].
    0: The channel tread signals a DMASEV to the other threads (this typically selected when interrupts are not used)
    1: Assert the channel's interrupt signal to the PS interrupt controller.
    Reserved
    This bit-field has the following special access attributes:
     srw: During secure access, it is read write.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsrw: During non-secure access, if thread is non-secure, it is read write.
    
ps7_dmac0_ns_INT_EVENT_RIS_DMASEV_active:
  addr: 0xf8004024
  mask: 0xffffffff
  name: DMASEV_active
  description: |
    Raw status of the event or interrupt state.
    There are sixteen possible event settings [15:0] and eight possible interrupts [7:0]:
    0: Inactive
    1: Active
    Note:
    When the DMAC executes a DMASEV N instruction to send event N, the INTEN Register controls whether the DMAC:
    signals an interrupt using the appropriate irq sends the event to all of the threads.
    Reserved
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_INTMIS_irq_status:
  addr: 0xf8004028
  mask: 0xffffffff
  name: irq_status
  description: |
    Interrupt signal state for DMA channel [7:0]:
    0: inactive (IRQ signals is Low).
    1: active (IRQ signals is HIgh).
    Reserved
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_INTCLR_irq_clr:
  addr: 0xf800402c
  mask: 0xffffffff
  name: irq_clr
  description: |
    Clear interrupt(s) for DMA channel [7:0]:
    0: no affect
    1: clear the interrupt
    Reserved
    This bit-field has the following special access attributes:
     swo: During secure access, it is  write only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnswo: During non-secure access, if thread is non-secure, it is write only.
    
ps7_dmac0_ns_FSRD_reserved:
  addr: 0xf8004030
  mask: 0xfffffffe
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_ns_FSRD_fs_mgr:
  addr: 0xf8004030
  mask: 0x1
  name: fs_mgr
  description: |
    Provides the fault status of the DMA manager:
    0: Not in the Faulting state
    1: Faulting state
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FSRC_reserved:
  addr: 0xf8004034
  mask: 0xffffff00
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_ns_FSRC_fault_status:
  addr: 0xf8004034
  mask: 0xff
  name: fault_status
  description: |
    Each bit provides the fault status of the corresponding DMA channel, Bits [7:0]:
    0: No fault present
    1: Fault or Fault completing state
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTRD_reserved:
  addr: 0xf8004038
  mask: 0x80000000
  name: reserved
  description: |
    read undefined
ps7_dmac0_ns_FTRD_dbg_instr:
  addr: 0xf8004038
  mask: 0x40000000
  name: dbg_instr
  description: |
    If the DMA manager aborts, this bit indicates whether the erroneous instruction was read from the system memory or from the debug interface:
    0: system memory
    1: debug interface
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTRD_reserved_1:
  addr: 0xf8004038
  mask: 0x3ffe0000
  name: reserved_1
  description: |
    read undefined
ps7_dmac0_ns_FTRD_instr_fetch_err:
  addr: 0xf8004038
  mask: 0x10000
  name: instr_fetch_err
  description: |
    Indicates the AXI response that the DMAC receives on the RRESP bus, after the DMA manager performs an instruction fetch:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTRD_reserved_2:
  addr: 0xf8004038
  mask: 0xffc0
  name: reserved_2
  description: |
    read undefined
ps7_dmac0_ns_FTRD_mgr_evnt_err:
  addr: 0xf8004038
  mask: 0x20
  name: mgr_evnt_err
  description: |
    Indicates whether the DMA manager was attempting to execute DMAWFE or DMASEV with inappropriate security permissions:
    0: the DMA manager has appropriate security to execute DMAWFE or DMASEV
    1: a DMA manager thread in the Non-secure state attempted to execute either:
    DMAWFE to wait for a secure event
    H18DMASEV to create a secure event or secure interrupt.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTRD_dmago_err:
  addr: 0xf8004038
  mask: 0x10
  name: dmago_err
  description: |
    Indicates whether the DMA manager was attempting to execute DMAGO with inappropriate security permissions:
    0: appropriate security to execute DMAGO
    1: Non-secure state attempted to execute DMAGO to create a DMA channel thread operating in the Secure state
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTRD_reserved_3:
  addr: 0xf8004038
  mask: 0xc
  name: reserved_3
  description: |
    read undefined
ps7_dmac0_ns_FTRD_operand_invalid:
  addr: 0xf8004038
  mask: 0x2
  name: operand_invalid
  description: |
    Indicates whether the DMA manager was attempting to execute an instruction operand that was not valid for the configuration of the DMAC:
    0: valid operand
    1: invalid operand
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTRD_undef_instr:
  addr: 0xf8004038
  mask: 0x1
  name: undef_instr
  description: |
    Indicates whether the DMA manager was attempting to execute an undefined instruction:
    0: defined instruction
    1: undefined instruction.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR0_lockup_err:
  addr: 0xf8004040
  mask: 0x80000000
  name: lockup_err
  description: |
    Indicates whether the DMA channel thread has locked-up because of resource starvation:
    0: DMA channel has adequate resources
    1: DMA channel has locked-up because of insufficient resources. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR0_dbg_instr:
  addr: 0xf8004040
  mask: 0x40000000
  name: dbg_instr
  description: |
    If the DMA channel aborts, this bit indicates whether the erroneous instruction was read from the system memory or from the debug interface:
    0: system memory
    1: debug interface.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR0_reserved:
  addr: 0xf8004040
  mask: 0x3ff80000
  name: reserved
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR0_data_read_err:
  addr: 0xf8004040
  mask: 0x40000
  name: data_read_err
  description: |
    Indicates the AXI response that the DMAC receives on the RRESP bus, after the DMA channel thread performs a data read:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR0_data_write_err:
  addr: 0xf8004040
  mask: 0x20000
  name: data_write_err
  description: |
    Indicates the AXI response that the DMAC receives on the BRESP bus, after the DMA channel thread performs a data write:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR0_instr_fetch_err:
  addr: 0xf8004040
  mask: 0x10000
  name: instr_fetch_err
  description: |
    Indicates the AXI response that the DMAC receives on the RRESP bus after the DMA channel thread performs an instruction fetch:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR0_reserved_1:
  addr: 0xf8004040
  mask: 0xc000
  name: reserved_1
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR0_st_data_unavailable:
  addr: 0xf8004040
  mask: 0x2000
  name: st_data_unavailable
  description: |
    Indicates whether the MFIFO did not contain the data to enable the DMAC to perform the DMAST:
    0: MFIFO contains all the data to enable the DMAST to complete
    1: previous DMALDs have not put enough data in the MFIFO to enable the DMAST to complete. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR0_mfifo_err:
  addr: 0xf8004040
  mask: 0x1000
  name: mfifo_err
  description: |
    Indicates whether the MFIFO prevented the DMA channel thread from executing DMALD or DMAST:
    DMALD:
    0: MFIFO contains sufficient space
    1: MFIFO is too small to hold the data that DMALD requires.
    DMAST:
    0: MFIFO contains sufficient data
    1: MFIFO is too small to store the data to enable DMAST to complete.
    This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR0_reserved_2:
  addr: 0xf8004040
  mask: 0xf00
  name: reserved_2
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR0_ch_rdwr_err:
  addr: 0xf8004040
  mask: 0x80
  name: ch_rdwr_err
  description: |
    Indicates whether a DMA channel thread, in the Non-secure state, attempts to program the CCR registers to perform a secure read or secure write:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to perform a secure read or secure write. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR0_ch_periph_err:
  addr: 0xf8004040
  mask: 0x40
  name: ch_periph_err
  description: |
    Indicates whether a DMA channel thread, in the Non-secure state, attempts to execute DMAWFP, DMALDP, DMASTP, or DMAFLUSHP with inappropriate security permissions:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to execute either: a) DMAWFP to wait for a secure peripheral, b) DMALDP or DMASTP to notify a secure peripheral, or c) DMAFLUSHP to flush a secure peripheral. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR0_ch_evnt_err:
  addr: 0xf8004040
  mask: 0x20
  name: ch_evnt_err
  description: |
    Indicates whether the DMA channel thread attempts to execute DMAWFE or DMASEV with inappropriate security permissions:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to execute either: a) DMAWFE to wait for a secure event, or b) DMASEV to create a secure event or secure interrupt.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR0_reserved_3:
  addr: 0xf8004040
  mask: 0x1c
  name: reserved_3
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR0_operand_invalid:
  addr: 0xf8004040
  mask: 0x2
  name: operand_invalid
  description: |
    Indicates whether the DMA channel thread was attempting to execute an instruction operand that was not valid for the configuration of the DMAC:
    0: valid operand
    1: invalid operand.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR0_undef_instr:
  addr: 0xf8004040
  mask: 0x1
  name: undef_instr
  description: |
    Indicates whether the DMA channel thread was attempting to execute an undefined instruction:
    0: defined instruction
    1: undefined instruction.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR1_lockup_err:
  addr: 0xf8004044
  mask: 0x80000000
  name: lockup_err
  description: |
    Indicates whether the DMA channel thread has locked-up because of resource starvation:
    0: DMA channel has adequate resources
    1: DMA channel has locked-up because of insufficient resources. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR1_dbg_instr:
  addr: 0xf8004044
  mask: 0x40000000
  name: dbg_instr
  description: |
    If the DMA channel aborts, this bit indicates whether the erroneous instruction was read from the system memory or from the debug interface:
    0: system memory
    1: debug interface.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR1_reserved:
  addr: 0xf8004044
  mask: 0x3ff80000
  name: reserved
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR1_data_read_err:
  addr: 0xf8004044
  mask: 0x40000
  name: data_read_err
  description: |
    Indicates the AXI response that the DMAC receives on the RRESP bus, after the DMA channel thread performs a data read:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR1_data_write_err:
  addr: 0xf8004044
  mask: 0x20000
  name: data_write_err
  description: |
    Indicates the AXI response that the DMAC receives on the BRESP bus, after the DMA channel thread performs a data write:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR1_instr_fetch_err:
  addr: 0xf8004044
  mask: 0x10000
  name: instr_fetch_err
  description: |
    Indicates the AXI response that the DMAC receives on the RRESP bus after the DMA channel thread performs an instruction fetch:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR1_reserved_1:
  addr: 0xf8004044
  mask: 0xc000
  name: reserved_1
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR1_st_data_unavailable:
  addr: 0xf8004044
  mask: 0x2000
  name: st_data_unavailable
  description: |
    Indicates whether the MFIFO did not contain the data to enable the DMAC to perform the DMAST:
    0: MFIFO contains all the data to enable the DMAST to complete
    1: previous DMALDs have not put enough data in the MFIFO to enable the DMAST to complete. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR1_mfifo_err:
  addr: 0xf8004044
  mask: 0x1000
  name: mfifo_err
  description: |
    Indicates whether the MFIFO prevented the DMA channel thread from executing DMALD or DMAST:
    DMALD:
    0: MFIFO contains sufficient space
    1: MFIFO is too small to hold the data that DMALD requires.
    DMAST:
    0: MFIFO contains sufficient data
    1: MFIFO is too small to store the data to enable DMAST to complete.
    This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR1_reserved_2:
  addr: 0xf8004044
  mask: 0xf00
  name: reserved_2
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR1_ch_rdwr_err:
  addr: 0xf8004044
  mask: 0x80
  name: ch_rdwr_err
  description: |
    Indicates whether a DMA channel thread, in the Non-secure state, attempts to program the CCR registers to perform a secure read or secure write:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to perform a secure read or secure write. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR1_ch_periph_err:
  addr: 0xf8004044
  mask: 0x40
  name: ch_periph_err
  description: |
    Indicates whether a DMA channel thread, in the Non-secure state, attempts to execute DMAWFP, DMALDP, DMASTP, or DMAFLUSHP with inappropriate security permissions:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to execute either: a) DMAWFP to wait for a secure peripheral, b) DMALDP or DMASTP to notify a secure peripheral, or c) DMAFLUSHP to flush a secure peripheral. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR1_ch_evnt_err:
  addr: 0xf8004044
  mask: 0x20
  name: ch_evnt_err
  description: |
    Indicates whether the DMA channel thread attempts to execute DMAWFE or DMASEV with inappropriate security permissions:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to execute either: a) DMAWFE to wait for a secure event, or b) DMASEV to create a secure event or secure interrupt.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR1_reserved_3:
  addr: 0xf8004044
  mask: 0x1c
  name: reserved_3
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR1_operand_invalid:
  addr: 0xf8004044
  mask: 0x2
  name: operand_invalid
  description: |
    Indicates whether the DMA channel thread was attempting to execute an instruction operand that was not valid for the configuration of the DMAC:
    0: valid operand
    1: invalid operand.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR1_undef_instr:
  addr: 0xf8004044
  mask: 0x1
  name: undef_instr
  description: |
    Indicates whether the DMA channel thread was attempting to execute an undefined instruction:
    0: defined instruction
    1: undefined instruction.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR2_lockup_err:
  addr: 0xf8004048
  mask: 0x80000000
  name: lockup_err
  description: |
    Indicates whether the DMA channel thread has locked-up because of resource starvation:
    0: DMA channel has adequate resources
    1: DMA channel has locked-up because of insufficient resources. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR2_dbg_instr:
  addr: 0xf8004048
  mask: 0x40000000
  name: dbg_instr
  description: |
    If the DMA channel aborts, this bit indicates whether the erroneous instruction was read from the system memory or from the debug interface:
    0: system memory
    1: debug interface.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR2_reserved:
  addr: 0xf8004048
  mask: 0x3ff80000
  name: reserved
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR2_data_read_err:
  addr: 0xf8004048
  mask: 0x40000
  name: data_read_err
  description: |
    Indicates the AXI response that the DMAC receives on the RRESP bus, after the DMA channel thread performs a data read:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR2_data_write_err:
  addr: 0xf8004048
  mask: 0x20000
  name: data_write_err
  description: |
    Indicates the AXI response that the DMAC receives on the BRESP bus, after the DMA channel thread performs a data write:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR2_instr_fetch_err:
  addr: 0xf8004048
  mask: 0x10000
  name: instr_fetch_err
  description: |
    Indicates the AXI response that the DMAC receives on the RRESP bus after the DMA channel thread performs an instruction fetch:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR2_reserved_1:
  addr: 0xf8004048
  mask: 0xc000
  name: reserved_1
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR2_st_data_unavailable:
  addr: 0xf8004048
  mask: 0x2000
  name: st_data_unavailable
  description: |
    Indicates whether the MFIFO did not contain the data to enable the DMAC to perform the DMAST:
    0: MFIFO contains all the data to enable the DMAST to complete
    1: previous DMALDs have not put enough data in the MFIFO to enable the DMAST to complete. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR2_mfifo_err:
  addr: 0xf8004048
  mask: 0x1000
  name: mfifo_err
  description: |
    Indicates whether the MFIFO prevented the DMA channel thread from executing DMALD or DMAST:
    DMALD:
    0: MFIFO contains sufficient space
    1: MFIFO is too small to hold the data that DMALD requires.
    DMAST:
    0: MFIFO contains sufficient data
    1: MFIFO is too small to store the data to enable DMAST to complete.
    This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR2_reserved_2:
  addr: 0xf8004048
  mask: 0xf00
  name: reserved_2
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR2_ch_rdwr_err:
  addr: 0xf8004048
  mask: 0x80
  name: ch_rdwr_err
  description: |
    Indicates whether a DMA channel thread, in the Non-secure state, attempts to program the CCR registers to perform a secure read or secure write:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to perform a secure read or secure write. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR2_ch_periph_err:
  addr: 0xf8004048
  mask: 0x40
  name: ch_periph_err
  description: |
    Indicates whether a DMA channel thread, in the Non-secure state, attempts to execute DMAWFP, DMALDP, DMASTP, or DMAFLUSHP with inappropriate security permissions:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to execute either: a) DMAWFP to wait for a secure peripheral, b) DMALDP or DMASTP to notify a secure peripheral, or c) DMAFLUSHP to flush a secure peripheral. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR2_ch_evnt_err:
  addr: 0xf8004048
  mask: 0x20
  name: ch_evnt_err
  description: |
    Indicates whether the DMA channel thread attempts to execute DMAWFE or DMASEV with inappropriate security permissions:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to execute either: a) DMAWFE to wait for a secure event, or b) DMASEV to create a secure event or secure interrupt.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR2_reserved_3:
  addr: 0xf8004048
  mask: 0x1c
  name: reserved_3
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR2_operand_invalid:
  addr: 0xf8004048
  mask: 0x2
  name: operand_invalid
  description: |
    Indicates whether the DMA channel thread was attempting to execute an instruction operand that was not valid for the configuration of the DMAC:
    0: valid operand
    1: invalid operand.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR2_undef_instr:
  addr: 0xf8004048
  mask: 0x1
  name: undef_instr
  description: |
    Indicates whether the DMA channel thread was attempting to execute an undefined instruction:
    0: defined instruction
    1: undefined instruction.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR3_lockup_err:
  addr: 0xf800404c
  mask: 0x80000000
  name: lockup_err
  description: |
    Indicates whether the DMA channel thread has locked-up because of resource starvation:
    0: DMA channel has adequate resources
    1: DMA channel has locked-up because of insufficient resources. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR3_dbg_instr:
  addr: 0xf800404c
  mask: 0x40000000
  name: dbg_instr
  description: |
    If the DMA channel aborts, this bit indicates whether the erroneous instruction was read from the system memory or from the debug interface:
    0: system memory
    1: debug interface.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR3_reserved:
  addr: 0xf800404c
  mask: 0x3ff80000
  name: reserved
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR3_data_read_err:
  addr: 0xf800404c
  mask: 0x40000
  name: data_read_err
  description: |
    Indicates the AXI response that the DMAC receives on the RRESP bus, after the DMA channel thread performs a data read:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR3_data_write_err:
  addr: 0xf800404c
  mask: 0x20000
  name: data_write_err
  description: |
    Indicates the AXI response that the DMAC receives on the BRESP bus, after the DMA channel thread performs a data write:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR3_instr_fetch_err:
  addr: 0xf800404c
  mask: 0x10000
  name: instr_fetch_err
  description: |
    Indicates the AXI response that the DMAC receives on the RRESP bus after the DMA channel thread performs an instruction fetch:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR3_reserved_1:
  addr: 0xf800404c
  mask: 0xc000
  name: reserved_1
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR3_st_data_unavailable:
  addr: 0xf800404c
  mask: 0x2000
  name: st_data_unavailable
  description: |
    Indicates whether the MFIFO did not contain the data to enable the DMAC to perform the DMAST:
    0: MFIFO contains all the data to enable the DMAST to complete
    1: previous DMALDs have not put enough data in the MFIFO to enable the DMAST to complete. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR3_mfifo_err:
  addr: 0xf800404c
  mask: 0x1000
  name: mfifo_err
  description: |
    Indicates whether the MFIFO prevented the DMA channel thread from executing DMALD or DMAST:
    DMALD:
    0: MFIFO contains sufficient space
    1: MFIFO is too small to hold the data that DMALD requires.
    DMAST:
    0: MFIFO contains sufficient data
    1: MFIFO is too small to store the data to enable DMAST to complete.
    This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR3_reserved_2:
  addr: 0xf800404c
  mask: 0xf00
  name: reserved_2
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR3_ch_rdwr_err:
  addr: 0xf800404c
  mask: 0x80
  name: ch_rdwr_err
  description: |
    Indicates whether a DMA channel thread, in the Non-secure state, attempts to program the CCR registers to perform a secure read or secure write:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to perform a secure read or secure write. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR3_ch_periph_err:
  addr: 0xf800404c
  mask: 0x40
  name: ch_periph_err
  description: |
    Indicates whether a DMA channel thread, in the Non-secure state, attempts to execute DMAWFP, DMALDP, DMASTP, or DMAFLUSHP with inappropriate security permissions:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to execute either: a) DMAWFP to wait for a secure peripheral, b) DMALDP or DMASTP to notify a secure peripheral, or c) DMAFLUSHP to flush a secure peripheral. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR3_ch_evnt_err:
  addr: 0xf800404c
  mask: 0x20
  name: ch_evnt_err
  description: |
    Indicates whether the DMA channel thread attempts to execute DMAWFE or DMASEV with inappropriate security permissions:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to execute either: a) DMAWFE to wait for a secure event, or b) DMASEV to create a secure event or secure interrupt.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR3_reserved_3:
  addr: 0xf800404c
  mask: 0x1c
  name: reserved_3
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR3_operand_invalid:
  addr: 0xf800404c
  mask: 0x2
  name: operand_invalid
  description: |
    Indicates whether the DMA channel thread was attempting to execute an instruction operand that was not valid for the configuration of the DMAC:
    0: valid operand
    1: invalid operand.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR3_undef_instr:
  addr: 0xf800404c
  mask: 0x1
  name: undef_instr
  description: |
    Indicates whether the DMA channel thread was attempting to execute an undefined instruction:
    0: defined instruction
    1: undefined instruction.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR4_lockup_err:
  addr: 0xf8004050
  mask: 0x80000000
  name: lockup_err
  description: |
    Indicates whether the DMA channel thread has locked-up because of resource starvation:
    0: DMA channel has adequate resources
    1: DMA channel has locked-up because of insufficient resources. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR4_dbg_instr:
  addr: 0xf8004050
  mask: 0x40000000
  name: dbg_instr
  description: |
    If the DMA channel aborts, this bit indicates whether the erroneous instruction was read from the system memory or from the debug interface:
    0: system memory
    1: debug interface.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR4_reserved:
  addr: 0xf8004050
  mask: 0x3ff80000
  name: reserved
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR4_data_read_err:
  addr: 0xf8004050
  mask: 0x40000
  name: data_read_err
  description: |
    Indicates the AXI response that the DMAC receives on the RRESP bus, after the DMA channel thread performs a data read:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR4_data_write_err:
  addr: 0xf8004050
  mask: 0x20000
  name: data_write_err
  description: |
    Indicates the AXI response that the DMAC receives on the BRESP bus, after the DMA channel thread performs a data write:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR4_instr_fetch_err:
  addr: 0xf8004050
  mask: 0x10000
  name: instr_fetch_err
  description: |
    Indicates the AXI response that the DMAC receives on the RRESP bus after the DMA channel thread performs an instruction fetch:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR4_reserved_1:
  addr: 0xf8004050
  mask: 0xc000
  name: reserved_1
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR4_st_data_unavailable:
  addr: 0xf8004050
  mask: 0x2000
  name: st_data_unavailable
  description: |
    Indicates whether the MFIFO did not contain the data to enable the DMAC to perform the DMAST:
    0: MFIFO contains all the data to enable the DMAST to complete
    1: previous DMALDs have not put enough data in the MFIFO to enable the DMAST to complete. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR4_mfifo_err:
  addr: 0xf8004050
  mask: 0x1000
  name: mfifo_err
  description: |
    Indicates whether the MFIFO prevented the DMA channel thread from executing DMALD or DMAST:
    DMALD:
    0: MFIFO contains sufficient space
    1: MFIFO is too small to hold the data that DMALD requires.
    DMAST:
    0: MFIFO contains sufficient data
    1: MFIFO is too small to store the data to enable DMAST to complete.
    This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR4_reserved_2:
  addr: 0xf8004050
  mask: 0xf00
  name: reserved_2
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR4_ch_rdwr_err:
  addr: 0xf8004050
  mask: 0x80
  name: ch_rdwr_err
  description: |
    Indicates whether a DMA channel thread, in the Non-secure state, attempts to program the CCR registers to perform a secure read or secure write:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to perform a secure read or secure write. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR4_ch_periph_err:
  addr: 0xf8004050
  mask: 0x40
  name: ch_periph_err
  description: |
    Indicates whether a DMA channel thread, in the Non-secure state, attempts to execute DMAWFP, DMALDP, DMASTP, or DMAFLUSHP with inappropriate security permissions:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to execute either: a) DMAWFP to wait for a secure peripheral, b) DMALDP or DMASTP to notify a secure peripheral, or c) DMAFLUSHP to flush a secure peripheral. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR4_ch_evnt_err:
  addr: 0xf8004050
  mask: 0x20
  name: ch_evnt_err
  description: |
    Indicates whether the DMA channel thread attempts to execute DMAWFE or DMASEV with inappropriate security permissions:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to execute either: a) DMAWFE to wait for a secure event, or b) DMASEV to create a secure event or secure interrupt.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR4_reserved_3:
  addr: 0xf8004050
  mask: 0x1c
  name: reserved_3
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR4_operand_invalid:
  addr: 0xf8004050
  mask: 0x2
  name: operand_invalid
  description: |
    Indicates whether the DMA channel thread was attempting to execute an instruction operand that was not valid for the configuration of the DMAC:
    0: valid operand
    1: invalid operand.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR4_undef_instr:
  addr: 0xf8004050
  mask: 0x1
  name: undef_instr
  description: |
    Indicates whether the DMA channel thread was attempting to execute an undefined instruction:
    0: defined instruction
    1: undefined instruction.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR5_lockup_err:
  addr: 0xf8004054
  mask: 0x80000000
  name: lockup_err
  description: |
    Indicates whether the DMA channel thread has locked-up because of resource starvation:
    0: DMA channel has adequate resources
    1: DMA channel has locked-up because of insufficient resources. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR5_dbg_instr:
  addr: 0xf8004054
  mask: 0x40000000
  name: dbg_instr
  description: |
    If the DMA channel aborts, this bit indicates whether the erroneous instruction was read from the system memory or from the debug interface:
    0: system memory
    1: debug interface.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR5_reserved:
  addr: 0xf8004054
  mask: 0x3ff80000
  name: reserved
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR5_data_read_err:
  addr: 0xf8004054
  mask: 0x40000
  name: data_read_err
  description: |
    Indicates the AXI response that the DMAC receives on the RRESP bus, after the DMA channel thread performs a data read:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR5_data_write_err:
  addr: 0xf8004054
  mask: 0x20000
  name: data_write_err
  description: |
    Indicates the AXI response that the DMAC receives on the BRESP bus, after the DMA channel thread performs a data write:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR5_instr_fetch_err:
  addr: 0xf8004054
  mask: 0x10000
  name: instr_fetch_err
  description: |
    Indicates the AXI response that the DMAC receives on the RRESP bus after the DMA channel thread performs an instruction fetch:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR5_reserved_1:
  addr: 0xf8004054
  mask: 0xc000
  name: reserved_1
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR5_st_data_unavailable:
  addr: 0xf8004054
  mask: 0x2000
  name: st_data_unavailable
  description: |
    Indicates whether the MFIFO did not contain the data to enable the DMAC to perform the DMAST:
    0: MFIFO contains all the data to enable the DMAST to complete
    1: previous DMALDs have not put enough data in the MFIFO to enable the DMAST to complete. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR5_mfifo_err:
  addr: 0xf8004054
  mask: 0x1000
  name: mfifo_err
  description: |
    Indicates whether the MFIFO prevented the DMA channel thread from executing DMALD or DMAST:
    DMALD:
    0: MFIFO contains sufficient space
    1: MFIFO is too small to hold the data that DMALD requires.
    DMAST:
    0: MFIFO contains sufficient data
    1: MFIFO is too small to store the data to enable DMAST to complete.
    This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR5_reserved_2:
  addr: 0xf8004054
  mask: 0xf00
  name: reserved_2
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR5_ch_rdwr_err:
  addr: 0xf8004054
  mask: 0x80
  name: ch_rdwr_err
  description: |
    Indicates whether a DMA channel thread, in the Non-secure state, attempts to program the CCR registers to perform a secure read or secure write:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to perform a secure read or secure write. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR5_ch_periph_err:
  addr: 0xf8004054
  mask: 0x40
  name: ch_periph_err
  description: |
    Indicates whether a DMA channel thread, in the Non-secure state, attempts to execute DMAWFP, DMALDP, DMASTP, or DMAFLUSHP with inappropriate security permissions:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to execute either: a) DMAWFP to wait for a secure peripheral, b) DMALDP or DMASTP to notify a secure peripheral, or c) DMAFLUSHP to flush a secure peripheral. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR5_ch_evnt_err:
  addr: 0xf8004054
  mask: 0x20
  name: ch_evnt_err
  description: |
    Indicates whether the DMA channel thread attempts to execute DMAWFE or DMASEV with inappropriate security permissions:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to execute either: a) DMAWFE to wait for a secure event, or b) DMASEV to create a secure event or secure interrupt.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR5_reserved_3:
  addr: 0xf8004054
  mask: 0x1c
  name: reserved_3
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR5_operand_invalid:
  addr: 0xf8004054
  mask: 0x2
  name: operand_invalid
  description: |
    Indicates whether the DMA channel thread was attempting to execute an instruction operand that was not valid for the configuration of the DMAC:
    0: valid operand
    1: invalid operand.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR5_undef_instr:
  addr: 0xf8004054
  mask: 0x1
  name: undef_instr
  description: |
    Indicates whether the DMA channel thread was attempting to execute an undefined instruction:
    0: defined instruction
    1: undefined instruction.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR6_lockup_err:
  addr: 0xf8004058
  mask: 0x80000000
  name: lockup_err
  description: |
    Indicates whether the DMA channel thread has locked-up because of resource starvation:
    0: DMA channel has adequate resources
    1: DMA channel has locked-up because of insufficient resources. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR6_dbg_instr:
  addr: 0xf8004058
  mask: 0x40000000
  name: dbg_instr
  description: |
    If the DMA channel aborts, this bit indicates whether the erroneous instruction was read from the system memory or from the debug interface:
    0: system memory
    1: debug interface.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR6_reserved:
  addr: 0xf8004058
  mask: 0x3ff80000
  name: reserved
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR6_data_read_err:
  addr: 0xf8004058
  mask: 0x40000
  name: data_read_err
  description: |
    Indicates the AXI response that the DMAC receives on the RRESP bus, after the DMA channel thread performs a data read:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR6_data_write_err:
  addr: 0xf8004058
  mask: 0x20000
  name: data_write_err
  description: |
    Indicates the AXI response that the DMAC receives on the BRESP bus, after the DMA channel thread performs a data write:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR6_instr_fetch_err:
  addr: 0xf8004058
  mask: 0x10000
  name: instr_fetch_err
  description: |
    Indicates the AXI response that the DMAC receives on the RRESP bus after the DMA channel thread performs an instruction fetch:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR6_reserved_1:
  addr: 0xf8004058
  mask: 0xc000
  name: reserved_1
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR6_st_data_unavailable:
  addr: 0xf8004058
  mask: 0x2000
  name: st_data_unavailable
  description: |
    Indicates whether the MFIFO did not contain the data to enable the DMAC to perform the DMAST:
    0: MFIFO contains all the data to enable the DMAST to complete
    1: previous DMALDs have not put enough data in the MFIFO to enable the DMAST to complete. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR6_mfifo_err:
  addr: 0xf8004058
  mask: 0x1000
  name: mfifo_err
  description: |
    Indicates whether the MFIFO prevented the DMA channel thread from executing DMALD or DMAST:
    DMALD:
    0: MFIFO contains sufficient space
    1: MFIFO is too small to hold the data that DMALD requires.
    DMAST:
    0: MFIFO contains sufficient data
    1: MFIFO is too small to store the data to enable DMAST to complete.
    This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR6_reserved_2:
  addr: 0xf8004058
  mask: 0xf00
  name: reserved_2
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR6_ch_rdwr_err:
  addr: 0xf8004058
  mask: 0x80
  name: ch_rdwr_err
  description: |
    Indicates whether a DMA channel thread, in the Non-secure state, attempts to program the CCR registers to perform a secure read or secure write:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to perform a secure read or secure write. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR6_ch_periph_err:
  addr: 0xf8004058
  mask: 0x40
  name: ch_periph_err
  description: |
    Indicates whether a DMA channel thread, in the Non-secure state, attempts to execute DMAWFP, DMALDP, DMASTP, or DMAFLUSHP with inappropriate security permissions:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to execute either: a) DMAWFP to wait for a secure peripheral, b) DMALDP or DMASTP to notify a secure peripheral, or c) DMAFLUSHP to flush a secure peripheral. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR6_ch_evnt_err:
  addr: 0xf8004058
  mask: 0x20
  name: ch_evnt_err
  description: |
    Indicates whether the DMA channel thread attempts to execute DMAWFE or DMASEV with inappropriate security permissions:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to execute either: a) DMAWFE to wait for a secure event, or b) DMASEV to create a secure event or secure interrupt.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR6_reserved_3:
  addr: 0xf8004058
  mask: 0x1c
  name: reserved_3
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR6_operand_invalid:
  addr: 0xf8004058
  mask: 0x2
  name: operand_invalid
  description: |
    Indicates whether the DMA channel thread was attempting to execute an instruction operand that was not valid for the configuration of the DMAC:
    0: valid operand
    1: invalid operand.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR6_undef_instr:
  addr: 0xf8004058
  mask: 0x1
  name: undef_instr
  description: |
    Indicates whether the DMA channel thread was attempting to execute an undefined instruction:
    0: defined instruction
    1: undefined instruction.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR7_lockup_err:
  addr: 0xf800405c
  mask: 0x80000000
  name: lockup_err
  description: |
    Indicates whether the DMA channel thread has locked-up because of resource starvation:
    0: DMA channel has adequate resources
    1: DMA channel has locked-up because of insufficient resources. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR7_dbg_instr:
  addr: 0xf800405c
  mask: 0x40000000
  name: dbg_instr
  description: |
    If the DMA channel aborts, this bit indicates whether the erroneous instruction was read from the system memory or from the debug interface:
    0: system memory
    1: debug interface.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR7_reserved:
  addr: 0xf800405c
  mask: 0x3ff80000
  name: reserved
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR7_data_read_err:
  addr: 0xf800405c
  mask: 0x40000
  name: data_read_err
  description: |
    Indicates the AXI response that the DMAC receives on the RRESP bus, after the DMA channel thread performs a data read:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR7_data_write_err:
  addr: 0xf800405c
  mask: 0x20000
  name: data_write_err
  description: |
    Indicates the AXI response that the DMAC receives on the BRESP bus, after the DMA channel thread performs a data write:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR7_instr_fetch_err:
  addr: 0xf800405c
  mask: 0x10000
  name: instr_fetch_err
  description: |
    Indicates the AXI response that the DMAC receives on the RRESP bus after the DMA channel thread performs an instruction fetch:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR7_reserved_1:
  addr: 0xf800405c
  mask: 0xc000
  name: reserved_1
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR7_st_data_unavailable:
  addr: 0xf800405c
  mask: 0x2000
  name: st_data_unavailable
  description: |
    Indicates whether the MFIFO did not contain the data to enable the DMAC to perform the DMAST:
    0: MFIFO contains all the data to enable the DMAST to complete
    1: previous DMALDs have not put enough data in the MFIFO to enable the DMAST to complete. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR7_mfifo_err:
  addr: 0xf800405c
  mask: 0x1000
  name: mfifo_err
  description: |
    Indicates whether the MFIFO prevented the DMA channel thread from executing DMALD or DMAST:
    DMALD:
    0: MFIFO contains sufficient space
    1: MFIFO is too small to hold the data that DMALD requires.
    DMAST:
    0: MFIFO contains sufficient data
    1: MFIFO is too small to store the data to enable DMAST to complete.
    This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR7_reserved_2:
  addr: 0xf800405c
  mask: 0xf00
  name: reserved_2
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR7_ch_rdwr_err:
  addr: 0xf800405c
  mask: 0x80
  name: ch_rdwr_err
  description: |
    Indicates whether a DMA channel thread, in the Non-secure state, attempts to program the CCR registers to perform a secure read or secure write:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to perform a secure read or secure write. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR7_ch_periph_err:
  addr: 0xf800405c
  mask: 0x40
  name: ch_periph_err
  description: |
    Indicates whether a DMA channel thread, in the Non-secure state, attempts to execute DMAWFP, DMALDP, DMASTP, or DMAFLUSHP with inappropriate security permissions:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to execute either: a) DMAWFP to wait for a secure peripheral, b) DMALDP or DMASTP to notify a secure peripheral, or c) DMAFLUSHP to flush a secure peripheral. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR7_ch_evnt_err:
  addr: 0xf800405c
  mask: 0x20
  name: ch_evnt_err
  description: |
    Indicates whether the DMA channel thread attempts to execute DMAWFE or DMASEV with inappropriate security permissions:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to execute either: a) DMAWFE to wait for a secure event, or b) DMASEV to create a secure event or secure interrupt.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR7_reserved_3:
  addr: 0xf800405c
  mask: 0x1c
  name: reserved_3
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR7_operand_invalid:
  addr: 0xf800405c
  mask: 0x2
  name: operand_invalid
  description: |
    Indicates whether the DMA channel thread was attempting to execute an instruction operand that was not valid for the configuration of the DMAC:
    0: valid operand
    1: invalid operand.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_FTR7_undef_instr:
  addr: 0xf800405c
  mask: 0x1
  name: undef_instr
  description: |
    Indicates whether the DMA channel thread was attempting to execute an undefined instruction:
    0: defined instruction
    1: undefined instruction.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CSR0_reserved:
  addr: 0xf8004100
  mask: 0xffc00000
  name: reserved
  description: |
    reserved,read undefined
ps7_dmac0_ns_CSR0_CNS:
  addr: 0xf8004100
  mask: 0x200000
  name: CNS
  description: |
    Security status of the DMA channel thread:
    0: Secure state
    1: Non-secure state.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CSR0_reserved_1:
  addr: 0xf8004100
  mask: 0x1f0000
  name: reserved_1
  description: |
    reserved,read undefined
ps7_dmac0_ns_CSR0_dmawfp_periph:
  addr: 0xf8004100
  mask: 0x8000
  name: dmawfp_periph
  description: |
    When the DMA channel thread executes DMAWFP, this bit indicates whether the periph operand is set:
    0: periph operand not set
    1: periph operand set.
    Note: the status only applies when the channel is connected to one of the four peripheral request interfaces.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CSR0_dmawfp_b_ns:
  addr: 0xf8004100
  mask: 0x4000
  name: dmawfp_b_ns
  description: |
    When the DMA channel thread executes DMAWFP, this bit indicates whether the burst or single operand were set:
    0: single operand set
    1: burst operand set
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CSR0_reserved_2:
  addr: 0xf8004100
  mask: 0x3e00
  name: reserved_2
  description: |
    reserved
ps7_dmac0_ns_CSR0_wakeup_num:
  addr: 0xf8004100
  mask: 0x1f0
  name: wakeup_num
  description: |
    When the DMA channel thread executes a WFE or WFP instruction, these bits indicate the event or peripheral number that the channel is waiting for:
    Waiting for Event (WFE):
    0 0000: waiting for event 0
    0 0001: waiting for event 1
    ...
    0 1111: waiting for event 15
    1 xxxx: reserved
    Waiting for Peripheral (WFP):
    0 0000: waiting for peripheral 0
    0 0001: waiting for peripheral 1
    0 0010: waiting for peripheral 2
    0 0011: waiting for peripheral 3
    1 11xx: reserved
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CSR0_channel_status:
  addr: 0xf8004100
  mask: 0xf
  name: channel_status
  description: |
    The channel status encoding is:
    0000: Stopped
    0001: Executing
    0010: Cache miss
    0011: Updating PC
    0100: Waiting for event
    0101: At barrier
    0110: reserved
    0111: Waiting for peripheral
    1000: Killing
    1001: Completing
    1010 to 1101: reserved
    1110: Faulting completing
    1111: Faulting.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CPC0_pc_chnl:
  addr: 0xf8004104
  mask: 0xffffffff
  name: pc_chnl
  description: |
    Program counter (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CSR1_reserved:
  addr: 0xf8004108
  mask: 0xffc00000
  name: reserved
  description: |
    reserved,read undefined
ps7_dmac0_ns_CSR1_CNS:
  addr: 0xf8004108
  mask: 0x200000
  name: CNS
  description: |
    Security status of the DMA channel thread:
    0: Secure state
    1: Non-secure state.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CSR1_reserved_1:
  addr: 0xf8004108
  mask: 0x1f0000
  name: reserved_1
  description: |
    reserved,read undefined
ps7_dmac0_ns_CSR1_dmawfp_periph:
  addr: 0xf8004108
  mask: 0x8000
  name: dmawfp_periph
  description: |
    When the DMA channel thread executes DMAWFP, this bit indicates whether the periph operand is set:
    0: periph operand not set
    1: periph operand set.
    Note: the status only applies when the channel is connected to one of the four peripheral request interfaces.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CSR1_dmawfp_b_ns:
  addr: 0xf8004108
  mask: 0x4000
  name: dmawfp_b_ns
  description: |
    When the DMA channel thread executes DMAWFP, this bit indicates whether the burst or single operand were set:
    0: single operand set
    1: burst operand set
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CSR1_reserved_2:
  addr: 0xf8004108
  mask: 0x3e00
  name: reserved_2
  description: |
    reserved
ps7_dmac0_ns_CSR1_wakeup_num:
  addr: 0xf8004108
  mask: 0x1f0
  name: wakeup_num
  description: |
    When the DMA channel thread executes a WFE or WFP instruction, these bits indicate the event or peripheral number that the channel is waiting for:
    Waiting for Event (WFE):
    0 0000: waiting for event 0
    0 0001: waiting for event 1
    ...
    0 1111: waiting for event 15
    1 xxxx: reserved
    Waiting for Peripheral (WFP):
    0 0000: waiting for peripheral 0
    0 0001: waiting for peripheral 1
    0 0010: waiting for peripheral 2
    0 0011: waiting for peripheral 3
    1 11xx: reserved
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CSR1_channel_status:
  addr: 0xf8004108
  mask: 0xf
  name: channel_status
  description: |
    The channel status encoding is:
    0000: Stopped
    0001: Executing
    0010: Cache miss
    0011: Updating PC
    0100: Waiting for event
    0101: At barrier
    0110: reserved
    0111: Waiting for peripheral
    1000: Killing
    1001: Completing
    1010 to 1101: reserved
    1110: Faulting completing
    1111: Faulting.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CPC1_pc_chnl:
  addr: 0xf800410c
  mask: 0xffffffff
  name: pc_chnl
  description: |
    Program counter (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CSR2_reserved:
  addr: 0xf8004110
  mask: 0xffc00000
  name: reserved
  description: |
    reserved,read undefined
ps7_dmac0_ns_CSR2_CNS:
  addr: 0xf8004110
  mask: 0x200000
  name: CNS
  description: |
    Security status of the DMA channel thread:
    0: Secure state
    1: Non-secure state.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CSR2_reserved_1:
  addr: 0xf8004110
  mask: 0x1f0000
  name: reserved_1
  description: |
    reserved,read undefined
ps7_dmac0_ns_CSR2_dmawfp_periph:
  addr: 0xf8004110
  mask: 0x8000
  name: dmawfp_periph
  description: |
    When the DMA channel thread executes DMAWFP, this bit indicates whether the periph operand is set:
    0: periph operand not set
    1: periph operand set.
    Note: the status only applies when the channel is connected to one of the four peripheral request interfaces.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CSR2_dmawfp_b_ns:
  addr: 0xf8004110
  mask: 0x4000
  name: dmawfp_b_ns
  description: |
    When the DMA channel thread executes DMAWFP, this bit indicates whether the burst or single operand were set:
    0: single operand set
    1: burst operand set
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CSR2_reserved_2:
  addr: 0xf8004110
  mask: 0x3e00
  name: reserved_2
  description: |
    reserved
ps7_dmac0_ns_CSR2_wakeup_num:
  addr: 0xf8004110
  mask: 0x1f0
  name: wakeup_num
  description: |
    When the DMA channel thread executes a WFE or WFP instruction, these bits indicate the event or peripheral number that the channel is waiting for:
    Waiting for Event (WFE):
    0 0000: waiting for event 0
    0 0001: waiting for event 1
    ...
    0 1111: waiting for event 15
    1 xxxx: reserved
    Waiting for Peripheral (WFP):
    0 0000: waiting for peripheral 0
    0 0001: waiting for peripheral 1
    0 0010: waiting for peripheral 2
    0 0011: waiting for peripheral 3
    1 11xx: reserved
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CSR2_channel_status:
  addr: 0xf8004110
  mask: 0xf
  name: channel_status
  description: |
    The channel status encoding is:
    0000: Stopped
    0001: Executing
    0010: Cache miss
    0011: Updating PC
    0100: Waiting for event
    0101: At barrier
    0110: reserved
    0111: Waiting for peripheral
    1000: Killing
    1001: Completing
    1010 to 1101: reserved
    1110: Faulting completing
    1111: Faulting.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CPC2_pc_chnl:
  addr: 0xf8004114
  mask: 0xffffffff
  name: pc_chnl
  description: |
    Program counter (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CSR3_reserved:
  addr: 0xf8004118
  mask: 0xffc00000
  name: reserved
  description: |
    reserved,read undefined
ps7_dmac0_ns_CSR3_CNS:
  addr: 0xf8004118
  mask: 0x200000
  name: CNS
  description: |
    Security status of the DMA channel thread:
    0: Secure state
    1: Non-secure state.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CSR3_reserved_1:
  addr: 0xf8004118
  mask: 0x1f0000
  name: reserved_1
  description: |
    reserved,read undefined
ps7_dmac0_ns_CSR3_dmawfp_periph:
  addr: 0xf8004118
  mask: 0x8000
  name: dmawfp_periph
  description: |
    When the DMA channel thread executes DMAWFP, this bit indicates whether the periph operand is set:
    0: periph operand not set
    1: periph operand set.
    Note: the status only applies when the channel is connected to one of the four peripheral request interfaces.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CSR3_dmawfp_b_ns:
  addr: 0xf8004118
  mask: 0x4000
  name: dmawfp_b_ns
  description: |
    When the DMA channel thread executes DMAWFP, this bit indicates whether the burst or single operand were set:
    0: single operand set
    1: burst operand set
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CSR3_reserved_2:
  addr: 0xf8004118
  mask: 0x3e00
  name: reserved_2
  description: |
    reserved
ps7_dmac0_ns_CSR3_wakeup_num:
  addr: 0xf8004118
  mask: 0x1f0
  name: wakeup_num
  description: |
    When the DMA channel thread executes a WFE or WFP instruction, these bits indicate the event or peripheral number that the channel is waiting for:
    Waiting for Event (WFE):
    0 0000: waiting for event 0
    0 0001: waiting for event 1
    ...
    0 1111: waiting for event 15
    1 xxxx: reserved
    Waiting for Peripheral (WFP):
    0 0000: waiting for peripheral 0
    0 0001: waiting for peripheral 1
    0 0010: waiting for peripheral 2
    0 0011: waiting for peripheral 3
    1 11xx: reserved
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CSR3_channel_status:
  addr: 0xf8004118
  mask: 0xf
  name: channel_status
  description: |
    The channel status encoding is:
    0000: Stopped
    0001: Executing
    0010: Cache miss
    0011: Updating PC
    0100: Waiting for event
    0101: At barrier
    0110: reserved
    0111: Waiting for peripheral
    1000: Killing
    1001: Completing
    1010 to 1101: reserved
    1110: Faulting completing
    1111: Faulting.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CPC3_pc_chnl:
  addr: 0xf800411c
  mask: 0xffffffff
  name: pc_chnl
  description: |
    Program counter (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CSR4_reserved:
  addr: 0xf8004120
  mask: 0xffc00000
  name: reserved
  description: |
    reserved,read undefined
ps7_dmac0_ns_CSR4_CNS:
  addr: 0xf8004120
  mask: 0x200000
  name: CNS
  description: |
    Security status of the DMA channel thread:
    0: Secure state
    1: Non-secure state.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CSR4_reserved_1:
  addr: 0xf8004120
  mask: 0x1f0000
  name: reserved_1
  description: |
    reserved,read undefined
ps7_dmac0_ns_CSR4_dmawfp_periph:
  addr: 0xf8004120
  mask: 0x8000
  name: dmawfp_periph
  description: |
    When the DMA channel thread executes DMAWFP, this bit indicates whether the periph operand is set:
    0: periph operand not set
    1: periph operand set.
    Note: the status only applies when the channel is connected to one of the four peripheral request interfaces.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CSR4_dmawfp_b_ns:
  addr: 0xf8004120
  mask: 0x4000
  name: dmawfp_b_ns
  description: |
    When the DMA channel thread executes DMAWFP, this bit indicates whether the burst or single operand were set:
    0: single operand set
    1: burst operand set
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CSR4_reserved_2:
  addr: 0xf8004120
  mask: 0x3e00
  name: reserved_2
  description: |
    reserved
ps7_dmac0_ns_CSR4_wakeup_num:
  addr: 0xf8004120
  mask: 0x1f0
  name: wakeup_num
  description: |
    When the DMA channel thread executes a WFE or WFP instruction, these bits indicate the event or peripheral number that the channel is waiting for:
    Waiting for Event (WFE):
    0 0000: waiting for event 0
    0 0001: waiting for event 1
    ...
    0 1111: waiting for event 15
    1 xxxx: reserved
    Waiting for Peripheral (WFP):
    0 0000: waiting for peripheral 0
    0 0001: waiting for peripheral 1
    0 0010: waiting for peripheral 2
    0 0011: waiting for peripheral 3
    1 11xx: reserved
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CSR4_channel_status:
  addr: 0xf8004120
  mask: 0xf
  name: channel_status
  description: |
    The channel status encoding is:
    0000: Stopped
    0001: Executing
    0010: Cache miss
    0011: Updating PC
    0100: Waiting for event
    0101: At barrier
    0110: reserved
    0111: Waiting for peripheral
    1000: Killing
    1001: Completing
    1010 to 1101: reserved
    1110: Faulting completing
    1111: Faulting.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CPC4_pc_chnl:
  addr: 0xf8004124
  mask: 0xffffffff
  name: pc_chnl
  description: |
    Program counter (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CSR5_reserved:
  addr: 0xf8004128
  mask: 0xffc00000
  name: reserved
  description: |
    reserved,read undefined
ps7_dmac0_ns_CSR5_CNS:
  addr: 0xf8004128
  mask: 0x200000
  name: CNS
  description: |
    Security status of the DMA channel thread:
    0: Secure state
    1: Non-secure state.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CSR5_reserved_1:
  addr: 0xf8004128
  mask: 0x1f0000
  name: reserved_1
  description: |
    reserved,read undefined
ps7_dmac0_ns_CSR5_dmawfp_periph:
  addr: 0xf8004128
  mask: 0x8000
  name: dmawfp_periph
  description: |
    When the DMA channel thread executes DMAWFP, this bit indicates whether the periph operand is set:
    0: periph operand not set
    1: periph operand set.
    Note: the status only applies when the channel is connected to one of the four peripheral request interfaces.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CSR5_dmawfp_b_ns:
  addr: 0xf8004128
  mask: 0x4000
  name: dmawfp_b_ns
  description: |
    When the DMA channel thread executes DMAWFP, this bit indicates whether the burst or single operand were set:
    0: single operand set
    1: burst operand set
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CSR5_reserved_2:
  addr: 0xf8004128
  mask: 0x3e00
  name: reserved_2
  description: |
    reserved
ps7_dmac0_ns_CSR5_wakeup_num:
  addr: 0xf8004128
  mask: 0x1f0
  name: wakeup_num
  description: |
    When the DMA channel thread executes a WFE or WFP instruction, these bits indicate the event or peripheral number that the channel is waiting for:
    Waiting for Event (WFE):
    0 0000: waiting for event 0
    0 0001: waiting for event 1
    ...
    0 1111: waiting for event 15
    1 xxxx: reserved
    Waiting for Peripheral (WFP):
    0 0000: waiting for peripheral 0
    0 0001: waiting for peripheral 1
    0 0010: waiting for peripheral 2
    0 0011: waiting for peripheral 3
    1 11xx: reserved
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CSR5_channel_status:
  addr: 0xf8004128
  mask: 0xf
  name: channel_status
  description: |
    The channel status encoding is:
    0000: Stopped
    0001: Executing
    0010: Cache miss
    0011: Updating PC
    0100: Waiting for event
    0101: At barrier
    0110: reserved
    0111: Waiting for peripheral
    1000: Killing
    1001: Completing
    1010 to 1101: reserved
    1110: Faulting completing
    1111: Faulting.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CPC5_pc_chnl:
  addr: 0xf800412c
  mask: 0xffffffff
  name: pc_chnl
  description: |
    Program counter (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CSR6_reserved:
  addr: 0xf8004130
  mask: 0xffc00000
  name: reserved
  description: |
    reserved,read undefined
ps7_dmac0_ns_CSR6_CNS:
  addr: 0xf8004130
  mask: 0x200000
  name: CNS
  description: |
    Security status of the DMA channel thread:
    0: Secure state
    1: Non-secure state.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CSR6_reserved_1:
  addr: 0xf8004130
  mask: 0x1f0000
  name: reserved_1
  description: |
    reserved,read undefined
ps7_dmac0_ns_CSR6_dmawfp_periph:
  addr: 0xf8004130
  mask: 0x8000
  name: dmawfp_periph
  description: |
    When the DMA channel thread executes DMAWFP, this bit indicates whether the periph operand is set:
    0: periph operand not set
    1: periph operand set.
    Note: the status only applies when the channel is connected to one of the four peripheral request interfaces.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CSR6_dmawfp_b_ns:
  addr: 0xf8004130
  mask: 0x4000
  name: dmawfp_b_ns
  description: |
    When the DMA channel thread executes DMAWFP, this bit indicates whether the burst or single operand were set:
    0: single operand set
    1: burst operand set
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CSR6_reserved_2:
  addr: 0xf8004130
  mask: 0x3e00
  name: reserved_2
  description: |
    reserved
ps7_dmac0_ns_CSR6_wakeup_num:
  addr: 0xf8004130
  mask: 0x1f0
  name: wakeup_num
  description: |
    When the DMA channel thread executes a WFE or WFP instruction, these bits indicate the event or peripheral number that the channel is waiting for:
    Waiting for Event (WFE):
    0 0000: waiting for event 0
    0 0001: waiting for event 1
    ...
    0 1111: waiting for event 15
    1 xxxx: reserved
    Waiting for Peripheral (WFP):
    0 0000: waiting for peripheral 0
    0 0001: waiting for peripheral 1
    0 0010: waiting for peripheral 2
    0 0011: waiting for peripheral 3
    1 11xx: reserved
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CSR6_channel_status:
  addr: 0xf8004130
  mask: 0xf
  name: channel_status
  description: |
    The channel status encoding is:
    0000: Stopped
    0001: Executing
    0010: Cache miss
    0011: Updating PC
    0100: Waiting for event
    0101: At barrier
    0110: reserved
    0111: Waiting for peripheral
    1000: Killing
    1001: Completing
    1010 to 1101: reserved
    1110: Faulting completing
    1111: Faulting.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CPC6_pc_chnl:
  addr: 0xf8004134
  mask: 0xffffffff
  name: pc_chnl
  description: |
    Program counter (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CSR7_reserved:
  addr: 0xf8004138
  mask: 0xffc00000
  name: reserved
  description: |
    reserved,read undefined
ps7_dmac0_ns_CSR7_CNS:
  addr: 0xf8004138
  mask: 0x200000
  name: CNS
  description: |
    Security status of the DMA channel thread:
    0: Secure state
    1: Non-secure state.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CSR7_reserved_1:
  addr: 0xf8004138
  mask: 0x1f0000
  name: reserved_1
  description: |
    reserved,read undefined
ps7_dmac0_ns_CSR7_dmawfp_periph:
  addr: 0xf8004138
  mask: 0x8000
  name: dmawfp_periph
  description: |
    When the DMA channel thread executes DMAWFP, this bit indicates whether the periph operand is set:
    0: periph operand not set
    1: periph operand set.
    Note: the status only applies when the channel is connected to one of the four peripheral request interfaces.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CSR7_dmawfp_b_ns:
  addr: 0xf8004138
  mask: 0x4000
  name: dmawfp_b_ns
  description: |
    When the DMA channel thread executes DMAWFP, this bit indicates whether the burst or single operand were set:
    0: single operand set
    1: burst operand set
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CSR7_reserved_2:
  addr: 0xf8004138
  mask: 0x3e00
  name: reserved_2
  description: |
    reserved
ps7_dmac0_ns_CSR7_wakeup_num:
  addr: 0xf8004138
  mask: 0x1f0
  name: wakeup_num
  description: |
    When the DMA channel thread executes a WFE or WFP instruction, these bits indicate the event or peripheral number that the channel is waiting for:
    Waiting for Event (WFE):
    0 0000: waiting for event 0
    0 0001: waiting for event 1
    ...
    0 1111: waiting for event 15
    1 xxxx: reserved
    Waiting for Peripheral (WFP):
    0 0000: waiting for peripheral 0
    0 0001: waiting for peripheral 1
    0 0010: waiting for peripheral 2
    0 0011: waiting for peripheral 3
    1 11xx: reserved
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CSR7_channel_status:
  addr: 0xf8004138
  mask: 0xf
  name: channel_status
  description: |
    The channel status encoding is:
    0000: Stopped
    0001: Executing
    0010: Cache miss
    0011: Updating PC
    0100: Waiting for event
    0101: At barrier
    0110: reserved
    0111: Waiting for peripheral
    1000: Killing
    1001: Completing
    1010 to 1101: reserved
    1110: Faulting completing
    1111: Faulting.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CPC7_pc_chnl:
  addr: 0xf800413c
  mask: 0xffffffff
  name: pc_chnl
  description: |
    Program counter (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_SAR0_src_addr:
  addr: 0xf8004400
  mask: 0xffffffff
  name: src_addr
  description: |
    Source data address (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_DAR0_dest_addr:
  addr: 0xf8004404
  mask: 0xffffffff
  name: dest_addr
  description: |
    Destination data address (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR0_reserved:
  addr: 0xf8004408
  mask: 0x80000000
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_ns_CCR0_endian_swap_size:
  addr: 0xf8004408
  mask: 0x70000000
  name: endian_swap_size
  description: |
    Data swap: little-endian and byte-invariant big-endian (BE-8) formats.
    000: No swap, 8-bit data
    001: Swap bytes within 16-bit data
    010: Swap bytes within 32-bit data
    011: Swap bytes within 64-bit data
    100: Swap bytes within 128-bit data
    101 to 111: Reserved
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR0_dst_cache_ctrl:
  addr: 0xf8004408
  mask: 0xe000000
  name: dst_cache_ctrl
  description: |
    Programs the AXI AWCACHE signals that are used when the DMAC writes to the destination (0: Low, 1: High):
    Bit [27] programs AWCACHE[3]
    Hardwired Low to AWCACHE[2]
    Bit [26] programs AWCACHE[1]
    Bit [25] programs AWCACHE[0]
    Note: Setting AWCACHE[3,1]=b10 violates the AXI protocol.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR0_dst_prot_ctrl:
  addr: 0xf8004408
  mask: 0x1c00000
  name: dst_prot_ctrl
  description: |
    Programs the AWPROT signals that are used when the DMAC writes the destination data (0: Low, 1: High):
    Bit [24] programs AWPROT[2]
    Bit [23] programs AWPROT[1]
    Bit [22] programs AWPROT[0]
    Note: Only DMA channels in the Secure state can program AWPROT[1] Low, that is, a secure access. If a DMA channel in the Non-secure state attempts to set AWPROT[1] Low, then the DMA channel aborts.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR0_dst_burst_len:
  addr: 0xf8004408
  mask: 0x3c0000
  name: dst_burst_len
  description: |
    For each burst, these bits program the number of data transfers that the DMAC performs when it writes the destination data:
    0000: 1 data transfer
    0001: 2 data transfers
    0010: 3 data transfers
    ...
    1111: 16 data transfers.
    The total number of bytes that the DMAC writes out of the MFIFO when it executes a DMAST instruction is the product of dst_burst_len and dst_burst_size.
    Note: These bits control the state of AWLEN[3:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR0_dst_burst_size:
  addr: 0xf8004408
  mask: 0x38000
  name: dst_burst_size
  description: |
    For each beat within a burst, it programs the number of bytes that the DMAC writes to the destination:
    000: writes 1 byte per beat
    001: writes 2 bytes per beat
    010: writes 4 bytes per beat
    011: writes 8 bytes per beat
    100: writes 16 bytes per beat
    101 to 111: reserved.
    The total number of bytes that the DMAC writes out of the MFIFO when it executes a DMAST instruction is the product of dst_burst_len and dst_burst_size. Note: These bits control the state of AWSIZE[2:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR0_dst_inc:
  addr: 0xf8004408
  mask: 0x4000
  name: dst_inc
  description: |
    Programs the burst type that the DMAC performs when it writes the destination data:
    0: Fixed-address burst. The DMAC signals AWBURST[0] Low.
    1: Incrementing-address burst. The DMAC signals AWBURST[0] HIgh.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR0_src_cache_ctrl:
  addr: 0xf8004408
  mask: 0x3800
  name: src_cache_ctrl
  description: |
    Programs the AXI ARCACHE signals that are used for DMA reads of the source data (0: Low, 1: High):
    Bit [13] programs ARCACHE[2]
    Bit [12] programs ARCACHE[1]
    Bit [11] programs ARCACHE[0]
    Note: The DMAC ties ARCACHE[3] Low. Setting ARCACHE[2:1]= b10 violates the AXI protocol.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR0_src_prot_ctrl:
  addr: 0xf8004408
  mask: 0x700
  name: src_prot_ctrl
  description: |
    Programs the AXI ARPROT signals that are used for DMA reads of the source data (0: Low, 1: High):
    Bit [10] programs ARPROT[2]
    Bit [9] programs ARPROT[1]
    Bit [8] programs ARPROT[0]
    Note: Only DMA channels in the Secure state can program ARPROT[1] Low, that is, a secure access. If a DMA channel in the Non-secure state attempts to set ARPROT[1] Low, the DMA channel aborts.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR0_src_burst_len:
  addr: 0xf8004408
  mask: 0xf0
  name: src_burst_len
  description: |
    For each burst, these bits program the number of data transfers that the DMAC performs when it reads the source data:
    0000: 1 data transfer
    0001: 2 data transfers
    ...
    1111: 16 data transfers.
    The total number of bytes that the DMAC reads into the MFIFO when it executes a DMALD instruction is the product of src_burst_len and src_burst_size. Note: These bits control the state of ARLEN[3:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR0_src_burst_size:
  addr: 0xf8004408
  mask: 0xe
  name: src_burst_size
  description: |
    For each beat within a burst, it programs the number of bytes that the DMAC reads from the source:
    000: reads 1 byte per beat
    001: reads 2 bytes per beat
    010: reads 4 bytes per beat
    011: reads 8 bytes per beat
    100: reads 16 bytes per beat
    101 to 111: reserved.
    The total number of bytes that the DMAC reads into the MFIFO when it executes a DMALD instruction is the product of src_burst_len and src_burst_size. Note: These bits control the state of ARSIZE[2:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR0_src_inc:
  addr: 0xf8004408
  mask: 0x1
  name: src_inc
  description: |
    Programs the burst type that the DMAC performs when it reads the source data:
    0: Fixed-address burst, DMAC signal ARBURST[0] driven Low.
    1: Incrementing-address burst, DMAC signal ARBURST[0] driven High.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_LC0_0_reserved:
  addr: 0xf800440c
  mask: 0xffffff00
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_ns_LC0_0_loop_counter_iteration:
  addr: 0xf800440c
  mask: 0xff
  name: loop_counter_iteration
  description: |
    Provides the status of loop counter zero for the DMA channel thread. The DMAC updates this register when it executes DMALPEND[S|B], and the DMA channel thread is programmed to use loop counter zero.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_LC1_0_reserved:
  addr: 0xf8004410
  mask: 0xffffff00
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_ns_LC1_0_loop_counter_iteration:
  addr: 0xf8004410
  mask: 0xff
  name: loop_counter_iteration
  description: |
    Provides the status of loop counter one for the DMA channel thread. The DMAC updates this register when it executes DMALPEND[S|B], and the DMA channel thread is programmed to use loop counter one.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_SAR1_src_addr:
  addr: 0xf8004420
  mask: 0xffffffff
  name: src_addr
  description: |
    Source data address (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_DAR1_dest_addr:
  addr: 0xf8004424
  mask: 0xffffffff
  name: dest_addr
  description: |
    Destination data address (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR1_reserved:
  addr: 0xf8004428
  mask: 0x80000000
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_ns_CCR1_endian_swap_size:
  addr: 0xf8004428
  mask: 0x70000000
  name: endian_swap_size
  description: |
    Data swap: little-endian and byte-invariant big-endian (BE-8) formats.
    000: No swap, 8-bit data
    001: Swap bytes within 16-bit data
    010: Swap bytes within 32-bit data
    011: Swap bytes within 64-bit data
    100: Swap bytes within 128-bit data
    101 to 111: Reserved
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR1_dst_cache_ctrl:
  addr: 0xf8004428
  mask: 0xe000000
  name: dst_cache_ctrl
  description: |
    Programs the AXI AWCACHE signals that are used when the DMAC writes to the destination (0: Low, 1: High):
    Bit [27] programs AWCACHE[3]
    Hardwired Low to AWCACHE[2]
    Bit [26] programs AWCACHE[1]
    Bit [25] programs AWCACHE[0]
    Note: Setting AWCACHE[3,1]=b10 violates the AXI protocol.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR1_dst_prot_ctrl:
  addr: 0xf8004428
  mask: 0x1c00000
  name: dst_prot_ctrl
  description: |
    Programs the AWPROT signals that are used when the DMAC writes the destination data (0: Low, 1: High):
    Bit [24] programs AWPROT[2]
    Bit [23] programs AWPROT[1]
    Bit [22] programs AWPROT[0]
    Note: Only DMA channels in the Secure state can program AWPROT[1] Low, that is, a secure access. If a DMA channel in the Non-secure state attempts to set AWPROT[1] Low, then the DMA channel aborts.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR1_dst_burst_len:
  addr: 0xf8004428
  mask: 0x3c0000
  name: dst_burst_len
  description: |
    For each burst, these bits program the number of data transfers that the DMAC performs when it writes the destination data:
    0000: 1 data transfer
    0001: 2 data transfers
    0010: 3 data transfers
    ...
    1111: 16 data transfers.
    The total number of bytes that the DMAC writes out of the MFIFO when it executes a DMAST instruction is the product of dst_burst_len and dst_burst_size.
    Note: These bits control the state of AWLEN[3:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR1_dst_burst_size:
  addr: 0xf8004428
  mask: 0x38000
  name: dst_burst_size
  description: |
    For each beat within a burst, it programs the number of bytes that the DMAC writes to the destination:
    000: writes 1 byte per beat
    001: writes 2 bytes per beat
    010: writes 4 bytes per beat
    011: writes 8 bytes per beat
    100: writes 16 bytes per beat
    101 to 111: reserved.
    The total number of bytes that the DMAC writes out of the MFIFO when it executes a DMAST instruction is the product of dst_burst_len and dst_burst_size. Note: These bits control the state of AWSIZE[2:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR1_dst_inc:
  addr: 0xf8004428
  mask: 0x4000
  name: dst_inc
  description: |
    Programs the burst type that the DMAC performs when it writes the destination data:
    0: Fixed-address burst. The DMAC signals AWBURST[0] Low.
    1: Incrementing-address burst. The DMAC signals AWBURST[0] HIgh.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR1_src_cache_ctrl:
  addr: 0xf8004428
  mask: 0x3800
  name: src_cache_ctrl
  description: |
    Programs the AXI ARCACHE signals that are used for DMA reads of the source data (0: Low, 1: High):
    Bit [13] programs ARCACHE[2]
    Bit [12] programs ARCACHE[1]
    Bit [11] programs ARCACHE[0]
    Note: The DMAC ties ARCACHE[3] Low. Setting ARCACHE[2:1]= b10 violates the AXI protocol.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR1_src_prot_ctrl:
  addr: 0xf8004428
  mask: 0x700
  name: src_prot_ctrl
  description: |
    Programs the AXI ARPROT signals that are used for DMA reads of the source data (0: Low, 1: High):
    Bit [10] programs ARPROT[2]
    Bit [9] programs ARPROT[1]
    Bit [8] programs ARPROT[0]
    Note: Only DMA channels in the Secure state can program ARPROT[1] Low, that is, a secure access. If a DMA channel in the Non-secure state attempts to set ARPROT[1] Low, the DMA channel aborts.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR1_src_burst_len:
  addr: 0xf8004428
  mask: 0xf0
  name: src_burst_len
  description: |
    For each burst, these bits program the number of data transfers that the DMAC performs when it reads the source data:
    0000: 1 data transfer
    0001: 2 data transfers
    ...
    1111: 16 data transfers.
    The total number of bytes that the DMAC reads into the MFIFO when it executes a DMALD instruction is the product of src_burst_len and src_burst_size. Note: These bits control the state of ARLEN[3:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR1_src_burst_size:
  addr: 0xf8004428
  mask: 0xe
  name: src_burst_size
  description: |
    For each beat within a burst, it programs the number of bytes that the DMAC reads from the source:
    000: reads 1 byte per beat
    001: reads 2 bytes per beat
    010: reads 4 bytes per beat
    011: reads 8 bytes per beat
    100: reads 16 bytes per beat
    101 to 111: reserved.
    The total number of bytes that the DMAC reads into the MFIFO when it executes a DMALD instruction is the product of src_burst_len and src_burst_size. Note: These bits control the state of ARSIZE[2:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR1_src_inc:
  addr: 0xf8004428
  mask: 0x1
  name: src_inc
  description: |
    Programs the burst type that the DMAC performs when it reads the source data:
    0: Fixed-address burst, DMAC signal ARBURST[0] driven Low.
    1: Incrementing-address burst, DMAC signal ARBURST[0] driven High.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_LC0_1_reserved:
  addr: 0xf800442c
  mask: 0xffffff00
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_ns_LC0_1_loop_counter_iteration:
  addr: 0xf800442c
  mask: 0xff
  name: loop_counter_iteration
  description: |
    Provides the status of loop counter zero for the DMA channel thread. The DMAC updates this register when it executes DMALPEND[S|B], and the DMA channel thread is programmed to use loop counter zero.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_LC1_1_reserved:
  addr: 0xf8004430
  mask: 0xffffff00
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_ns_LC1_1_loop_counter_iteration:
  addr: 0xf8004430
  mask: 0xff
  name: loop_counter_iteration
  description: |
    Provides the status of loop counter one for the DMA channel thread. The DMAC updates this register when it executes DMALPEND[S|B], and the DMA channel thread is programmed to use loop counter one.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_SAR2_src_addr:
  addr: 0xf8004440
  mask: 0xffffffff
  name: src_addr
  description: |
    Source data address (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_DAR2_dest_addr:
  addr: 0xf8004444
  mask: 0xffffffff
  name: dest_addr
  description: |
    Destination data address (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR2_reserved:
  addr: 0xf8004448
  mask: 0x80000000
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_ns_CCR2_endian_swap_size:
  addr: 0xf8004448
  mask: 0x70000000
  name: endian_swap_size
  description: |
    Data swap: little-endian and byte-invariant big-endian (BE-8) formats.
    000: No swap, 8-bit data
    001: Swap bytes within 16-bit data
    010: Swap bytes within 32-bit data
    011: Swap bytes within 64-bit data
    100: Swap bytes within 128-bit data
    101 to 111: Reserved
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR2_dst_cache_ctrl:
  addr: 0xf8004448
  mask: 0xe000000
  name: dst_cache_ctrl
  description: |
    Programs the AXI AWCACHE signals that are used when the DMAC writes to the destination (0: Low, 1: High):
    Bit [27] programs AWCACHE[3]
    Hardwired Low to AWCACHE[2]
    Bit [26] programs AWCACHE[1]
    Bit [25] programs AWCACHE[0]
    Note: Setting AWCACHE[3,1]=b10 violates the AXI protocol.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR2_dst_prot_ctrl:
  addr: 0xf8004448
  mask: 0x1c00000
  name: dst_prot_ctrl
  description: |
    Programs the AWPROT signals that are used when the DMAC writes the destination data (0: Low, 1: High):
    Bit [24] programs AWPROT[2]
    Bit [23] programs AWPROT[1]
    Bit [22] programs AWPROT[0]
    Note: Only DMA channels in the Secure state can program AWPROT[1] Low, that is, a secure access. If a DMA channel in the Non-secure state attempts to set AWPROT[1] Low, then the DMA channel aborts.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR2_dst_burst_len:
  addr: 0xf8004448
  mask: 0x3c0000
  name: dst_burst_len
  description: |
    For each burst, these bits program the number of data transfers that the DMAC performs when it writes the destination data:
    0000: 1 data transfer
    0001: 2 data transfers
    0010: 3 data transfers
    ...
    1111: 16 data transfers.
    The total number of bytes that the DMAC writes out of the MFIFO when it executes a DMAST instruction is the product of dst_burst_len and dst_burst_size.
    Note: These bits control the state of AWLEN[3:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR2_dst_burst_size:
  addr: 0xf8004448
  mask: 0x38000
  name: dst_burst_size
  description: |
    For each beat within a burst, it programs the number of bytes that the DMAC writes to the destination:
    000: writes 1 byte per beat
    001: writes 2 bytes per beat
    010: writes 4 bytes per beat
    011: writes 8 bytes per beat
    100: writes 16 bytes per beat
    101 to 111: reserved.
    The total number of bytes that the DMAC writes out of the MFIFO when it executes a DMAST instruction is the product of dst_burst_len and dst_burst_size. Note: These bits control the state of AWSIZE[2:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR2_dst_inc:
  addr: 0xf8004448
  mask: 0x4000
  name: dst_inc
  description: |
    Programs the burst type that the DMAC performs when it writes the destination data:
    0: Fixed-address burst. The DMAC signals AWBURST[0] Low.
    1: Incrementing-address burst. The DMAC signals AWBURST[0] HIgh.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR2_src_cache_ctrl:
  addr: 0xf8004448
  mask: 0x3800
  name: src_cache_ctrl
  description: |
    Programs the AXI ARCACHE signals that are used for DMA reads of the source data (0: Low, 1: High):
    Bit [13] programs ARCACHE[2]
    Bit [12] programs ARCACHE[1]
    Bit [11] programs ARCACHE[0]
    Note: The DMAC ties ARCACHE[3] Low. Setting ARCACHE[2:1]= b10 violates the AXI protocol.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR2_src_prot_ctrl:
  addr: 0xf8004448
  mask: 0x700
  name: src_prot_ctrl
  description: |
    Programs the AXI ARPROT signals that are used for DMA reads of the source data (0: Low, 1: High):
    Bit [10] programs ARPROT[2]
    Bit [9] programs ARPROT[1]
    Bit [8] programs ARPROT[0]
    Note: Only DMA channels in the Secure state can program ARPROT[1] Low, that is, a secure access. If a DMA channel in the Non-secure state attempts to set ARPROT[1] Low, the DMA channel aborts.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR2_src_burst_len:
  addr: 0xf8004448
  mask: 0xf0
  name: src_burst_len
  description: |
    For each burst, these bits program the number of data transfers that the DMAC performs when it reads the source data:
    0000: 1 data transfer
    0001: 2 data transfers
    ...
    1111: 16 data transfers.
    The total number of bytes that the DMAC reads into the MFIFO when it executes a DMALD instruction is the product of src_burst_len and src_burst_size. Note: These bits control the state of ARLEN[3:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR2_src_burst_size:
  addr: 0xf8004448
  mask: 0xe
  name: src_burst_size
  description: |
    For each beat within a burst, it programs the number of bytes that the DMAC reads from the source:
    000: reads 1 byte per beat
    001: reads 2 bytes per beat
    010: reads 4 bytes per beat
    011: reads 8 bytes per beat
    100: reads 16 bytes per beat
    101 to 111: reserved.
    The total number of bytes that the DMAC reads into the MFIFO when it executes a DMALD instruction is the product of src_burst_len and src_burst_size. Note: These bits control the state of ARSIZE[2:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR2_src_inc:
  addr: 0xf8004448
  mask: 0x1
  name: src_inc
  description: |
    Programs the burst type that the DMAC performs when it reads the source data:
    0: Fixed-address burst, DMAC signal ARBURST[0] driven Low.
    1: Incrementing-address burst, DMAC signal ARBURST[0] driven High.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_LC0_2_reserved:
  addr: 0xf800444c
  mask: 0xffffff00
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_ns_LC0_2_loop_counter_iteration:
  addr: 0xf800444c
  mask: 0xff
  name: loop_counter_iteration
  description: |
    Provides the status of loop counter zero for the DMA channel thread. The DMAC updates this register when it executes DMALPEND[S|B], and the DMA channel thread is programmed to use loop counter zero.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_LC1_2_reserved:
  addr: 0xf8004450
  mask: 0xffffff00
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_ns_LC1_2_loop_counter_iteration:
  addr: 0xf8004450
  mask: 0xff
  name: loop_counter_iteration
  description: |
    Provides the status of loop counter one for the DMA channel thread. The DMAC updates this register when it executes DMALPEND[S|B], and the DMA channel thread is programmed to use loop counter one.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_SAR3_src_addr:
  addr: 0xf8004460
  mask: 0xffffffff
  name: src_addr
  description: |
    Source data address (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_DAR3_dest_addr:
  addr: 0xf8004464
  mask: 0xffffffff
  name: dest_addr
  description: |
    Destination data address (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR3_reserved:
  addr: 0xf8004468
  mask: 0x80000000
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_ns_CCR3_endian_swap_size:
  addr: 0xf8004468
  mask: 0x70000000
  name: endian_swap_size
  description: |
    Data swap: little-endian and byte-invariant big-endian (BE-8) formats.
    000: No swap, 8-bit data
    001: Swap bytes within 16-bit data
    010: Swap bytes within 32-bit data
    011: Swap bytes within 64-bit data
    100: Swap bytes within 128-bit data
    101 to 111: Reserved
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR3_dst_cache_ctrl:
  addr: 0xf8004468
  mask: 0xe000000
  name: dst_cache_ctrl
  description: |
    Programs the AXI AWCACHE signals that are used when the DMAC writes to the destination (0: Low, 1: High):
    Bit [27] programs AWCACHE[3]
    Hardwired Low to AWCACHE[2]
    Bit [26] programs AWCACHE[1]
    Bit [25] programs AWCACHE[0]
    Note: Setting AWCACHE[3,1]=b10 violates the AXI protocol.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR3_dst_prot_ctrl:
  addr: 0xf8004468
  mask: 0x1c00000
  name: dst_prot_ctrl
  description: |
    Programs the AWPROT signals that are used when the DMAC writes the destination data (0: Low, 1: High):
    Bit [24] programs AWPROT[2]
    Bit [23] programs AWPROT[1]
    Bit [22] programs AWPROT[0]
    Note: Only DMA channels in the Secure state can program AWPROT[1] Low, that is, a secure access. If a DMA channel in the Non-secure state attempts to set AWPROT[1] Low, then the DMA channel aborts.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR3_dst_burst_len:
  addr: 0xf8004468
  mask: 0x3c0000
  name: dst_burst_len
  description: |
    For each burst, these bits program the number of data transfers that the DMAC performs when it writes the destination data:
    0000: 1 data transfer
    0001: 2 data transfers
    0010: 3 data transfers
    ...
    1111: 16 data transfers.
    The total number of bytes that the DMAC writes out of the MFIFO when it executes a DMAST instruction is the product of dst_burst_len and dst_burst_size.
    Note: These bits control the state of AWLEN[3:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR3_dst_burst_size:
  addr: 0xf8004468
  mask: 0x38000
  name: dst_burst_size
  description: |
    For each beat within a burst, it programs the number of bytes that the DMAC writes to the destination:
    000: writes 1 byte per beat
    001: writes 2 bytes per beat
    010: writes 4 bytes per beat
    011: writes 8 bytes per beat
    100: writes 16 bytes per beat
    101 to 111: reserved.
    The total number of bytes that the DMAC writes out of the MFIFO when it executes a DMAST instruction is the product of dst_burst_len and dst_burst_size. Note: These bits control the state of AWSIZE[2:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR3_dst_inc:
  addr: 0xf8004468
  mask: 0x4000
  name: dst_inc
  description: |
    Programs the burst type that the DMAC performs when it writes the destination data:
    0: Fixed-address burst. The DMAC signals AWBURST[0] Low.
    1: Incrementing-address burst. The DMAC signals AWBURST[0] HIgh.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR3_src_cache_ctrl:
  addr: 0xf8004468
  mask: 0x3800
  name: src_cache_ctrl
  description: |
    Programs the AXI ARCACHE signals that are used for DMA reads of the source data (0: Low, 1: High):
    Bit [13] programs ARCACHE[2]
    Bit [12] programs ARCACHE[1]
    Bit [11] programs ARCACHE[0]
    Note: The DMAC ties ARCACHE[3] Low. Setting ARCACHE[2:1]= b10 violates the AXI protocol.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR3_src_prot_ctrl:
  addr: 0xf8004468
  mask: 0x700
  name: src_prot_ctrl
  description: |
    Programs the AXI ARPROT signals that are used for DMA reads of the source data (0: Low, 1: High):
    Bit [10] programs ARPROT[2]
    Bit [9] programs ARPROT[1]
    Bit [8] programs ARPROT[0]
    Note: Only DMA channels in the Secure state can program ARPROT[1] Low, that is, a secure access. If a DMA channel in the Non-secure state attempts to set ARPROT[1] Low, the DMA channel aborts.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR3_src_burst_len:
  addr: 0xf8004468
  mask: 0xf0
  name: src_burst_len
  description: |
    For each burst, these bits program the number of data transfers that the DMAC performs when it reads the source data:
    0000: 1 data transfer
    0001: 2 data transfers
    ...
    1111: 16 data transfers.
    The total number of bytes that the DMAC reads into the MFIFO when it executes a DMALD instruction is the product of src_burst_len and src_burst_size. Note: These bits control the state of ARLEN[3:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR3_src_burst_size:
  addr: 0xf8004468
  mask: 0xe
  name: src_burst_size
  description: |
    For each beat within a burst, it programs the number of bytes that the DMAC reads from the source:
    000: reads 1 byte per beat
    001: reads 2 bytes per beat
    010: reads 4 bytes per beat
    011: reads 8 bytes per beat
    100: reads 16 bytes per beat
    101 to 111: reserved.
    The total number of bytes that the DMAC reads into the MFIFO when it executes a DMALD instruction is the product of src_burst_len and src_burst_size. Note: These bits control the state of ARSIZE[2:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR3_src_inc:
  addr: 0xf8004468
  mask: 0x1
  name: src_inc
  description: |
    Programs the burst type that the DMAC performs when it reads the source data:
    0: Fixed-address burst, DMAC signal ARBURST[0] driven Low.
    1: Incrementing-address burst, DMAC signal ARBURST[0] driven High.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_LC0_3_reserved:
  addr: 0xf800446c
  mask: 0xffffff00
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_ns_LC0_3_loop_counter_iteration:
  addr: 0xf800446c
  mask: 0xff
  name: loop_counter_iteration
  description: |
    Provides the status of loop counter zero for the DMA channel thread. The DMAC updates this register when it executes DMALPEND[S|B], and the DMA channel thread is programmed to use loop counter zero.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_LC1_3_reserved:
  addr: 0xf8004470
  mask: 0xffffff00
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_ns_LC1_3_loop_counter_iteration:
  addr: 0xf8004470
  mask: 0xff
  name: loop_counter_iteration
  description: |
    Provides the status of loop counter one for the DMA channel thread. The DMAC updates this register when it executes DMALPEND[S|B], and the DMA channel thread is programmed to use loop counter one.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_SAR4_src_addr:
  addr: 0xf8004480
  mask: 0xffffffff
  name: src_addr
  description: |
    Source data address (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_DAR4_dest_addr:
  addr: 0xf8004484
  mask: 0xffffffff
  name: dest_addr
  description: |
    Destination data address (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR4_reserved:
  addr: 0xf8004488
  mask: 0x80000000
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_ns_CCR4_endian_swap_size:
  addr: 0xf8004488
  mask: 0x70000000
  name: endian_swap_size
  description: |
    Data swap: little-endian and byte-invariant big-endian (BE-8) formats.
    000: No swap, 8-bit data
    001: Swap bytes within 16-bit data
    010: Swap bytes within 32-bit data
    011: Swap bytes within 64-bit data
    100: Swap bytes within 128-bit data
    101 to 111: Reserved
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR4_dst_cache_ctrl:
  addr: 0xf8004488
  mask: 0xe000000
  name: dst_cache_ctrl
  description: |
    Programs the AXI AWCACHE signals that are used when the DMAC writes to the destination (0: Low, 1: High):
    Bit [27] programs AWCACHE[3]
    Hardwired Low to AWCACHE[2]
    Bit [26] programs AWCACHE[1]
    Bit [25] programs AWCACHE[0]
    Note: Setting AWCACHE[3,1]=b10 violates the AXI protocol.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR4_dst_prot_ctrl:
  addr: 0xf8004488
  mask: 0x1c00000
  name: dst_prot_ctrl
  description: |
    Programs the AWPROT signals that are used when the DMAC writes the destination data (0: Low, 1: High):
    Bit [24] programs AWPROT[2]
    Bit [23] programs AWPROT[1]
    Bit [22] programs AWPROT[0]
    Note: Only DMA channels in the Secure state can program AWPROT[1] Low, that is, a secure access. If a DMA channel in the Non-secure state attempts to set AWPROT[1] Low, then the DMA channel aborts.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR4_dst_burst_len:
  addr: 0xf8004488
  mask: 0x3c0000
  name: dst_burst_len
  description: |
    For each burst, these bits program the number of data transfers that the DMAC performs when it writes the destination data:
    0000: 1 data transfer
    0001: 2 data transfers
    0010: 3 data transfers
    ...
    1111: 16 data transfers.
    The total number of bytes that the DMAC writes out of the MFIFO when it executes a DMAST instruction is the product of dst_burst_len and dst_burst_size.
    Note: These bits control the state of AWLEN[3:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR4_dst_burst_size:
  addr: 0xf8004488
  mask: 0x38000
  name: dst_burst_size
  description: |
    For each beat within a burst, it programs the number of bytes that the DMAC writes to the destination:
    000: writes 1 byte per beat
    001: writes 2 bytes per beat
    010: writes 4 bytes per beat
    011: writes 8 bytes per beat
    100: writes 16 bytes per beat
    101 to 111: reserved.
    The total number of bytes that the DMAC writes out of the MFIFO when it executes a DMAST instruction is the product of dst_burst_len and dst_burst_size. Note: These bits control the state of AWSIZE[2:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR4_dst_inc:
  addr: 0xf8004488
  mask: 0x4000
  name: dst_inc
  description: |
    Programs the burst type that the DMAC performs when it writes the destination data:
    0: Fixed-address burst. The DMAC signals AWBURST[0] Low.
    1: Incrementing-address burst. The DMAC signals AWBURST[0] HIgh.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR4_src_cache_ctrl:
  addr: 0xf8004488
  mask: 0x3800
  name: src_cache_ctrl
  description: |
    Programs the AXI ARCACHE signals that are used for DMA reads of the source data (0: Low, 1: High):
    Bit [13] programs ARCACHE[2]
    Bit [12] programs ARCACHE[1]
    Bit [11] programs ARCACHE[0]
    Note: The DMAC ties ARCACHE[3] Low. Setting ARCACHE[2:1]= b10 violates the AXI protocol.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR4_src_prot_ctrl:
  addr: 0xf8004488
  mask: 0x700
  name: src_prot_ctrl
  description: |
    Programs the AXI ARPROT signals that are used for DMA reads of the source data (0: Low, 1: High):
    Bit [10] programs ARPROT[2]
    Bit [9] programs ARPROT[1]
    Bit [8] programs ARPROT[0]
    Note: Only DMA channels in the Secure state can program ARPROT[1] Low, that is, a secure access. If a DMA channel in the Non-secure state attempts to set ARPROT[1] Low, the DMA channel aborts.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR4_src_burst_len:
  addr: 0xf8004488
  mask: 0xf0
  name: src_burst_len
  description: |
    For each burst, these bits program the number of data transfers that the DMAC performs when it reads the source data:
    0000: 1 data transfer
    0001: 2 data transfers
    ...
    1111: 16 data transfers.
    The total number of bytes that the DMAC reads into the MFIFO when it executes a DMALD instruction is the product of src_burst_len and src_burst_size. Note: These bits control the state of ARLEN[3:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR4_src_burst_size:
  addr: 0xf8004488
  mask: 0xe
  name: src_burst_size
  description: |
    For each beat within a burst, it programs the number of bytes that the DMAC reads from the source:
    000: reads 1 byte per beat
    001: reads 2 bytes per beat
    010: reads 4 bytes per beat
    011: reads 8 bytes per beat
    100: reads 16 bytes per beat
    101 to 111: reserved.
    The total number of bytes that the DMAC reads into the MFIFO when it executes a DMALD instruction is the product of src_burst_len and src_burst_size. Note: These bits control the state of ARSIZE[2:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR4_src_inc:
  addr: 0xf8004488
  mask: 0x1
  name: src_inc
  description: |
    Programs the burst type that the DMAC performs when it reads the source data:
    0: Fixed-address burst, DMAC signal ARBURST[0] driven Low.
    1: Incrementing-address burst, DMAC signal ARBURST[0] driven High.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_LC0_4_reserved:
  addr: 0xf800448c
  mask: 0xffffff00
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_ns_LC0_4_loop_counter_iteration:
  addr: 0xf800448c
  mask: 0xff
  name: loop_counter_iteration
  description: |
    Provides the status of loop counter zero for the DMA channel thread. The DMAC updates this register when it executes DMALPEND[S|B], and the DMA channel thread is programmed to use loop counter zero.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_LC1_4_reserved:
  addr: 0xf8004490
  mask: 0xffffff00
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_ns_LC1_4_loop_counter_iteration:
  addr: 0xf8004490
  mask: 0xff
  name: loop_counter_iteration
  description: |
    Provides the status of loop counter one for the DMA channel thread. The DMAC updates this register when it executes DMALPEND[S|B], and the DMA channel thread is programmed to use loop counter one.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_SAR5_src_addr:
  addr: 0xf80044a0
  mask: 0xffffffff
  name: src_addr
  description: |
    Source data address (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_DAR5_dest_addr:
  addr: 0xf80044a4
  mask: 0xffffffff
  name: dest_addr
  description: |
    Destination data address (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR5_reserved:
  addr: 0xf80044a8
  mask: 0x80000000
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_ns_CCR5_endian_swap_size:
  addr: 0xf80044a8
  mask: 0x70000000
  name: endian_swap_size
  description: |
    Data swap: little-endian and byte-invariant big-endian (BE-8) formats.
    000: No swap, 8-bit data
    001: Swap bytes within 16-bit data
    010: Swap bytes within 32-bit data
    011: Swap bytes within 64-bit data
    100: Swap bytes within 128-bit data
    101 to 111: Reserved
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR5_dst_cache_ctrl:
  addr: 0xf80044a8
  mask: 0xe000000
  name: dst_cache_ctrl
  description: |
    Programs the AXI AWCACHE signals that are used when the DMAC writes to the destination (0: Low, 1: High):
    Bit [27] programs AWCACHE[3]
    Hardwired Low to AWCACHE[2]
    Bit [26] programs AWCACHE[1]
    Bit [25] programs AWCACHE[0]
    Note: Setting AWCACHE[3,1]=b10 violates the AXI protocol.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR5_dst_prot_ctrl:
  addr: 0xf80044a8
  mask: 0x1c00000
  name: dst_prot_ctrl
  description: |
    Programs the AWPROT signals that are used when the DMAC writes the destination data (0: Low, 1: High):
    Bit [24] programs AWPROT[2]
    Bit [23] programs AWPROT[1]
    Bit [22] programs AWPROT[0]
    Note: Only DMA channels in the Secure state can program AWPROT[1] Low, that is, a secure access. If a DMA channel in the Non-secure state attempts to set AWPROT[1] Low, then the DMA channel aborts.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR5_dst_burst_len:
  addr: 0xf80044a8
  mask: 0x3c0000
  name: dst_burst_len
  description: |
    For each burst, these bits program the number of data transfers that the DMAC performs when it writes the destination data:
    0000: 1 data transfer
    0001: 2 data transfers
    0010: 3 data transfers
    ...
    1111: 16 data transfers.
    The total number of bytes that the DMAC writes out of the MFIFO when it executes a DMAST instruction is the product of dst_burst_len and dst_burst_size.
    Note: These bits control the state of AWLEN[3:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR5_dst_burst_size:
  addr: 0xf80044a8
  mask: 0x38000
  name: dst_burst_size
  description: |
    For each beat within a burst, it programs the number of bytes that the DMAC writes to the destination:
    000: writes 1 byte per beat
    001: writes 2 bytes per beat
    010: writes 4 bytes per beat
    011: writes 8 bytes per beat
    100: writes 16 bytes per beat
    101 to 111: reserved.
    The total number of bytes that the DMAC writes out of the MFIFO when it executes a DMAST instruction is the product of dst_burst_len and dst_burst_size. Note: These bits control the state of AWSIZE[2:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR5_dst_inc:
  addr: 0xf80044a8
  mask: 0x4000
  name: dst_inc
  description: |
    Programs the burst type that the DMAC performs when it writes the destination data:
    0: Fixed-address burst. The DMAC signals AWBURST[0] Low.
    1: Incrementing-address burst. The DMAC signals AWBURST[0] HIgh.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR5_src_cache_ctrl:
  addr: 0xf80044a8
  mask: 0x3800
  name: src_cache_ctrl
  description: |
    Programs the AXI ARCACHE signals that are used for DMA reads of the source data (0: Low, 1: High):
    Bit [13] programs ARCACHE[2]
    Bit [12] programs ARCACHE[1]
    Bit [11] programs ARCACHE[0]
    Note: The DMAC ties ARCACHE[3] Low. Setting ARCACHE[2:1]= b10 violates the AXI protocol.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR5_src_prot_ctrl:
  addr: 0xf80044a8
  mask: 0x700
  name: src_prot_ctrl
  description: |
    Programs the AXI ARPROT signals that are used for DMA reads of the source data (0: Low, 1: High):
    Bit [10] programs ARPROT[2]
    Bit [9] programs ARPROT[1]
    Bit [8] programs ARPROT[0]
    Note: Only DMA channels in the Secure state can program ARPROT[1] Low, that is, a secure access. If a DMA channel in the Non-secure state attempts to set ARPROT[1] Low, the DMA channel aborts.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR5_src_burst_len:
  addr: 0xf80044a8
  mask: 0xf0
  name: src_burst_len
  description: |
    For each burst, these bits program the number of data transfers that the DMAC performs when it reads the source data:
    0000: 1 data transfer
    0001: 2 data transfers
    ...
    1111: 16 data transfers.
    The total number of bytes that the DMAC reads into the MFIFO when it executes a DMALD instruction is the product of src_burst_len and src_burst_size. Note: These bits control the state of ARLEN[3:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR5_src_burst_size:
  addr: 0xf80044a8
  mask: 0xe
  name: src_burst_size
  description: |
    For each beat within a burst, it programs the number of bytes that the DMAC reads from the source:
    000: reads 1 byte per beat
    001: reads 2 bytes per beat
    010: reads 4 bytes per beat
    011: reads 8 bytes per beat
    100: reads 16 bytes per beat
    101 to 111: reserved.
    The total number of bytes that the DMAC reads into the MFIFO when it executes a DMALD instruction is the product of src_burst_len and src_burst_size. Note: These bits control the state of ARSIZE[2:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR5_src_inc:
  addr: 0xf80044a8
  mask: 0x1
  name: src_inc
  description: |
    Programs the burst type that the DMAC performs when it reads the source data:
    0: Fixed-address burst, DMAC signal ARBURST[0] driven Low.
    1: Incrementing-address burst, DMAC signal ARBURST[0] driven High.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_LC0_5_reserved:
  addr: 0xf80044ac
  mask: 0xffffff00
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_ns_LC0_5_loop_counter_iteration:
  addr: 0xf80044ac
  mask: 0xff
  name: loop_counter_iteration
  description: |
    Provides the status of loop counter zero for the DMA channel thread. The DMAC updates this register when it executes DMALPEND[S|B], and the DMA channel thread is programmed to use loop counter zero.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_LC1_5_reserved:
  addr: 0xf80044b0
  mask: 0xffffff00
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_ns_LC1_5_loop_counter_iteration:
  addr: 0xf80044b0
  mask: 0xff
  name: loop_counter_iteration
  description: |
    Provides the status of loop counter one for the DMA channel thread. The DMAC updates this register when it executes DMALPEND[S|B], and the DMA channel thread is programmed to use loop counter one.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_SAR6_src_addr:
  addr: 0xf80044c0
  mask: 0xffffffff
  name: src_addr
  description: |
    Source data address (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_DAR6_dest_addr:
  addr: 0xf80044c4
  mask: 0xffffffff
  name: dest_addr
  description: |
    Destination data address (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR6_reserved:
  addr: 0xf80044c8
  mask: 0x80000000
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_ns_CCR6_endian_swap_size:
  addr: 0xf80044c8
  mask: 0x70000000
  name: endian_swap_size
  description: |
    Data swap: little-endian and byte-invariant big-endian (BE-8) formats.
    000: No swap, 8-bit data
    001: Swap bytes within 16-bit data
    010: Swap bytes within 32-bit data
    011: Swap bytes within 64-bit data
    100: Swap bytes within 128-bit data
    101 to 111: Reserved
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR6_dst_cache_ctrl:
  addr: 0xf80044c8
  mask: 0xe000000
  name: dst_cache_ctrl
  description: |
    Programs the AXI AWCACHE signals that are used when the DMAC writes to the destination (0: Low, 1: High):
    Bit [27] programs AWCACHE[3]
    Hardwired Low to AWCACHE[2]
    Bit [26] programs AWCACHE[1]
    Bit [25] programs AWCACHE[0]
    Note: Setting AWCACHE[3,1]=b10 violates the AXI protocol.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR6_dst_prot_ctrl:
  addr: 0xf80044c8
  mask: 0x1c00000
  name: dst_prot_ctrl
  description: |
    Programs the AWPROT signals that are used when the DMAC writes the destination data (0: Low, 1: High):
    Bit [24] programs AWPROT[2]
    Bit [23] programs AWPROT[1]
    Bit [22] programs AWPROT[0]
    Note: Only DMA channels in the Secure state can program AWPROT[1] Low, that is, a secure access. If a DMA channel in the Non-secure state attempts to set AWPROT[1] Low, then the DMA channel aborts.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR6_dst_burst_len:
  addr: 0xf80044c8
  mask: 0x3c0000
  name: dst_burst_len
  description: |
    For each burst, these bits program the number of data transfers that the DMAC performs when it writes the destination data:
    0000: 1 data transfer
    0001: 2 data transfers
    0010: 3 data transfers
    ...
    1111: 16 data transfers.
    The total number of bytes that the DMAC writes out of the MFIFO when it executes a DMAST instruction is the product of dst_burst_len and dst_burst_size.
    Note: These bits control the state of AWLEN[3:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR6_dst_burst_size:
  addr: 0xf80044c8
  mask: 0x38000
  name: dst_burst_size
  description: |
    For each beat within a burst, it programs the number of bytes that the DMAC writes to the destination:
    000: writes 1 byte per beat
    001: writes 2 bytes per beat
    010: writes 4 bytes per beat
    011: writes 8 bytes per beat
    100: writes 16 bytes per beat
    101 to 111: reserved.
    The total number of bytes that the DMAC writes out of the MFIFO when it executes a DMAST instruction is the product of dst_burst_len and dst_burst_size. Note: These bits control the state of AWSIZE[2:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR6_dst_inc:
  addr: 0xf80044c8
  mask: 0x4000
  name: dst_inc
  description: |
    Programs the burst type that the DMAC performs when it writes the destination data:
    0: Fixed-address burst. The DMAC signals AWBURST[0] Low.
    1: Incrementing-address burst. The DMAC signals AWBURST[0] HIgh.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR6_src_cache_ctrl:
  addr: 0xf80044c8
  mask: 0x3800
  name: src_cache_ctrl
  description: |
    Programs the AXI ARCACHE signals that are used for DMA reads of the source data (0: Low, 1: High):
    Bit [13] programs ARCACHE[2]
    Bit [12] programs ARCACHE[1]
    Bit [11] programs ARCACHE[0]
    Note: The DMAC ties ARCACHE[3] Low. Setting ARCACHE[2:1]= b10 violates the AXI protocol.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR6_src_prot_ctrl:
  addr: 0xf80044c8
  mask: 0x700
  name: src_prot_ctrl
  description: |
    Programs the AXI ARPROT signals that are used for DMA reads of the source data (0: Low, 1: High):
    Bit [10] programs ARPROT[2]
    Bit [9] programs ARPROT[1]
    Bit [8] programs ARPROT[0]
    Note: Only DMA channels in the Secure state can program ARPROT[1] Low, that is, a secure access. If a DMA channel in the Non-secure state attempts to set ARPROT[1] Low, the DMA channel aborts.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR6_src_burst_len:
  addr: 0xf80044c8
  mask: 0xf0
  name: src_burst_len
  description: |
    For each burst, these bits program the number of data transfers that the DMAC performs when it reads the source data:
    0000: 1 data transfer
    0001: 2 data transfers
    ...
    1111: 16 data transfers.
    The total number of bytes that the DMAC reads into the MFIFO when it executes a DMALD instruction is the product of src_burst_len and src_burst_size. Note: These bits control the state of ARLEN[3:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR6_src_burst_size:
  addr: 0xf80044c8
  mask: 0xe
  name: src_burst_size
  description: |
    For each beat within a burst, it programs the number of bytes that the DMAC reads from the source:
    000: reads 1 byte per beat
    001: reads 2 bytes per beat
    010: reads 4 bytes per beat
    011: reads 8 bytes per beat
    100: reads 16 bytes per beat
    101 to 111: reserved.
    The total number of bytes that the DMAC reads into the MFIFO when it executes a DMALD instruction is the product of src_burst_len and src_burst_size. Note: These bits control the state of ARSIZE[2:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR6_src_inc:
  addr: 0xf80044c8
  mask: 0x1
  name: src_inc
  description: |
    Programs the burst type that the DMAC performs when it reads the source data:
    0: Fixed-address burst, DMAC signal ARBURST[0] driven Low.
    1: Incrementing-address burst, DMAC signal ARBURST[0] driven High.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_LC0_6_reserved:
  addr: 0xf80044cc
  mask: 0xffffff00
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_ns_LC0_6_loop_counter_iteration:
  addr: 0xf80044cc
  mask: 0xff
  name: loop_counter_iteration
  description: |
    Provides the status of loop counter zero for the DMA channel thread. The DMAC updates this register when it executes DMALPEND[S|B], and the DMA channel thread is programmed to use loop counter zero.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_LC1_6_reserved:
  addr: 0xf80044d0
  mask: 0xffffff00
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_ns_LC1_6_loop_counter_iteration:
  addr: 0xf80044d0
  mask: 0xff
  name: loop_counter_iteration
  description: |
    Provides the status of loop counter one for the DMA channel thread. The DMAC updates this register when it executes DMALPEND[S|B], and the DMA channel thread is programmed to use loop counter one.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_SAR7_src_addr:
  addr: 0xf80044e0
  mask: 0xffffffff
  name: src_addr
  description: |
    Source data address (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_DAR7_dest_addr:
  addr: 0xf80044e4
  mask: 0xffffffff
  name: dest_addr
  description: |
    Destination data address (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR7_reserved:
  addr: 0xf80044e8
  mask: 0x80000000
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_ns_CCR7_endian_swap_size:
  addr: 0xf80044e8
  mask: 0x70000000
  name: endian_swap_size
  description: |
    Data swap: little-endian and byte-invariant big-endian (BE-8) formats.
    000: No swap, 8-bit data
    001: Swap bytes within 16-bit data
    010: Swap bytes within 32-bit data
    011: Swap bytes within 64-bit data
    100: Swap bytes within 128-bit data
    101 to 111: Reserved
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR7_dst_cache_ctrl:
  addr: 0xf80044e8
  mask: 0xe000000
  name: dst_cache_ctrl
  description: |
    Programs the AXI AWCACHE signals that are used when the DMAC writes to the destination (0: Low, 1: High):
    Bit [27] programs AWCACHE[3]
    Hardwired Low to AWCACHE[2]
    Bit [26] programs AWCACHE[1]
    Bit [25] programs AWCACHE[0]
    Note: Setting AWCACHE[3,1]=b10 violates the AXI protocol.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR7_dst_prot_ctrl:
  addr: 0xf80044e8
  mask: 0x1c00000
  name: dst_prot_ctrl
  description: |
    Programs the AWPROT signals that are used when the DMAC writes the destination data (0: Low, 1: High):
    Bit [24] programs AWPROT[2]
    Bit [23] programs AWPROT[1]
    Bit [22] programs AWPROT[0]
    Note: Only DMA channels in the Secure state can program AWPROT[1] Low, that is, a secure access. If a DMA channel in the Non-secure state attempts to set AWPROT[1] Low, then the DMA channel aborts.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR7_dst_burst_len:
  addr: 0xf80044e8
  mask: 0x3c0000
  name: dst_burst_len
  description: |
    For each burst, these bits program the number of data transfers that the DMAC performs when it writes the destination data:
    0000: 1 data transfer
    0001: 2 data transfers
    0010: 3 data transfers
    ...
    1111: 16 data transfers.
    The total number of bytes that the DMAC writes out of the MFIFO when it executes a DMAST instruction is the product of dst_burst_len and dst_burst_size.
    Note: These bits control the state of AWLEN[3:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR7_dst_burst_size:
  addr: 0xf80044e8
  mask: 0x38000
  name: dst_burst_size
  description: |
    For each beat within a burst, it programs the number of bytes that the DMAC writes to the destination:
    000: writes 1 byte per beat
    001: writes 2 bytes per beat
    010: writes 4 bytes per beat
    011: writes 8 bytes per beat
    100: writes 16 bytes per beat
    101 to 111: reserved.
    The total number of bytes that the DMAC writes out of the MFIFO when it executes a DMAST instruction is the product of dst_burst_len and dst_burst_size. Note: These bits control the state of AWSIZE[2:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR7_dst_inc:
  addr: 0xf80044e8
  mask: 0x4000
  name: dst_inc
  description: |
    Programs the burst type that the DMAC performs when it writes the destination data:
    0: Fixed-address burst. The DMAC signals AWBURST[0] Low.
    1: Incrementing-address burst. The DMAC signals AWBURST[0] HIgh.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR7_src_cache_ctrl:
  addr: 0xf80044e8
  mask: 0x3800
  name: src_cache_ctrl
  description: |
    Programs the AXI ARCACHE signals that are used for DMA reads of the source data (0: Low, 1: High):
    Bit [13] programs ARCACHE[2]
    Bit [12] programs ARCACHE[1]
    Bit [11] programs ARCACHE[0]
    Note: The DMAC ties ARCACHE[3] Low. Setting ARCACHE[2:1]= b10 violates the AXI protocol.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR7_src_prot_ctrl:
  addr: 0xf80044e8
  mask: 0x700
  name: src_prot_ctrl
  description: |
    Programs the AXI ARPROT signals that are used for DMA reads of the source data (0: Low, 1: High):
    Bit [10] programs ARPROT[2]
    Bit [9] programs ARPROT[1]
    Bit [8] programs ARPROT[0]
    Note: Only DMA channels in the Secure state can program ARPROT[1] Low, that is, a secure access. If a DMA channel in the Non-secure state attempts to set ARPROT[1] Low, the DMA channel aborts.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR7_src_burst_len:
  addr: 0xf80044e8
  mask: 0xf0
  name: src_burst_len
  description: |
    For each burst, these bits program the number of data transfers that the DMAC performs when it reads the source data:
    0000: 1 data transfer
    0001: 2 data transfers
    ...
    1111: 16 data transfers.
    The total number of bytes that the DMAC reads into the MFIFO when it executes a DMALD instruction is the product of src_burst_len and src_burst_size. Note: These bits control the state of ARLEN[3:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR7_src_burst_size:
  addr: 0xf80044e8
  mask: 0xe
  name: src_burst_size
  description: |
    For each beat within a burst, it programs the number of bytes that the DMAC reads from the source:
    000: reads 1 byte per beat
    001: reads 2 bytes per beat
    010: reads 4 bytes per beat
    011: reads 8 bytes per beat
    100: reads 16 bytes per beat
    101 to 111: reserved.
    The total number of bytes that the DMAC reads into the MFIFO when it executes a DMALD instruction is the product of src_burst_len and src_burst_size. Note: These bits control the state of ARSIZE[2:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CCR7_src_inc:
  addr: 0xf80044e8
  mask: 0x1
  name: src_inc
  description: |
    Programs the burst type that the DMAC performs when it reads the source data:
    0: Fixed-address burst, DMAC signal ARBURST[0] driven Low.
    1: Incrementing-address burst, DMAC signal ARBURST[0] driven High.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_LC0_7_reserved:
  addr: 0xf80044ec
  mask: 0xffffff00
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_ns_LC0_7_loop_counter_iteration:
  addr: 0xf80044ec
  mask: 0xff
  name: loop_counter_iteration
  description: |
    Provides the status of loop counter zero for the DMA channel thread. The DMAC updates this register when it executes DMALPEND[S|B], and the DMA channel thread is programmed to use loop counter zero.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_LC1_7_reserved:
  addr: 0xf80044f0
  mask: 0xffffff00
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_ns_LC1_7_loop_counter_iteration:
  addr: 0xf80044f0
  mask: 0xff
  name: loop_counter_iteration
  description: |
    Provides the status of loop counter one for the DMA channel thread. The DMAC updates this register when it executes DMALPEND[S|B], and the DMA channel thread is programmed to use loop counter one.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_DBGSTATUS_reserved:
  addr: 0xf8004d00
  mask: 0xfffffffe
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_ns_DBGSTATUS_dbgstatus:
  addr: 0xf8004d00
  mask: 0x1
  name: dbgstatus
  description: |
    The DMA manager Execution/Debug status:
    0: Idle
    1: Busy.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_DBGCMD_reserved:
  addr: 0xf8004d04
  mask: 0xfffffffc
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_ns_DBGCMD_dbgcmd:
  addr: 0xf8004d04
  mask: 0x3
  name: dbgcmd
  description: |
    Command the DMA manager to execute the instruction defined in the two DBGINST registers.
    00: execute the instruction.
    others: reserved.
    This bit-field has the following special access attributes:
     swo: During secure access, it is  write only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnswo: During non-secure access, if thread is non-secure, it is write only.
    
ps7_dmac0_ns_DBGINST0_instruction_byte1:
  addr: 0xf8004d08
  mask: 0xff000000
  name: instruction_byte1
  description: |
    instruction byte 1
    This bit-field has the following special access attributes:
     swo: During secure access, it is  write only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnswo: During non-secure access, if thread is non-secure, it is write only.
    
ps7_dmac0_ns_DBGINST0_instruction_byte0:
  addr: 0xf8004d08
  mask: 0xff0000
  name: instruction_byte0
  description: |
    instruction byte 0
    This bit-field has the following special access attributes:
     swo: During secure access, it is  write only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnswo: During non-secure access, if thread is non-secure, it is write only.
    
ps7_dmac0_ns_DBGINST0_reserved:
  addr: 0xf8004d08
  mask: 0xf800
  name: reserved
  description: |
    reserved, write as 0
ps7_dmac0_ns_DBGINST0_channel_num:
  addr: 0xf8004d08
  mask: 0x700
  name: channel_num
  description: |
    DMA channel number:
    000: DMA channel 0
    001: DMA channel 1
    010: DMA channel 2
    ...
    111: DMA channel 7
    This bit-field has the following special access attributes:
     swo: During secure access, it is  write only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnswo: During non-secure access, if thread is non-secure, it is write only.
    
ps7_dmac0_ns_DBGINST0_reserved_1:
  addr: 0xf8004d08
  mask: 0xfe
  name: reserved_1
  description: |
    reserved, write as 0
ps7_dmac0_ns_DBGINST0_debug_thread:
  addr: 0xf8004d08
  mask: 0x1
  name: debug_thread
  description: |
    The debug thread encoding is as folLows:
    0: DMA manager thread
    1: DMA channel.
    Note: When set to 1, the Channel number field selects the DMA channel to debug.
    This bit-field has the following special access attributes:
     swo: During secure access, it is  write only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnswo: During non-secure access, if thread is non-secure, it is write only.
    
ps7_dmac0_ns_DBGINST1_instruction_byte5:
  addr: 0xf8004d0c
  mask: 0xff000000
  name: instruction_byte5
  description: |
    instruction byte 5
    This bit-field has the following special access attributes:
     swo: During secure access, it is  write only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnswo: During non-secure access, if thread is non-secure, it is write only.
    
ps7_dmac0_ns_DBGINST1_instruction_byte4:
  addr: 0xf8004d0c
  mask: 0xff0000
  name: instruction_byte4
  description: |
    instruction byte 4
    This bit-field has the following special access attributes:
     swo: During secure access, it is  write only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnswo: During non-secure access, if thread is non-secure, it is write only.
    
ps7_dmac0_ns_DBGINST1_instruction_byte3:
  addr: 0xf8004d0c
  mask: 0xff00
  name: instruction_byte3
  description: |
    instruction byte 3
    This bit-field has the following special access attributes:
     swo: During secure access, it is  write only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnswo: During non-secure access, if thread is non-secure, it is write only.
    
ps7_dmac0_ns_DBGINST1_instruction_byte2:
  addr: 0xf8004d0c
  mask: 0xff
  name: instruction_byte2
  description: |
    instruction byte 2
    This bit-field has the following special access attributes:
     swo: During secure access, it is  write only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnswo: During non-secure access, if thread is non-secure, it is write only.
    
ps7_dmac0_ns_CR0_reserved:
  addr: 0xf8004e00
  mask: 0xffc00000
  name: reserved
  description: |
    read undefined
ps7_dmac0_ns_CR0_num_events:
  addr: 0xf8004e00
  mask: 0x3e0000
  name: num_events
  description: |
    The DMA Controller supports 16 events. This register always reads 01111 (15d).
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CR0_num_periph_req:
  addr: 0xf8004e00
  mask: 0x1f000
  name: num_periph_req
  description: |
    The DMA Controller supports four peripheral interfaces. This register always reads 00011 (3d).
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CR0_reserved_1:
  addr: 0xf8004e00
  mask: 0xf80
  name: reserved_1
  description: |
    read undefined
ps7_dmac0_ns_CR0_num_chnls:
  addr: 0xf8004e00
  mask: 0x70
  name: num_chnls
  description: |
    The DMA Controller supports eight channel threads. This register always reads 00111 (7d).
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CR0_reserved_2:
  addr: 0xf8004e00
  mask: 0x8
  name: reserved_2
  description: |
    read undefined
ps7_dmac0_ns_CR0_mgr_ns_at_rst:
  addr: 0xf8004e00
  mask: 0x4
  name: mgr_ns_at_rst
  description: |
    Indicates the status of the slcr.TZ_DMA_NS bit when the DMAC exits from reset:
    0: TZ_DMA_NS was Low
    1: TZ_DMA_NS was HIgh
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CR0_boot_en:
  addr: 0xf8004e00
  mask: 0x2
  name: boot_en
  description: |
    Indicates the status of the boot_from_pc signal when the DMAC exited from reset:
    0 = boot_from_pc was LOW
    1 = boot_from_pc was HIGH.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CR0_periph_req:
  addr: 0xf8004e00
  mask: 0x1
  name: periph_req
  description: |
    The DMAC provides the peripheral request interfaces.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CR1_reserved:
  addr: 0xf8004e04
  mask: 0xffffff00
  name: reserved
  description: |
    read undefined
ps7_dmac0_ns_CR1_num_icache_lines:
  addr: 0xf8004e04
  mask: 0xf0
  name: num_icache_lines
  description: |
    The DMAC iCache has eight lines.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CR1_reserved_1:
  addr: 0xf8004e04
  mask: 0x8
  name: reserved_1
  description: |
    read undefined
ps7_dmac0_ns_CR1_icache_len:
  addr: 0xf8004e04
  mask: 0x7
  name: icache_len
  description: |
    The length of an i-cache line is sixteen bytes.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CR2_boot_addr:
  addr: 0xf8004e08
  mask: 0xffffffff
  name: boot_addr
  description: |
    The boot address for the DMAC manager is hardwired to 0. This is a system memory address.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CR3_INS:
  addr: 0xf8004e0c
  mask: 0xffffffff
  name: INS
  description: |
    The value of the slcr.TZ_DMA_IRQ_NS bits (boot_irq_ns signals) when the DMAC reset deasserts.
    Reserved
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CR4_PNS:
  addr: 0xf8004e10
  mask: 0xffffffff
  name: PNS
  description: |
    Reflects the slcr.TZ_DMA_PERIPH_NS register values for the four peripheral request interfaces when the DMAC is unreset.
    0: Secure state
    1: Non-secure state
    Reserved
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CRD_reserved:
  addr: 0xf8004e14
  mask: 0xc0000000
  name: reserved
  description: |
    read undefined
ps7_dmac0_ns_CRD_data_buffer_dep:
  addr: 0xf8004e14
  mask: 0x3ff00000
  name: data_buffer_dep
  description: |
    The MFIFO dept is 128 double words (64-bit).
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CRD_rd_q_dep:
  addr: 0xf8004e14
  mask: 0xf0000
  name: rd_q_dep
  description: |
    The depth of the Read Queue is hardwired at 16 lines.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CRD_reserved_1:
  addr: 0xf8004e14
  mask: 0x8000
  name: reserved_1
  description: |
    read undefined
ps7_dmac0_ns_CRD_rd_cap:
  addr: 0xf8004e14
  mask: 0x7000
  name: rd_cap
  description: |
    The number of possible outstanding Read Transactions is hardwired at 8.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CRD_wr_q_dep:
  addr: 0xf8004e14
  mask: 0xf00
  name: wr_q_dep
  description: |
    The depth of the Write Queue is hardwired at 16 lines.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CRD_reserved_2:
  addr: 0xf8004e14
  mask: 0x80
  name: reserved_2
  description: |
    read undefined
ps7_dmac0_ns_CRD_wr_cap:
  addr: 0xf8004e14
  mask: 0x70
  name: wr_cap
  description: |
    The number of outstanding Write Transactions is is hardwired at 8.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_CRD_reserved_3:
  addr: 0xf8004e14
  mask: 0x8
  name: reserved_3
  description: |
    read undefined
ps7_dmac0_ns_CRD_data_width:
  addr: 0xf8004e14
  mask: 0x7
  name: data_width
  description: |
    The data width of the AXI master interface 64 bits.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_WD_reserved:
  addr: 0xf8004e80
  mask: 0xfffffffe
  name: reserved
  description: |
    read undefined
ps7_dmac0_ns_WD_wd_irq_only:
  addr: 0xf8004e80
  mask: 0x1
  name: wd_irq_only
  description: |
    When a lock-up is detected, the DMAC aborts the DMA channel thread and asserts the Abort interrupt.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_periph_id_0_reserved:
  addr: 0xf8004fe0
  mask: 0xffffff00
  name: reserved
  description: |
    read undefined
ps7_dmac0_ns_periph_id_0_part_number_0:
  addr: 0xf8004fe0
  mask: 0xff
  name: part_number_0
  description: |
    returns 0x30
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_periph_id_1_reserved:
  addr: 0xf8004fe4
  mask: 0xffffff00
  name: reserved
  description: |
    read undefined
ps7_dmac0_ns_periph_id_1_designer_0:
  addr: 0xf8004fe4
  mask: 0xf0
  name: designer_0
  description: |
    returns 0x1
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_periph_id_1_part_number_1:
  addr: 0xf8004fe4
  mask: 0xf
  name: part_number_1
  description: |
    returns 0x3
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_periph_id_2_reserved:
  addr: 0xf8004fe8
  mask: 0xffffff00
  name: reserved
  description: |
    read undefined
ps7_dmac0_ns_periph_id_2_revision:
  addr: 0xf8004fe8
  mask: 0xf0
  name: revision
  description: |
    DMAC IP revision is r1p1.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_periph_id_2_designer_1:
  addr: 0xf8004fe8
  mask: 0xf
  name: designer_1
  description: |
    returns 0x4
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_periph_id_3_reserved:
  addr: 0xf8004fec
  mask: 0xfffffffe
  name: reserved
  description: |
    read undefined
ps7_dmac0_ns_periph_id_3_integration_cfg:
  addr: 0xf8004fec
  mask: 0x1
  name: integration_cfg
  description: |
    The DMAC does not contain integration test logic
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_pcell_id_0_reserved:
  addr: 0xf8004ff0
  mask: 0xffffff00
  name: reserved
  description: |
    read undefined
ps7_dmac0_ns_pcell_id_0_pcell_id_0:
  addr: 0xf8004ff0
  mask: 0xff
  name: pcell_id_0
  description: |
    returnx 0x0D
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_pcell_id_1_reserved:
  addr: 0xf8004ff4
  mask: 0xffffff00
  name: reserved
  description: |
    read undefined
ps7_dmac0_ns_pcell_id_1_pcell_id_1:
  addr: 0xf8004ff4
  mask: 0xff
  name: pcell_id_1
  description: |
    returns 0xF0
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_pcell_id_2_reserved:
  addr: 0xf8004ff8
  mask: 0xffffff00
  name: reserved
  description: |
    read undefined
ps7_dmac0_ns_pcell_id_2_pcell_id_2:
  addr: 0xf8004ff8
  mask: 0xff
  name: pcell_id_2
  description: |
    returns 0x05
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_ns_pcell_id_3_reserved:
  addr: 0xf8004ffc
  mask: 0xffffff00
  name: reserved
  description: |
    read undefined
ps7_dmac0_ns_pcell_id_3_pcell_id_3:
  addr: 0xf8004ffc
  mask: 0xff
  name: pcell_id_3
  description: |
    returns 0xB1
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_DSR_reserved:
  addr: 0xf8003000
  mask: 0xfffffc00
  name: reserved
  description: |
    Reserved, read undefined
ps7_dmac0_s_DSR_DNS:
  addr: 0xf8003000
  mask: 0x200
  name: DNS
  description: |
    Provides the security status of the DMA manager thread:
    0: Secure state
    1: Non-secure state
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_DSR_Wakeup_event:
  addr: 0xf8003000
  mask: 0x1f0
  name: Wakeup_event
  description: |
    When the DMA manager executes a DMAWFE instruction, it is waiting for one of the following events to occur from any of the DMA channel treads:
    0 0000: event[0]
    0 0001: event[1]
    ...
    0 1111: event[15]
    1 xxxx: reserved
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_DSR_DMA_status:
  addr: 0xf8003000
  mask: 0xf
  name: DMA_status
  description: |
    The current operating state of the DMA manager:
    0000: Stopped
    0001: Executing
    0010: Cache miss
    0011: Updating PC
    0100: Waiting for event
    0101 to 1110: reserved
    1111: Faulting.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_DPC_pc_mgr:
  addr: 0xf8003004
  mask: 0xffffffff
  name: pc_mgr
  description: |
    Program counter for the DMA manager thread
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_INTEN_event_irq_select:
  addr: 0xf8003020
  mask: 0xffffffff
  name: event_irq_select
  description: |
    Control the respond of a DMA channel thread when it executes a DMASEV instruction. The channel thread will either signal the same DMASEV instruction to the other threads, or assert its interrupt signal. Bits [7:0] correspond to channels [7:0].
    0: The channel tread signals a DMASEV to the other threads (this typically selected when interrupts are not used)
    1: Assert the channel's interrupt signal to the PS interrupt controller.
    Reserved
    This bit-field has the following special access attributes:
     srw: During secure access, it is read write.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsrw: During non-secure access, if thread is non-secure, it is read write.
    
ps7_dmac0_s_INT_EVENT_RIS_DMASEV_active:
  addr: 0xf8003024
  mask: 0xffffffff
  name: DMASEV_active
  description: |
    Raw status of the event or interrupt state.
    There are sixteen possible event settings [15:0] and eight possible interrupts [7:0]:
    0: Inactive
    1: Active
    Note:
    When the DMAC executes a DMASEV N instruction to send event N, the INTEN Register controls whether the DMAC:
    signals an interrupt using the appropriate irq sends the event to all of the threads.
    Reserved
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_INTMIS_irq_status:
  addr: 0xf8003028
  mask: 0xffffffff
  name: irq_status
  description: |
    Interrupt signal state for DMA channel [7:0]:
    0: inactive (IRQ signals is Low).
    1: active (IRQ signals is HIgh).
    Reserved
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_INTCLR_irq_clr:
  addr: 0xf800302c
  mask: 0xffffffff
  name: irq_clr
  description: |
    Clear interrupt(s) for DMA channel [7:0]:
    0: no affect
    1: clear the interrupt
    Reserved
    This bit-field has the following special access attributes:
     swo: During secure access, it is  write only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnswo: During non-secure access, if thread is non-secure, it is write only.
    
ps7_dmac0_s_FSRD_reserved:
  addr: 0xf8003030
  mask: 0xfffffffe
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_s_FSRD_fs_mgr:
  addr: 0xf8003030
  mask: 0x1
  name: fs_mgr
  description: |
    Provides the fault status of the DMA manager:
    0: Not in the Faulting state
    1: Faulting state
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FSRC_reserved:
  addr: 0xf8003034
  mask: 0xffffff00
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_s_FSRC_fault_status:
  addr: 0xf8003034
  mask: 0xff
  name: fault_status
  description: |
    Each bit provides the fault status of the corresponding DMA channel, Bits [7:0]:
    0: No fault present
    1: Fault or Fault completing state
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTRD_reserved:
  addr: 0xf8003038
  mask: 0x80000000
  name: reserved
  description: |
    read undefined
ps7_dmac0_s_FTRD_dbg_instr:
  addr: 0xf8003038
  mask: 0x40000000
  name: dbg_instr
  description: |
    If the DMA manager aborts, this bit indicates whether the erroneous instruction was read from the system memory or from the debug interface:
    0: system memory
    1: debug interface
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTRD_reserved_1:
  addr: 0xf8003038
  mask: 0x3ffe0000
  name: reserved_1
  description: |
    read undefined
ps7_dmac0_s_FTRD_instr_fetch_err:
  addr: 0xf8003038
  mask: 0x10000
  name: instr_fetch_err
  description: |
    Indicates the AXI response that the DMAC receives on the RRESP bus, after the DMA manager performs an instruction fetch:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTRD_reserved_2:
  addr: 0xf8003038
  mask: 0xffc0
  name: reserved_2
  description: |
    read undefined
ps7_dmac0_s_FTRD_mgr_evnt_err:
  addr: 0xf8003038
  mask: 0x20
  name: mgr_evnt_err
  description: |
    Indicates whether the DMA manager was attempting to execute DMAWFE or DMASEV with inappropriate security permissions:
    0: the DMA manager has appropriate security to execute DMAWFE or DMASEV
    1: a DMA manager thread in the Non-secure state attempted to execute either:
    DMAWFE to wait for a secure event
    H18DMASEV to create a secure event or secure interrupt.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTRD_dmago_err:
  addr: 0xf8003038
  mask: 0x10
  name: dmago_err
  description: |
    Indicates whether the DMA manager was attempting to execute DMAGO with inappropriate security permissions:
    0: appropriate security to execute DMAGO
    1: Non-secure state attempted to execute DMAGO to create a DMA channel thread operating in the Secure state
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTRD_reserved_3:
  addr: 0xf8003038
  mask: 0xc
  name: reserved_3
  description: |
    read undefined
ps7_dmac0_s_FTRD_operand_invalid:
  addr: 0xf8003038
  mask: 0x2
  name: operand_invalid
  description: |
    Indicates whether the DMA manager was attempting to execute an instruction operand that was not valid for the configuration of the DMAC:
    0: valid operand
    1: invalid operand
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTRD_undef_instr:
  addr: 0xf8003038
  mask: 0x1
  name: undef_instr
  description: |
    Indicates whether the DMA manager was attempting to execute an undefined instruction:
    0: defined instruction
    1: undefined instruction.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR0_lockup_err:
  addr: 0xf8003040
  mask: 0x80000000
  name: lockup_err
  description: |
    Indicates whether the DMA channel thread has locked-up because of resource starvation:
    0: DMA channel has adequate resources
    1: DMA channel has locked-up because of insufficient resources. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR0_dbg_instr:
  addr: 0xf8003040
  mask: 0x40000000
  name: dbg_instr
  description: |
    If the DMA channel aborts, this bit indicates whether the erroneous instruction was read from the system memory or from the debug interface:
    0: system memory
    1: debug interface.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR0_reserved:
  addr: 0xf8003040
  mask: 0x3ff80000
  name: reserved
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR0_data_read_err:
  addr: 0xf8003040
  mask: 0x40000
  name: data_read_err
  description: |
    Indicates the AXI response that the DMAC receives on the RRESP bus, after the DMA channel thread performs a data read:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR0_data_write_err:
  addr: 0xf8003040
  mask: 0x20000
  name: data_write_err
  description: |
    Indicates the AXI response that the DMAC receives on the BRESP bus, after the DMA channel thread performs a data write:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR0_instr_fetch_err:
  addr: 0xf8003040
  mask: 0x10000
  name: instr_fetch_err
  description: |
    Indicates the AXI response that the DMAC receives on the RRESP bus after the DMA channel thread performs an instruction fetch:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR0_reserved_1:
  addr: 0xf8003040
  mask: 0xc000
  name: reserved_1
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR0_st_data_unavailable:
  addr: 0xf8003040
  mask: 0x2000
  name: st_data_unavailable
  description: |
    Indicates whether the MFIFO did not contain the data to enable the DMAC to perform the DMAST:
    0: MFIFO contains all the data to enable the DMAST to complete
    1: previous DMALDs have not put enough data in the MFIFO to enable the DMAST to complete. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR0_mfifo_err:
  addr: 0xf8003040
  mask: 0x1000
  name: mfifo_err
  description: |
    Indicates whether the MFIFO prevented the DMA channel thread from executing DMALD or DMAST:
    DMALD:
    0: MFIFO contains sufficient space
    1: MFIFO is too small to hold the data that DMALD requires.
    DMAST:
    0: MFIFO contains sufficient data
    1: MFIFO is too small to store the data to enable DMAST to complete.
    This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR0_reserved_2:
  addr: 0xf8003040
  mask: 0xf00
  name: reserved_2
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR0_ch_rdwr_err:
  addr: 0xf8003040
  mask: 0x80
  name: ch_rdwr_err
  description: |
    Indicates whether a DMA channel thread, in the Non-secure state, attempts to program the CCR registers to perform a secure read or secure write:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to perform a secure read or secure write. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR0_ch_periph_err:
  addr: 0xf8003040
  mask: 0x40
  name: ch_periph_err
  description: |
    Indicates whether a DMA channel thread, in the Non-secure state, attempts to execute DMAWFP, DMALDP, DMASTP, or DMAFLUSHP with inappropriate security permissions:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to execute either: a) DMAWFP to wait for a secure peripheral, b) DMALDP or DMASTP to notify a secure peripheral, or c) DMAFLUSHP to flush a secure peripheral. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR0_ch_evnt_err:
  addr: 0xf8003040
  mask: 0x20
  name: ch_evnt_err
  description: |
    Indicates whether the DMA channel thread attempts to execute DMAWFE or DMASEV with inappropriate security permissions:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to execute either: a) DMAWFE to wait for a secure event, or b) DMASEV to create a secure event or secure interrupt.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR0_reserved_3:
  addr: 0xf8003040
  mask: 0x1c
  name: reserved_3
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR0_operand_invalid:
  addr: 0xf8003040
  mask: 0x2
  name: operand_invalid
  description: |
    Indicates whether the DMA channel thread was attempting to execute an instruction operand that was not valid for the configuration of the DMAC:
    0: valid operand
    1: invalid operand.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR0_undef_instr:
  addr: 0xf8003040
  mask: 0x1
  name: undef_instr
  description: |
    Indicates whether the DMA channel thread was attempting to execute an undefined instruction:
    0: defined instruction
    1: undefined instruction.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR1_lockup_err:
  addr: 0xf8003044
  mask: 0x80000000
  name: lockup_err
  description: |
    Indicates whether the DMA channel thread has locked-up because of resource starvation:
    0: DMA channel has adequate resources
    1: DMA channel has locked-up because of insufficient resources. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR1_dbg_instr:
  addr: 0xf8003044
  mask: 0x40000000
  name: dbg_instr
  description: |
    If the DMA channel aborts, this bit indicates whether the erroneous instruction was read from the system memory or from the debug interface:
    0: system memory
    1: debug interface.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR1_reserved:
  addr: 0xf8003044
  mask: 0x3ff80000
  name: reserved
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR1_data_read_err:
  addr: 0xf8003044
  mask: 0x40000
  name: data_read_err
  description: |
    Indicates the AXI response that the DMAC receives on the RRESP bus, after the DMA channel thread performs a data read:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR1_data_write_err:
  addr: 0xf8003044
  mask: 0x20000
  name: data_write_err
  description: |
    Indicates the AXI response that the DMAC receives on the BRESP bus, after the DMA channel thread performs a data write:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR1_instr_fetch_err:
  addr: 0xf8003044
  mask: 0x10000
  name: instr_fetch_err
  description: |
    Indicates the AXI response that the DMAC receives on the RRESP bus after the DMA channel thread performs an instruction fetch:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR1_reserved_1:
  addr: 0xf8003044
  mask: 0xc000
  name: reserved_1
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR1_st_data_unavailable:
  addr: 0xf8003044
  mask: 0x2000
  name: st_data_unavailable
  description: |
    Indicates whether the MFIFO did not contain the data to enable the DMAC to perform the DMAST:
    0: MFIFO contains all the data to enable the DMAST to complete
    1: previous DMALDs have not put enough data in the MFIFO to enable the DMAST to complete. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR1_mfifo_err:
  addr: 0xf8003044
  mask: 0x1000
  name: mfifo_err
  description: |
    Indicates whether the MFIFO prevented the DMA channel thread from executing DMALD or DMAST:
    DMALD:
    0: MFIFO contains sufficient space
    1: MFIFO is too small to hold the data that DMALD requires.
    DMAST:
    0: MFIFO contains sufficient data
    1: MFIFO is too small to store the data to enable DMAST to complete.
    This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR1_reserved_2:
  addr: 0xf8003044
  mask: 0xf00
  name: reserved_2
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR1_ch_rdwr_err:
  addr: 0xf8003044
  mask: 0x80
  name: ch_rdwr_err
  description: |
    Indicates whether a DMA channel thread, in the Non-secure state, attempts to program the CCR registers to perform a secure read or secure write:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to perform a secure read or secure write. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR1_ch_periph_err:
  addr: 0xf8003044
  mask: 0x40
  name: ch_periph_err
  description: |
    Indicates whether a DMA channel thread, in the Non-secure state, attempts to execute DMAWFP, DMALDP, DMASTP, or DMAFLUSHP with inappropriate security permissions:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to execute either: a) DMAWFP to wait for a secure peripheral, b) DMALDP or DMASTP to notify a secure peripheral, or c) DMAFLUSHP to flush a secure peripheral. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR1_ch_evnt_err:
  addr: 0xf8003044
  mask: 0x20
  name: ch_evnt_err
  description: |
    Indicates whether the DMA channel thread attempts to execute DMAWFE or DMASEV with inappropriate security permissions:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to execute either: a) DMAWFE to wait for a secure event, or b) DMASEV to create a secure event or secure interrupt.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR1_reserved_3:
  addr: 0xf8003044
  mask: 0x1c
  name: reserved_3
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR1_operand_invalid:
  addr: 0xf8003044
  mask: 0x2
  name: operand_invalid
  description: |
    Indicates whether the DMA channel thread was attempting to execute an instruction operand that was not valid for the configuration of the DMAC:
    0: valid operand
    1: invalid operand.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR1_undef_instr:
  addr: 0xf8003044
  mask: 0x1
  name: undef_instr
  description: |
    Indicates whether the DMA channel thread was attempting to execute an undefined instruction:
    0: defined instruction
    1: undefined instruction.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR2_lockup_err:
  addr: 0xf8003048
  mask: 0x80000000
  name: lockup_err
  description: |
    Indicates whether the DMA channel thread has locked-up because of resource starvation:
    0: DMA channel has adequate resources
    1: DMA channel has locked-up because of insufficient resources. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR2_dbg_instr:
  addr: 0xf8003048
  mask: 0x40000000
  name: dbg_instr
  description: |
    If the DMA channel aborts, this bit indicates whether the erroneous instruction was read from the system memory or from the debug interface:
    0: system memory
    1: debug interface.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR2_reserved:
  addr: 0xf8003048
  mask: 0x3ff80000
  name: reserved
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR2_data_read_err:
  addr: 0xf8003048
  mask: 0x40000
  name: data_read_err
  description: |
    Indicates the AXI response that the DMAC receives on the RRESP bus, after the DMA channel thread performs a data read:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR2_data_write_err:
  addr: 0xf8003048
  mask: 0x20000
  name: data_write_err
  description: |
    Indicates the AXI response that the DMAC receives on the BRESP bus, after the DMA channel thread performs a data write:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR2_instr_fetch_err:
  addr: 0xf8003048
  mask: 0x10000
  name: instr_fetch_err
  description: |
    Indicates the AXI response that the DMAC receives on the RRESP bus after the DMA channel thread performs an instruction fetch:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR2_reserved_1:
  addr: 0xf8003048
  mask: 0xc000
  name: reserved_1
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR2_st_data_unavailable:
  addr: 0xf8003048
  mask: 0x2000
  name: st_data_unavailable
  description: |
    Indicates whether the MFIFO did not contain the data to enable the DMAC to perform the DMAST:
    0: MFIFO contains all the data to enable the DMAST to complete
    1: previous DMALDs have not put enough data in the MFIFO to enable the DMAST to complete. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR2_mfifo_err:
  addr: 0xf8003048
  mask: 0x1000
  name: mfifo_err
  description: |
    Indicates whether the MFIFO prevented the DMA channel thread from executing DMALD or DMAST:
    DMALD:
    0: MFIFO contains sufficient space
    1: MFIFO is too small to hold the data that DMALD requires.
    DMAST:
    0: MFIFO contains sufficient data
    1: MFIFO is too small to store the data to enable DMAST to complete.
    This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR2_reserved_2:
  addr: 0xf8003048
  mask: 0xf00
  name: reserved_2
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR2_ch_rdwr_err:
  addr: 0xf8003048
  mask: 0x80
  name: ch_rdwr_err
  description: |
    Indicates whether a DMA channel thread, in the Non-secure state, attempts to program the CCR registers to perform a secure read or secure write:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to perform a secure read or secure write. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR2_ch_periph_err:
  addr: 0xf8003048
  mask: 0x40
  name: ch_periph_err
  description: |
    Indicates whether a DMA channel thread, in the Non-secure state, attempts to execute DMAWFP, DMALDP, DMASTP, or DMAFLUSHP with inappropriate security permissions:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to execute either: a) DMAWFP to wait for a secure peripheral, b) DMALDP or DMASTP to notify a secure peripheral, or c) DMAFLUSHP to flush a secure peripheral. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR2_ch_evnt_err:
  addr: 0xf8003048
  mask: 0x20
  name: ch_evnt_err
  description: |
    Indicates whether the DMA channel thread attempts to execute DMAWFE or DMASEV with inappropriate security permissions:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to execute either: a) DMAWFE to wait for a secure event, or b) DMASEV to create a secure event or secure interrupt.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR2_reserved_3:
  addr: 0xf8003048
  mask: 0x1c
  name: reserved_3
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR2_operand_invalid:
  addr: 0xf8003048
  mask: 0x2
  name: operand_invalid
  description: |
    Indicates whether the DMA channel thread was attempting to execute an instruction operand that was not valid for the configuration of the DMAC:
    0: valid operand
    1: invalid operand.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR2_undef_instr:
  addr: 0xf8003048
  mask: 0x1
  name: undef_instr
  description: |
    Indicates whether the DMA channel thread was attempting to execute an undefined instruction:
    0: defined instruction
    1: undefined instruction.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR3_lockup_err:
  addr: 0xf800304c
  mask: 0x80000000
  name: lockup_err
  description: |
    Indicates whether the DMA channel thread has locked-up because of resource starvation:
    0: DMA channel has adequate resources
    1: DMA channel has locked-up because of insufficient resources. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR3_dbg_instr:
  addr: 0xf800304c
  mask: 0x40000000
  name: dbg_instr
  description: |
    If the DMA channel aborts, this bit indicates whether the erroneous instruction was read from the system memory or from the debug interface:
    0: system memory
    1: debug interface.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR3_reserved:
  addr: 0xf800304c
  mask: 0x3ff80000
  name: reserved
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR3_data_read_err:
  addr: 0xf800304c
  mask: 0x40000
  name: data_read_err
  description: |
    Indicates the AXI response that the DMAC receives on the RRESP bus, after the DMA channel thread performs a data read:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR3_data_write_err:
  addr: 0xf800304c
  mask: 0x20000
  name: data_write_err
  description: |
    Indicates the AXI response that the DMAC receives on the BRESP bus, after the DMA channel thread performs a data write:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR3_instr_fetch_err:
  addr: 0xf800304c
  mask: 0x10000
  name: instr_fetch_err
  description: |
    Indicates the AXI response that the DMAC receives on the RRESP bus after the DMA channel thread performs an instruction fetch:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR3_reserved_1:
  addr: 0xf800304c
  mask: 0xc000
  name: reserved_1
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR3_st_data_unavailable:
  addr: 0xf800304c
  mask: 0x2000
  name: st_data_unavailable
  description: |
    Indicates whether the MFIFO did not contain the data to enable the DMAC to perform the DMAST:
    0: MFIFO contains all the data to enable the DMAST to complete
    1: previous DMALDs have not put enough data in the MFIFO to enable the DMAST to complete. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR3_mfifo_err:
  addr: 0xf800304c
  mask: 0x1000
  name: mfifo_err
  description: |
    Indicates whether the MFIFO prevented the DMA channel thread from executing DMALD or DMAST:
    DMALD:
    0: MFIFO contains sufficient space
    1: MFIFO is too small to hold the data that DMALD requires.
    DMAST:
    0: MFIFO contains sufficient data
    1: MFIFO is too small to store the data to enable DMAST to complete.
    This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR3_reserved_2:
  addr: 0xf800304c
  mask: 0xf00
  name: reserved_2
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR3_ch_rdwr_err:
  addr: 0xf800304c
  mask: 0x80
  name: ch_rdwr_err
  description: |
    Indicates whether a DMA channel thread, in the Non-secure state, attempts to program the CCR registers to perform a secure read or secure write:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to perform a secure read or secure write. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR3_ch_periph_err:
  addr: 0xf800304c
  mask: 0x40
  name: ch_periph_err
  description: |
    Indicates whether a DMA channel thread, in the Non-secure state, attempts to execute DMAWFP, DMALDP, DMASTP, or DMAFLUSHP with inappropriate security permissions:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to execute either: a) DMAWFP to wait for a secure peripheral, b) DMALDP or DMASTP to notify a secure peripheral, or c) DMAFLUSHP to flush a secure peripheral. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR3_ch_evnt_err:
  addr: 0xf800304c
  mask: 0x20
  name: ch_evnt_err
  description: |
    Indicates whether the DMA channel thread attempts to execute DMAWFE or DMASEV with inappropriate security permissions:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to execute either: a) DMAWFE to wait for a secure event, or b) DMASEV to create a secure event or secure interrupt.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR3_reserved_3:
  addr: 0xf800304c
  mask: 0x1c
  name: reserved_3
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR3_operand_invalid:
  addr: 0xf800304c
  mask: 0x2
  name: operand_invalid
  description: |
    Indicates whether the DMA channel thread was attempting to execute an instruction operand that was not valid for the configuration of the DMAC:
    0: valid operand
    1: invalid operand.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR3_undef_instr:
  addr: 0xf800304c
  mask: 0x1
  name: undef_instr
  description: |
    Indicates whether the DMA channel thread was attempting to execute an undefined instruction:
    0: defined instruction
    1: undefined instruction.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR4_lockup_err:
  addr: 0xf8003050
  mask: 0x80000000
  name: lockup_err
  description: |
    Indicates whether the DMA channel thread has locked-up because of resource starvation:
    0: DMA channel has adequate resources
    1: DMA channel has locked-up because of insufficient resources. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR4_dbg_instr:
  addr: 0xf8003050
  mask: 0x40000000
  name: dbg_instr
  description: |
    If the DMA channel aborts, this bit indicates whether the erroneous instruction was read from the system memory or from the debug interface:
    0: system memory
    1: debug interface.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR4_reserved:
  addr: 0xf8003050
  mask: 0x3ff80000
  name: reserved
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR4_data_read_err:
  addr: 0xf8003050
  mask: 0x40000
  name: data_read_err
  description: |
    Indicates the AXI response that the DMAC receives on the RRESP bus, after the DMA channel thread performs a data read:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR4_data_write_err:
  addr: 0xf8003050
  mask: 0x20000
  name: data_write_err
  description: |
    Indicates the AXI response that the DMAC receives on the BRESP bus, after the DMA channel thread performs a data write:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR4_instr_fetch_err:
  addr: 0xf8003050
  mask: 0x10000
  name: instr_fetch_err
  description: |
    Indicates the AXI response that the DMAC receives on the RRESP bus after the DMA channel thread performs an instruction fetch:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR4_reserved_1:
  addr: 0xf8003050
  mask: 0xc000
  name: reserved_1
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR4_st_data_unavailable:
  addr: 0xf8003050
  mask: 0x2000
  name: st_data_unavailable
  description: |
    Indicates whether the MFIFO did not contain the data to enable the DMAC to perform the DMAST:
    0: MFIFO contains all the data to enable the DMAST to complete
    1: previous DMALDs have not put enough data in the MFIFO to enable the DMAST to complete. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR4_mfifo_err:
  addr: 0xf8003050
  mask: 0x1000
  name: mfifo_err
  description: |
    Indicates whether the MFIFO prevented the DMA channel thread from executing DMALD or DMAST:
    DMALD:
    0: MFIFO contains sufficient space
    1: MFIFO is too small to hold the data that DMALD requires.
    DMAST:
    0: MFIFO contains sufficient data
    1: MFIFO is too small to store the data to enable DMAST to complete.
    This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR4_reserved_2:
  addr: 0xf8003050
  mask: 0xf00
  name: reserved_2
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR4_ch_rdwr_err:
  addr: 0xf8003050
  mask: 0x80
  name: ch_rdwr_err
  description: |
    Indicates whether a DMA channel thread, in the Non-secure state, attempts to program the CCR registers to perform a secure read or secure write:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to perform a secure read or secure write. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR4_ch_periph_err:
  addr: 0xf8003050
  mask: 0x40
  name: ch_periph_err
  description: |
    Indicates whether a DMA channel thread, in the Non-secure state, attempts to execute DMAWFP, DMALDP, DMASTP, or DMAFLUSHP with inappropriate security permissions:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to execute either: a) DMAWFP to wait for a secure peripheral, b) DMALDP or DMASTP to notify a secure peripheral, or c) DMAFLUSHP to flush a secure peripheral. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR4_ch_evnt_err:
  addr: 0xf8003050
  mask: 0x20
  name: ch_evnt_err
  description: |
    Indicates whether the DMA channel thread attempts to execute DMAWFE or DMASEV with inappropriate security permissions:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to execute either: a) DMAWFE to wait for a secure event, or b) DMASEV to create a secure event or secure interrupt.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR4_reserved_3:
  addr: 0xf8003050
  mask: 0x1c
  name: reserved_3
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR4_operand_invalid:
  addr: 0xf8003050
  mask: 0x2
  name: operand_invalid
  description: |
    Indicates whether the DMA channel thread was attempting to execute an instruction operand that was not valid for the configuration of the DMAC:
    0: valid operand
    1: invalid operand.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR4_undef_instr:
  addr: 0xf8003050
  mask: 0x1
  name: undef_instr
  description: |
    Indicates whether the DMA channel thread was attempting to execute an undefined instruction:
    0: defined instruction
    1: undefined instruction.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR5_lockup_err:
  addr: 0xf8003054
  mask: 0x80000000
  name: lockup_err
  description: |
    Indicates whether the DMA channel thread has locked-up because of resource starvation:
    0: DMA channel has adequate resources
    1: DMA channel has locked-up because of insufficient resources. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR5_dbg_instr:
  addr: 0xf8003054
  mask: 0x40000000
  name: dbg_instr
  description: |
    If the DMA channel aborts, this bit indicates whether the erroneous instruction was read from the system memory or from the debug interface:
    0: system memory
    1: debug interface.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR5_reserved:
  addr: 0xf8003054
  mask: 0x3ff80000
  name: reserved
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR5_data_read_err:
  addr: 0xf8003054
  mask: 0x40000
  name: data_read_err
  description: |
    Indicates the AXI response that the DMAC receives on the RRESP bus, after the DMA channel thread performs a data read:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR5_data_write_err:
  addr: 0xf8003054
  mask: 0x20000
  name: data_write_err
  description: |
    Indicates the AXI response that the DMAC receives on the BRESP bus, after the DMA channel thread performs a data write:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR5_instr_fetch_err:
  addr: 0xf8003054
  mask: 0x10000
  name: instr_fetch_err
  description: |
    Indicates the AXI response that the DMAC receives on the RRESP bus after the DMA channel thread performs an instruction fetch:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR5_reserved_1:
  addr: 0xf8003054
  mask: 0xc000
  name: reserved_1
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR5_st_data_unavailable:
  addr: 0xf8003054
  mask: 0x2000
  name: st_data_unavailable
  description: |
    Indicates whether the MFIFO did not contain the data to enable the DMAC to perform the DMAST:
    0: MFIFO contains all the data to enable the DMAST to complete
    1: previous DMALDs have not put enough data in the MFIFO to enable the DMAST to complete. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR5_mfifo_err:
  addr: 0xf8003054
  mask: 0x1000
  name: mfifo_err
  description: |
    Indicates whether the MFIFO prevented the DMA channel thread from executing DMALD or DMAST:
    DMALD:
    0: MFIFO contains sufficient space
    1: MFIFO is too small to hold the data that DMALD requires.
    DMAST:
    0: MFIFO contains sufficient data
    1: MFIFO is too small to store the data to enable DMAST to complete.
    This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR5_reserved_2:
  addr: 0xf8003054
  mask: 0xf00
  name: reserved_2
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR5_ch_rdwr_err:
  addr: 0xf8003054
  mask: 0x80
  name: ch_rdwr_err
  description: |
    Indicates whether a DMA channel thread, in the Non-secure state, attempts to program the CCR registers to perform a secure read or secure write:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to perform a secure read or secure write. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR5_ch_periph_err:
  addr: 0xf8003054
  mask: 0x40
  name: ch_periph_err
  description: |
    Indicates whether a DMA channel thread, in the Non-secure state, attempts to execute DMAWFP, DMALDP, DMASTP, or DMAFLUSHP with inappropriate security permissions:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to execute either: a) DMAWFP to wait for a secure peripheral, b) DMALDP or DMASTP to notify a secure peripheral, or c) DMAFLUSHP to flush a secure peripheral. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR5_ch_evnt_err:
  addr: 0xf8003054
  mask: 0x20
  name: ch_evnt_err
  description: |
    Indicates whether the DMA channel thread attempts to execute DMAWFE or DMASEV with inappropriate security permissions:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to execute either: a) DMAWFE to wait for a secure event, or b) DMASEV to create a secure event or secure interrupt.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR5_reserved_3:
  addr: 0xf8003054
  mask: 0x1c
  name: reserved_3
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR5_operand_invalid:
  addr: 0xf8003054
  mask: 0x2
  name: operand_invalid
  description: |
    Indicates whether the DMA channel thread was attempting to execute an instruction operand that was not valid for the configuration of the DMAC:
    0: valid operand
    1: invalid operand.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR5_undef_instr:
  addr: 0xf8003054
  mask: 0x1
  name: undef_instr
  description: |
    Indicates whether the DMA channel thread was attempting to execute an undefined instruction:
    0: defined instruction
    1: undefined instruction.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR6_lockup_err:
  addr: 0xf8003058
  mask: 0x80000000
  name: lockup_err
  description: |
    Indicates whether the DMA channel thread has locked-up because of resource starvation:
    0: DMA channel has adequate resources
    1: DMA channel has locked-up because of insufficient resources. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR6_dbg_instr:
  addr: 0xf8003058
  mask: 0x40000000
  name: dbg_instr
  description: |
    If the DMA channel aborts, this bit indicates whether the erroneous instruction was read from the system memory or from the debug interface:
    0: system memory
    1: debug interface.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR6_reserved:
  addr: 0xf8003058
  mask: 0x3ff80000
  name: reserved
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR6_data_read_err:
  addr: 0xf8003058
  mask: 0x40000
  name: data_read_err
  description: |
    Indicates the AXI response that the DMAC receives on the RRESP bus, after the DMA channel thread performs a data read:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR6_data_write_err:
  addr: 0xf8003058
  mask: 0x20000
  name: data_write_err
  description: |
    Indicates the AXI response that the DMAC receives on the BRESP bus, after the DMA channel thread performs a data write:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR6_instr_fetch_err:
  addr: 0xf8003058
  mask: 0x10000
  name: instr_fetch_err
  description: |
    Indicates the AXI response that the DMAC receives on the RRESP bus after the DMA channel thread performs an instruction fetch:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR6_reserved_1:
  addr: 0xf8003058
  mask: 0xc000
  name: reserved_1
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR6_st_data_unavailable:
  addr: 0xf8003058
  mask: 0x2000
  name: st_data_unavailable
  description: |
    Indicates whether the MFIFO did not contain the data to enable the DMAC to perform the DMAST:
    0: MFIFO contains all the data to enable the DMAST to complete
    1: previous DMALDs have not put enough data in the MFIFO to enable the DMAST to complete. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR6_mfifo_err:
  addr: 0xf8003058
  mask: 0x1000
  name: mfifo_err
  description: |
    Indicates whether the MFIFO prevented the DMA channel thread from executing DMALD or DMAST:
    DMALD:
    0: MFIFO contains sufficient space
    1: MFIFO is too small to hold the data that DMALD requires.
    DMAST:
    0: MFIFO contains sufficient data
    1: MFIFO is too small to store the data to enable DMAST to complete.
    This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR6_reserved_2:
  addr: 0xf8003058
  mask: 0xf00
  name: reserved_2
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR6_ch_rdwr_err:
  addr: 0xf8003058
  mask: 0x80
  name: ch_rdwr_err
  description: |
    Indicates whether a DMA channel thread, in the Non-secure state, attempts to program the CCR registers to perform a secure read or secure write:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to perform a secure read or secure write. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR6_ch_periph_err:
  addr: 0xf8003058
  mask: 0x40
  name: ch_periph_err
  description: |
    Indicates whether a DMA channel thread, in the Non-secure state, attempts to execute DMAWFP, DMALDP, DMASTP, or DMAFLUSHP with inappropriate security permissions:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to execute either: a) DMAWFP to wait for a secure peripheral, b) DMALDP or DMASTP to notify a secure peripheral, or c) DMAFLUSHP to flush a secure peripheral. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR6_ch_evnt_err:
  addr: 0xf8003058
  mask: 0x20
  name: ch_evnt_err
  description: |
    Indicates whether the DMA channel thread attempts to execute DMAWFE or DMASEV with inappropriate security permissions:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to execute either: a) DMAWFE to wait for a secure event, or b) DMASEV to create a secure event or secure interrupt.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR6_reserved_3:
  addr: 0xf8003058
  mask: 0x1c
  name: reserved_3
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR6_operand_invalid:
  addr: 0xf8003058
  mask: 0x2
  name: operand_invalid
  description: |
    Indicates whether the DMA channel thread was attempting to execute an instruction operand that was not valid for the configuration of the DMAC:
    0: valid operand
    1: invalid operand.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR6_undef_instr:
  addr: 0xf8003058
  mask: 0x1
  name: undef_instr
  description: |
    Indicates whether the DMA channel thread was attempting to execute an undefined instruction:
    0: defined instruction
    1: undefined instruction.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR7_lockup_err:
  addr: 0xf800305c
  mask: 0x80000000
  name: lockup_err
  description: |
    Indicates whether the DMA channel thread has locked-up because of resource starvation:
    0: DMA channel has adequate resources
    1: DMA channel has locked-up because of insufficient resources. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR7_dbg_instr:
  addr: 0xf800305c
  mask: 0x40000000
  name: dbg_instr
  description: |
    If the DMA channel aborts, this bit indicates whether the erroneous instruction was read from the system memory or from the debug interface:
    0: system memory
    1: debug interface.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR7_reserved:
  addr: 0xf800305c
  mask: 0x3ff80000
  name: reserved
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR7_data_read_err:
  addr: 0xf800305c
  mask: 0x40000
  name: data_read_err
  description: |
    Indicates the AXI response that the DMAC receives on the RRESP bus, after the DMA channel thread performs a data read:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR7_data_write_err:
  addr: 0xf800305c
  mask: 0x20000
  name: data_write_err
  description: |
    Indicates the AXI response that the DMAC receives on the BRESP bus, after the DMA channel thread performs a data write:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR7_instr_fetch_err:
  addr: 0xf800305c
  mask: 0x10000
  name: instr_fetch_err
  description: |
    Indicates the AXI response that the DMAC receives on the RRESP bus after the DMA channel thread performs an instruction fetch:
    0: OKAY response
    1: EXOKAY, SLVERR, or DECERR response. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR7_reserved_1:
  addr: 0xf800305c
  mask: 0xc000
  name: reserved_1
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR7_st_data_unavailable:
  addr: 0xf800305c
  mask: 0x2000
  name: st_data_unavailable
  description: |
    Indicates whether the MFIFO did not contain the data to enable the DMAC to perform the DMAST:
    0: MFIFO contains all the data to enable the DMAST to complete
    1: previous DMALDs have not put enough data in the MFIFO to enable the DMAST to complete. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR7_mfifo_err:
  addr: 0xf800305c
  mask: 0x1000
  name: mfifo_err
  description: |
    Indicates whether the MFIFO prevented the DMA channel thread from executing DMALD or DMAST:
    DMALD:
    0: MFIFO contains sufficient space
    1: MFIFO is too small to hold the data that DMALD requires.
    DMAST:
    0: MFIFO contains sufficient data
    1: MFIFO is too small to store the data to enable DMAST to complete.
    This fault is an imprecise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR7_reserved_2:
  addr: 0xf800305c
  mask: 0xf00
  name: reserved_2
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR7_ch_rdwr_err:
  addr: 0xf800305c
  mask: 0x80
  name: ch_rdwr_err
  description: |
    Indicates whether a DMA channel thread, in the Non-secure state, attempts to program the CCR registers to perform a secure read or secure write:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to perform a secure read or secure write. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR7_ch_periph_err:
  addr: 0xf800305c
  mask: 0x40
  name: ch_periph_err
  description: |
    Indicates whether a DMA channel thread, in the Non-secure state, attempts to execute DMAWFP, DMALDP, DMASTP, or DMAFLUSHP with inappropriate security permissions:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to execute either: a) DMAWFP to wait for a secure peripheral, b) DMALDP or DMASTP to notify a secure peripheral, or c) DMAFLUSHP to flush a secure peripheral. This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR7_ch_evnt_err:
  addr: 0xf800305c
  mask: 0x20
  name: ch_evnt_err
  description: |
    Indicates whether the DMA channel thread attempts to execute DMAWFE or DMASEV with inappropriate security permissions:
    0: a DMA channel thread in the Non-secure state is not violating the security permissions
    1: a DMA channel thread in the Non-secure state attempted to execute either: a) DMAWFE to wait for a secure event, or b) DMASEV to create a secure event or secure interrupt.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR7_reserved_3:
  addr: 0xf800305c
  mask: 0x1c
  name: reserved_3
  description: |
    read undefined
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR7_operand_invalid:
  addr: 0xf800305c
  mask: 0x2
  name: operand_invalid
  description: |
    Indicates whether the DMA channel thread was attempting to execute an instruction operand that was not valid for the configuration of the DMAC:
    0: valid operand
    1: invalid operand.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_FTR7_undef_instr:
  addr: 0xf800305c
  mask: 0x1
  name: undef_instr
  description: |
    Indicates whether the DMA channel thread was attempting to execute an undefined instruction:
    0: defined instruction
    1: undefined instruction.
    This fault is a precise abort.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CSR0_reserved:
  addr: 0xf8003100
  mask: 0xffc00000
  name: reserved
  description: |
    reserved,read undefined
ps7_dmac0_s_CSR0_CNS:
  addr: 0xf8003100
  mask: 0x200000
  name: CNS
  description: |
    Security status of the DMA channel thread:
    0: Secure state
    1: Non-secure state.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CSR0_reserved_1:
  addr: 0xf8003100
  mask: 0x1f0000
  name: reserved_1
  description: |
    reserved,read undefined
ps7_dmac0_s_CSR0_dmawfp_periph:
  addr: 0xf8003100
  mask: 0x8000
  name: dmawfp_periph
  description: |
    When the DMA channel thread executes DMAWFP, this bit indicates whether the periph operand is set:
    0: periph operand not set
    1: periph operand set.
    Note: the status only applies when the channel is connected to one of the four peripheral request interfaces.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CSR0_dmawfp_b_ns:
  addr: 0xf8003100
  mask: 0x4000
  name: dmawfp_b_ns
  description: |
    When the DMA channel thread executes DMAWFP, this bit indicates whether the burst or single operand were set:
    0: single operand set
    1: burst operand set
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CSR0_reserved_2:
  addr: 0xf8003100
  mask: 0x3e00
  name: reserved_2
  description: |
    reserved
ps7_dmac0_s_CSR0_wakeup_num:
  addr: 0xf8003100
  mask: 0x1f0
  name: wakeup_num
  description: |
    When the DMA channel thread executes a WFE or WFP instruction, these bits indicate the event or peripheral number that the channel is waiting for:
    Waiting for Event (WFE):
    0 0000: waiting for event 0
    0 0001: waiting for event 1
    ...
    0 1111: waiting for event 15
    1 xxxx: reserved
    Waiting for Peripheral (WFP):
    0 0000: waiting for peripheral 0
    0 0001: waiting for peripheral 1
    0 0010: waiting for peripheral 2
    0 0011: waiting for peripheral 3
    1 11xx: reserved
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CSR0_channel_status:
  addr: 0xf8003100
  mask: 0xf
  name: channel_status
  description: |
    The channel status encoding is:
    0000: Stopped
    0001: Executing
    0010: Cache miss
    0011: Updating PC
    0100: Waiting for event
    0101: At barrier
    0110: reserved
    0111: Waiting for peripheral
    1000: Killing
    1001: Completing
    1010 to 1101: reserved
    1110: Faulting completing
    1111: Faulting.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CPC0_pc_chnl:
  addr: 0xf8003104
  mask: 0xffffffff
  name: pc_chnl
  description: |
    Program counter (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CSR1_reserved:
  addr: 0xf8003108
  mask: 0xffc00000
  name: reserved
  description: |
    reserved,read undefined
ps7_dmac0_s_CSR1_CNS:
  addr: 0xf8003108
  mask: 0x200000
  name: CNS
  description: |
    Security status of the DMA channel thread:
    0: Secure state
    1: Non-secure state.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CSR1_reserved_1:
  addr: 0xf8003108
  mask: 0x1f0000
  name: reserved_1
  description: |
    reserved,read undefined
ps7_dmac0_s_CSR1_dmawfp_periph:
  addr: 0xf8003108
  mask: 0x8000
  name: dmawfp_periph
  description: |
    When the DMA channel thread executes DMAWFP, this bit indicates whether the periph operand is set:
    0: periph operand not set
    1: periph operand set.
    Note: the status only applies when the channel is connected to one of the four peripheral request interfaces.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CSR1_dmawfp_b_ns:
  addr: 0xf8003108
  mask: 0x4000
  name: dmawfp_b_ns
  description: |
    When the DMA channel thread executes DMAWFP, this bit indicates whether the burst or single operand were set:
    0: single operand set
    1: burst operand set
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CSR1_reserved_2:
  addr: 0xf8003108
  mask: 0x3e00
  name: reserved_2
  description: |
    reserved
ps7_dmac0_s_CSR1_wakeup_num:
  addr: 0xf8003108
  mask: 0x1f0
  name: wakeup_num
  description: |
    When the DMA channel thread executes a WFE or WFP instruction, these bits indicate the event or peripheral number that the channel is waiting for:
    Waiting for Event (WFE):
    0 0000: waiting for event 0
    0 0001: waiting for event 1
    ...
    0 1111: waiting for event 15
    1 xxxx: reserved
    Waiting for Peripheral (WFP):
    0 0000: waiting for peripheral 0
    0 0001: waiting for peripheral 1
    0 0010: waiting for peripheral 2
    0 0011: waiting for peripheral 3
    1 11xx: reserved
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CSR1_channel_status:
  addr: 0xf8003108
  mask: 0xf
  name: channel_status
  description: |
    The channel status encoding is:
    0000: Stopped
    0001: Executing
    0010: Cache miss
    0011: Updating PC
    0100: Waiting for event
    0101: At barrier
    0110: reserved
    0111: Waiting for peripheral
    1000: Killing
    1001: Completing
    1010 to 1101: reserved
    1110: Faulting completing
    1111: Faulting.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CPC1_pc_chnl:
  addr: 0xf800310c
  mask: 0xffffffff
  name: pc_chnl
  description: |
    Program counter (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CSR2_reserved:
  addr: 0xf8003110
  mask: 0xffc00000
  name: reserved
  description: |
    reserved,read undefined
ps7_dmac0_s_CSR2_CNS:
  addr: 0xf8003110
  mask: 0x200000
  name: CNS
  description: |
    Security status of the DMA channel thread:
    0: Secure state
    1: Non-secure state.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CSR2_reserved_1:
  addr: 0xf8003110
  mask: 0x1f0000
  name: reserved_1
  description: |
    reserved,read undefined
ps7_dmac0_s_CSR2_dmawfp_periph:
  addr: 0xf8003110
  mask: 0x8000
  name: dmawfp_periph
  description: |
    When the DMA channel thread executes DMAWFP, this bit indicates whether the periph operand is set:
    0: periph operand not set
    1: periph operand set.
    Note: the status only applies when the channel is connected to one of the four peripheral request interfaces.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CSR2_dmawfp_b_ns:
  addr: 0xf8003110
  mask: 0x4000
  name: dmawfp_b_ns
  description: |
    When the DMA channel thread executes DMAWFP, this bit indicates whether the burst or single operand were set:
    0: single operand set
    1: burst operand set
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CSR2_reserved_2:
  addr: 0xf8003110
  mask: 0x3e00
  name: reserved_2
  description: |
    reserved
ps7_dmac0_s_CSR2_wakeup_num:
  addr: 0xf8003110
  mask: 0x1f0
  name: wakeup_num
  description: |
    When the DMA channel thread executes a WFE or WFP instruction, these bits indicate the event or peripheral number that the channel is waiting for:
    Waiting for Event (WFE):
    0 0000: waiting for event 0
    0 0001: waiting for event 1
    ...
    0 1111: waiting for event 15
    1 xxxx: reserved
    Waiting for Peripheral (WFP):
    0 0000: waiting for peripheral 0
    0 0001: waiting for peripheral 1
    0 0010: waiting for peripheral 2
    0 0011: waiting for peripheral 3
    1 11xx: reserved
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CSR2_channel_status:
  addr: 0xf8003110
  mask: 0xf
  name: channel_status
  description: |
    The channel status encoding is:
    0000: Stopped
    0001: Executing
    0010: Cache miss
    0011: Updating PC
    0100: Waiting for event
    0101: At barrier
    0110: reserved
    0111: Waiting for peripheral
    1000: Killing
    1001: Completing
    1010 to 1101: reserved
    1110: Faulting completing
    1111: Faulting.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CPC2_pc_chnl:
  addr: 0xf8003114
  mask: 0xffffffff
  name: pc_chnl
  description: |
    Program counter (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CSR3_reserved:
  addr: 0xf8003118
  mask: 0xffc00000
  name: reserved
  description: |
    reserved,read undefined
ps7_dmac0_s_CSR3_CNS:
  addr: 0xf8003118
  mask: 0x200000
  name: CNS
  description: |
    Security status of the DMA channel thread:
    0: Secure state
    1: Non-secure state.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CSR3_reserved_1:
  addr: 0xf8003118
  mask: 0x1f0000
  name: reserved_1
  description: |
    reserved,read undefined
ps7_dmac0_s_CSR3_dmawfp_periph:
  addr: 0xf8003118
  mask: 0x8000
  name: dmawfp_periph
  description: |
    When the DMA channel thread executes DMAWFP, this bit indicates whether the periph operand is set:
    0: periph operand not set
    1: periph operand set.
    Note: the status only applies when the channel is connected to one of the four peripheral request interfaces.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CSR3_dmawfp_b_ns:
  addr: 0xf8003118
  mask: 0x4000
  name: dmawfp_b_ns
  description: |
    When the DMA channel thread executes DMAWFP, this bit indicates whether the burst or single operand were set:
    0: single operand set
    1: burst operand set
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CSR3_reserved_2:
  addr: 0xf8003118
  mask: 0x3e00
  name: reserved_2
  description: |
    reserved
ps7_dmac0_s_CSR3_wakeup_num:
  addr: 0xf8003118
  mask: 0x1f0
  name: wakeup_num
  description: |
    When the DMA channel thread executes a WFE or WFP instruction, these bits indicate the event or peripheral number that the channel is waiting for:
    Waiting for Event (WFE):
    0 0000: waiting for event 0
    0 0001: waiting for event 1
    ...
    0 1111: waiting for event 15
    1 xxxx: reserved
    Waiting for Peripheral (WFP):
    0 0000: waiting for peripheral 0
    0 0001: waiting for peripheral 1
    0 0010: waiting for peripheral 2
    0 0011: waiting for peripheral 3
    1 11xx: reserved
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CSR3_channel_status:
  addr: 0xf8003118
  mask: 0xf
  name: channel_status
  description: |
    The channel status encoding is:
    0000: Stopped
    0001: Executing
    0010: Cache miss
    0011: Updating PC
    0100: Waiting for event
    0101: At barrier
    0110: reserved
    0111: Waiting for peripheral
    1000: Killing
    1001: Completing
    1010 to 1101: reserved
    1110: Faulting completing
    1111: Faulting.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CPC3_pc_chnl:
  addr: 0xf800311c
  mask: 0xffffffff
  name: pc_chnl
  description: |
    Program counter (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CSR4_reserved:
  addr: 0xf8003120
  mask: 0xffc00000
  name: reserved
  description: |
    reserved,read undefined
ps7_dmac0_s_CSR4_CNS:
  addr: 0xf8003120
  mask: 0x200000
  name: CNS
  description: |
    Security status of the DMA channel thread:
    0: Secure state
    1: Non-secure state.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CSR4_reserved_1:
  addr: 0xf8003120
  mask: 0x1f0000
  name: reserved_1
  description: |
    reserved,read undefined
ps7_dmac0_s_CSR4_dmawfp_periph:
  addr: 0xf8003120
  mask: 0x8000
  name: dmawfp_periph
  description: |
    When the DMA channel thread executes DMAWFP, this bit indicates whether the periph operand is set:
    0: periph operand not set
    1: periph operand set.
    Note: the status only applies when the channel is connected to one of the four peripheral request interfaces.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CSR4_dmawfp_b_ns:
  addr: 0xf8003120
  mask: 0x4000
  name: dmawfp_b_ns
  description: |
    When the DMA channel thread executes DMAWFP, this bit indicates whether the burst or single operand were set:
    0: single operand set
    1: burst operand set
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CSR4_reserved_2:
  addr: 0xf8003120
  mask: 0x3e00
  name: reserved_2
  description: |
    reserved
ps7_dmac0_s_CSR4_wakeup_num:
  addr: 0xf8003120
  mask: 0x1f0
  name: wakeup_num
  description: |
    When the DMA channel thread executes a WFE or WFP instruction, these bits indicate the event or peripheral number that the channel is waiting for:
    Waiting for Event (WFE):
    0 0000: waiting for event 0
    0 0001: waiting for event 1
    ...
    0 1111: waiting for event 15
    1 xxxx: reserved
    Waiting for Peripheral (WFP):
    0 0000: waiting for peripheral 0
    0 0001: waiting for peripheral 1
    0 0010: waiting for peripheral 2
    0 0011: waiting for peripheral 3
    1 11xx: reserved
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CSR4_channel_status:
  addr: 0xf8003120
  mask: 0xf
  name: channel_status
  description: |
    The channel status encoding is:
    0000: Stopped
    0001: Executing
    0010: Cache miss
    0011: Updating PC
    0100: Waiting for event
    0101: At barrier
    0110: reserved
    0111: Waiting for peripheral
    1000: Killing
    1001: Completing
    1010 to 1101: reserved
    1110: Faulting completing
    1111: Faulting.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CPC4_pc_chnl:
  addr: 0xf8003124
  mask: 0xffffffff
  name: pc_chnl
  description: |
    Program counter (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CSR5_reserved:
  addr: 0xf8003128
  mask: 0xffc00000
  name: reserved
  description: |
    reserved,read undefined
ps7_dmac0_s_CSR5_CNS:
  addr: 0xf8003128
  mask: 0x200000
  name: CNS
  description: |
    Security status of the DMA channel thread:
    0: Secure state
    1: Non-secure state.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CSR5_reserved_1:
  addr: 0xf8003128
  mask: 0x1f0000
  name: reserved_1
  description: |
    reserved,read undefined
ps7_dmac0_s_CSR5_dmawfp_periph:
  addr: 0xf8003128
  mask: 0x8000
  name: dmawfp_periph
  description: |
    When the DMA channel thread executes DMAWFP, this bit indicates whether the periph operand is set:
    0: periph operand not set
    1: periph operand set.
    Note: the status only applies when the channel is connected to one of the four peripheral request interfaces.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CSR5_dmawfp_b_ns:
  addr: 0xf8003128
  mask: 0x4000
  name: dmawfp_b_ns
  description: |
    When the DMA channel thread executes DMAWFP, this bit indicates whether the burst or single operand were set:
    0: single operand set
    1: burst operand set
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CSR5_reserved_2:
  addr: 0xf8003128
  mask: 0x3e00
  name: reserved_2
  description: |
    reserved
ps7_dmac0_s_CSR5_wakeup_num:
  addr: 0xf8003128
  mask: 0x1f0
  name: wakeup_num
  description: |
    When the DMA channel thread executes a WFE or WFP instruction, these bits indicate the event or peripheral number that the channel is waiting for:
    Waiting for Event (WFE):
    0 0000: waiting for event 0
    0 0001: waiting for event 1
    ...
    0 1111: waiting for event 15
    1 xxxx: reserved
    Waiting for Peripheral (WFP):
    0 0000: waiting for peripheral 0
    0 0001: waiting for peripheral 1
    0 0010: waiting for peripheral 2
    0 0011: waiting for peripheral 3
    1 11xx: reserved
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CSR5_channel_status:
  addr: 0xf8003128
  mask: 0xf
  name: channel_status
  description: |
    The channel status encoding is:
    0000: Stopped
    0001: Executing
    0010: Cache miss
    0011: Updating PC
    0100: Waiting for event
    0101: At barrier
    0110: reserved
    0111: Waiting for peripheral
    1000: Killing
    1001: Completing
    1010 to 1101: reserved
    1110: Faulting completing
    1111: Faulting.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CPC5_pc_chnl:
  addr: 0xf800312c
  mask: 0xffffffff
  name: pc_chnl
  description: |
    Program counter (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CSR6_reserved:
  addr: 0xf8003130
  mask: 0xffc00000
  name: reserved
  description: |
    reserved,read undefined
ps7_dmac0_s_CSR6_CNS:
  addr: 0xf8003130
  mask: 0x200000
  name: CNS
  description: |
    Security status of the DMA channel thread:
    0: Secure state
    1: Non-secure state.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CSR6_reserved_1:
  addr: 0xf8003130
  mask: 0x1f0000
  name: reserved_1
  description: |
    reserved,read undefined
ps7_dmac0_s_CSR6_dmawfp_periph:
  addr: 0xf8003130
  mask: 0x8000
  name: dmawfp_periph
  description: |
    When the DMA channel thread executes DMAWFP, this bit indicates whether the periph operand is set:
    0: periph operand not set
    1: periph operand set.
    Note: the status only applies when the channel is connected to one of the four peripheral request interfaces.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CSR6_dmawfp_b_ns:
  addr: 0xf8003130
  mask: 0x4000
  name: dmawfp_b_ns
  description: |
    When the DMA channel thread executes DMAWFP, this bit indicates whether the burst or single operand were set:
    0: single operand set
    1: burst operand set
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CSR6_reserved_2:
  addr: 0xf8003130
  mask: 0x3e00
  name: reserved_2
  description: |
    reserved
ps7_dmac0_s_CSR6_wakeup_num:
  addr: 0xf8003130
  mask: 0x1f0
  name: wakeup_num
  description: |
    When the DMA channel thread executes a WFE or WFP instruction, these bits indicate the event or peripheral number that the channel is waiting for:
    Waiting for Event (WFE):
    0 0000: waiting for event 0
    0 0001: waiting for event 1
    ...
    0 1111: waiting for event 15
    1 xxxx: reserved
    Waiting for Peripheral (WFP):
    0 0000: waiting for peripheral 0
    0 0001: waiting for peripheral 1
    0 0010: waiting for peripheral 2
    0 0011: waiting for peripheral 3
    1 11xx: reserved
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CSR6_channel_status:
  addr: 0xf8003130
  mask: 0xf
  name: channel_status
  description: |
    The channel status encoding is:
    0000: Stopped
    0001: Executing
    0010: Cache miss
    0011: Updating PC
    0100: Waiting for event
    0101: At barrier
    0110: reserved
    0111: Waiting for peripheral
    1000: Killing
    1001: Completing
    1010 to 1101: reserved
    1110: Faulting completing
    1111: Faulting.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CPC6_pc_chnl:
  addr: 0xf8003134
  mask: 0xffffffff
  name: pc_chnl
  description: |
    Program counter (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CSR7_reserved:
  addr: 0xf8003138
  mask: 0xffc00000
  name: reserved
  description: |
    reserved,read undefined
ps7_dmac0_s_CSR7_CNS:
  addr: 0xf8003138
  mask: 0x200000
  name: CNS
  description: |
    Security status of the DMA channel thread:
    0: Secure state
    1: Non-secure state.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CSR7_reserved_1:
  addr: 0xf8003138
  mask: 0x1f0000
  name: reserved_1
  description: |
    reserved,read undefined
ps7_dmac0_s_CSR7_dmawfp_periph:
  addr: 0xf8003138
  mask: 0x8000
  name: dmawfp_periph
  description: |
    When the DMA channel thread executes DMAWFP, this bit indicates whether the periph operand is set:
    0: periph operand not set
    1: periph operand set.
    Note: the status only applies when the channel is connected to one of the four peripheral request interfaces.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CSR7_dmawfp_b_ns:
  addr: 0xf8003138
  mask: 0x4000
  name: dmawfp_b_ns
  description: |
    When the DMA channel thread executes DMAWFP, this bit indicates whether the burst or single operand were set:
    0: single operand set
    1: burst operand set
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CSR7_reserved_2:
  addr: 0xf8003138
  mask: 0x3e00
  name: reserved_2
  description: |
    reserved
ps7_dmac0_s_CSR7_wakeup_num:
  addr: 0xf8003138
  mask: 0x1f0
  name: wakeup_num
  description: |
    When the DMA channel thread executes a WFE or WFP instruction, these bits indicate the event or peripheral number that the channel is waiting for:
    Waiting for Event (WFE):
    0 0000: waiting for event 0
    0 0001: waiting for event 1
    ...
    0 1111: waiting for event 15
    1 xxxx: reserved
    Waiting for Peripheral (WFP):
    0 0000: waiting for peripheral 0
    0 0001: waiting for peripheral 1
    0 0010: waiting for peripheral 2
    0 0011: waiting for peripheral 3
    1 11xx: reserved
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CSR7_channel_status:
  addr: 0xf8003138
  mask: 0xf
  name: channel_status
  description: |
    The channel status encoding is:
    0000: Stopped
    0001: Executing
    0010: Cache miss
    0011: Updating PC
    0100: Waiting for event
    0101: At barrier
    0110: reserved
    0111: Waiting for peripheral
    1000: Killing
    1001: Completing
    1010 to 1101: reserved
    1110: Faulting completing
    1111: Faulting.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CPC7_pc_chnl:
  addr: 0xf800313c
  mask: 0xffffffff
  name: pc_chnl
  description: |
    Program counter (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_SAR0_src_addr:
  addr: 0xf8003400
  mask: 0xffffffff
  name: src_addr
  description: |
    Source data address (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_DAR0_dest_addr:
  addr: 0xf8003404
  mask: 0xffffffff
  name: dest_addr
  description: |
    Destination data address (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR0_reserved:
  addr: 0xf8003408
  mask: 0x80000000
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_s_CCR0_endian_swap_size:
  addr: 0xf8003408
  mask: 0x70000000
  name: endian_swap_size
  description: |
    Data swap: little-endian and byte-invariant big-endian (BE-8) formats.
    000: No swap, 8-bit data
    001: Swap bytes within 16-bit data
    010: Swap bytes within 32-bit data
    011: Swap bytes within 64-bit data
    100: Swap bytes within 128-bit data
    101 to 111: Reserved
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR0_dst_cache_ctrl:
  addr: 0xf8003408
  mask: 0xe000000
  name: dst_cache_ctrl
  description: |
    Programs the AXI AWCACHE signals that are used when the DMAC writes to the destination (0: Low, 1: High):
    Bit [27] programs AWCACHE[3]
    Hardwired Low to AWCACHE[2]
    Bit [26] programs AWCACHE[1]
    Bit [25] programs AWCACHE[0]
    Note: Setting AWCACHE[3,1]=b10 violates the AXI protocol.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR0_dst_prot_ctrl:
  addr: 0xf8003408
  mask: 0x1c00000
  name: dst_prot_ctrl
  description: |
    Programs the AWPROT signals that are used when the DMAC writes the destination data (0: Low, 1: High):
    Bit [24] programs AWPROT[2]
    Bit [23] programs AWPROT[1]
    Bit [22] programs AWPROT[0]
    Note: Only DMA channels in the Secure state can program AWPROT[1] Low, that is, a secure access. If a DMA channel in the Non-secure state attempts to set AWPROT[1] Low, then the DMA channel aborts.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR0_dst_burst_len:
  addr: 0xf8003408
  mask: 0x3c0000
  name: dst_burst_len
  description: |
    For each burst, these bits program the number of data transfers that the DMAC performs when it writes the destination data:
    0000: 1 data transfer
    0001: 2 data transfers
    0010: 3 data transfers
    ...
    1111: 16 data transfers.
    The total number of bytes that the DMAC writes out of the MFIFO when it executes a DMAST instruction is the product of dst_burst_len and dst_burst_size.
    Note: These bits control the state of AWLEN[3:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR0_dst_burst_size:
  addr: 0xf8003408
  mask: 0x38000
  name: dst_burst_size
  description: |
    For each beat within a burst, it programs the number of bytes that the DMAC writes to the destination:
    000: writes 1 byte per beat
    001: writes 2 bytes per beat
    010: writes 4 bytes per beat
    011: writes 8 bytes per beat
    100: writes 16 bytes per beat
    101 to 111: reserved.
    The total number of bytes that the DMAC writes out of the MFIFO when it executes a DMAST instruction is the product of dst_burst_len and dst_burst_size. Note: These bits control the state of AWSIZE[2:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR0_dst_inc:
  addr: 0xf8003408
  mask: 0x4000
  name: dst_inc
  description: |
    Programs the burst type that the DMAC performs when it writes the destination data:
    0: Fixed-address burst. The DMAC signals AWBURST[0] Low.
    1: Incrementing-address burst. The DMAC signals AWBURST[0] HIgh.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR0_src_cache_ctrl:
  addr: 0xf8003408
  mask: 0x3800
  name: src_cache_ctrl
  description: |
    Programs the AXI ARCACHE signals that are used for DMA reads of the source data (0: Low, 1: High):
    Bit [13] programs ARCACHE[2]
    Bit [12] programs ARCACHE[1]
    Bit [11] programs ARCACHE[0]
    Note: The DMAC ties ARCACHE[3] Low. Setting ARCACHE[2:1]= b10 violates the AXI protocol.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR0_src_prot_ctrl:
  addr: 0xf8003408
  mask: 0x700
  name: src_prot_ctrl
  description: |
    Programs the AXI ARPROT signals that are used for DMA reads of the source data (0: Low, 1: High):
    Bit [10] programs ARPROT[2]
    Bit [9] programs ARPROT[1]
    Bit [8] programs ARPROT[0]
    Note: Only DMA channels in the Secure state can program ARPROT[1] Low, that is, a secure access. If a DMA channel in the Non-secure state attempts to set ARPROT[1] Low, the DMA channel aborts.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR0_src_burst_len:
  addr: 0xf8003408
  mask: 0xf0
  name: src_burst_len
  description: |
    For each burst, these bits program the number of data transfers that the DMAC performs when it reads the source data:
    0000: 1 data transfer
    0001: 2 data transfers
    ...
    1111: 16 data transfers.
    The total number of bytes that the DMAC reads into the MFIFO when it executes a DMALD instruction is the product of src_burst_len and src_burst_size. Note: These bits control the state of ARLEN[3:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR0_src_burst_size:
  addr: 0xf8003408
  mask: 0xe
  name: src_burst_size
  description: |
    For each beat within a burst, it programs the number of bytes that the DMAC reads from the source:
    000: reads 1 byte per beat
    001: reads 2 bytes per beat
    010: reads 4 bytes per beat
    011: reads 8 bytes per beat
    100: reads 16 bytes per beat
    101 to 111: reserved.
    The total number of bytes that the DMAC reads into the MFIFO when it executes a DMALD instruction is the product of src_burst_len and src_burst_size. Note: These bits control the state of ARSIZE[2:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR0_src_inc:
  addr: 0xf8003408
  mask: 0x1
  name: src_inc
  description: |
    Programs the burst type that the DMAC performs when it reads the source data:
    0: Fixed-address burst, DMAC signal ARBURST[0] driven Low.
    1: Incrementing-address burst, DMAC signal ARBURST[0] driven High.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_LC0_0_reserved:
  addr: 0xf800340c
  mask: 0xffffff00
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_s_LC0_0_loop_counter_iteration:
  addr: 0xf800340c
  mask: 0xff
  name: loop_counter_iteration
  description: |
    Provides the status of loop counter zero for the DMA channel thread. The DMAC updates this register when it executes DMALPEND[S|B], and the DMA channel thread is programmed to use loop counter zero.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_LC1_0_reserved:
  addr: 0xf8003410
  mask: 0xffffff00
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_s_LC1_0_loop_counter_iteration:
  addr: 0xf8003410
  mask: 0xff
  name: loop_counter_iteration
  description: |
    Provides the status of loop counter one for the DMA channel thread. The DMAC updates this register when it executes DMALPEND[S|B], and the DMA channel thread is programmed to use loop counter one.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_SAR1_src_addr:
  addr: 0xf8003420
  mask: 0xffffffff
  name: src_addr
  description: |
    Source data address (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_DAR1_dest_addr:
  addr: 0xf8003424
  mask: 0xffffffff
  name: dest_addr
  description: |
    Destination data address (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR1_reserved:
  addr: 0xf8003428
  mask: 0x80000000
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_s_CCR1_endian_swap_size:
  addr: 0xf8003428
  mask: 0x70000000
  name: endian_swap_size
  description: |
    Data swap: little-endian and byte-invariant big-endian (BE-8) formats.
    000: No swap, 8-bit data
    001: Swap bytes within 16-bit data
    010: Swap bytes within 32-bit data
    011: Swap bytes within 64-bit data
    100: Swap bytes within 128-bit data
    101 to 111: Reserved
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR1_dst_cache_ctrl:
  addr: 0xf8003428
  mask: 0xe000000
  name: dst_cache_ctrl
  description: |
    Programs the AXI AWCACHE signals that are used when the DMAC writes to the destination (0: Low, 1: High):
    Bit [27] programs AWCACHE[3]
    Hardwired Low to AWCACHE[2]
    Bit [26] programs AWCACHE[1]
    Bit [25] programs AWCACHE[0]
    Note: Setting AWCACHE[3,1]=b10 violates the AXI protocol.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR1_dst_prot_ctrl:
  addr: 0xf8003428
  mask: 0x1c00000
  name: dst_prot_ctrl
  description: |
    Programs the AWPROT signals that are used when the DMAC writes the destination data (0: Low, 1: High):
    Bit [24] programs AWPROT[2]
    Bit [23] programs AWPROT[1]
    Bit [22] programs AWPROT[0]
    Note: Only DMA channels in the Secure state can program AWPROT[1] Low, that is, a secure access. If a DMA channel in the Non-secure state attempts to set AWPROT[1] Low, then the DMA channel aborts.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR1_dst_burst_len:
  addr: 0xf8003428
  mask: 0x3c0000
  name: dst_burst_len
  description: |
    For each burst, these bits program the number of data transfers that the DMAC performs when it writes the destination data:
    0000: 1 data transfer
    0001: 2 data transfers
    0010: 3 data transfers
    ...
    1111: 16 data transfers.
    The total number of bytes that the DMAC writes out of the MFIFO when it executes a DMAST instruction is the product of dst_burst_len and dst_burst_size.
    Note: These bits control the state of AWLEN[3:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR1_dst_burst_size:
  addr: 0xf8003428
  mask: 0x38000
  name: dst_burst_size
  description: |
    For each beat within a burst, it programs the number of bytes that the DMAC writes to the destination:
    000: writes 1 byte per beat
    001: writes 2 bytes per beat
    010: writes 4 bytes per beat
    011: writes 8 bytes per beat
    100: writes 16 bytes per beat
    101 to 111: reserved.
    The total number of bytes that the DMAC writes out of the MFIFO when it executes a DMAST instruction is the product of dst_burst_len and dst_burst_size. Note: These bits control the state of AWSIZE[2:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR1_dst_inc:
  addr: 0xf8003428
  mask: 0x4000
  name: dst_inc
  description: |
    Programs the burst type that the DMAC performs when it writes the destination data:
    0: Fixed-address burst. The DMAC signals AWBURST[0] Low.
    1: Incrementing-address burst. The DMAC signals AWBURST[0] HIgh.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR1_src_cache_ctrl:
  addr: 0xf8003428
  mask: 0x3800
  name: src_cache_ctrl
  description: |
    Programs the AXI ARCACHE signals that are used for DMA reads of the source data (0: Low, 1: High):
    Bit [13] programs ARCACHE[2]
    Bit [12] programs ARCACHE[1]
    Bit [11] programs ARCACHE[0]
    Note: The DMAC ties ARCACHE[3] Low. Setting ARCACHE[2:1]= b10 violates the AXI protocol.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR1_src_prot_ctrl:
  addr: 0xf8003428
  mask: 0x700
  name: src_prot_ctrl
  description: |
    Programs the AXI ARPROT signals that are used for DMA reads of the source data (0: Low, 1: High):
    Bit [10] programs ARPROT[2]
    Bit [9] programs ARPROT[1]
    Bit [8] programs ARPROT[0]
    Note: Only DMA channels in the Secure state can program ARPROT[1] Low, that is, a secure access. If a DMA channel in the Non-secure state attempts to set ARPROT[1] Low, the DMA channel aborts.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR1_src_burst_len:
  addr: 0xf8003428
  mask: 0xf0
  name: src_burst_len
  description: |
    For each burst, these bits program the number of data transfers that the DMAC performs when it reads the source data:
    0000: 1 data transfer
    0001: 2 data transfers
    ...
    1111: 16 data transfers.
    The total number of bytes that the DMAC reads into the MFIFO when it executes a DMALD instruction is the product of src_burst_len and src_burst_size. Note: These bits control the state of ARLEN[3:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR1_src_burst_size:
  addr: 0xf8003428
  mask: 0xe
  name: src_burst_size
  description: |
    For each beat within a burst, it programs the number of bytes that the DMAC reads from the source:
    000: reads 1 byte per beat
    001: reads 2 bytes per beat
    010: reads 4 bytes per beat
    011: reads 8 bytes per beat
    100: reads 16 bytes per beat
    101 to 111: reserved.
    The total number of bytes that the DMAC reads into the MFIFO when it executes a DMALD instruction is the product of src_burst_len and src_burst_size. Note: These bits control the state of ARSIZE[2:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR1_src_inc:
  addr: 0xf8003428
  mask: 0x1
  name: src_inc
  description: |
    Programs the burst type that the DMAC performs when it reads the source data:
    0: Fixed-address burst, DMAC signal ARBURST[0] driven Low.
    1: Incrementing-address burst, DMAC signal ARBURST[0] driven High.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_LC0_1_reserved:
  addr: 0xf800342c
  mask: 0xffffff00
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_s_LC0_1_loop_counter_iteration:
  addr: 0xf800342c
  mask: 0xff
  name: loop_counter_iteration
  description: |
    Provides the status of loop counter zero for the DMA channel thread. The DMAC updates this register when it executes DMALPEND[S|B], and the DMA channel thread is programmed to use loop counter zero.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_LC1_1_reserved:
  addr: 0xf8003430
  mask: 0xffffff00
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_s_LC1_1_loop_counter_iteration:
  addr: 0xf8003430
  mask: 0xff
  name: loop_counter_iteration
  description: |
    Provides the status of loop counter one for the DMA channel thread. The DMAC updates this register when it executes DMALPEND[S|B], and the DMA channel thread is programmed to use loop counter one.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_SAR2_src_addr:
  addr: 0xf8003440
  mask: 0xffffffff
  name: src_addr
  description: |
    Source data address (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_DAR2_dest_addr:
  addr: 0xf8003444
  mask: 0xffffffff
  name: dest_addr
  description: |
    Destination data address (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR2_reserved:
  addr: 0xf8003448
  mask: 0x80000000
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_s_CCR2_endian_swap_size:
  addr: 0xf8003448
  mask: 0x70000000
  name: endian_swap_size
  description: |
    Data swap: little-endian and byte-invariant big-endian (BE-8) formats.
    000: No swap, 8-bit data
    001: Swap bytes within 16-bit data
    010: Swap bytes within 32-bit data
    011: Swap bytes within 64-bit data
    100: Swap bytes within 128-bit data
    101 to 111: Reserved
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR2_dst_cache_ctrl:
  addr: 0xf8003448
  mask: 0xe000000
  name: dst_cache_ctrl
  description: |
    Programs the AXI AWCACHE signals that are used when the DMAC writes to the destination (0: Low, 1: High):
    Bit [27] programs AWCACHE[3]
    Hardwired Low to AWCACHE[2]
    Bit [26] programs AWCACHE[1]
    Bit [25] programs AWCACHE[0]
    Note: Setting AWCACHE[3,1]=b10 violates the AXI protocol.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR2_dst_prot_ctrl:
  addr: 0xf8003448
  mask: 0x1c00000
  name: dst_prot_ctrl
  description: |
    Programs the AWPROT signals that are used when the DMAC writes the destination data (0: Low, 1: High):
    Bit [24] programs AWPROT[2]
    Bit [23] programs AWPROT[1]
    Bit [22] programs AWPROT[0]
    Note: Only DMA channels in the Secure state can program AWPROT[1] Low, that is, a secure access. If a DMA channel in the Non-secure state attempts to set AWPROT[1] Low, then the DMA channel aborts.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR2_dst_burst_len:
  addr: 0xf8003448
  mask: 0x3c0000
  name: dst_burst_len
  description: |
    For each burst, these bits program the number of data transfers that the DMAC performs when it writes the destination data:
    0000: 1 data transfer
    0001: 2 data transfers
    0010: 3 data transfers
    ...
    1111: 16 data transfers.
    The total number of bytes that the DMAC writes out of the MFIFO when it executes a DMAST instruction is the product of dst_burst_len and dst_burst_size.
    Note: These bits control the state of AWLEN[3:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR2_dst_burst_size:
  addr: 0xf8003448
  mask: 0x38000
  name: dst_burst_size
  description: |
    For each beat within a burst, it programs the number of bytes that the DMAC writes to the destination:
    000: writes 1 byte per beat
    001: writes 2 bytes per beat
    010: writes 4 bytes per beat
    011: writes 8 bytes per beat
    100: writes 16 bytes per beat
    101 to 111: reserved.
    The total number of bytes that the DMAC writes out of the MFIFO when it executes a DMAST instruction is the product of dst_burst_len and dst_burst_size. Note: These bits control the state of AWSIZE[2:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR2_dst_inc:
  addr: 0xf8003448
  mask: 0x4000
  name: dst_inc
  description: |
    Programs the burst type that the DMAC performs when it writes the destination data:
    0: Fixed-address burst. The DMAC signals AWBURST[0] Low.
    1: Incrementing-address burst. The DMAC signals AWBURST[0] HIgh.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR2_src_cache_ctrl:
  addr: 0xf8003448
  mask: 0x3800
  name: src_cache_ctrl
  description: |
    Programs the AXI ARCACHE signals that are used for DMA reads of the source data (0: Low, 1: High):
    Bit [13] programs ARCACHE[2]
    Bit [12] programs ARCACHE[1]
    Bit [11] programs ARCACHE[0]
    Note: The DMAC ties ARCACHE[3] Low. Setting ARCACHE[2:1]= b10 violates the AXI protocol.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR2_src_prot_ctrl:
  addr: 0xf8003448
  mask: 0x700
  name: src_prot_ctrl
  description: |
    Programs the AXI ARPROT signals that are used for DMA reads of the source data (0: Low, 1: High):
    Bit [10] programs ARPROT[2]
    Bit [9] programs ARPROT[1]
    Bit [8] programs ARPROT[0]
    Note: Only DMA channels in the Secure state can program ARPROT[1] Low, that is, a secure access. If a DMA channel in the Non-secure state attempts to set ARPROT[1] Low, the DMA channel aborts.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR2_src_burst_len:
  addr: 0xf8003448
  mask: 0xf0
  name: src_burst_len
  description: |
    For each burst, these bits program the number of data transfers that the DMAC performs when it reads the source data:
    0000: 1 data transfer
    0001: 2 data transfers
    ...
    1111: 16 data transfers.
    The total number of bytes that the DMAC reads into the MFIFO when it executes a DMALD instruction is the product of src_burst_len and src_burst_size. Note: These bits control the state of ARLEN[3:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR2_src_burst_size:
  addr: 0xf8003448
  mask: 0xe
  name: src_burst_size
  description: |
    For each beat within a burst, it programs the number of bytes that the DMAC reads from the source:
    000: reads 1 byte per beat
    001: reads 2 bytes per beat
    010: reads 4 bytes per beat
    011: reads 8 bytes per beat
    100: reads 16 bytes per beat
    101 to 111: reserved.
    The total number of bytes that the DMAC reads into the MFIFO when it executes a DMALD instruction is the product of src_burst_len and src_burst_size. Note: These bits control the state of ARSIZE[2:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR2_src_inc:
  addr: 0xf8003448
  mask: 0x1
  name: src_inc
  description: |
    Programs the burst type that the DMAC performs when it reads the source data:
    0: Fixed-address burst, DMAC signal ARBURST[0] driven Low.
    1: Incrementing-address burst, DMAC signal ARBURST[0] driven High.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_LC0_2_reserved:
  addr: 0xf800344c
  mask: 0xffffff00
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_s_LC0_2_loop_counter_iteration:
  addr: 0xf800344c
  mask: 0xff
  name: loop_counter_iteration
  description: |
    Provides the status of loop counter zero for the DMA channel thread. The DMAC updates this register when it executes DMALPEND[S|B], and the DMA channel thread is programmed to use loop counter zero.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_LC1_2_reserved:
  addr: 0xf8003450
  mask: 0xffffff00
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_s_LC1_2_loop_counter_iteration:
  addr: 0xf8003450
  mask: 0xff
  name: loop_counter_iteration
  description: |
    Provides the status of loop counter one for the DMA channel thread. The DMAC updates this register when it executes DMALPEND[S|B], and the DMA channel thread is programmed to use loop counter one.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_SAR3_src_addr:
  addr: 0xf8003460
  mask: 0xffffffff
  name: src_addr
  description: |
    Source data address (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_DAR3_dest_addr:
  addr: 0xf8003464
  mask: 0xffffffff
  name: dest_addr
  description: |
    Destination data address (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR3_reserved:
  addr: 0xf8003468
  mask: 0x80000000
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_s_CCR3_endian_swap_size:
  addr: 0xf8003468
  mask: 0x70000000
  name: endian_swap_size
  description: |
    Data swap: little-endian and byte-invariant big-endian (BE-8) formats.
    000: No swap, 8-bit data
    001: Swap bytes within 16-bit data
    010: Swap bytes within 32-bit data
    011: Swap bytes within 64-bit data
    100: Swap bytes within 128-bit data
    101 to 111: Reserved
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR3_dst_cache_ctrl:
  addr: 0xf8003468
  mask: 0xe000000
  name: dst_cache_ctrl
  description: |
    Programs the AXI AWCACHE signals that are used when the DMAC writes to the destination (0: Low, 1: High):
    Bit [27] programs AWCACHE[3]
    Hardwired Low to AWCACHE[2]
    Bit [26] programs AWCACHE[1]
    Bit [25] programs AWCACHE[0]
    Note: Setting AWCACHE[3,1]=b10 violates the AXI protocol.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR3_dst_prot_ctrl:
  addr: 0xf8003468
  mask: 0x1c00000
  name: dst_prot_ctrl
  description: |
    Programs the AWPROT signals that are used when the DMAC writes the destination data (0: Low, 1: High):
    Bit [24] programs AWPROT[2]
    Bit [23] programs AWPROT[1]
    Bit [22] programs AWPROT[0]
    Note: Only DMA channels in the Secure state can program AWPROT[1] Low, that is, a secure access. If a DMA channel in the Non-secure state attempts to set AWPROT[1] Low, then the DMA channel aborts.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR3_dst_burst_len:
  addr: 0xf8003468
  mask: 0x3c0000
  name: dst_burst_len
  description: |
    For each burst, these bits program the number of data transfers that the DMAC performs when it writes the destination data:
    0000: 1 data transfer
    0001: 2 data transfers
    0010: 3 data transfers
    ...
    1111: 16 data transfers.
    The total number of bytes that the DMAC writes out of the MFIFO when it executes a DMAST instruction is the product of dst_burst_len and dst_burst_size.
    Note: These bits control the state of AWLEN[3:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR3_dst_burst_size:
  addr: 0xf8003468
  mask: 0x38000
  name: dst_burst_size
  description: |
    For each beat within a burst, it programs the number of bytes that the DMAC writes to the destination:
    000: writes 1 byte per beat
    001: writes 2 bytes per beat
    010: writes 4 bytes per beat
    011: writes 8 bytes per beat
    100: writes 16 bytes per beat
    101 to 111: reserved.
    The total number of bytes that the DMAC writes out of the MFIFO when it executes a DMAST instruction is the product of dst_burst_len and dst_burst_size. Note: These bits control the state of AWSIZE[2:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR3_dst_inc:
  addr: 0xf8003468
  mask: 0x4000
  name: dst_inc
  description: |
    Programs the burst type that the DMAC performs when it writes the destination data:
    0: Fixed-address burst. The DMAC signals AWBURST[0] Low.
    1: Incrementing-address burst. The DMAC signals AWBURST[0] HIgh.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR3_src_cache_ctrl:
  addr: 0xf8003468
  mask: 0x3800
  name: src_cache_ctrl
  description: |
    Programs the AXI ARCACHE signals that are used for DMA reads of the source data (0: Low, 1: High):
    Bit [13] programs ARCACHE[2]
    Bit [12] programs ARCACHE[1]
    Bit [11] programs ARCACHE[0]
    Note: The DMAC ties ARCACHE[3] Low. Setting ARCACHE[2:1]= b10 violates the AXI protocol.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR3_src_prot_ctrl:
  addr: 0xf8003468
  mask: 0x700
  name: src_prot_ctrl
  description: |
    Programs the AXI ARPROT signals that are used for DMA reads of the source data (0: Low, 1: High):
    Bit [10] programs ARPROT[2]
    Bit [9] programs ARPROT[1]
    Bit [8] programs ARPROT[0]
    Note: Only DMA channels in the Secure state can program ARPROT[1] Low, that is, a secure access. If a DMA channel in the Non-secure state attempts to set ARPROT[1] Low, the DMA channel aborts.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR3_src_burst_len:
  addr: 0xf8003468
  mask: 0xf0
  name: src_burst_len
  description: |
    For each burst, these bits program the number of data transfers that the DMAC performs when it reads the source data:
    0000: 1 data transfer
    0001: 2 data transfers
    ...
    1111: 16 data transfers.
    The total number of bytes that the DMAC reads into the MFIFO when it executes a DMALD instruction is the product of src_burst_len and src_burst_size. Note: These bits control the state of ARLEN[3:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR3_src_burst_size:
  addr: 0xf8003468
  mask: 0xe
  name: src_burst_size
  description: |
    For each beat within a burst, it programs the number of bytes that the DMAC reads from the source:
    000: reads 1 byte per beat
    001: reads 2 bytes per beat
    010: reads 4 bytes per beat
    011: reads 8 bytes per beat
    100: reads 16 bytes per beat
    101 to 111: reserved.
    The total number of bytes that the DMAC reads into the MFIFO when it executes a DMALD instruction is the product of src_burst_len and src_burst_size. Note: These bits control the state of ARSIZE[2:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR3_src_inc:
  addr: 0xf8003468
  mask: 0x1
  name: src_inc
  description: |
    Programs the burst type that the DMAC performs when it reads the source data:
    0: Fixed-address burst, DMAC signal ARBURST[0] driven Low.
    1: Incrementing-address burst, DMAC signal ARBURST[0] driven High.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_LC0_3_reserved:
  addr: 0xf800346c
  mask: 0xffffff00
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_s_LC0_3_loop_counter_iteration:
  addr: 0xf800346c
  mask: 0xff
  name: loop_counter_iteration
  description: |
    Provides the status of loop counter zero for the DMA channel thread. The DMAC updates this register when it executes DMALPEND[S|B], and the DMA channel thread is programmed to use loop counter zero.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_LC1_3_reserved:
  addr: 0xf8003470
  mask: 0xffffff00
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_s_LC1_3_loop_counter_iteration:
  addr: 0xf8003470
  mask: 0xff
  name: loop_counter_iteration
  description: |
    Provides the status of loop counter one for the DMA channel thread. The DMAC updates this register when it executes DMALPEND[S|B], and the DMA channel thread is programmed to use loop counter one.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_SAR4_src_addr:
  addr: 0xf8003480
  mask: 0xffffffff
  name: src_addr
  description: |
    Source data address (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_DAR4_dest_addr:
  addr: 0xf8003484
  mask: 0xffffffff
  name: dest_addr
  description: |
    Destination data address (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR4_reserved:
  addr: 0xf8003488
  mask: 0x80000000
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_s_CCR4_endian_swap_size:
  addr: 0xf8003488
  mask: 0x70000000
  name: endian_swap_size
  description: |
    Data swap: little-endian and byte-invariant big-endian (BE-8) formats.
    000: No swap, 8-bit data
    001: Swap bytes within 16-bit data
    010: Swap bytes within 32-bit data
    011: Swap bytes within 64-bit data
    100: Swap bytes within 128-bit data
    101 to 111: Reserved
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR4_dst_cache_ctrl:
  addr: 0xf8003488
  mask: 0xe000000
  name: dst_cache_ctrl
  description: |
    Programs the AXI AWCACHE signals that are used when the DMAC writes to the destination (0: Low, 1: High):
    Bit [27] programs AWCACHE[3]
    Hardwired Low to AWCACHE[2]
    Bit [26] programs AWCACHE[1]
    Bit [25] programs AWCACHE[0]
    Note: Setting AWCACHE[3,1]=b10 violates the AXI protocol.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR4_dst_prot_ctrl:
  addr: 0xf8003488
  mask: 0x1c00000
  name: dst_prot_ctrl
  description: |
    Programs the AWPROT signals that are used when the DMAC writes the destination data (0: Low, 1: High):
    Bit [24] programs AWPROT[2]
    Bit [23] programs AWPROT[1]
    Bit [22] programs AWPROT[0]
    Note: Only DMA channels in the Secure state can program AWPROT[1] Low, that is, a secure access. If a DMA channel in the Non-secure state attempts to set AWPROT[1] Low, then the DMA channel aborts.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR4_dst_burst_len:
  addr: 0xf8003488
  mask: 0x3c0000
  name: dst_burst_len
  description: |
    For each burst, these bits program the number of data transfers that the DMAC performs when it writes the destination data:
    0000: 1 data transfer
    0001: 2 data transfers
    0010: 3 data transfers
    ...
    1111: 16 data transfers.
    The total number of bytes that the DMAC writes out of the MFIFO when it executes a DMAST instruction is the product of dst_burst_len and dst_burst_size.
    Note: These bits control the state of AWLEN[3:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR4_dst_burst_size:
  addr: 0xf8003488
  mask: 0x38000
  name: dst_burst_size
  description: |
    For each beat within a burst, it programs the number of bytes that the DMAC writes to the destination:
    000: writes 1 byte per beat
    001: writes 2 bytes per beat
    010: writes 4 bytes per beat
    011: writes 8 bytes per beat
    100: writes 16 bytes per beat
    101 to 111: reserved.
    The total number of bytes that the DMAC writes out of the MFIFO when it executes a DMAST instruction is the product of dst_burst_len and dst_burst_size. Note: These bits control the state of AWSIZE[2:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR4_dst_inc:
  addr: 0xf8003488
  mask: 0x4000
  name: dst_inc
  description: |
    Programs the burst type that the DMAC performs when it writes the destination data:
    0: Fixed-address burst. The DMAC signals AWBURST[0] Low.
    1: Incrementing-address burst. The DMAC signals AWBURST[0] HIgh.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR4_src_cache_ctrl:
  addr: 0xf8003488
  mask: 0x3800
  name: src_cache_ctrl
  description: |
    Programs the AXI ARCACHE signals that are used for DMA reads of the source data (0: Low, 1: High):
    Bit [13] programs ARCACHE[2]
    Bit [12] programs ARCACHE[1]
    Bit [11] programs ARCACHE[0]
    Note: The DMAC ties ARCACHE[3] Low. Setting ARCACHE[2:1]= b10 violates the AXI protocol.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR4_src_prot_ctrl:
  addr: 0xf8003488
  mask: 0x700
  name: src_prot_ctrl
  description: |
    Programs the AXI ARPROT signals that are used for DMA reads of the source data (0: Low, 1: High):
    Bit [10] programs ARPROT[2]
    Bit [9] programs ARPROT[1]
    Bit [8] programs ARPROT[0]
    Note: Only DMA channels in the Secure state can program ARPROT[1] Low, that is, a secure access. If a DMA channel in the Non-secure state attempts to set ARPROT[1] Low, the DMA channel aborts.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR4_src_burst_len:
  addr: 0xf8003488
  mask: 0xf0
  name: src_burst_len
  description: |
    For each burst, these bits program the number of data transfers that the DMAC performs when it reads the source data:
    0000: 1 data transfer
    0001: 2 data transfers
    ...
    1111: 16 data transfers.
    The total number of bytes that the DMAC reads into the MFIFO when it executes a DMALD instruction is the product of src_burst_len and src_burst_size. Note: These bits control the state of ARLEN[3:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR4_src_burst_size:
  addr: 0xf8003488
  mask: 0xe
  name: src_burst_size
  description: |
    For each beat within a burst, it programs the number of bytes that the DMAC reads from the source:
    000: reads 1 byte per beat
    001: reads 2 bytes per beat
    010: reads 4 bytes per beat
    011: reads 8 bytes per beat
    100: reads 16 bytes per beat
    101 to 111: reserved.
    The total number of bytes that the DMAC reads into the MFIFO when it executes a DMALD instruction is the product of src_burst_len and src_burst_size. Note: These bits control the state of ARSIZE[2:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR4_src_inc:
  addr: 0xf8003488
  mask: 0x1
  name: src_inc
  description: |
    Programs the burst type that the DMAC performs when it reads the source data:
    0: Fixed-address burst, DMAC signal ARBURST[0] driven Low.
    1: Incrementing-address burst, DMAC signal ARBURST[0] driven High.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_LC0_4_reserved:
  addr: 0xf800348c
  mask: 0xffffff00
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_s_LC0_4_loop_counter_iteration:
  addr: 0xf800348c
  mask: 0xff
  name: loop_counter_iteration
  description: |
    Provides the status of loop counter zero for the DMA channel thread. The DMAC updates this register when it executes DMALPEND[S|B], and the DMA channel thread is programmed to use loop counter zero.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_LC1_4_reserved:
  addr: 0xf8003490
  mask: 0xffffff00
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_s_LC1_4_loop_counter_iteration:
  addr: 0xf8003490
  mask: 0xff
  name: loop_counter_iteration
  description: |
    Provides the status of loop counter one for the DMA channel thread. The DMAC updates this register when it executes DMALPEND[S|B], and the DMA channel thread is programmed to use loop counter one.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_SAR5_src_addr:
  addr: 0xf80034a0
  mask: 0xffffffff
  name: src_addr
  description: |
    Source data address (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_DAR5_dest_addr:
  addr: 0xf80034a4
  mask: 0xffffffff
  name: dest_addr
  description: |
    Destination data address (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR5_reserved:
  addr: 0xf80034a8
  mask: 0x80000000
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_s_CCR5_endian_swap_size:
  addr: 0xf80034a8
  mask: 0x70000000
  name: endian_swap_size
  description: |
    Data swap: little-endian and byte-invariant big-endian (BE-8) formats.
    000: No swap, 8-bit data
    001: Swap bytes within 16-bit data
    010: Swap bytes within 32-bit data
    011: Swap bytes within 64-bit data
    100: Swap bytes within 128-bit data
    101 to 111: Reserved
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR5_dst_cache_ctrl:
  addr: 0xf80034a8
  mask: 0xe000000
  name: dst_cache_ctrl
  description: |
    Programs the AXI AWCACHE signals that are used when the DMAC writes to the destination (0: Low, 1: High):
    Bit [27] programs AWCACHE[3]
    Hardwired Low to AWCACHE[2]
    Bit [26] programs AWCACHE[1]
    Bit [25] programs AWCACHE[0]
    Note: Setting AWCACHE[3,1]=b10 violates the AXI protocol.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR5_dst_prot_ctrl:
  addr: 0xf80034a8
  mask: 0x1c00000
  name: dst_prot_ctrl
  description: |
    Programs the AWPROT signals that are used when the DMAC writes the destination data (0: Low, 1: High):
    Bit [24] programs AWPROT[2]
    Bit [23] programs AWPROT[1]
    Bit [22] programs AWPROT[0]
    Note: Only DMA channels in the Secure state can program AWPROT[1] Low, that is, a secure access. If a DMA channel in the Non-secure state attempts to set AWPROT[1] Low, then the DMA channel aborts.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR5_dst_burst_len:
  addr: 0xf80034a8
  mask: 0x3c0000
  name: dst_burst_len
  description: |
    For each burst, these bits program the number of data transfers that the DMAC performs when it writes the destination data:
    0000: 1 data transfer
    0001: 2 data transfers
    0010: 3 data transfers
    ...
    1111: 16 data transfers.
    The total number of bytes that the DMAC writes out of the MFIFO when it executes a DMAST instruction is the product of dst_burst_len and dst_burst_size.
    Note: These bits control the state of AWLEN[3:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR5_dst_burst_size:
  addr: 0xf80034a8
  mask: 0x38000
  name: dst_burst_size
  description: |
    For each beat within a burst, it programs the number of bytes that the DMAC writes to the destination:
    000: writes 1 byte per beat
    001: writes 2 bytes per beat
    010: writes 4 bytes per beat
    011: writes 8 bytes per beat
    100: writes 16 bytes per beat
    101 to 111: reserved.
    The total number of bytes that the DMAC writes out of the MFIFO when it executes a DMAST instruction is the product of dst_burst_len and dst_burst_size. Note: These bits control the state of AWSIZE[2:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR5_dst_inc:
  addr: 0xf80034a8
  mask: 0x4000
  name: dst_inc
  description: |
    Programs the burst type that the DMAC performs when it writes the destination data:
    0: Fixed-address burst. The DMAC signals AWBURST[0] Low.
    1: Incrementing-address burst. The DMAC signals AWBURST[0] HIgh.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR5_src_cache_ctrl:
  addr: 0xf80034a8
  mask: 0x3800
  name: src_cache_ctrl
  description: |
    Programs the AXI ARCACHE signals that are used for DMA reads of the source data (0: Low, 1: High):
    Bit [13] programs ARCACHE[2]
    Bit [12] programs ARCACHE[1]
    Bit [11] programs ARCACHE[0]
    Note: The DMAC ties ARCACHE[3] Low. Setting ARCACHE[2:1]= b10 violates the AXI protocol.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR5_src_prot_ctrl:
  addr: 0xf80034a8
  mask: 0x700
  name: src_prot_ctrl
  description: |
    Programs the AXI ARPROT signals that are used for DMA reads of the source data (0: Low, 1: High):
    Bit [10] programs ARPROT[2]
    Bit [9] programs ARPROT[1]
    Bit [8] programs ARPROT[0]
    Note: Only DMA channels in the Secure state can program ARPROT[1] Low, that is, a secure access. If a DMA channel in the Non-secure state attempts to set ARPROT[1] Low, the DMA channel aborts.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR5_src_burst_len:
  addr: 0xf80034a8
  mask: 0xf0
  name: src_burst_len
  description: |
    For each burst, these bits program the number of data transfers that the DMAC performs when it reads the source data:
    0000: 1 data transfer
    0001: 2 data transfers
    ...
    1111: 16 data transfers.
    The total number of bytes that the DMAC reads into the MFIFO when it executes a DMALD instruction is the product of src_burst_len and src_burst_size. Note: These bits control the state of ARLEN[3:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR5_src_burst_size:
  addr: 0xf80034a8
  mask: 0xe
  name: src_burst_size
  description: |
    For each beat within a burst, it programs the number of bytes that the DMAC reads from the source:
    000: reads 1 byte per beat
    001: reads 2 bytes per beat
    010: reads 4 bytes per beat
    011: reads 8 bytes per beat
    100: reads 16 bytes per beat
    101 to 111: reserved.
    The total number of bytes that the DMAC reads into the MFIFO when it executes a DMALD instruction is the product of src_burst_len and src_burst_size. Note: These bits control the state of ARSIZE[2:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR5_src_inc:
  addr: 0xf80034a8
  mask: 0x1
  name: src_inc
  description: |
    Programs the burst type that the DMAC performs when it reads the source data:
    0: Fixed-address burst, DMAC signal ARBURST[0] driven Low.
    1: Incrementing-address burst, DMAC signal ARBURST[0] driven High.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_LC0_5_reserved:
  addr: 0xf80034ac
  mask: 0xffffff00
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_s_LC0_5_loop_counter_iteration:
  addr: 0xf80034ac
  mask: 0xff
  name: loop_counter_iteration
  description: |
    Provides the status of loop counter zero for the DMA channel thread. The DMAC updates this register when it executes DMALPEND[S|B], and the DMA channel thread is programmed to use loop counter zero.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_LC1_5_reserved:
  addr: 0xf80034b0
  mask: 0xffffff00
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_s_LC1_5_loop_counter_iteration:
  addr: 0xf80034b0
  mask: 0xff
  name: loop_counter_iteration
  description: |
    Provides the status of loop counter one for the DMA channel thread. The DMAC updates this register when it executes DMALPEND[S|B], and the DMA channel thread is programmed to use loop counter one.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_SAR6_src_addr:
  addr: 0xf80034c0
  mask: 0xffffffff
  name: src_addr
  description: |
    Source data address (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_DAR6_dest_addr:
  addr: 0xf80034c4
  mask: 0xffffffff
  name: dest_addr
  description: |
    Destination data address (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR6_reserved:
  addr: 0xf80034c8
  mask: 0x80000000
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_s_CCR6_endian_swap_size:
  addr: 0xf80034c8
  mask: 0x70000000
  name: endian_swap_size
  description: |
    Data swap: little-endian and byte-invariant big-endian (BE-8) formats.
    000: No swap, 8-bit data
    001: Swap bytes within 16-bit data
    010: Swap bytes within 32-bit data
    011: Swap bytes within 64-bit data
    100: Swap bytes within 128-bit data
    101 to 111: Reserved
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR6_dst_cache_ctrl:
  addr: 0xf80034c8
  mask: 0xe000000
  name: dst_cache_ctrl
  description: |
    Programs the AXI AWCACHE signals that are used when the DMAC writes to the destination (0: Low, 1: High):
    Bit [27] programs AWCACHE[3]
    Hardwired Low to AWCACHE[2]
    Bit [26] programs AWCACHE[1]
    Bit [25] programs AWCACHE[0]
    Note: Setting AWCACHE[3,1]=b10 violates the AXI protocol.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR6_dst_prot_ctrl:
  addr: 0xf80034c8
  mask: 0x1c00000
  name: dst_prot_ctrl
  description: |
    Programs the AWPROT signals that are used when the DMAC writes the destination data (0: Low, 1: High):
    Bit [24] programs AWPROT[2]
    Bit [23] programs AWPROT[1]
    Bit [22] programs AWPROT[0]
    Note: Only DMA channels in the Secure state can program AWPROT[1] Low, that is, a secure access. If a DMA channel in the Non-secure state attempts to set AWPROT[1] Low, then the DMA channel aborts.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR6_dst_burst_len:
  addr: 0xf80034c8
  mask: 0x3c0000
  name: dst_burst_len
  description: |
    For each burst, these bits program the number of data transfers that the DMAC performs when it writes the destination data:
    0000: 1 data transfer
    0001: 2 data transfers
    0010: 3 data transfers
    ...
    1111: 16 data transfers.
    The total number of bytes that the DMAC writes out of the MFIFO when it executes a DMAST instruction is the product of dst_burst_len and dst_burst_size.
    Note: These bits control the state of AWLEN[3:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR6_dst_burst_size:
  addr: 0xf80034c8
  mask: 0x38000
  name: dst_burst_size
  description: |
    For each beat within a burst, it programs the number of bytes that the DMAC writes to the destination:
    000: writes 1 byte per beat
    001: writes 2 bytes per beat
    010: writes 4 bytes per beat
    011: writes 8 bytes per beat
    100: writes 16 bytes per beat
    101 to 111: reserved.
    The total number of bytes that the DMAC writes out of the MFIFO when it executes a DMAST instruction is the product of dst_burst_len and dst_burst_size. Note: These bits control the state of AWSIZE[2:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR6_dst_inc:
  addr: 0xf80034c8
  mask: 0x4000
  name: dst_inc
  description: |
    Programs the burst type that the DMAC performs when it writes the destination data:
    0: Fixed-address burst. The DMAC signals AWBURST[0] Low.
    1: Incrementing-address burst. The DMAC signals AWBURST[0] HIgh.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR6_src_cache_ctrl:
  addr: 0xf80034c8
  mask: 0x3800
  name: src_cache_ctrl
  description: |
    Programs the AXI ARCACHE signals that are used for DMA reads of the source data (0: Low, 1: High):
    Bit [13] programs ARCACHE[2]
    Bit [12] programs ARCACHE[1]
    Bit [11] programs ARCACHE[0]
    Note: The DMAC ties ARCACHE[3] Low. Setting ARCACHE[2:1]= b10 violates the AXI protocol.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR6_src_prot_ctrl:
  addr: 0xf80034c8
  mask: 0x700
  name: src_prot_ctrl
  description: |
    Programs the AXI ARPROT signals that are used for DMA reads of the source data (0: Low, 1: High):
    Bit [10] programs ARPROT[2]
    Bit [9] programs ARPROT[1]
    Bit [8] programs ARPROT[0]
    Note: Only DMA channels in the Secure state can program ARPROT[1] Low, that is, a secure access. If a DMA channel in the Non-secure state attempts to set ARPROT[1] Low, the DMA channel aborts.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR6_src_burst_len:
  addr: 0xf80034c8
  mask: 0xf0
  name: src_burst_len
  description: |
    For each burst, these bits program the number of data transfers that the DMAC performs when it reads the source data:
    0000: 1 data transfer
    0001: 2 data transfers
    ...
    1111: 16 data transfers.
    The total number of bytes that the DMAC reads into the MFIFO when it executes a DMALD instruction is the product of src_burst_len and src_burst_size. Note: These bits control the state of ARLEN[3:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR6_src_burst_size:
  addr: 0xf80034c8
  mask: 0xe
  name: src_burst_size
  description: |
    For each beat within a burst, it programs the number of bytes that the DMAC reads from the source:
    000: reads 1 byte per beat
    001: reads 2 bytes per beat
    010: reads 4 bytes per beat
    011: reads 8 bytes per beat
    100: reads 16 bytes per beat
    101 to 111: reserved.
    The total number of bytes that the DMAC reads into the MFIFO when it executes a DMALD instruction is the product of src_burst_len and src_burst_size. Note: These bits control the state of ARSIZE[2:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR6_src_inc:
  addr: 0xf80034c8
  mask: 0x1
  name: src_inc
  description: |
    Programs the burst type that the DMAC performs when it reads the source data:
    0: Fixed-address burst, DMAC signal ARBURST[0] driven Low.
    1: Incrementing-address burst, DMAC signal ARBURST[0] driven High.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_LC0_6_reserved:
  addr: 0xf80034cc
  mask: 0xffffff00
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_s_LC0_6_loop_counter_iteration:
  addr: 0xf80034cc
  mask: 0xff
  name: loop_counter_iteration
  description: |
    Provides the status of loop counter zero for the DMA channel thread. The DMAC updates this register when it executes DMALPEND[S|B], and the DMA channel thread is programmed to use loop counter zero.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_LC1_6_reserved:
  addr: 0xf80034d0
  mask: 0xffffff00
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_s_LC1_6_loop_counter_iteration:
  addr: 0xf80034d0
  mask: 0xff
  name: loop_counter_iteration
  description: |
    Provides the status of loop counter one for the DMA channel thread. The DMAC updates this register when it executes DMALPEND[S|B], and the DMA channel thread is programmed to use loop counter one.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_SAR7_src_addr:
  addr: 0xf80034e0
  mask: 0xffffffff
  name: src_addr
  description: |
    Source data address (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_DAR7_dest_addr:
  addr: 0xf80034e4
  mask: 0xffffffff
  name: dest_addr
  description: |
    Destination data address (physical memory address) for DMA channel thread.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR7_reserved:
  addr: 0xf80034e8
  mask: 0x80000000
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_s_CCR7_endian_swap_size:
  addr: 0xf80034e8
  mask: 0x70000000
  name: endian_swap_size
  description: |
    Data swap: little-endian and byte-invariant big-endian (BE-8) formats.
    000: No swap, 8-bit data
    001: Swap bytes within 16-bit data
    010: Swap bytes within 32-bit data
    011: Swap bytes within 64-bit data
    100: Swap bytes within 128-bit data
    101 to 111: Reserved
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR7_dst_cache_ctrl:
  addr: 0xf80034e8
  mask: 0xe000000
  name: dst_cache_ctrl
  description: |
    Programs the AXI AWCACHE signals that are used when the DMAC writes to the destination (0: Low, 1: High):
    Bit [27] programs AWCACHE[3]
    Hardwired Low to AWCACHE[2]
    Bit [26] programs AWCACHE[1]
    Bit [25] programs AWCACHE[0]
    Note: Setting AWCACHE[3,1]=b10 violates the AXI protocol.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR7_dst_prot_ctrl:
  addr: 0xf80034e8
  mask: 0x1c00000
  name: dst_prot_ctrl
  description: |
    Programs the AWPROT signals that are used when the DMAC writes the destination data (0: Low, 1: High):
    Bit [24] programs AWPROT[2]
    Bit [23] programs AWPROT[1]
    Bit [22] programs AWPROT[0]
    Note: Only DMA channels in the Secure state can program AWPROT[1] Low, that is, a secure access. If a DMA channel in the Non-secure state attempts to set AWPROT[1] Low, then the DMA channel aborts.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR7_dst_burst_len:
  addr: 0xf80034e8
  mask: 0x3c0000
  name: dst_burst_len
  description: |
    For each burst, these bits program the number of data transfers that the DMAC performs when it writes the destination data:
    0000: 1 data transfer
    0001: 2 data transfers
    0010: 3 data transfers
    ...
    1111: 16 data transfers.
    The total number of bytes that the DMAC writes out of the MFIFO when it executes a DMAST instruction is the product of dst_burst_len and dst_burst_size.
    Note: These bits control the state of AWLEN[3:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR7_dst_burst_size:
  addr: 0xf80034e8
  mask: 0x38000
  name: dst_burst_size
  description: |
    For each beat within a burst, it programs the number of bytes that the DMAC writes to the destination:
    000: writes 1 byte per beat
    001: writes 2 bytes per beat
    010: writes 4 bytes per beat
    011: writes 8 bytes per beat
    100: writes 16 bytes per beat
    101 to 111: reserved.
    The total number of bytes that the DMAC writes out of the MFIFO when it executes a DMAST instruction is the product of dst_burst_len and dst_burst_size. Note: These bits control the state of AWSIZE[2:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR7_dst_inc:
  addr: 0xf80034e8
  mask: 0x4000
  name: dst_inc
  description: |
    Programs the burst type that the DMAC performs when it writes the destination data:
    0: Fixed-address burst. The DMAC signals AWBURST[0] Low.
    1: Incrementing-address burst. The DMAC signals AWBURST[0] HIgh.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR7_src_cache_ctrl:
  addr: 0xf80034e8
  mask: 0x3800
  name: src_cache_ctrl
  description: |
    Programs the AXI ARCACHE signals that are used for DMA reads of the source data (0: Low, 1: High):
    Bit [13] programs ARCACHE[2]
    Bit [12] programs ARCACHE[1]
    Bit [11] programs ARCACHE[0]
    Note: The DMAC ties ARCACHE[3] Low. Setting ARCACHE[2:1]= b10 violates the AXI protocol.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR7_src_prot_ctrl:
  addr: 0xf80034e8
  mask: 0x700
  name: src_prot_ctrl
  description: |
    Programs the AXI ARPROT signals that are used for DMA reads of the source data (0: Low, 1: High):
    Bit [10] programs ARPROT[2]
    Bit [9] programs ARPROT[1]
    Bit [8] programs ARPROT[0]
    Note: Only DMA channels in the Secure state can program ARPROT[1] Low, that is, a secure access. If a DMA channel in the Non-secure state attempts to set ARPROT[1] Low, the DMA channel aborts.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR7_src_burst_len:
  addr: 0xf80034e8
  mask: 0xf0
  name: src_burst_len
  description: |
    For each burst, these bits program the number of data transfers that the DMAC performs when it reads the source data:
    0000: 1 data transfer
    0001: 2 data transfers
    ...
    1111: 16 data transfers.
    The total number of bytes that the DMAC reads into the MFIFO when it executes a DMALD instruction is the product of src_burst_len and src_burst_size. Note: These bits control the state of ARLEN[3:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR7_src_burst_size:
  addr: 0xf80034e8
  mask: 0xe
  name: src_burst_size
  description: |
    For each beat within a burst, it programs the number of bytes that the DMAC reads from the source:
    000: reads 1 byte per beat
    001: reads 2 bytes per beat
    010: reads 4 bytes per beat
    011: reads 8 bytes per beat
    100: reads 16 bytes per beat
    101 to 111: reserved.
    The total number of bytes that the DMAC reads into the MFIFO when it executes a DMALD instruction is the product of src_burst_len and src_burst_size. Note: These bits control the state of ARSIZE[2:0].
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CCR7_src_inc:
  addr: 0xf80034e8
  mask: 0x1
  name: src_inc
  description: |
    Programs the burst type that the DMAC performs when it reads the source data:
    0: Fixed-address burst, DMAC signal ARBURST[0] driven Low.
    1: Incrementing-address burst, DMAC signal ARBURST[0] driven High.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_LC0_7_reserved:
  addr: 0xf80034ec
  mask: 0xffffff00
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_s_LC0_7_loop_counter_iteration:
  addr: 0xf80034ec
  mask: 0xff
  name: loop_counter_iteration
  description: |
    Provides the status of loop counter zero for the DMA channel thread. The DMAC updates this register when it executes DMALPEND[S|B], and the DMA channel thread is programmed to use loop counter zero.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_LC1_7_reserved:
  addr: 0xf80034f0
  mask: 0xffffff00
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_s_LC1_7_loop_counter_iteration:
  addr: 0xf80034f0
  mask: 0xff
  name: loop_counter_iteration
  description: |
    Provides the status of loop counter one for the DMA channel thread. The DMAC updates this register when it executes DMALPEND[S|B], and the DMA channel thread is programmed to use loop counter one.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_DBGSTATUS_reserved:
  addr: 0xf8003d00
  mask: 0xfffffffe
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_s_DBGSTATUS_dbgstatus:
  addr: 0xf8003d00
  mask: 0x1
  name: dbgstatus
  description: |
    The DMA manager Execution/Debug status:
    0: Idle
    1: Busy.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_DBGCMD_reserved:
  addr: 0xf8003d04
  mask: 0xfffffffc
  name: reserved
  description: |
    reserved, read undefined
ps7_dmac0_s_DBGCMD_dbgcmd:
  addr: 0xf8003d04
  mask: 0x3
  name: dbgcmd
  description: |
    Command the DMA manager to execute the instruction defined in the two DBGINST registers.
    00: execute the instruction.
    others: reserved.
    This bit-field has the following special access attributes:
     swo: During secure access, it is  write only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnswo: During non-secure access, if thread is non-secure, it is write only.
    
ps7_dmac0_s_DBGINST0_instruction_byte1:
  addr: 0xf8003d08
  mask: 0xff000000
  name: instruction_byte1
  description: |
    instruction byte 1
    This bit-field has the following special access attributes:
     swo: During secure access, it is  write only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnswo: During non-secure access, if thread is non-secure, it is write only.
    
ps7_dmac0_s_DBGINST0_instruction_byte0:
  addr: 0xf8003d08
  mask: 0xff0000
  name: instruction_byte0
  description: |
    instruction byte 0
    This bit-field has the following special access attributes:
     swo: During secure access, it is  write only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnswo: During non-secure access, if thread is non-secure, it is write only.
    
ps7_dmac0_s_DBGINST0_reserved:
  addr: 0xf8003d08
  mask: 0xf800
  name: reserved
  description: |
    reserved, write as 0
ps7_dmac0_s_DBGINST0_channel_num:
  addr: 0xf8003d08
  mask: 0x700
  name: channel_num
  description: |
    DMA channel number:
    000: DMA channel 0
    001: DMA channel 1
    010: DMA channel 2
    ...
    111: DMA channel 7
    This bit-field has the following special access attributes:
     swo: During secure access, it is  write only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnswo: During non-secure access, if thread is non-secure, it is write only.
    
ps7_dmac0_s_DBGINST0_reserved_1:
  addr: 0xf8003d08
  mask: 0xfe
  name: reserved_1
  description: |
    reserved, write as 0
ps7_dmac0_s_DBGINST0_debug_thread:
  addr: 0xf8003d08
  mask: 0x1
  name: debug_thread
  description: |
    The debug thread encoding is as folLows:
    0: DMA manager thread
    1: DMA channel.
    Note: When set to 1, the Channel number field selects the DMA channel to debug.
    This bit-field has the following special access attributes:
     swo: During secure access, it is  write only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnswo: During non-secure access, if thread is non-secure, it is write only.
    
ps7_dmac0_s_DBGINST1_instruction_byte5:
  addr: 0xf8003d0c
  mask: 0xff000000
  name: instruction_byte5
  description: |
    instruction byte 5
    This bit-field has the following special access attributes:
     swo: During secure access, it is  write only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnswo: During non-secure access, if thread is non-secure, it is write only.
    
ps7_dmac0_s_DBGINST1_instruction_byte4:
  addr: 0xf8003d0c
  mask: 0xff0000
  name: instruction_byte4
  description: |
    instruction byte 4
    This bit-field has the following special access attributes:
     swo: During secure access, it is  write only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnswo: During non-secure access, if thread is non-secure, it is write only.
    
ps7_dmac0_s_DBGINST1_instruction_byte3:
  addr: 0xf8003d0c
  mask: 0xff00
  name: instruction_byte3
  description: |
    instruction byte 3
    This bit-field has the following special access attributes:
     swo: During secure access, it is  write only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnswo: During non-secure access, if thread is non-secure, it is write only.
    
ps7_dmac0_s_DBGINST1_instruction_byte2:
  addr: 0xf8003d0c
  mask: 0xff
  name: instruction_byte2
  description: |
    instruction byte 2
    This bit-field has the following special access attributes:
     swo: During secure access, it is  write only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnswo: During non-secure access, if thread is non-secure, it is write only.
    
ps7_dmac0_s_CR0_reserved:
  addr: 0xf8003e00
  mask: 0xffc00000
  name: reserved
  description: |
    read undefined
ps7_dmac0_s_CR0_num_events:
  addr: 0xf8003e00
  mask: 0x3e0000
  name: num_events
  description: |
    The DMA Controller supports 16 events. This register always reads 01111 (15d).
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CR0_num_periph_req:
  addr: 0xf8003e00
  mask: 0x1f000
  name: num_periph_req
  description: |
    The DMA Controller supports four peripheral interfaces. This register always reads 00011 (3d).
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CR0_reserved_1:
  addr: 0xf8003e00
  mask: 0xf80
  name: reserved_1
  description: |
    read undefined
ps7_dmac0_s_CR0_num_chnls:
  addr: 0xf8003e00
  mask: 0x70
  name: num_chnls
  description: |
    The DMA Controller supports eight channel threads. This register always reads 00111 (7d).
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CR0_reserved_2:
  addr: 0xf8003e00
  mask: 0x8
  name: reserved_2
  description: |
    read undefined
ps7_dmac0_s_CR0_mgr_ns_at_rst:
  addr: 0xf8003e00
  mask: 0x4
  name: mgr_ns_at_rst
  description: |
    Indicates the status of the slcr.TZ_DMA_NS bit when the DMAC exits from reset:
    0: TZ_DMA_NS was Low
    1: TZ_DMA_NS was HIgh
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CR0_boot_en:
  addr: 0xf8003e00
  mask: 0x2
  name: boot_en
  description: |
    Indicates the status of the boot_from_pc signal when the DMAC exited from reset:
    0 = boot_from_pc was LOW
    1 = boot_from_pc was HIGH.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CR0_periph_req:
  addr: 0xf8003e00
  mask: 0x1
  name: periph_req
  description: |
    The DMAC provides the peripheral request interfaces.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CR1_reserved:
  addr: 0xf8003e04
  mask: 0xffffff00
  name: reserved
  description: |
    read undefined
ps7_dmac0_s_CR1_num_icache_lines:
  addr: 0xf8003e04
  mask: 0xf0
  name: num_icache_lines
  description: |
    The DMAC iCache has eight lines.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CR1_reserved_1:
  addr: 0xf8003e04
  mask: 0x8
  name: reserved_1
  description: |
    read undefined
ps7_dmac0_s_CR1_icache_len:
  addr: 0xf8003e04
  mask: 0x7
  name: icache_len
  description: |
    The length of an i-cache line is sixteen bytes.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CR2_boot_addr:
  addr: 0xf8003e08
  mask: 0xffffffff
  name: boot_addr
  description: |
    The boot address for the DMAC manager is hardwired to 0. This is a system memory address.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CR3_INS:
  addr: 0xf8003e0c
  mask: 0xffffffff
  name: INS
  description: |
    The value of the slcr.TZ_DMA_IRQ_NS bits (boot_irq_ns signals) when the DMAC reset deasserts.
    Reserved
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CR4_PNS:
  addr: 0xf8003e10
  mask: 0xffffffff
  name: PNS
  description: |
    Reflects the slcr.TZ_DMA_PERIPH_NS register values for the four peripheral request interfaces when the DMAC is unreset.
    0: Secure state
    1: Non-secure state
    Reserved
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CRD_reserved:
  addr: 0xf8003e14
  mask: 0xc0000000
  name: reserved
  description: |
    read undefined
ps7_dmac0_s_CRD_data_buffer_dep:
  addr: 0xf8003e14
  mask: 0x3ff00000
  name: data_buffer_dep
  description: |
    The MFIFO dept is 128 double words (64-bit).
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CRD_rd_q_dep:
  addr: 0xf8003e14
  mask: 0xf0000
  name: rd_q_dep
  description: |
    The depth of the Read Queue is hardwired at 16 lines.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CRD_reserved_1:
  addr: 0xf8003e14
  mask: 0x8000
  name: reserved_1
  description: |
    read undefined
ps7_dmac0_s_CRD_rd_cap:
  addr: 0xf8003e14
  mask: 0x7000
  name: rd_cap
  description: |
    The number of possible outstanding Read Transactions is hardwired at 8.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CRD_wr_q_dep:
  addr: 0xf8003e14
  mask: 0xf00
  name: wr_q_dep
  description: |
    The depth of the Write Queue is hardwired at 16 lines.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CRD_reserved_2:
  addr: 0xf8003e14
  mask: 0x80
  name: reserved_2
  description: |
    read undefined
ps7_dmac0_s_CRD_wr_cap:
  addr: 0xf8003e14
  mask: 0x70
  name: wr_cap
  description: |
    The number of outstanding Write Transactions is is hardwired at 8.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_CRD_reserved_3:
  addr: 0xf8003e14
  mask: 0x8
  name: reserved_3
  description: |
    read undefined
ps7_dmac0_s_CRD_data_width:
  addr: 0xf8003e14
  mask: 0x7
  name: data_width
  description: |
    The data width of the AXI master interface 64 bits.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_WD_reserved:
  addr: 0xf8003e80
  mask: 0xfffffffe
  name: reserved
  description: |
    read undefined
ps7_dmac0_s_WD_wd_irq_only:
  addr: 0xf8003e80
  mask: 0x1
  name: wd_irq_only
  description: |
    When a lock-up is detected, the DMAC aborts the DMA channel thread and asserts the Abort interrupt.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_periph_id_0_reserved:
  addr: 0xf8003fe0
  mask: 0xffffff00
  name: reserved
  description: |
    read undefined
ps7_dmac0_s_periph_id_0_part_number_0:
  addr: 0xf8003fe0
  mask: 0xff
  name: part_number_0
  description: |
    returns 0x30
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_periph_id_1_reserved:
  addr: 0xf8003fe4
  mask: 0xffffff00
  name: reserved
  description: |
    read undefined
ps7_dmac0_s_periph_id_1_designer_0:
  addr: 0xf8003fe4
  mask: 0xf0
  name: designer_0
  description: |
    returns 0x1
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_periph_id_1_part_number_1:
  addr: 0xf8003fe4
  mask: 0xf
  name: part_number_1
  description: |
    returns 0x3
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_periph_id_2_reserved:
  addr: 0xf8003fe8
  mask: 0xffffff00
  name: reserved
  description: |
    read undefined
ps7_dmac0_s_periph_id_2_revision:
  addr: 0xf8003fe8
  mask: 0xf0
  name: revision
  description: |
    DMAC IP revision is r1p1.
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_periph_id_2_designer_1:
  addr: 0xf8003fe8
  mask: 0xf
  name: designer_1
  description: |
    returns 0x4
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_periph_id_3_reserved:
  addr: 0xf8003fec
  mask: 0xfffffffe
  name: reserved
  description: |
    read undefined
ps7_dmac0_s_periph_id_3_integration_cfg:
  addr: 0xf8003fec
  mask: 0x1
  name: integration_cfg
  description: |
    The DMAC does not contain integration test logic
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_pcell_id_0_reserved:
  addr: 0xf8003ff0
  mask: 0xffffff00
  name: reserved
  description: |
    read undefined
ps7_dmac0_s_pcell_id_0_pcell_id_0:
  addr: 0xf8003ff0
  mask: 0xff
  name: pcell_id_0
  description: |
    returnx 0x0D
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_pcell_id_1_reserved:
  addr: 0xf8003ff4
  mask: 0xffffff00
  name: reserved
  description: |
    read undefined
ps7_dmac0_s_pcell_id_1_pcell_id_1:
  addr: 0xf8003ff4
  mask: 0xff
  name: pcell_id_1
  description: |
    returns 0xF0
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_pcell_id_2_reserved:
  addr: 0xf8003ff8
  mask: 0xffffff00
  name: reserved
  description: |
    read undefined
ps7_dmac0_s_pcell_id_2_pcell_id_2:
  addr: 0xf8003ff8
  mask: 0xff
  name: pcell_id_2
  description: |
    returns 0x05
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_dmac0_s_pcell_id_3_reserved:
  addr: 0xf8003ffc
  mask: 0xffffff00
  name: reserved
  description: |
    read undefined
ps7_dmac0_s_pcell_id_3_pcell_id_3:
  addr: 0xf8003ffc
  mask: 0xff
  name: pcell_id_3
  description: |
    returns 0xB1
    This bit-field has the following special access attributes:
     sro: During secure access, it is read only.
     nssraz: During non-secure access, if thread is secure, it is read as zero.
     nsnsro: During non-secure access, if thread is non-secure, it is read only.
    
ps7_gpv_trustzone_security_gp0_axi_gp0_axi:
  addr: 0xf890001c
  mask: 0x1
  name: gp0_axi
  description: |
    Controls the transactions from M_AXI_GP0 to PL:
    0 - Always secure
    1 - Always non-secure.
ps7_gpv_trustzone_security_gp1_axi_gp1_axi:
  addr: 0xf8900020
  mask: 0x1
  name: gp1_axi
  description: |
    Controls the transactions from M_AXI_GP1 to PL:
    0 - Always secure
    1 - Always non-secure.
ps7_ttc1_Clock_Control_1_Ex_E:
  addr: 0xf8002000
  mask: 0x40
  name: Ex_E
  description: |
    External Clock Edge: when this bit is set and the extend clock is selected, the counter clocks on the negative going edge of the external clock input.
ps7_ttc1_Clock_Control_1_C_Src:
  addr: 0xf8002000
  mask: 0x20
  name: C_Src
  description: |
    Clock Source: when this bit is set the counter uses the external clock input, ext_clk; the default clock source is pclk.
ps7_ttc1_Clock_Control_1_PS_V:
  addr: 0xf8002000
  mask: 0x1e
  name: PS_V
  description: |
    Prescale value (N): if prescale is enabled, the count rate is divided by 2^(N+1)
ps7_ttc1_Clock_Control_1_PS_En:
  addr: 0xf8002000
  mask: 0x1
  name: PS_En
  description: |
    Prescale enable: when this bit is set the counter, clock source is prescaled; the default clock source is that defined by C_Src.the default
ps7_ttc1_Clock_Control_2_Ex_E:
  addr: 0xf8002004
  mask: 0x40
  name: Ex_E
  description: |
    External Clock Edge: when this bit is set and the extend clock is selected, the counter clocks on the negative going edge of the external clock input.
ps7_ttc1_Clock_Control_2_C_Src:
  addr: 0xf8002004
  mask: 0x20
  name: C_Src
  description: |
    Clock Source: when this bit is set the counter uses the external clock input, ext_clk; the default clock source is pclk.
ps7_ttc1_Clock_Control_2_PS_V:
  addr: 0xf8002004
  mask: 0x1e
  name: PS_V
  description: |
    Prescale value (N): if prescale is enabled, the count rate is divided by 2N+1 (divided by 2 to 65536)
ps7_ttc1_Clock_Control_2_PS_En:
  addr: 0xf8002004
  mask: 0x1
  name: PS_En
  description: |
    Prescale enable: when this bit is set the counter, clock source is prescaled; the default clock source is that defined by C_Src.the default
ps7_ttc1_Clock_Control_3_Ex_E:
  addr: 0xf8002008
  mask: 0x40
  name: Ex_E
  description: |
    External Clock Edge: when this bit is set and the extend clock is selected, the counter clocks on the negative going edge of the external clock input.
ps7_ttc1_Clock_Control_3_C_Src:
  addr: 0xf8002008
  mask: 0x20
  name: C_Src
  description: |
    Clock Source: when this bit is set the counter uses the external clock input, ext_clk; the default clock source is pclk.
ps7_ttc1_Clock_Control_3_PS_V:
  addr: 0xf8002008
  mask: 0x1e
  name: PS_V
  description: |
    Prescale value (N): if prescale is enabled, the count rate is divided by 2N+1 (divided by 2 to 65536)
ps7_ttc1_Clock_Control_3_PS_En:
  addr: 0xf8002008
  mask: 0x1
  name: PS_En
  description: |
    Prescale enable: when this bit is set the counter, clock source is prescaled; the default clock source is that defined by C_Src.the default
ps7_ttc1_Counter_Control_1_Wave_pol:
  addr: 0xf800200c
  mask: 0x40
  name: Wave_pol
  description: |
    Waveform polarity: When this bit is high, the waveform output goes from high to low on Match_1 interrupt and returns high on overflow or interval interrupt; when low, the waveform goes from low to high on Match_1 interrupt and returns low on overflow or interval interrupt.
ps7_ttc1_Counter_Control_1_Wave_en:
  addr: 0xf800200c
  mask: 0x20
  name: Wave_en
  description: |
    Output waveform enable, active low.
ps7_ttc1_Counter_Control_1_RST:
  addr: 0xf800200c
  mask: 0x10
  name: RST
  description: |
    Setting this bit high resets the counter value and restarts counting; the RST bit is automatically cleared on restart.
ps7_ttc1_Counter_Control_1_Match:
  addr: 0xf800200c
  mask: 0x8
  name: Match
  description: |
    Register Match mode: when Match is set, an interrupt is generated when the count value matches one of the three match registers and the corresponding bit is set in the Interrupt Enable register.
ps7_ttc1_Counter_Control_1_DEC:
  addr: 0xf800200c
  mask: 0x4
  name: DEC
  description: |
    Decrement: when this bit is high the counter counts down.
ps7_ttc1_Counter_Control_1_INT:
  addr: 0xf800200c
  mask: 0x2
  name: INT
  description: |
    When this bit is high, the timer is in Interval Mode, and the counter generates interrupts at regular intervals; when low, the timer is in overflow mode.
ps7_ttc1_Counter_Control_1_DIS:
  addr: 0xf800200c
  mask: 0x1
  name: DIS
  description: |
    Disable counter: when this bit is high, the counter is stopped, holding its last value until reset, restarted or enabled again.
ps7_ttc1_Counter_Control_2_Wave_pol:
  addr: 0xf8002010
  mask: 0x40
  name: Wave_pol
  description: |
    Waveform polarity: When this bit is high, the waveform output goes from high to low on Match_1 interrupt and returns high on overflow or interval interrupt; when low, the waveform goes from low to high on Match_1 interrupt and returns low on overflow or interval interrupt.
ps7_ttc1_Counter_Control_2_Wave_en:
  addr: 0xf8002010
  mask: 0x20
  name: Wave_en
  description: |
    Output waveform enable, active low.
ps7_ttc1_Counter_Control_2_RST:
  addr: 0xf8002010
  mask: 0x10
  name: RST
  description: |
    Setting this bit high resets the counter value and restarts counting; the RST bit is automatically cleared on restart.
ps7_ttc1_Counter_Control_2_Match:
  addr: 0xf8002010
  mask: 0x8
  name: Match
  description: |
    Register Match mode: when Match is set, an interrupt is generated when the count value matches one of the three match registers and the corresponding bit is set in the Interrupt Enable register.
ps7_ttc1_Counter_Control_2_DEC:
  addr: 0xf8002010
  mask: 0x4
  name: DEC
  description: |
    Decrement: when this bit is high the counter counts down.
ps7_ttc1_Counter_Control_2_INT:
  addr: 0xf8002010
  mask: 0x2
  name: INT
  description: |
    When this bit is high, the timer is in Interval Mode, and the counter generates interrupts at regular intervals; when low, the timer is in overflow mode.
ps7_ttc1_Counter_Control_2_DIS:
  addr: 0xf8002010
  mask: 0x1
  name: DIS
  description: |
    Disable counter: when this bit is high, the counter is stopped, holding its last value until reset, restarted or enabled again.
ps7_ttc1_Counter_Control_3_Wave_pol:
  addr: 0xf8002014
  mask: 0x40
  name: Wave_pol
  description: |
    Waveform polarity: When this bit is high, the waveform output goes from high to low on Match_1 interrupt and returns high on overflow or interval interrupt; when low, the waveform goes from low to high on Match_1 interrupt and returns low on overflow or interval interrupt.
ps7_ttc1_Counter_Control_3_Wave_en:
  addr: 0xf8002014
  mask: 0x20
  name: Wave_en
  description: |
    Output waveform enable, active low.
ps7_ttc1_Counter_Control_3_RST:
  addr: 0xf8002014
  mask: 0x10
  name: RST
  description: |
    Setting this bit high resets the counter value and restarts counting; the RST bit is automatically cleared on restart.
ps7_ttc1_Counter_Control_3_Match:
  addr: 0xf8002014
  mask: 0x8
  name: Match
  description: |
    Register Match mode: when Match is set, an interrupt is generated when the count value matches one of the three match registers and the corresponding bit is set in the Interrupt Enable register.
ps7_ttc1_Counter_Control_3_DEC:
  addr: 0xf8002014
  mask: 0x4
  name: DEC
  description: |
    Decrement: when this bit is high the counter counts down.
ps7_ttc1_Counter_Control_3_INT:
  addr: 0xf8002014
  mask: 0x2
  name: INT
  description: |
    When this bit is high, the timer is in Interval Mode, and the counter generates interrupts at regular intervals; when low, the timer is in overflow mode.
ps7_ttc1_Counter_Control_3_DIS:
  addr: 0xf8002014
  mask: 0x1
  name: DIS
  description: |
    Disable counter: when this bit is high, the counter is stopped, holding its last value until reset, restarted or enabled again.
ps7_ttc1_Counter_Value_1_Value:
  addr: 0xf8002018
  mask: 0xffff
  name: Value
  description: |
    At any time, a Timer Counter's count value can be read from its Counter Value Register.
ps7_ttc1_Counter_Value_2_Value:
  addr: 0xf800201c
  mask: 0xffff
  name: Value
  description: |
    At any time, a Timer Counter's count value can be read from its Counter Value Register.
ps7_ttc1_Counter_Value_3_Value:
  addr: 0xf8002020
  mask: 0xffff
  name: Value
  description: |
    At any time, a Timer Counter's count value can be read from its Counter Value Register.
ps7_ttc1_Interval_Counter_1_Interval:
  addr: 0xf8002024
  mask: 0xffff
  name: Interval
  description: |
    If interval is enabled, this is the maximum value that the counter will count up to or down from.
ps7_ttc1_Interval_Counter_2_Interval:
  addr: 0xf8002028
  mask: 0xffff
  name: Interval
  description: |
    If interval is enabled, this is the maximum value that the counter will count up to or down from.
ps7_ttc1_Interval_Counter_3_Interval:
  addr: 0xf800202c
  mask: 0xffff
  name: Interval
  description: |
    If interval is enabled, this is the maximum value that the counter will count up to or down from.
ps7_ttc1_Match_1_Counter_1_Match:
  addr: 0xf8002030
  mask: 0xffff
  name: Match
  description: |
    When a counter has the same value as is stored in one of its match registers and match mode is enabled, a match interrupt is generated. Each counter has three match registers.
ps7_ttc1_Match_1_Counter_2_Match:
  addr: 0xf8002034
  mask: 0xffff
  name: Match
  description: |
    When a counter has the same value as is stored in one of its match registers and match mode is enabled, a match interrupt is generated. Each counter has three match registers.
ps7_ttc1_Match_1_Counter_3_Match:
  addr: 0xf8002038
  mask: 0xffff
  name: Match
  description: |
    When a counter has the same value as is stored in one of its match registers and match mode is enabled, a match interrupt is generated. Each counter has three match registers.
ps7_ttc1_Match_2_Counter_1_Match:
  addr: 0xf800203c
  mask: 0xffff
  name: Match
  description: |
    When a counter has the same value as is stored in one of its match registers and match mode is enabled, a match interrupt is generated. Each counter has three match registers.
ps7_ttc1_Match_2_Counter_2_Match:
  addr: 0xf8002040
  mask: 0xffff
  name: Match
  description: |
    When a counter has the same value as is stored in one of its match registers and match mode is enabled, a match interrupt is generated. Each counter has three match registers.
ps7_ttc1_Match_2_Counter_3_Match:
  addr: 0xf8002044
  mask: 0xffff
  name: Match
  description: |
    When a counter has the same value as is stored in one of its match registers and match mode is enabled, a match interrupt is generated. Each counter has three match registers.
ps7_ttc1_Match_3_Counter_1_Match:
  addr: 0xf8002048
  mask: 0xffff
  name: Match
  description: |
    When a counter has the same value as is stored in one of its match registers and match mode is enabled, a match interrupt is generated. Each counter has three match registers.
ps7_ttc1_Match_3_Counter_2_Match:
  addr: 0xf800204c
  mask: 0xffff
  name: Match
  description: |
    When a counter has the same value as is stored in one of its match registers and match mode is enabled, a match interrupt is generated. Each counter has three match registers.
ps7_ttc1_Match_3_Counter_3_Match:
  addr: 0xf8002050
  mask: 0xffff
  name: Match
  description: |
    When a counter has the same value as is stored in one of its match registers and match mode is enabled, a match interrupt is generated. Each counter has three match registers.
ps7_ttc1_Interrupt_Register_1_Ev:
  addr: 0xf8002054
  mask: 0x20
  name: Ev
  description: |
    Event timer overflow interrupt
ps7_ttc1_Interrupt_Register_1_Ov:
  addr: 0xf8002054
  mask: 0x10
  name: Ov
  description: |
    Counter overflow
ps7_ttc1_Interrupt_Register_1_M3:
  addr: 0xf8002054
  mask: 0x8
  name: M3
  description: |
    Match 3 interrupt
ps7_ttc1_Interrupt_Register_1_M2:
  addr: 0xf8002054
  mask: 0x4
  name: M2
  description: |
    Match 2 interrupt
ps7_ttc1_Interrupt_Register_1_M1:
  addr: 0xf8002054
  mask: 0x2
  name: M1
  description: |
    Match 1 interrupt
ps7_ttc1_Interrupt_Register_1_Iv:
  addr: 0xf8002054
  mask: 0x1
  name: Iv
  description: |
    Interval interrupt
ps7_ttc1_Interrupt_Register_2_Ev:
  addr: 0xf8002058
  mask: 0x20
  name: Ev
  description: |
    Event timer overflow interrupt
ps7_ttc1_Interrupt_Register_2_Ov:
  addr: 0xf8002058
  mask: 0x10
  name: Ov
  description: |
    Counter overflow
ps7_ttc1_Interrupt_Register_2_M3:
  addr: 0xf8002058
  mask: 0x8
  name: M3
  description: |
    Match 3 interrupt
ps7_ttc1_Interrupt_Register_2_M2:
  addr: 0xf8002058
  mask: 0x4
  name: M2
  description: |
    Match 2 interrupt
ps7_ttc1_Interrupt_Register_2_M1:
  addr: 0xf8002058
  mask: 0x2
  name: M1
  description: |
    Match 1 interrupt
ps7_ttc1_Interrupt_Register_2_Iv:
  addr: 0xf8002058
  mask: 0x1
  name: Iv
  description: |
    Interval interrupt
ps7_ttc1_Interrupt_Register_3_Ev:
  addr: 0xf800205c
  mask: 0x20
  name: Ev
  description: |
    Event timer overflow interrupt
ps7_ttc1_Interrupt_Register_3_Ov:
  addr: 0xf800205c
  mask: 0x10
  name: Ov
  description: |
    Counter overflow
ps7_ttc1_Interrupt_Register_3_M3:
  addr: 0xf800205c
  mask: 0x8
  name: M3
  description: |
    Match 3 interrupt
ps7_ttc1_Interrupt_Register_3_M2:
  addr: 0xf800205c
  mask: 0x4
  name: M2
  description: |
    Match 2 interrupt
ps7_ttc1_Interrupt_Register_3_M1:
  addr: 0xf800205c
  mask: 0x2
  name: M1
  description: |
    Match 1 interrupt
ps7_ttc1_Interrupt_Register_3_Iv:
  addr: 0xf800205c
  mask: 0x1
  name: Iv
  description: |
    Interval interrupt
ps7_ttc1_Interrupt_Enable_1_IEN:
  addr: 0xf8002060
  mask: 0x3f
  name: IEN
  description: |
    Enables for bits 05:00 in Interrupt Register: corresponding bits must be set to enable the
    interrupt.
ps7_ttc1_Interrupt_Enable_2_IEN:
  addr: 0xf8002064
  mask: 0x3f
  name: IEN
  description: |
    Enables for bits 05:00 in Interrupt Register: corresponding bits must be set to enable the interrupt.
ps7_ttc1_Interrupt_Enable_3_IEN:
  addr: 0xf8002068
  mask: 0x3f
  name: IEN
  description: |
    Enables for bits 05:00 in Interrupt Register: corresponding bits must be set to enable the interrupt.
ps7_ttc1_Event_Control_Timer_1_E_Ov:
  addr: 0xf800206c
  mask: 0x4
  name: E_Ov
  description: |
    When this bit is low, the event timer is disabled and set to zero when an Event Timer Register overflow occurs; when set high, the timer continues counting on overflow.
ps7_ttc1_Event_Control_Timer_1_E_Lo:
  addr: 0xf800206c
  mask: 0x2
  name: E_Lo
  description: |
    When this bit is high, the timer counts pclk cycles during the low level duration of ext_clk; when low, the event timer counts the high level duration of ext_clk.
ps7_ttc1_Event_Control_Timer_1_E_En:
  addr: 0xf800206c
  mask: 0x1
  name: E_En
  description: |
    Enable timer: when this bit is high, the event timer is enabled.
ps7_ttc1_Event_Control_Timer_2_E_Ov:
  addr: 0xf8002070
  mask: 0x4
  name: E_Ov
  description: |
    When this bit is low, the event timer is disabled and set to zero when an Event Timer Register overflow occurs; when set high, the timer continues counting on overflow.
ps7_ttc1_Event_Control_Timer_2_E_Lo:
  addr: 0xf8002070
  mask: 0x2
  name: E_Lo
  description: |
    When this bit is high, the timer counts pclk cycles during the low level duration of ext_clk; when low, the event timer counts the high level duration of ext_clk.
ps7_ttc1_Event_Control_Timer_2_E_En:
  addr: 0xf8002070
  mask: 0x1
  name: E_En
  description: |
    Enable timer: when this bit is high, the event timer is enabled.
ps7_ttc1_Event_Control_Timer_3_E_Ov:
  addr: 0xf8002074
  mask: 0x4
  name: E_Ov
  description: |
    When this bit is low, the event timer is disabled and set to zero when an Event Timer Register overflow occurs; when set high, the timer continues counting on overflow.
ps7_ttc1_Event_Control_Timer_3_E_Lo:
  addr: 0xf8002074
  mask: 0x2
  name: E_Lo
  description: |
    When this bit is high, the timer counts pclk cycles during the low level duration of ext_clk; when low, the event timer counts the high level duration of ext_clk.
ps7_ttc1_Event_Control_Timer_3_E_En:
  addr: 0xf8002074
  mask: 0x1
  name: E_En
  description: |
    Enable timer: when this bit is high, the event timer is enabled.
ps7_ttc1_Event_Register_1_Event:
  addr: 0xf8002078
  mask: 0xffff
  name: Event
  description: |
    This register stores the result of the pclk count during the ext_clk high or low pulse.
ps7_ttc1_Event_Register_2_Event:
  addr: 0xf800207c
  mask: 0xffff
  name: Event
  description: |
    This register stores the result of the pclk count during the ext_clk high or low pulse.
ps7_ttc1_Event_Register_3_Event:
  addr: 0xf8002080
  mask: 0xffff
  name: Event
  description: |
    This register stores the result of the pclk count during the ext_clk high or low pulse.
ps7_ttc0_Clock_Control_1_Ex_E:
  addr: 0xf8001000
  mask: 0x40
  name: Ex_E
  description: |
    External Clock Edge: when this bit is set and the extend clock is selected, the counter clocks on the negative going edge of the external clock input.
ps7_ttc0_Clock_Control_1_C_Src:
  addr: 0xf8001000
  mask: 0x20
  name: C_Src
  description: |
    Clock Source: when this bit is set the counter uses the external clock input, ext_clk; the default clock source is pclk.
ps7_ttc0_Clock_Control_1_PS_V:
  addr: 0xf8001000
  mask: 0x1e
  name: PS_V
  description: |
    Prescale value (N): if prescale is enabled, the count rate is divided by 2^(N+1)
ps7_ttc0_Clock_Control_1_PS_En:
  addr: 0xf8001000
  mask: 0x1
  name: PS_En
  description: |
    Prescale enable: when this bit is set the counter, clock source is prescaled; the default clock source is that defined by C_Src.the default
ps7_ttc0_Clock_Control_2_Ex_E:
  addr: 0xf8001004
  mask: 0x40
  name: Ex_E
  description: |
    External Clock Edge: when this bit is set and the extend clock is selected, the counter clocks on the negative going edge of the external clock input.
ps7_ttc0_Clock_Control_2_C_Src:
  addr: 0xf8001004
  mask: 0x20
  name: C_Src
  description: |
    Clock Source: when this bit is set the counter uses the external clock input, ext_clk; the default clock source is pclk.
ps7_ttc0_Clock_Control_2_PS_V:
  addr: 0xf8001004
  mask: 0x1e
  name: PS_V
  description: |
    Prescale value (N): if prescale is enabled, the count rate is divided by 2N+1 (divided by 2 to 65536)
ps7_ttc0_Clock_Control_2_PS_En:
  addr: 0xf8001004
  mask: 0x1
  name: PS_En
  description: |
    Prescale enable: when this bit is set the counter, clock source is prescaled; the default clock source is that defined by C_Src.the default
ps7_ttc0_Clock_Control_3_Ex_E:
  addr: 0xf8001008
  mask: 0x40
  name: Ex_E
  description: |
    External Clock Edge: when this bit is set and the extend clock is selected, the counter clocks on the negative going edge of the external clock input.
ps7_ttc0_Clock_Control_3_C_Src:
  addr: 0xf8001008
  mask: 0x20
  name: C_Src
  description: |
    Clock Source: when this bit is set the counter uses the external clock input, ext_clk; the default clock source is pclk.
ps7_ttc0_Clock_Control_3_PS_V:
  addr: 0xf8001008
  mask: 0x1e
  name: PS_V
  description: |
    Prescale value (N): if prescale is enabled, the count rate is divided by 2N+1 (divided by 2 to 65536)
ps7_ttc0_Clock_Control_3_PS_En:
  addr: 0xf8001008
  mask: 0x1
  name: PS_En
  description: |
    Prescale enable: when this bit is set the counter, clock source is prescaled; the default clock source is that defined by C_Src.the default
ps7_ttc0_Counter_Control_1_Wave_pol:
  addr: 0xf800100c
  mask: 0x40
  name: Wave_pol
  description: |
    Waveform polarity: When this bit is high, the waveform output goes from high to low on Match_1 interrupt and returns high on overflow or interval interrupt; when low, the waveform goes from low to high on Match_1 interrupt and returns low on overflow or interval interrupt.
ps7_ttc0_Counter_Control_1_Wave_en:
  addr: 0xf800100c
  mask: 0x20
  name: Wave_en
  description: |
    Output waveform enable, active low.
ps7_ttc0_Counter_Control_1_RST:
  addr: 0xf800100c
  mask: 0x10
  name: RST
  description: |
    Setting this bit high resets the counter value and restarts counting; the RST bit is automatically cleared on restart.
ps7_ttc0_Counter_Control_1_Match:
  addr: 0xf800100c
  mask: 0x8
  name: Match
  description: |
    Register Match mode: when Match is set, an interrupt is generated when the count value matches one of the three match registers and the corresponding bit is set in the Interrupt Enable register.
ps7_ttc0_Counter_Control_1_DEC:
  addr: 0xf800100c
  mask: 0x4
  name: DEC
  description: |
    Decrement: when this bit is high the counter counts down.
ps7_ttc0_Counter_Control_1_INT:
  addr: 0xf800100c
  mask: 0x2
  name: INT
  description: |
    When this bit is high, the timer is in Interval Mode, and the counter generates interrupts at regular intervals; when low, the timer is in overflow mode.
ps7_ttc0_Counter_Control_1_DIS:
  addr: 0xf800100c
  mask: 0x1
  name: DIS
  description: |
    Disable counter: when this bit is high, the counter is stopped, holding its last value until reset, restarted or enabled again.
ps7_ttc0_Counter_Control_2_Wave_pol:
  addr: 0xf8001010
  mask: 0x40
  name: Wave_pol
  description: |
    Waveform polarity: When this bit is high, the waveform output goes from high to low on Match_1 interrupt and returns high on overflow or interval interrupt; when low, the waveform goes from low to high on Match_1 interrupt and returns low on overflow or interval interrupt.
ps7_ttc0_Counter_Control_2_Wave_en:
  addr: 0xf8001010
  mask: 0x20
  name: Wave_en
  description: |
    Output waveform enable, active low.
ps7_ttc0_Counter_Control_2_RST:
  addr: 0xf8001010
  mask: 0x10
  name: RST
  description: |
    Setting this bit high resets the counter value and restarts counting; the RST bit is automatically cleared on restart.
ps7_ttc0_Counter_Control_2_Match:
  addr: 0xf8001010
  mask: 0x8
  name: Match
  description: |
    Register Match mode: when Match is set, an interrupt is generated when the count value matches one of the three match registers and the corresponding bit is set in the Interrupt Enable register.
ps7_ttc0_Counter_Control_2_DEC:
  addr: 0xf8001010
  mask: 0x4
  name: DEC
  description: |
    Decrement: when this bit is high the counter counts down.
ps7_ttc0_Counter_Control_2_INT:
  addr: 0xf8001010
  mask: 0x2
  name: INT
  description: |
    When this bit is high, the timer is in Interval Mode, and the counter generates interrupts at regular intervals; when low, the timer is in overflow mode.
ps7_ttc0_Counter_Control_2_DIS:
  addr: 0xf8001010
  mask: 0x1
  name: DIS
  description: |
    Disable counter: when this bit is high, the counter is stopped, holding its last value until reset, restarted or enabled again.
ps7_ttc0_Counter_Control_3_Wave_pol:
  addr: 0xf8001014
  mask: 0x40
  name: Wave_pol
  description: |
    Waveform polarity: When this bit is high, the waveform output goes from high to low on Match_1 interrupt and returns high on overflow or interval interrupt; when low, the waveform goes from low to high on Match_1 interrupt and returns low on overflow or interval interrupt.
ps7_ttc0_Counter_Control_3_Wave_en:
  addr: 0xf8001014
  mask: 0x20
  name: Wave_en
  description: |
    Output waveform enable, active low.
ps7_ttc0_Counter_Control_3_RST:
  addr: 0xf8001014
  mask: 0x10
  name: RST
  description: |
    Setting this bit high resets the counter value and restarts counting; the RST bit is automatically cleared on restart.
ps7_ttc0_Counter_Control_3_Match:
  addr: 0xf8001014
  mask: 0x8
  name: Match
  description: |
    Register Match mode: when Match is set, an interrupt is generated when the count value matches one of the three match registers and the corresponding bit is set in the Interrupt Enable register.
ps7_ttc0_Counter_Control_3_DEC:
  addr: 0xf8001014
  mask: 0x4
  name: DEC
  description: |
    Decrement: when this bit is high the counter counts down.
ps7_ttc0_Counter_Control_3_INT:
  addr: 0xf8001014
  mask: 0x2
  name: INT
  description: |
    When this bit is high, the timer is in Interval Mode, and the counter generates interrupts at regular intervals; when low, the timer is in overflow mode.
ps7_ttc0_Counter_Control_3_DIS:
  addr: 0xf8001014
  mask: 0x1
  name: DIS
  description: |
    Disable counter: when this bit is high, the counter is stopped, holding its last value until reset, restarted or enabled again.
ps7_ttc0_Counter_Value_1_Value:
  addr: 0xf8001018
  mask: 0xffff
  name: Value
  description: |
    At any time, a Timer Counter's count value can be read from its Counter Value Register.
ps7_ttc0_Counter_Value_2_Value:
  addr: 0xf800101c
  mask: 0xffff
  name: Value
  description: |
    At any time, a Timer Counter's count value can be read from its Counter Value Register.
ps7_ttc0_Counter_Value_3_Value:
  addr: 0xf8001020
  mask: 0xffff
  name: Value
  description: |
    At any time, a Timer Counter's count value can be read from its Counter Value Register.
ps7_ttc0_Interval_Counter_1_Interval:
  addr: 0xf8001024
  mask: 0xffff
  name: Interval
  description: |
    If interval is enabled, this is the maximum value that the counter will count up to or down from.
ps7_ttc0_Interval_Counter_2_Interval:
  addr: 0xf8001028
  mask: 0xffff
  name: Interval
  description: |
    If interval is enabled, this is the maximum value that the counter will count up to or down from.
ps7_ttc0_Interval_Counter_3_Interval:
  addr: 0xf800102c
  mask: 0xffff
  name: Interval
  description: |
    If interval is enabled, this is the maximum value that the counter will count up to or down from.
ps7_ttc0_Match_1_Counter_1_Match:
  addr: 0xf8001030
  mask: 0xffff
  name: Match
  description: |
    When a counter has the same value as is stored in one of its match registers and match mode is enabled, a match interrupt is generated. Each counter has three match registers.
ps7_ttc0_Match_1_Counter_2_Match:
  addr: 0xf8001034
  mask: 0xffff
  name: Match
  description: |
    When a counter has the same value as is stored in one of its match registers and match mode is enabled, a match interrupt is generated. Each counter has three match registers.
ps7_ttc0_Match_1_Counter_3_Match:
  addr: 0xf8001038
  mask: 0xffff
  name: Match
  description: |
    When a counter has the same value as is stored in one of its match registers and match mode is enabled, a match interrupt is generated. Each counter has three match registers.
ps7_ttc0_Match_2_Counter_1_Match:
  addr: 0xf800103c
  mask: 0xffff
  name: Match
  description: |
    When a counter has the same value as is stored in one of its match registers and match mode is enabled, a match interrupt is generated. Each counter has three match registers.
ps7_ttc0_Match_2_Counter_2_Match:
  addr: 0xf8001040
  mask: 0xffff
  name: Match
  description: |
    When a counter has the same value as is stored in one of its match registers and match mode is enabled, a match interrupt is generated. Each counter has three match registers.
ps7_ttc0_Match_2_Counter_3_Match:
  addr: 0xf8001044
  mask: 0xffff
  name: Match
  description: |
    When a counter has the same value as is stored in one of its match registers and match mode is enabled, a match interrupt is generated. Each counter has three match registers.
ps7_ttc0_Match_3_Counter_1_Match:
  addr: 0xf8001048
  mask: 0xffff
  name: Match
  description: |
    When a counter has the same value as is stored in one of its match registers and match mode is enabled, a match interrupt is generated. Each counter has three match registers.
ps7_ttc0_Match_3_Counter_2_Match:
  addr: 0xf800104c
  mask: 0xffff
  name: Match
  description: |
    When a counter has the same value as is stored in one of its match registers and match mode is enabled, a match interrupt is generated. Each counter has three match registers.
ps7_ttc0_Match_3_Counter_3_Match:
  addr: 0xf8001050
  mask: 0xffff
  name: Match
  description: |
    When a counter has the same value as is stored in one of its match registers and match mode is enabled, a match interrupt is generated. Each counter has three match registers.
ps7_ttc0_Interrupt_Register_1_Ev:
  addr: 0xf8001054
  mask: 0x20
  name: Ev
  description: |
    Event timer overflow interrupt
ps7_ttc0_Interrupt_Register_1_Ov:
  addr: 0xf8001054
  mask: 0x10
  name: Ov
  description: |
    Counter overflow
ps7_ttc0_Interrupt_Register_1_M3:
  addr: 0xf8001054
  mask: 0x8
  name: M3
  description: |
    Match 3 interrupt
ps7_ttc0_Interrupt_Register_1_M2:
  addr: 0xf8001054
  mask: 0x4
  name: M2
  description: |
    Match 2 interrupt
ps7_ttc0_Interrupt_Register_1_M1:
  addr: 0xf8001054
  mask: 0x2
  name: M1
  description: |
    Match 1 interrupt
ps7_ttc0_Interrupt_Register_1_Iv:
  addr: 0xf8001054
  mask: 0x1
  name: Iv
  description: |
    Interval interrupt
ps7_ttc0_Interrupt_Register_2_Ev:
  addr: 0xf8001058
  mask: 0x20
  name: Ev
  description: |
    Event timer overflow interrupt
ps7_ttc0_Interrupt_Register_2_Ov:
  addr: 0xf8001058
  mask: 0x10
  name: Ov
  description: |
    Counter overflow
ps7_ttc0_Interrupt_Register_2_M3:
  addr: 0xf8001058
  mask: 0x8
  name: M3
  description: |
    Match 3 interrupt
ps7_ttc0_Interrupt_Register_2_M2:
  addr: 0xf8001058
  mask: 0x4
  name: M2
  description: |
    Match 2 interrupt
ps7_ttc0_Interrupt_Register_2_M1:
  addr: 0xf8001058
  mask: 0x2
  name: M1
  description: |
    Match 1 interrupt
ps7_ttc0_Interrupt_Register_2_Iv:
  addr: 0xf8001058
  mask: 0x1
  name: Iv
  description: |
    Interval interrupt
ps7_ttc0_Interrupt_Register_3_Ev:
  addr: 0xf800105c
  mask: 0x20
  name: Ev
  description: |
    Event timer overflow interrupt
ps7_ttc0_Interrupt_Register_3_Ov:
  addr: 0xf800105c
  mask: 0x10
  name: Ov
  description: |
    Counter overflow
ps7_ttc0_Interrupt_Register_3_M3:
  addr: 0xf800105c
  mask: 0x8
  name: M3
  description: |
    Match 3 interrupt
ps7_ttc0_Interrupt_Register_3_M2:
  addr: 0xf800105c
  mask: 0x4
  name: M2
  description: |
    Match 2 interrupt
ps7_ttc0_Interrupt_Register_3_M1:
  addr: 0xf800105c
  mask: 0x2
  name: M1
  description: |
    Match 1 interrupt
ps7_ttc0_Interrupt_Register_3_Iv:
  addr: 0xf800105c
  mask: 0x1
  name: Iv
  description: |
    Interval interrupt
ps7_ttc0_Interrupt_Enable_1_IEN:
  addr: 0xf8001060
  mask: 0x3f
  name: IEN
  description: |
    Enables for bits 05:00 in Interrupt Register: corresponding bits must be set to enable the
    interrupt.
ps7_ttc0_Interrupt_Enable_2_IEN:
  addr: 0xf8001064
  mask: 0x3f
  name: IEN
  description: |
    Enables for bits 05:00 in Interrupt Register: corresponding bits must be set to enable the interrupt.
ps7_ttc0_Interrupt_Enable_3_IEN:
  addr: 0xf8001068
  mask: 0x3f
  name: IEN
  description: |
    Enables for bits 05:00 in Interrupt Register: corresponding bits must be set to enable the interrupt.
ps7_ttc0_Event_Control_Timer_1_E_Ov:
  addr: 0xf800106c
  mask: 0x4
  name: E_Ov
  description: |
    When this bit is low, the event timer is disabled and set to zero when an Event Timer Register overflow occurs; when set high, the timer continues counting on overflow.
ps7_ttc0_Event_Control_Timer_1_E_Lo:
  addr: 0xf800106c
  mask: 0x2
  name: E_Lo
  description: |
    When this bit is high, the timer counts pclk cycles during the low level duration of ext_clk; when low, the event timer counts the high level duration of ext_clk.
ps7_ttc0_Event_Control_Timer_1_E_En:
  addr: 0xf800106c
  mask: 0x1
  name: E_En
  description: |
    Enable timer: when this bit is high, the event timer is enabled.
ps7_ttc0_Event_Control_Timer_2_E_Ov:
  addr: 0xf8001070
  mask: 0x4
  name: E_Ov
  description: |
    When this bit is low, the event timer is disabled and set to zero when an Event Timer Register overflow occurs; when set high, the timer continues counting on overflow.
ps7_ttc0_Event_Control_Timer_2_E_Lo:
  addr: 0xf8001070
  mask: 0x2
  name: E_Lo
  description: |
    When this bit is high, the timer counts pclk cycles during the low level duration of ext_clk; when low, the event timer counts the high level duration of ext_clk.
ps7_ttc0_Event_Control_Timer_2_E_En:
  addr: 0xf8001070
  mask: 0x1
  name: E_En
  description: |
    Enable timer: when this bit is high, the event timer is enabled.
ps7_ttc0_Event_Control_Timer_3_E_Ov:
  addr: 0xf8001074
  mask: 0x4
  name: E_Ov
  description: |
    When this bit is low, the event timer is disabled and set to zero when an Event Timer Register overflow occurs; when set high, the timer continues counting on overflow.
ps7_ttc0_Event_Control_Timer_3_E_Lo:
  addr: 0xf8001074
  mask: 0x2
  name: E_Lo
  description: |
    When this bit is high, the timer counts pclk cycles during the low level duration of ext_clk; when low, the event timer counts the high level duration of ext_clk.
ps7_ttc0_Event_Control_Timer_3_E_En:
  addr: 0xf8001074
  mask: 0x1
  name: E_En
  description: |
    Enable timer: when this bit is high, the event timer is enabled.
ps7_ttc0_Event_Register_1_Event:
  addr: 0xf8001078
  mask: 0xffff
  name: Event
  description: |
    This register stores the result of the pclk count during the ext_clk high or low pulse.
ps7_ttc0_Event_Register_2_Event:
  addr: 0xf800107c
  mask: 0xffff
  name: Event
  description: |
    This register stores the result of the pclk count during the ext_clk high or low pulse.
ps7_ttc0_Event_Register_3_Event:
  addr: 0xf8001080
  mask: 0xffff
  name: Event
  description: |
    This register stores the result of the pclk count during the ext_clk high or low pulse.
ps7_ddrc_ddrc_ctrl_reserved:
  addr: 0xf8006000
  mask: 0xfffe0000
  name: reserved
  description: |
    reserved
ps7_ddrc_ddrc_ctrl_reg_ddrc_dis_auto_refresh:
  addr: 0xf8006000
  mask: 0x10000
  name: reg_ddrc_dis_auto_refresh
  description: |
    Disable auto-refresh.
    0: do not disable auto-refresh.
    1: disable auto-refresh.
    Dynamic Bit Field.
    Note: When this transitions from 0 to 1, any pending refreshes will be immediately scheduled by the controller.
ps7_ddrc_ddrc_ctrl_reg_ddrc_dis_act_bypass:
  addr: 0xf8006000
  mask: 0x8000
  name: reg_ddrc_dis_act_bypass
  description: |
    Only present in designs supporting activate bypass. For Debug only.
    0: Do not disable bypass path for high priority read activates.
    1: disable bypass path for high priority read activates.
ps7_ddrc_ddrc_ctrl_reg_ddrc_dis_rd_bypass:
  addr: 0xf8006000
  mask: 0x4000
  name: reg_ddrc_dis_rd_bypass
  description: |
    Only present in designs supporting read bypass. For Debug only.
    0: Do not disable bypass path for high priority read page hits.
    1: disable bypass path for high priority read page hits.
ps7_ddrc_ddrc_ctrl_reg_ddrc_rdwr_idle_gap:
  addr: 0xf8006000
  mask: 0x3f80
  name: reg_ddrc_rdwr_idle_gap
  description: |
    When the preferred transaction store is empty for this many clock cycles, switch to the alternate transaction store if it is non-empty. The read transaction store (both high and low priority) is the default preferred transaction store and the write transaction store is the alternate store. When 'Prefer write over read' is set this is reversed.
ps7_ddrc_ddrc_ctrl_reg_ddrc_burst8_refresh:
  addr: 0xf8006000
  mask: 0x70
  name: reg_ddrc_burst8_refresh
  description: |
    Refresh timeout. Programmed value plus one will be the number of refresh timeouts that will be allowed to accumulate before traffic is blocked and the refreshes are forced to execute. Closing pages to perform a refresh is a one-time penalty that must be paid for each group of refreshes; therefore, performing refreshes in a burst reduces the per-refresh penalty of these page closings. Higher numbers for burst_of_N_refresh slightly increases utilization; lower numbers decreases the worst-case latency associated with refreshes.
    0: single refresh
    1: burst-of-2
    ...
    7: burst-of-8 refresh
ps7_ddrc_ddrc_ctrl_reg_ddrc_data_bus_width:
  addr: 0xf8006000
  mask: 0xc
  name: reg_ddrc_data_bus_width
  description: |
    DDR bus width control
    00: 32-bit
    01: 16-bit
    1x: reserved
ps7_ddrc_ddrc_ctrl_reg_ddrc_powerdown_en:
  addr: 0xf8006000
  mask: 0x2
  name: reg_ddrc_powerdown_en
  description: |
    Controller power down control. Update during normal operation. Enable the controller to powerdown after it becomes idle.
    Dynamic Bit Field.
    0: disable
    1: enable
ps7_ddrc_ddrc_ctrl_reg_ddrc_soft_rstb:
  addr: 0xf8006000
  mask: 0x1
  name: reg_ddrc_soft_rstb
  description: |
    Active low soft reset. Update during normal operation.
    0: Resets the controller
    1: Takes the controller out of reset.
    Dynamic Bit Field.
    Note: Software changes DRAM controller register values only when the controller is in the reset state, except for bit fields that can be dymanically updated.
ps7_ddrc_Two_rank_cfg_reserved_reg_ddrc_addrmap_4bank_ram:
  addr: 0xf8006004
  mask: 0x10000000
  name: reserved_reg_ddrc_addrmap_4bank_ram
  description: |
    Reserved. Do not modify.
ps7_ddrc_Two_rank_cfg_reserved_reg_ddrc_addrmap_open_bank:
  addr: 0xf8006004
  mask: 0x8000000
  name: reserved_reg_ddrc_addrmap_open_bank
  description: |
    Reserved. Do not modify.
ps7_ddrc_Two_rank_cfg_reserved_reg_ddrc_addrmap_cs_bit1:
  addr: 0xf8006004
  mask: 0x7c00000
  name: reserved_reg_ddrc_addrmap_cs_bit1
  description: |
    Reserved. Do not modify.
ps7_ddrc_Two_rank_cfg_reserved_reg_ddrc_diff_rank_rd_2cycle_gap:
  addr: 0xf8006004
  mask: 0x200000
  name: reserved_reg_ddrc_diff_rank_rd_2cycle_gap
  description: |
    Reserved. Do not modify.
ps7_ddrc_Two_rank_cfg_reserved_reg_ddrc_wr_odt_block:
  addr: 0xf8006004
  mask: 0x180000
  name: reserved_reg_ddrc_wr_odt_block
  description: |
    Reserved. Do not modify.
ps7_ddrc_Two_rank_cfg_reg_ddrc_addrmap_cs_bit0:
  addr: 0xf8006004
  mask: 0x7c000
  name: reg_ddrc_addrmap_cs_bit0
  description: |
    Only present for multi-rank configurations.
    Selects the address bit used as rank address bit 0.
    Valid Range: 0 to 25, and 31
    Internal Base: 9. The selected address bit is determined by adding the Internal Base to the value of this field.
    If set to 31, rank address bit 0 is set to 0.
ps7_ddrc_Two_rank_cfg_reserved_reg_ddrc_active_ranks:
  addr: 0xf8006004
  mask: 0x3000
  name: reserved_reg_ddrc_active_ranks
  description: |
    Reserved. Do not modify.
ps7_ddrc_Two_rank_cfg_reg_ddrc_t_rfc_nom_x32:
  addr: 0xf8006004
  mask: 0xfff
  name: reg_ddrc_t_rfc_nom_x32
  description: |
    tREFI - Average time between refreshes. Unit: in multiples of 32 clocks.
    DRAM related. Default value is set for DDR3.
    Dynamic Bit Field.
ps7_ddrc_HPR_reg_reg_ddrc_hpr_xact_run_length:
  addr: 0xf8006008
  mask: 0x3c00000
  name: reg_ddrc_hpr_xact_run_length
  description: |
    Number of transactions that will be serviced once the HPR queue goes critical is the smaller of this number and the number of transactions available.
ps7_ddrc_HPR_reg_reg_ddrc_hpr_max_starve_x32:
  addr: 0xf8006008
  mask: 0x3ff800
  name: reg_ddrc_hpr_max_starve_x32
  description: |
    Number of clocks that the HPR queue can be starved before it goes critical. Unit: 32 clocks
ps7_ddrc_HPR_reg_reg_ddrc_hpr_min_non_critical_x32:
  addr: 0xf8006008
  mask: 0x7ff
  name: reg_ddrc_hpr_min_non_critical_x32
  description: |
    Number of counts that the HPR queue is guaranteed to be non-critical (1 count = 32 DDR clocks).
ps7_ddrc_LPR_reg_reg_ddrc_lpr_xact_run_length:
  addr: 0xf800600c
  mask: 0x3c00000
  name: reg_ddrc_lpr_xact_run_length
  description: |
    Number of transactions that will be serviced once the LPR queue goes critical is the smaller of this number and the number of transactions available
ps7_ddrc_LPR_reg_reg_ddrc_lpr_max_starve_x32:
  addr: 0xf800600c
  mask: 0x3ff800
  name: reg_ddrc_lpr_max_starve_x32
  description: |
    Number of clocks that the LPR queue can be starved before it goes critical. Unit: 32 clocks
ps7_ddrc_LPR_reg_reg_ddrc_lpr_min_non_critical_x32:
  addr: 0xf800600c
  mask: 0x7ff
  name: reg_ddrc_lpr_min_non_critical_x32
  description: |
    Number of clocks that the LPR queue is guaranteed to be non-critical. Unit: 32 clocks
ps7_ddrc_WR_reg_reg_ddrc_w_max_starve_x32:
  addr: 0xf8006010
  mask: 0x3ff8000
  name: reg_ddrc_w_max_starve_x32
  description: |
    Number of clocks that the Write queue can be starved before it goes critical. Unit: 32 clocks. FOR PERFORMANCE ONLY.
ps7_ddrc_WR_reg_reg_ddrc_w_xact_run_length:
  addr: 0xf8006010
  mask: 0x7800
  name: reg_ddrc_w_xact_run_length
  description: |
    Number of transactions that will be serviced once the WR queue goes critical is the smaller of this number and the number of transactions available
ps7_ddrc_WR_reg_reg_ddrc_w_min_non_critical_x32:
  addr: 0xf8006010
  mask: 0x7ff
  name: reg_ddrc_w_min_non_critical_x32
  description: |
    Number of clock cycles that the WR queue is guaranteed to be non-critical.
ps7_ddrc_DRAM_param_reg0_reg_ddrc_post_selfref_gap_x32:
  addr: 0xf8006014
  mask: 0x1fc000
  name: reg_ddrc_post_selfref_gap_x32
  description: |
    Minimum time to wait after coming out of self refresh before doing anything. This must be bigger than all the constraints that exist. (spec: Maximum of tXSNR and tXSRD and tXSDLL which is 512 clocks). Unit: in multiples of 32 clocks. DRAM Related
ps7_ddrc_DRAM_param_reg0_reg_ddrc_t_rfc_min:
  addr: 0xf8006014
  mask: 0x3fc0
  name: reg_ddrc_t_rfc_min
  description: |
    tRFC(min) - Minimum time from refresh to refresh or activate (spec: 75nS to 195nS). DRAM Related. Default value is set for DDR3.
    Dynamic Bit Field.
ps7_ddrc_DRAM_param_reg0_reg_ddrc_t_rc:
  addr: 0xf8006014
  mask: 0x3f
  name: reg_ddrc_t_rc
  description: |
    tRC - Min time between activates to same bank (spec: 65 ns for DDR2-400 and smaller for faster parts). DRAM Related. Default value is set for DDR3.
ps7_ddrc_DRAM_param_reg1_reg_ddrc_t_cke:
  addr: 0xf8006018
  mask: 0xf0000000
  name: reg_ddrc_t_cke
  description: |
    Minimum number of cycles of CKE HIGH/LOW during power down and self refresh.
    DDR2 and DDR3: Set this to tCKE value.
    LPDDR2: Set this to the larger of tCKE or tCKESR.
    Unit: clocks.
ps7_ddrc_DRAM_param_reg1_reg_ddrc_t_ras_min:
  addr: 0xf8006018
  mask: 0x7c00000
  name: reg_ddrc_t_ras_min
  description: |
    tRAS(min) - Minimum time between activate and precharge to the same bank (spec is 45 ns).
    Unit: clocks
    DRAM related.
    Default value is set for DDR3.
ps7_ddrc_DRAM_param_reg1_reg_ddrc_t_ras_max:
  addr: 0xf8006018
  mask: 0x3f0000
  name: reg_ddrc_t_ras_max
  description: |
    tRAS(max) - Maximum time between activate and precharge to same bank. Maximum time that a page can be kept open (spec is 70 us). If this is zero. The page is closed after each transaction.
    Unit: Multiples of 1024 clocks
    DRAM related.
ps7_ddrc_DRAM_param_reg1_reg_ddrc_t_faw:
  addr: 0xf8006018
  mask: 0xfc00
  name: reg_ddrc_t_faw
  description: |
    tFAW - At most 4 banks must be activated in a rolling window of tFAW cycles. Unit: clocks. DRAM Related.
ps7_ddrc_DRAM_param_reg1_reg_ddrc_powerdown_to_x32:
  addr: 0xf8006018
  mask: 0x3e0
  name: reg_ddrc_powerdown_to_x32
  description: |
    After this many clocks of NOP or DESELECT the controller will put the DRAM into power down. This must be enabled in the Master Control Register. Unit: Multiples of 32 clocks.
ps7_ddrc_DRAM_param_reg1_reg_ddrc_wr2pre:
  addr: 0xf8006018
  mask: 0x1f
  name: reg_ddrc_wr2pre
  description: |
    Minimum time between write and precharge to same bank
    DDR and DDR3: WL + BL/2 + tWR
    LPDDR2: WL + BL/2 + tWR + 1
    Unit: Clocks where, WL: write latency. BL: burst length.
    This must match the value programmed in the BL bit of the mode register to the DRAM. BST is not supported at present. tWR: write recovery time. This comes directly from the DRAM specs.
ps7_ddrc_DRAM_param_reg2_reg_ddrc_t_rcd:
  addr: 0xf800601c
  mask: 0xf0000000
  name: reg_ddrc_t_rcd
  description: |
    tRCD - AL Minimum time from activate to read or write command to same bank Min value for this is 1. AL = Additive Latency. DRAM Related.
ps7_ddrc_DRAM_param_reg2_reg_ddrc_rd2pre:
  addr: 0xf800601c
  mask: 0xf800000
  name: reg_ddrc_rd2pre
  description: |
    Minimum time from read to precharge of same bank
    DDR2: AL + BL/2 + max(tRTP, 2) - 2
    DDR3: AL + max (tRTP, 4)
    LPDDR2: BL/2 + tRTP - 1
    AL: Additive Latency; BL: DRAM Burst Length; tRTP: value from spec. DRAM related.
ps7_ddrc_DRAM_param_reg2_reg_ddrc_pad_pd:
  addr: 0xf800601c
  mask: 0x700000
  name: reg_ddrc_pad_pd
  description: |
    If pads have a power-saving mode, this is the greater of the time for the pads to enter power down or the time for the pads to exit power down. Used only in non-DFI designs.
    Unit: clocks.
ps7_ddrc_DRAM_param_reg2_reg_ddrc_t_xp:
  addr: 0xf800601c
  mask: 0xf8000
  name: reg_ddrc_t_xp
  description: |
    tXP: Minimum time after power down exit to any operation. DRAM related.
ps7_ddrc_DRAM_param_reg2_reg_ddrc_wr2rd:
  addr: 0xf800601c
  mask: 0x7c00
  name: reg_ddrc_wr2rd
  description: |
    Minimum time from write command to read command. Includes time for bus turnaround and recovery times and all per-bank, per-rank, and global constraints.
    DDR2 and DDR3: WL + tWTR + BL/2
    LPDDR2: WL + tWTR + BL/2 + 1
    Unit: clocks. Where, WL: Write latency, BL: burst length.
    This should match the value. Programmed in the BL bit of the mode register to the DRAM.
    tWTR: internal WRITE to READ command delay. This comes directly from the DRAM specs.
ps7_ddrc_DRAM_param_reg2_reg_ddrc_rd2wr:
  addr: 0xf800601c
  mask: 0x3e0
  name: reg_ddrc_rd2wr
  description: |
    Minimum time from read command to write command. Include time for bus turnaround and all per-bank, per-rank, and global constraints.
    DDR2 and DDR3:
    RL + BL/2 + 2 - WL
    LPDDR2: RL + BL/2 + RU (tDQSCKmax / tCK) + 1 - WL
    Write Pre-amble and DQ/DQS jitter timer is included in the above equation.
    DRAM RELATED.
ps7_ddrc_DRAM_param_reg2_reg_ddrc_write_latency:
  addr: 0xf800601c
  mask: 0x1f
  name: reg_ddrc_write_latency
  description: |
    Time from write command to write data on DDRC to PHY Interface. (PHY adds an extra flop delay on the write data path; hence this value is one less than the write latency of the DRAM device itself).
    DDR2 and DDR3: WL -1
    LPDDR2: WL Where WL: Write Latency of DRAM
    DRAM related.
    In non-LPDDR mode, the minimum DRAM Write Latency (DDR2) supported is 3.
    In LPDDR mode, the required DRAM Write Latency of 1 is supported.
    Since write latency (CWL) min is 3, and DDR2 CWL is CL-1, the min (DDR2) CL supported is 4
ps7_ddrc_DRAM_param_reg3_reserved_reg_ddrc_loopback:
  addr: 0xf8006020
  mask: 0x80000000
  name: reserved_reg_ddrc_loopback
  description: |
    Reserved. Do not modify.
ps7_ddrc_DRAM_param_reg3_reg_ddrc_dis_pad_pd:
  addr: 0xf8006020
  mask: 0x40000000
  name: reg_ddrc_dis_pad_pd
  description: |
    1: disable the pad power down feature
    0: Enable the pad power down feature.
ps7_ddrc_DRAM_param_reg3_reg_phy_mode_ddr1_ddr2:
  addr: 0xf8006020
  mask: 0x20000000
  name: reg_phy_mode_ddr1_ddr2
  description: |
    unused
ps7_ddrc_DRAM_param_reg3_reg_ddrc_read_latency:
  addr: 0xf8006020
  mask: 0x1f000000
  name: reg_ddrc_read_latency
  description: |
    Non-LPDDR2: not used.
    DDR2 and DDR3: Set to Read Latency, RL. Time from Read command to Read data on DRAM interface. It is used to calculate when DRAM clock may be stopped.
    Unit: DDR clock.
ps7_ddrc_DRAM_param_reg3_reg_ddrc_en_dfi_dram_clk_disable:
  addr: 0xf8006020
  mask: 0x800000
  name: reg_ddrc_en_dfi_dram_clk_disable
  description: |
    Enables the assertion of ddrc_dfi_dram_clk_disable.
    In DDR2/DDR3, only asserted in Self Refresh.
    In mDDR/LPDDR2, can be asserted in following:
    - during normal operation (Clock Stop),
    - in Power Down
    - in Self Refresh
    - In Deep Power Down
ps7_ddrc_DRAM_param_reg3_reg_ddrc_mobile:
  addr: 0xf8006020
  mask: 0x400000
  name: reg_ddrc_mobile
  description: |
    0: DDR2 or DDR3 device.
    1: LPDDR2 device.
ps7_ddrc_DRAM_param_reg3_reserved_reg_ddrc_sdram:
  addr: 0xf8006020
  mask: 0x200000
  name: reserved_reg_ddrc_sdram
  description: |
    Reserved. Do not modify.
ps7_ddrc_DRAM_param_reg3_reg_ddrc_refresh_to_x32:
  addr: 0xf8006020
  mask: 0x1f0000
  name: reg_ddrc_refresh_to_x32
  description: |
    If the refresh timer (tRFC_nom, as known as tREFI) has expired at least once, but it has not expired burst_of_N_refresh times yet, then a 'speculative refresh' may be performed. A speculative refresh is a refresh performed at a time when refresh would be useful, but before it is absolutely required. When the DRAM bus is idle for a period of time determined by this refresh idle timeout and the refresh timer has expired at least once since the last refresh, then a 'speculative refresh' will be performed. Speculative refreshes will continue successively until there are no refreshes pending or until new reads or writes are issued to the controller.
    Dynamic Bit Field.
ps7_ddrc_DRAM_param_reg3_reg_ddrc_t_rp:
  addr: 0xf8006020
  mask: 0xf000
  name: reg_ddrc_t_rp
  description: |
    tRP - Minimum time from precharge to activate of same bank.
    DRAM RELATED
ps7_ddrc_DRAM_param_reg3_reg_ddrc_refresh_margin:
  addr: 0xf8006020
  mask: 0xf00
  name: reg_ddrc_refresh_margin
  description: |
    Issue critical refresh or page close this many cycles before the critical refresh or page timer expires. It is recommended that this not be changed from the default value.
ps7_ddrc_DRAM_param_reg3_reg_ddrc_t_rrd:
  addr: 0xf8006020
  mask: 0xe0
  name: reg_ddrc_t_rrd
  description: |
    tRRD - Minimum time between activates from bank A to bank B. (spec: 10ns or less)
    DRAM RELATED
ps7_ddrc_DRAM_param_reg3_reg_ddrc_t_ccd:
  addr: 0xf8006020
  mask: 0x1c
  name: reg_ddrc_t_ccd
  description: |
    tCCD - Minimum time between two reads or two writes (from bank a to bank b) is this value + 1. DRAM related.
ps7_ddrc_DRAM_param_reg3_reserved:
  addr: 0xf8006020
  mask: 0x3
  name: reserved
  description: |
    Reserved
ps7_ddrc_DRAM_param_reg4_reg_ddrc_mr_rdata_valid:
  addr: 0xf8006024
  mask: 0x8000000
  name: reg_ddrc_mr_rdata_valid
  description: |
    This bit indicates whether the Mode Register Read
    Data present at address 0xA9 is valid or not. This bit is 0 by default. This bit will be cleared (0), whenever a Mode Register Read command is issued. This bit will be set to 1, when the Mode Register Read Data is written to register 0xA9.
ps7_ddrc_DRAM_param_reg4_reg_ddrc_mr_type:
  addr: 0xf8006024
  mask: 0x4000000
  name: reg_ddrc_mr_type
  description: |
    Indicates whether the Mode register operation is read or write
    0: write
    1: read
ps7_ddrc_DRAM_param_reg4_ddrc_reg_mr_wr_busy:
  addr: 0xf8006024
  mask: 0x2000000
  name: ddrc_reg_mr_wr_busy
  description: |
    Core must initiate a MR write / read operation only if this signal is low. This signal goes high in the clock after the controller accepts the write / read request. It goes low when (i) MR write command has been issued to the DRAM (ii) MR Read data has been returned to Controller. Any MR write / read command that is received when 'ddrc_reg_mr_wr_busy' is high is not accepted.
    0: Indicates that the core can initiate a mode register write / read operation.
    1: Indicates that mode register write / read operation is in progress.
ps7_ddrc_DRAM_param_reg4_reg_ddrc_mr_data:
  addr: 0xf8006024
  mask: 0x1fffe00
  name: reg_ddrc_mr_data
  description: |
    DDR2 and DDR3: Mode register write data.
    LPDDR2: The 16 bits are interpreted for reads and writes:
    Reads: MR Addr[7:0], Don't Care[7:0].
    Writes: MR Addf[7:0], MR Data[7:0].
ps7_ddrc_DRAM_param_reg4_reg_ddrc_mr_addr:
  addr: 0xf8006024
  mask: 0x180
  name: reg_ddrc_mr_addr
  description: |
    DDR2 and DDR3: Mode register address.
    LPDDR2: not used.
    00: MR0
    01: MR1
    10: MR2
    11: MR3
ps7_ddrc_DRAM_param_reg4_reg_ddrc_mr_wr:
  addr: 0xf8006024
  mask: 0x40
  name: reg_ddrc_mr_wr
  description: |
    A low to high signal on this signal will do a mode register write or read. Controller will accept this command, if this signal is detected high and "ddrc_reg_mr_wr_busy" is detected low.
ps7_ddrc_DRAM_param_reg4_reserved_reg_ddrc_max_rank_rd:
  addr: 0xf8006024
  mask: 0x3c
  name: reserved_reg_ddrc_max_rank_rd
  description: |
    Reserved. Do not modify.
ps7_ddrc_DRAM_param_reg4_reg_ddrc_prefer_write:
  addr: 0xf8006024
  mask: 0x2
  name: reg_ddrc_prefer_write
  description: |
    1: Bank selector prefers writes over reads
ps7_ddrc_DRAM_param_reg4_reg_ddrc_en_2t_timing_mode:
  addr: 0xf8006024
  mask: 0x1
  name: reg_ddrc_en_2t_timing_mode
  description: |
    1: DDRC will use 2T timing
    0: DDRC will use 1T timing
ps7_ddrc_DRAM_init_param_reg_ddrc_t_mrd:
  addr: 0xf8006028
  mask: 0x3800
  name: reg_ddrc_t_mrd
  description: |
    tMRD - Cycles between Load Mode commands.
    DRAM related. Default value is set for DDR3.
ps7_ddrc_DRAM_init_param_reg_ddrc_pre_ocd_x32:
  addr: 0xf8006028
  mask: 0x780
  name: reg_ddrc_pre_ocd_x32
  description: |
    Wait period before driving the 'OCD Complete' command to DRAM. Units are in counts of a global timer that pulses every 32 clock cycles. There is no known spec requirement for this. It may be set to zero.
ps7_ddrc_DRAM_init_param_reg_ddrc_final_wait_x32:
  addr: 0xf8006028
  mask: 0x7f
  name: reg_ddrc_final_wait_x32
  description: |
    Cycles to wait after completing the DRAM init sequence
    before starting the dynamic scheduler. Units are in counts of a global timer that pulses every 32 clock cycles. Default value is set for DDR3.
ps7_ddrc_DRAM_EMR_reg_reg_ddrc_emr3:
  addr: 0xf800602c
  mask: 0xffff0000
  name: reg_ddrc_emr3
  description: |
    DDR2: Value loaded into EMR3 register
    DDR3: Value loaded into
    MR3 register. Set Bit[2:0] to 3'b000. These bits are set appropriately by the Controller during Read Data eye training and Read DQS gate leveling.
    LPDDR2: Unused
ps7_ddrc_DRAM_EMR_reg_reg_ddrc_emr2:
  addr: 0xf800602c
  mask: 0xffff
  name: reg_ddrc_emr2
  description: |
    DDR2: Value loaded into EMR2 register
    DDR3: Value loaded into
    MR2 register
    LPDDR2: Value loaded into
    MR3 register
ps7_ddrc_DRAM_EMR_MR_reg_reg_ddrc_emr:
  addr: 0xf8006030
  mask: 0xffff0000
  name: reg_ddrc_emr
  description: |
    DDR2: Value loaded into EMR1register. (Bits[9:7] are for OCD and the setting in this reg is ignored. Controller sets this bits appropriately during initialization
    DDR3: Value loaded into
    MR1 register. Set Bit[7] to 0. This bit is set appropriately by the Controller during Write Leveling
    LPDDR2: Value loaded into
    MR2 register
ps7_ddrc_DRAM_EMR_MR_reg_reg_ddrc_mr:
  addr: 0xf8006030
  mask: 0xffff
  name: reg_ddrc_mr
  description: |
    DDR2: Value loaded into MR register. (Bit[8] is for DLL and the setting here is ignored. Controller sets this bit appropriately
    DDR3: Value loaded into MR0 register.
    LPDDR2: Value loaded into
    MR1 register
ps7_ddrc_DRAM_burst8_rdwr_reg_ddrc_burstchop:
  addr: 0xf8006034
  mask: 0x10000000
  name: reg_ddrc_burstchop
  description: |
    Feature not supported. When 1, Controller is out in burstchop mode.
ps7_ddrc_DRAM_burst8_rdwr_reserved_1:
  addr: 0xf8006034
  mask: 0xc000000
  name: reserved_1
  description: |
    Reserved
ps7_ddrc_DRAM_burst8_rdwr_reg_ddrc_post_cke_x1024:
  addr: 0xf8006034
  mask: 0x3ff0000
  name: reg_ddrc_post_cke_x1024
  description: |
    Clock cycles to wait after driving CKE high to start the DRAM initialization sequence.
    Units: 1024 clocks.
    DDR2 typically require a 400 ns delay, requiring this value to be programmed to 2 at all clock speeds. LPDDR2 - Typically require this to be programmed for a delay of 200 us.
ps7_ddrc_DRAM_burst8_rdwr_reserved:
  addr: 0xf8006034
  mask: 0xc000
  name: reserved
  description: |
    Reserved
ps7_ddrc_DRAM_burst8_rdwr_reg_ddrc_pre_cke_x1024:
  addr: 0xf8006034
  mask: 0x3ff0
  name: reg_ddrc_pre_cke_x1024
  description: |
    Clock cycles to wait after a DDR software reset before driving CKE high to start the DRAM initialization sequence.
    Units: 1024 clock cycles.
    DDR2 Specifications typically require this to be programmed for a delay of >= 200 uS.
    LPDDR2 - tINIT0 of 20 mS (max) + tINIT1 of 100 nS (min)
ps7_ddrc_DRAM_burst8_rdwr_reg_ddrc_burst_rdwr:
  addr: 0xf8006034
  mask: 0xf
  name: reg_ddrc_burst_rdwr
  description: |
    Controls the burst size used to access the DRAM. This must match the BL mode register setting in the DRAM.
    0010: Burst length of 4
    0100: Burst length of 8
    1000: Burst length of 16 (LPDDR2 with ___-bit data)
    All other values are reserved
ps7_ddrc_DRAM_disable_DQ_reserved_reg_phy_dq0_wait_t:
  addr: 0xf8006038
  mask: 0x1e00
  name: reserved_reg_phy_dq0_wait_t
  description: |
    Reserved. Do not modify.
ps7_ddrc_DRAM_disable_DQ_reserved_reg_phy_rd_level_start:
  addr: 0xf8006038
  mask: 0x100
  name: reserved_reg_phy_rd_level_start
  description: |
    Reserved. Do not modify.
ps7_ddrc_DRAM_disable_DQ_reserved_reg_phy_wr_level_start:
  addr: 0xf8006038
  mask: 0x80
  name: reserved_reg_phy_wr_level_start
  description: |
    Reserved. Do not modify.
ps7_ddrc_DRAM_disable_DQ_reserved_reg_phy_debug_mode:
  addr: 0xf8006038
  mask: 0x40
  name: reserved_reg_phy_debug_mode
  description: |
    Reserved. Do not modify.
ps7_ddrc_DRAM_disable_DQ_reserved:
  addr: 0xf8006038
  mask: 0x3c
  name: reserved
  description: |
    Reserved
ps7_ddrc_DRAM_disable_DQ_reg_ddrc_dis_dq:
  addr: 0xf8006038
  mask: 0x2
  name: reg_ddrc_dis_dq
  description: |
    When 1, DDRC will not de-queue any transactions from the CAM. Bypass will also be disabled. All transactions will be queued in the CAM. This is for debug only; no reads or writes are issued to DRAM as long as this is asserted.
    Dynamic Bit Field.
ps7_ddrc_DRAM_disable_DQ_reg_ddrc_force_low_pri_n:
  addr: 0xf8006038
  mask: 0x1
  name: reg_ddrc_force_low_pri_n
  description: |
    Read Transaction Priority disable.
    0: read transactions forced to low priority (turns off Bypass).
    1: HPR reads allowed if enabled in the AXI priority read registers.
ps7_ddrc_DRAM_addr_map_bank_reg_ddrc_addrmap_col_b6:
  addr: 0xf800603c
  mask: 0xf0000
  name: reg_ddrc_addrmap_col_b6
  description: |
    Full bus width mode: Selects the address bits used as column address bits 7. Half bus width mode:
    Selects the address bits used as column address bits 8. Valid range is 0-7. Internal Base 9. The selected address bit for each of the column address bits is determined by adding the Internal Base to the value of this field.
ps7_ddrc_DRAM_addr_map_bank_reg_ddrc_addrmap_col_b5:
  addr: 0xf800603c
  mask: 0xf000
  name: reg_ddrc_addrmap_col_b5
  description: |
    Full bus width mode: Selects the address bits used as column address bits 6. Half bus width mode:
    Selects the address bits used as column address bits 7. Valid range is 0-7. Internal Base 8. The selected address bit for each of the column address bits is determined by adding the Internal Base to the value of this field.
ps7_ddrc_DRAM_addr_map_bank_reg_ddrc_addrmap_bank_b2:
  addr: 0xf800603c
  mask: 0xf00
  name: reg_ddrc_addrmap_bank_b2
  description: |
    Selects the AXI address bit used as bank address bit 2. Valid range 0 to 14, and 15. Internal Base: 7. The selected address bit is determined by adding the Internal Base to the value of this field. If set to 15, bank address bit 2 is set to 0.
ps7_ddrc_DRAM_addr_map_bank_reg_ddrc_addrmap_bank_b1:
  addr: 0xf800603c
  mask: 0xf0
  name: reg_ddrc_addrmap_bank_b1
  description: |
    Selects the address bits used as bank address bit 1. Valid Range: 0 to 14; Internal Base: 6.
    The selected address bit for each of the bank address bits is determined by adding the Internal Base to the value of this field.
ps7_ddrc_DRAM_addr_map_bank_reg_ddrc_addrmap_bank_b0:
  addr: 0xf800603c
  mask: 0xf
  name: reg_ddrc_addrmap_bank_b0
  description: |
    Selects the address bits used as bank address bit 0. Valid Range: 0 to 14. Internal Base: 5.
    The selected address bit for each of the bank address bits is determined by adding the Internal Base to the value of this field.
ps7_ddrc_DRAM_addr_map_col_reg_ddrc_addrmap_col_b11:
  addr: 0xf8006040
  mask: 0xf0000000
  name: reg_ddrc_addrmap_col_b11
  description: |
    Full bus width mode: Selects the address bit used as column address bit 13. (Column address bit 12 in LPDDR2 mode) Half bus width mode: Unused. To make it unused, this should be set to 15. (Column address bit 13 in LPDDR2 mode)
    Valid Range: 0 to 7, and 15.
    Internal Base: 14.
    The selected address bit is determined by adding the Internal Base to the value of this field. If set to 15, this column address bit is set to 0. Note: Per JEDEC DDR2 spec, column address bit 10 is reserved for indicating auto-precharge, and hence no source address bit can be mapped to column address bit 10. In LPDDR2, there is a dedicated bit for auto-precharge in the CA bus, and hence column bit 10 is used.
ps7_ddrc_DRAM_addr_map_col_reg_ddrc_addrmap_col_b10:
  addr: 0xf8006040
  mask: 0xf000000
  name: reg_ddrc_addrmap_col_b10
  description: |
    Full bus width mode: Selects the address bit used as column address bit 12. (Column address bit 11 in LPDDR2 mode) Half bus width mode: Selects the address bit used as column address bit 13. (Column address bit 12 in LPDDR2 mode) Valid Range: 0 to 7, and 15.
    Internal Base: 13
    The selected address bit is determined by adding the Internal Base to the value of this field. If set to 15, this column address bit is set to 0. Note: Per JEDEC DDR2 spec, column address bit 10 is reserved for indicating auto-precharge, and hence no source address bit can be mapped to column address bit 10. In LPDDR2, there is a dedicated bit for auto-precharge in the CA bus, and hence column bit 10 is used.
ps7_ddrc_DRAM_addr_map_col_reg_ddrc_addrmap_col_b9:
  addr: 0xf8006040
  mask: 0xf00000
  name: reg_ddrc_addrmap_col_b9
  description: |
    Full bus width mode: Selects the address bit used as column address bit 11. (Column address bit 10 in LPDDR2 mode)
    Half bus width mode: Selects the address bit used as column address bit 12. (Column address bit 11 in LPDDR2 mode)
    Valid Range: 0 to 7, and 15
    Internal Base: 12
    The selected address bit is determined by adding the Internal Base to the value of this field. If set to 15, this column address bit is set to 0.
    Note: Per JEDEC DDR2 spec, column address bit 10 is reserved for indicating auto-precharge, and hence no source address bit can be mapped to column address bit 10. In LPDDR2, there is a dedicated bit for auto-precharge in the CA bus, and hence column bit 10 is used.
ps7_ddrc_DRAM_addr_map_col_reg_ddrc_addrmap_col_b8:
  addr: 0xf8006040
  mask: 0xf0000
  name: reg_ddrc_addrmap_col_b8
  description: |
    Full bus width mode: Selects the address bit used as column address bit 9.
    Half bus width mode: Selects the address bit used as column address bit 11. (Column address bit 10 in LPDDR2 mode)
    Valid Range: 0 to 7, and 15
    Internal Base: 11
    The selected address bit is determined by adding the Internal Base to the value of this field. If set to 15, this column address bit is set to 0.
    Note: Per JEDEC spec, column address bit 10 is reserved for indicating auto-precharge, and hence no source address bit can be mapped to column address bit 10. In LPDDR2, there is a dedicated bit for auto-precharge in the CA bus, and hence column bit 10 is used.
ps7_ddrc_DRAM_addr_map_col_reg_ddrc_addrmap_col_b7:
  addr: 0xf8006040
  mask: 0xf000
  name: reg_ddrc_addrmap_col_b7
  description: |
    Full bus width mode: Selects the address bit used as column address bit 8.
    Half bus width mode: Selects the address bit used as column address bit 9.
    Valid Range: 0 to 7, and 15.
    Internal Base: 10.
    The selected address bit is determined by adding the Internal Base to the value of this field. If set to 15, this column address bit is set to 0.
    Note: Per JEDEC spec, column address bit 10 is reserved for indicating auto-precharge, and hence no source address bit can be mapped to column address bit 10.In LPDDR2, there is a dedicated bit for auto-precharge in the CA bus, and hence column bit 10 is used.
ps7_ddrc_DRAM_addr_map_col_reg_ddrc_addrmap_col_b4:
  addr: 0xf8006040
  mask: 0xf00
  name: reg_ddrc_addrmap_col_b4
  description: |
    Full bus width mode: Selects the address bit used as column address bit 5.
    Half bus width mode: Selects the address bit used as column address bits 6. Valid Range: 0 to 7.
    Internal Base: 7.
    The selected address bit for each of the column address bits is determined by adding the Internal Base to the value of this field.
ps7_ddrc_DRAM_addr_map_col_reg_ddrc_addrmap_col_b3:
  addr: 0xf8006040
  mask: 0xf0
  name: reg_ddrc_addrmap_col_b3
  description: |
    Full bus width mode: Selects the address bit used as column address bit 4.
    Half bus width mode: Selects the address bit used as column address bit 5.
    Valid Range: 0 to 7
    Internal Base: 6
    The selected address bit is determined by adding the Internal Base to the value of this field.
ps7_ddrc_DRAM_addr_map_col_reg_ddrc_addrmap_col_b2:
  addr: 0xf8006040
  mask: 0xf
  name: reg_ddrc_addrmap_col_b2
  description: |
    Full bus width mode: Selects the address bit used as column address bit 3.
    Half bus width mode: Selects the address bit used as column address bit 4.
    Valid Range: 0 to 7. Internal Base: 5
    The selected address bit is determined by adding the Internal Base to the value of this field.
ps7_ddrc_DRAM_addr_map_row_reg_ddrc_addrmap_row_b15:
  addr: 0xf8006044
  mask: 0xf000000
  name: reg_ddrc_addrmap_row_b15
  description: |
    Selects the AXI address bit used as row address bit 15. Valid Range: 0 to 5, Internal Base: 24 The selected address bit is determined by adding the Internal Base to the value of this field. If set to 15, row address bit 15 is set to 0.
ps7_ddrc_DRAM_addr_map_row_reg_ddrc_addrmap_row_b14:
  addr: 0xf8006044
  mask: 0xf00000
  name: reg_ddrc_addrmap_row_b14
  description: |
    Selects theAXI
    address bit used as row address bit 14. Valid Range: 0 to 6, Internal Base: 23 The selected address bit is determined by adding the Internal Base to the value of this field. If set to 15, row address bit 14 is set to 0.
ps7_ddrc_DRAM_addr_map_row_reg_ddrc_addrmap_row_b13:
  addr: 0xf8006044
  mask: 0xf0000
  name: reg_ddrc_addrmap_row_b13
  description: |
    Selects the AXI address bit used as row address bit 13. Valid Range: 0 to 7, Internal Base: 22 The selected address bit is determined by adding the Internal Base to the value of this field. If set to 15, row address bit 13 is set to 0.
ps7_ddrc_DRAM_addr_map_row_reg_ddrc_addrmap_row_b12:
  addr: 0xf8006044
  mask: 0xf000
  name: reg_ddrc_addrmap_row_b12
  description: |
    Selects the AXI address bit used as row address bit 12. Valid Range: 0 to 8, Internal Base: 21 The selected address bit is determined by adding the Internal Base to the value of this field. If set to 15, row address bit 12 is set to 0.
ps7_ddrc_DRAM_addr_map_row_reg_ddrc_addrmap_row_b2_11:
  addr: 0xf8006044
  mask: 0xf00
  name: reg_ddrc_addrmap_row_b2_11
  description: |
    Selects the AXI address bits used as row address bits 2 to 11. Valid Range: 0 to 11. Internal Base: 11 (for row address bit 2) to 20 (for row address bit 11) The selected address bit for each of the row address bits is determined by adding the Internal Base to the value of this field.
ps7_ddrc_DRAM_addr_map_row_reg_ddrc_addrmap_row_b1:
  addr: 0xf8006044
  mask: 0xf0
  name: reg_ddrc_addrmap_row_b1
  description: |
    Selects the AXI address bits used as row address bit 1. Valid Range: 0 to 11. Internal Base: 10 The selected address bit for each of the row address bits is determined by adding the Internal Base to the value of this field.
ps7_ddrc_DRAM_addr_map_row_reg_ddrc_addrmap_row_b0:
  addr: 0xf8006044
  mask: 0xf
  name: reg_ddrc_addrmap_row_b0
  description: |
    Selects the AXI address bits used as row address bit 0. Valid Range: 0 to 11. Internal Base: 9
    The selected address bit for each of the row address bits is determined by adding the Internal Base to the value of this field
ps7_ddrc_DRAM_ODT_reg_reserved_reg_ddrc_rank3_wr_odt:
  addr: 0xf8006048
  mask: 0x38000000
  name: reserved_reg_ddrc_rank3_wr_odt
  description: |
    Reserved. Do not modify.
ps7_ddrc_DRAM_ODT_reg_reserved_reg_ddrc_rank3_rd_odt:
  addr: 0xf8006048
  mask: 0x7000000
  name: reserved_reg_ddrc_rank3_rd_odt
  description: |
    Reserved. Do not modify.
ps7_ddrc_DRAM_ODT_reg_reserved_reg_ddrc_rank2_wr_odt:
  addr: 0xf8006048
  mask: 0xe00000
  name: reserved_reg_ddrc_rank2_wr_odt
  description: |
    Reserved. Do not modify.
ps7_ddrc_DRAM_ODT_reg_reserved_reg_ddrc_rank2_rd_odt:
  addr: 0xf8006048
  mask: 0x1c0000
  name: reserved_reg_ddrc_rank2_rd_odt
  description: |
    Reserved. Do not modify.
ps7_ddrc_DRAM_ODT_reg_reg_phy_idle_local_odt:
  addr: 0xf8006048
  mask: 0x30000
  name: reg_phy_idle_local_odt
  description: |
    Value to drive on the 2-bit local_odt PHY outputs when output enable is not asserted and a read is not in progress. Typically this is the value required to disable termination to save power when idle.
ps7_ddrc_DRAM_ODT_reg_reg_phy_wr_local_odt:
  addr: 0xf8006048
  mask: 0xc000
  name: reg_phy_wr_local_odt
  description: |
    Value to drive on the 2-bit local_odt PHY outputs when write levelling is enabled for DQS.
ps7_ddrc_DRAM_ODT_reg_reg_phy_rd_local_odt:
  addr: 0xf8006048
  mask: 0x3000
  name: reg_phy_rd_local_odt
  description: |
    Value to drive on the 2-bit local_odt PHY outputs when output enable is not asserted and a read is in progress (where 'in progress' is defined as after a read command is issued and until all read data has been returned all the way to the controller.) Typically this is set to the value required to enable termination at the desired strength for read usage.
ps7_ddrc_DRAM_ODT_reg_reserved_reg_ddrc_rank1_wr_odt:
  addr: 0xf8006048
  mask: 0xe00
  name: reserved_reg_ddrc_rank1_wr_odt
  description: |
    Reserved. Do not modify.
ps7_ddrc_DRAM_ODT_reg_reserved_reg_ddrc_rank1_rd_odt:
  addr: 0xf8006048
  mask: 0x1c0
  name: reserved_reg_ddrc_rank1_rd_odt
  description: |
    Reserved. Do not modify.
ps7_ddrc_DRAM_ODT_reg_reserved_reg_ddrc_rank0_wr_odt:
  addr: 0xf8006048
  mask: 0x38
  name: reserved_reg_ddrc_rank0_wr_odt
  description: |
    Reserved. Do not modify.
ps7_ddrc_DRAM_ODT_reg_reserved_reg_ddrc_rank0_rd_odt:
  addr: 0xf8006048
  mask: 0x7
  name: reserved_reg_ddrc_rank0_rd_odt
  description: |
    Reserved. Do not modify.
ps7_ddrc_phy_dbg_reg_phy_reg_bc_fifo_re3:
  addr: 0xf800604c
  mask: 0x80000
  name: phy_reg_bc_fifo_re3
  description: |
    Debug read capture FIFO read enable for data slice 3.
ps7_ddrc_phy_dbg_reg_phy_reg_bc_fifo_we3:
  addr: 0xf800604c
  mask: 0x40000
  name: phy_reg_bc_fifo_we3
  description: |
    Debug read capture FIFO write enable, for data slice 3.
ps7_ddrc_phy_dbg_reg_phy_reg_bc_dqs_oe3:
  addr: 0xf800604c
  mask: 0x20000
  name: phy_reg_bc_dqs_oe3
  description: |
    Debug DQS output enable for data slice 3.
ps7_ddrc_phy_dbg_reg_phy_reg_bc_dq_oe3:
  addr: 0xf800604c
  mask: 0x10000
  name: phy_reg_bc_dq_oe3
  description: |
    Debug DQ output enable for data slice 3.
ps7_ddrc_phy_dbg_reg_phy_reg_bc_fifo_re2:
  addr: 0xf800604c
  mask: 0x8000
  name: phy_reg_bc_fifo_re2
  description: |
    Debug read capture FIFO read enable for data slice 2.
ps7_ddrc_phy_dbg_reg_phy_reg_bc_fifo_we2:
  addr: 0xf800604c
  mask: 0x4000
  name: phy_reg_bc_fifo_we2
  description: |
    Debug read capture FIFO write enable, for data slice 2.
ps7_ddrc_phy_dbg_reg_phy_reg_bc_dqs_oe2:
  addr: 0xf800604c
  mask: 0x2000
  name: phy_reg_bc_dqs_oe2
  description: |
    Debug DQS output enable for data slice 2.
ps7_ddrc_phy_dbg_reg_phy_reg_bc_dq_oe2:
  addr: 0xf800604c
  mask: 0x1000
  name: phy_reg_bc_dq_oe2
  description: |
    Debug DQ output enable for data slice 2.
ps7_ddrc_phy_dbg_reg_phy_reg_bc_fifo_re1:
  addr: 0xf800604c
  mask: 0x800
  name: phy_reg_bc_fifo_re1
  description: |
    Debug read capture FIFO read enable for data slice 1.
ps7_ddrc_phy_dbg_reg_phy_reg_bc_fifo_we1:
  addr: 0xf800604c
  mask: 0x400
  name: phy_reg_bc_fifo_we1
  description: |
    Debug read capture FIFO write enable, for data slice 1.
ps7_ddrc_phy_dbg_reg_phy_reg_bc_dqs_oe1:
  addr: 0xf800604c
  mask: 0x200
  name: phy_reg_bc_dqs_oe1
  description: |
    Debug DQS output enable for data slice 1.
ps7_ddrc_phy_dbg_reg_phy_reg_bc_dq_oe1:
  addr: 0xf800604c
  mask: 0x100
  name: phy_reg_bc_dq_oe1
  description: |
    Debug DQ output enable for data slice 1.
ps7_ddrc_phy_dbg_reg_phy_reg_bc_fifo_re0:
  addr: 0xf800604c
  mask: 0x80
  name: phy_reg_bc_fifo_re0
  description: |
    Debug read capture FIFO read enable for data slice 0.
ps7_ddrc_phy_dbg_reg_phy_reg_bc_fifo_we0:
  addr: 0xf800604c
  mask: 0x40
  name: phy_reg_bc_fifo_we0
  description: |
    Debug read capture FIFO write enable, for data slice 0.
ps7_ddrc_phy_dbg_reg_phy_reg_bc_dqs_oe0:
  addr: 0xf800604c
  mask: 0x20
  name: phy_reg_bc_dqs_oe0
  description: |
    Debug DQS output enable for data slice 0.
ps7_ddrc_phy_dbg_reg_phy_reg_bc_dq_oe0:
  addr: 0xf800604c
  mask: 0x10
  name: phy_reg_bc_dq_oe0
  description: |
    Debug DQ output enable for data slice 0.
ps7_ddrc_phy_dbg_reg_phy_reg_rdc_fifo_rst_err_cnt:
  addr: 0xf800604c
  mask: 0xf
  name: phy_reg_rdc_fifo_rst_err_cnt
  description: |
    Counter for counting how many times the pointers of read capture FIFO differ when they are reset by dll_calib.
ps7_ddrc_phy_cmd_timeout_rddata_cpt_reg_phy_wrlvl_num_of_dq0:
  addr: 0xf8006050
  mask: 0xf0000000
  name: reg_phy_wrlvl_num_of_dq0
  description: |
    This register value determines register determines the number of samples used for each ratio increment during Write Leveling.
    Num_of_iteration = reg_phy_wrlvl_num_of_dq0 + 1
    The recommended value for this register is 8. Accuracy is better with higher value, but this will cause leveling to run longer.
ps7_ddrc_phy_cmd_timeout_rddata_cpt_reg_phy_gatelvl_num_of_dq0:
  addr: 0xf8006050
  mask: 0xf000000
  name: reg_phy_gatelvl_num_of_dq0
  description: |
    This register value determines register determines the number of samples used for each ratio increment during
    Gate Training.
    Num_of_iteration = reg_phy_gatelvl_num_of_dq0 + 1 The recommended value for this register is 8. Accuracy is better with higher value, but this will cause leveling to run longer.
ps7_ddrc_phy_cmd_timeout_rddata_cpt_reserved_1:
  addr: 0xf8006050
  mask: 0xf00000
  name: reserved_1
  description: |
    Reserved
ps7_ddrc_phy_cmd_timeout_rddata_cpt_reg_phy_clk_stall_level:
  addr: 0xf8006050
  mask: 0x80000
  name: reg_phy_clk_stall_level
  description: |
    1: stall clock, for DLL aging control
ps7_ddrc_phy_cmd_timeout_rddata_cpt_reg_phy_dis_phy_ctrl_rstn:
  addr: 0xf8006050
  mask: 0x40000
  name: reg_phy_dis_phy_ctrl_rstn
  description: |
    Disable the reset from Phy Ctrl macro. 1: PHY Ctrl macro reset port is always HIGH 0: PHY Ctrl macro gets power on reset.
ps7_ddrc_phy_cmd_timeout_rddata_cpt_reg_phy_rdc_fifo_rst_err_cnt_clr:
  addr: 0xf8006050
  mask: 0x20000
  name: reg_phy_rdc_fifo_rst_err_cnt_clr
  description: |
    Clear/reset for counter rdc_fifo_rst_err_cnt[3:0].
    0: no clear, 1: clear.
    Note: This is a synchronous dynamic signal that must have timing closed.
ps7_ddrc_phy_cmd_timeout_rddata_cpt_reg_phy_use_fixed_re:
  addr: 0xf8006050
  mask: 0x10000
  name: reg_phy_use_fixed_re
  description: |
    When 1: PHY generates FIFO read enable after fixed number of clock cycles as defined by reg_phy_rdc_we_to_re_delay[3:0].
    When 0: PHY uses the not_empty method to do the read enable generation.
    Note: This port must be set HIGH during training/leveling process i.e. when ddrc_dfi_wrlvl_en/ ddrc_dfi_rdlvl_en/ ddrc_dfi_rdlvl_gate_en port is set HIGH.
ps7_ddrc_phy_cmd_timeout_rddata_cpt_reg_phy_rdc_fifo_rst_disable:
  addr: 0xf8006050
  mask: 0x8000
  name: reg_phy_rdc_fifo_rst_disable
  description: |
    When 1, disable counting the number of times the Read Data Capture FIFO has been reset when the FIFO was not empty.
ps7_ddrc_phy_cmd_timeout_rddata_cpt_reserved:
  addr: 0xf8006050
  mask: 0x7000
  name: reserved
  description: |
    Reserved
ps7_ddrc_phy_cmd_timeout_rddata_cpt_reg_phy_rdc_we_to_re_delay:
  addr: 0xf8006050
  mask: 0xf00
  name: reg_phy_rdc_we_to_re_delay
  description: |
    This register value + 1 give the number of clock cycles between writing into the Read Capture FIFO and the read operation.
    The setting of this register determines the read data timing and depends upon total delay in the system for read operation which include fly-by delays, trace delay, clkout_invert etc.
    This is used only if reg_phy_use_fixed_re=1.
ps7_ddrc_phy_cmd_timeout_rddata_cpt_reg_phy_wr_cmd_to_data:
  addr: 0xf8006050
  mask: 0xf0
  name: reg_phy_wr_cmd_to_data
  description: |
    Not used in DFI PHY.
ps7_ddrc_phy_cmd_timeout_rddata_cpt_reg_phy_rd_cmd_to_data:
  addr: 0xf8006050
  mask: 0xf
  name: reg_phy_rd_cmd_to_data
  description: |
    Not used in DFI PHY.
ps7_ddrc_mode_sts_reg_ddrc_reg_dbg_hpr_q_depth:
  addr: 0xf8006054
  mask: 0x1f0000
  name: ddrc_reg_dbg_hpr_q_depth
  description: |
    Indicates the number of entries currently in the High Priority Read (HPR) CAM.
ps7_ddrc_mode_sts_reg_ddrc_reg_dbg_lpr_q_depth:
  addr: 0xf8006054
  mask: 0xfc00
  name: ddrc_reg_dbg_lpr_q_depth
  description: |
    Indicates the number of entries currently in the Low Priority Read (LPR) CAM.
ps7_ddrc_mode_sts_reg_ddrc_reg_dbg_wr_q_depth:
  addr: 0xf8006054
  mask: 0x3f0
  name: ddrc_reg_dbg_wr_q_depth
  description: |
    Indicates the number of entries currently in the Write CAM.
ps7_ddrc_mode_sts_reg_ddrc_reg_dbg_stall:
  addr: 0xf8006054
  mask: 0x8
  name: ddrc_reg_dbg_stall
  description: |
    0: commands are being accepted.
    1: no commands are accepted by the controller.
ps7_ddrc_mode_sts_reg_ddrc_reg_operating_mode:
  addr: 0xf8006054
  mask: 0x7
  name: ddrc_reg_operating_mode
  description: |
    Gives the status of the controller.
    0: DDRC Init
    1: Normal operation
    2: Powerdown mode
    3: Self-refresh mode
    4 and above: deep power down mode (LPDDR2 only)
ps7_ddrc_DLL_calib_reg_ddrc_dis_dll_calib:
  addr: 0xf8006058
  mask: 0x10000
  name: reg_ddrc_dis_dll_calib
  description: |
    When 1, disable dll_calib generated by the controller. The core should issue the dll_calib signal using co_gs_dll_calib input. This input is changeable on the fly.
    When 0, controller will issue dll_calib periodically
ps7_ddrc_DLL_calib_reserved_reg_ddrc_dll_calib_to_max_x1024:
  addr: 0xf8006058
  mask: 0xff00
  name: reserved_reg_ddrc_dll_calib_to_max_x1024
  description: |
    Reserved. Do not modify.
ps7_ddrc_DLL_calib_reserved_reg_ddrc_dll_calib_to_min_x1024:
  addr: 0xf8006058
  mask: 0xff
  name: reserved_reg_ddrc_dll_calib_to_min_x1024
  description: |
    Reserved. Do not modify.
ps7_ddrc_ODT_delay_hold_reg_ddrc_wr_odt_hold:
  addr: 0xf800605c
  mask: 0xf000
  name: reg_ddrc_wr_odt_hold
  description: |
    Cycles to hold ODT for a Write Command. When 0x0, ODT signal is ON for 1 cycle. When 0x1, it is ON for 2 cycles, etc. The values to program in different modes are : DRAM Burst of 4 -2, DRAM Burst of 8 -4
ps7_ddrc_ODT_delay_hold_reg_ddrc_rd_odt_hold:
  addr: 0xf800605c
  mask: 0xf00
  name: reg_ddrc_rd_odt_hold
  description: |
    Unused
ps7_ddrc_ODT_delay_hold_reg_ddrc_wr_odt_delay:
  addr: 0xf800605c
  mask: 0xf0
  name: reg_ddrc_wr_odt_delay
  description: |
    The delay, in clock cycles, from issuing a write command to setting ODT values associated with that command. ODT setting should remain constant for the entire time that DQS is driven by the controller. The suggested value for DDR2 is WL - 5 and for DDR3 is 0. WL is Write latency. DDR2 ODT has a 2-cycle on-time delay and a 2.5-cycle off-time delay.
    ODT is not applicable to LPDDR2.
ps7_ddrc_ODT_delay_hold_reg_ddrc_rd_odt_delay:
  addr: 0xf800605c
  mask: 0xf
  name: reg_ddrc_rd_odt_delay
  description: |
    UNUSED
ps7_ddrc_ctrl_reg1_reg_ddrc_selfref_en:
  addr: 0xf8006060
  mask: 0x1000
  name: reg_ddrc_selfref_en
  description: |
    If 1, then the controller will put the DRAM into self refresh when the transaction store is empty.
    Dynamic Bit Field.
ps7_ddrc_ctrl_reg1_reserved:
  addr: 0xf8006060
  mask: 0x800
  name: reserved
  description: |
    Always keep this set to 0x0
ps7_ddrc_ctrl_reg1_reg_ddrc_dis_collision_page_opt:
  addr: 0xf8006060
  mask: 0x400
  name: reg_ddrc_dis_collision_page_opt
  description: |
    When this is set to 0, auto-precharge will be disabled for the flushed command in a collision case. Collision cases are write followed by read to same address, read followed by write to same address, or write followed by write to same address with DIS_WC bit = 1 (where 'same address' comparisons exclude the two address bits representing critical word).
ps7_ddrc_ctrl_reg1_reg_ddrc_dis_wc:
  addr: 0xf8006060
  mask: 0x200
  name: reg_ddrc_dis_wc
  description: |
    Disable Write Combine:
    0: enable
    1: disable
ps7_ddrc_ctrl_reg1_reg_ddrc_refresh_update_level:
  addr: 0xf8006060
  mask: 0x100
  name: reg_ddrc_refresh_update_level
  description: |
    Toggle this signal to indicate that refresh register(s) have been updated. The value will be automatically updated when exiting soft reset. So it does not need to be toggled initially.
    Dynamic Bit Field.
ps7_ddrc_ctrl_reg1_reg_ddrc_auto_pre_en:
  addr: 0xf8006060
  mask: 0x80
  name: reg_ddrc_auto_pre_en
  description: |
    When set, most reads and writes will be issued with auto-precharge. (Exceptions can be made for collision cases.)
ps7_ddrc_ctrl_reg1_reg_ddrc_lpr_num_entries:
  addr: 0xf8006060
  mask: 0x7e
  name: reg_ddrc_lpr_num_entries
  description: |
    Number of entries in the low priority transaction store is this value plus 1. In this design, by default all read ports are treated as low priority and hence the value of 0x1F. The hpr_num_entries is 32 minus this value. Bit [6] is ignored.
ps7_ddrc_ctrl_reg1_reg_ddrc_pageclose:
  addr: 0xf8006060
  mask: 0x1
  name: reg_ddrc_pageclose
  description: |
    If true, bank will be closed and kept closed if no transactions are available for it. If false, bank will remain open until there is a need to close it (to open a different page, or for page timeout or refresh timeout.) This does not apply when auto-refresh is used.
ps7_ddrc_ctrl_reg2_reg_arb_go2critical_en:
  addr: 0xf8006064
  mask: 0x20000
  name: reg_arb_go2critical_en
  description: |
    0: Keep reg_ddrc_go2critical_wr and reg_ddrc_go2critical_rd signals going to DDRC at 0.
    1: Set reg_ddrc_go2critical_wr and reg_ddrc_go2critical_rd signals going to DDRC based on Urgent input coming from AXI master.
ps7_ddrc_ctrl_reg2_reserved_1:
  addr: 0xf8006064
  mask: 0x1e000
  name: reserved_1
  description: |
    Reserved
ps7_ddrc_ctrl_reg2_reg_ddrc_go2critical_hysteresis:
  addr: 0xf8006064
  mask: 0x1fe0
  name: reg_ddrc_go2critical_hysteresis
  description: |
    Describes the number of cycles that co_gs_go2critical_rd or co_gs_go2critical_wr must be asserted before the corresponding queue moves to the 'critical' state in the DDRC. The arbiter controls the co_gs_go2critical_* signals; it is designed for use with this hysteresis field set to 0.
ps7_ddrc_ctrl_reg2_reserved:
  addr: 0xf8006064
  mask: 0x1f
  name: reserved
  description: |
    Reserved
ps7_ddrc_ctrl_reg3_reg_ddrc_dfi_t_wlmrd:
  addr: 0xf8006068
  mask: 0x3ff0000
  name: reg_ddrc_dfi_t_wlmrd
  description: |
    DDR2 and LPDDR2: not applicable.
    DDR3: First DQS/DQS# rising edge after write leveling mode is programmed. This is same as the tMLRD value from the DRAM spec.
ps7_ddrc_ctrl_reg3_reg_ddrc_rdlvl_rr:
  addr: 0xf8006068
  mask: 0xff00
  name: reg_ddrc_rdlvl_rr
  description: |
    DDR2 and LPDDR2: not applicable.
    DDR3: Read leveling read-to-read delay. Specifies the minimum number of clock cycles from the assertion of a read command to the next read command.
    Only applicable when connecting to PHYs operating in PHY RdLvl Evaluation mode.
ps7_ddrc_ctrl_reg3_reg_ddrc_wrlvl_ww:
  addr: 0xf8006068
  mask: 0xff
  name: reg_ddrc_wrlvl_ww
  description: |
    DDR2: not applicable.
    LPDDR2 and DDR3: Write leveling write-to-write delay. Specifies the minimum number of clock cycles from the assertion of a ddrc_dfi_wrlvl_strobe signal to the next ddrc_dfi_wrlvl_strobe signal. Only applicable when connecting to PHYs operating in PHY RdLvl Evaluation mode.
    Recommended value is: (RL + reg_phy_rdc_we_to_re_delay + 50)
ps7_ddrc_ctrl_reg4_dfi_t_ctrlupd_interval_max_x1024:
  addr: 0xf800606c
  mask: 0xff00
  name: dfi_t_ctrlupd_interval_max_x1024
  description: |
    This is the maximum amount of time between Controller initiated DFI update requests. This timer resets with each update request; when the timer expires, traffic is blocked for a few cycles. PHY can use this idle time to recalibrate the delay lines to the DLLs. The DLL calibration is also used to reset PHY FIFO pointers in case of data capture errors. Updates are required to maintain calibration over PVT, but frequent updates may impact performance. Units: 1024 clocks
ps7_ddrc_ctrl_reg4_dfi_t_ctrlupd_interval_min_x1024:
  addr: 0xf800606c
  mask: 0xff
  name: dfi_t_ctrlupd_interval_min_x1024
  description: |
    This is the minimum amount of time between Controller initiated DFI update requests (which will be executed whenever the controller is idle). Set this number higher to reduce the frequency of update requests, which can have a small impact on the latency of the first read request when the controller is idle. Units: 1024 clocks
ps7_ddrc_ctrl_reg5_reserved:
  addr: 0xf8006078
  mask: 0xfc000000
  name: reserved
  description: |
    Reserved
ps7_ddrc_ctrl_reg5_reg_ddrc_t_ckesr:
  addr: 0xf8006078
  mask: 0x3f00000
  name: reg_ddrc_t_ckesr
  description: |
    Minimum CKE low width for Self Refresh entry to exit Timing in memory clock cycles. Recommended settings:
    LPDDR2: tCKESR
    DDR2: tCKE
    DDR3: tCKE+1
ps7_ddrc_ctrl_reg5_reg_ddrc_t_cksrx:
  addr: 0xf8006078
  mask: 0xf0000
  name: reg_ddrc_t_cksrx
  description: |
    This is the time before Self Refresh Exit that CK is maintained as a valid clock before issuing SRX. Specifies the clock stable time before SRX.
    Recommended settings:
    LPDDR2: 2
    DDR2: 1
    DDR3: tCKSRX
ps7_ddrc_ctrl_reg5_reg_ddrc_t_cksre:
  addr: 0xf8006078
  mask: 0xf000
  name: reg_ddrc_t_cksre
  description: |
    This is the time after Self Refresh Entry that CK is maintained as a valid clock. Specifies the clock disable delay after SRE.
    Recommended settings:
    LPDDR2: 2
    DDR2: 1
    DDR3: tCKSRE
ps7_ddrc_ctrl_reg5_reg_ddrc_dfi_t_dram_clk_enable:
  addr: 0xf8006078
  mask: 0xf00
  name: reg_ddrc_dfi_t_dram_clk_enable
  description: |
    Specifies the number of DFI clock cycles from the de-assertion of the ddrc_dfi_dram_clk_disable signal on the DFI until the first valid rising edge of the clock to the DRAM memory devices at the PHY-DRAM boundary. If the DFI clock and the memory clock are not phase aligned, this timing parameter should be rounded up to the next integer value.
ps7_ddrc_ctrl_reg5_reg_ddrc_dfi_t_dram_clk_disable:
  addr: 0xf8006078
  mask: 0xf0
  name: reg_ddrc_dfi_t_dram_clk_disable
  description: |
    Specifies the number of DFI clock cycles from the assertion of the ddrc_dfi_dram_clk_disable signal on the DFI until the clock to the DRAM memory devices, at the PHY-DRAM boundary, maintains a low value. If the DFI clock and the memory clock are not phase aligned, this timing parameter should be rounded up to the next integer value.
ps7_ddrc_ctrl_reg5_reg_ddrc_dfi_t_ctrl_delay:
  addr: 0xf8006078
  mask: 0xf
  name: reg_ddrc_dfi_t_ctrl_delay
  description: |
    Specifies the number of DFI clock cycles after an assertion or deassertion of the DFI control signals that the control signals at the PHY-DRAM interface reflect the assertion or de-assertion. If the DFI clock and the memory clock are not phase-aligned, this timing parameter should be rounded up to the next integer value.
ps7_ddrc_ctrl_reg6_reserved:
  addr: 0xf800607c
  mask: 0xfff00000
  name: reserved
  description: |
    Reserved
ps7_ddrc_ctrl_reg6_reg_ddrc_t_ckcsx:
  addr: 0xf800607c
  mask: 0xf0000
  name: reg_ddrc_t_ckcsx
  description: |
    This is the time before Clock Stop Exit that CK is maintained as a valid clock before issuing DPDX. Specifies the clock stable time before next command after Clock Stop Exit.
    Recommended setting for LPDDR2: tXP + 2.
ps7_ddrc_ctrl_reg6_reg_ddrc_t_ckdpdx:
  addr: 0xf800607c
  mask: 0xf000
  name: reg_ddrc_t_ckdpdx
  description: |
    This is the time before Deep Power Down Exit that CK is maintained as a valid clock before issuing DPDX. Specifies the clock stable time before DPDX.
    Recommended setting for LPDDR2: 2.
ps7_ddrc_ctrl_reg6_reg_ddrc_t_ckdpde:
  addr: 0xf800607c
  mask: 0xf00
  name: reg_ddrc_t_ckdpde
  description: |
    This is the time after Deep Power Down Entry that CK is maintained as a valid clock. Specifies the clock disable delay after DPDE.
    Recommended setting for LPDDR2: 2.
ps7_ddrc_ctrl_reg6_reg_ddrc_t_ckpdx:
  addr: 0xf800607c
  mask: 0xf0
  name: reg_ddrc_t_ckpdx
  description: |
    This is the time before Power Down Exit that CK is maintained as a valid clock before issuing PDX. Specifies the clock stable time before PDX.
    Recommended setting for LPDDR2: 2.
ps7_ddrc_ctrl_reg6_reg_ddrc_t_ckpde:
  addr: 0xf800607c
  mask: 0xf
  name: reg_ddrc_t_ckpde
  description: |
    This is the time after Power Down Entry that CK is maintained as a valid clock. Specifies the clock disable delay after PDE.
    Recommended setting for LPDDR2: 2.
ps7_ddrc_CHE_REFRESH_TIMER01_reserved_refresh_timer1_start_value_x32:
  addr: 0xf80060a0
  mask: 0xfff000
  name: reserved_refresh_timer1_start_value_x32
  description: |
    Reserved. Do not modify.
ps7_ddrc_CHE_REFRESH_TIMER01_reserved_refresh_timer0_start_value_x32:
  addr: 0xf80060a0
  mask: 0xfff
  name: reserved_refresh_timer0_start_value_x32
  description: |
    Reserved. Do not modify.
ps7_ddrc_CHE_T_ZQ_reg_ddrc_t_zq_short_nop:
  addr: 0xf80060a4
  mask: 0xffc00000
  name: reg_ddrc_t_zq_short_nop
  description: |
    DDR2: not applicable.
    LPDDR2 and DDR3: Number of cycles of NOP required after a ZQCS (ZQ calibration short) command is issued to DRAM. Units: Clock cycles.
ps7_ddrc_CHE_T_ZQ_reg_ddrc_t_zq_long_nop:
  addr: 0xf80060a4
  mask: 0x3ff000
  name: reg_ddrc_t_zq_long_nop
  description: |
    DDR2: not applicable.
    LPDDR2 and DDR3: Number of cycles of NOP required after a ZQCL (ZQ calibration long) command is issued to DRAM. Units: Clock cycles.
ps7_ddrc_CHE_T_ZQ_reg_ddrc_t_mod:
  addr: 0xf80060a4
  mask: 0xffc
  name: reg_ddrc_t_mod
  description: |
    Mode register set command update delay (minimum d'128)
ps7_ddrc_CHE_T_ZQ_reg_ddrc_ddr3:
  addr: 0xf80060a4
  mask: 0x2
  name: reg_ddrc_ddr3
  description: |
    Indicates operating in DDR2/DDR3 mode. Default value is set for DDR3.
ps7_ddrc_CHE_T_ZQ_reg_ddrc_dis_auto_zq:
  addr: 0xf80060a4
  mask: 0x1
  name: reg_ddrc_dis_auto_zq
  description: |
    1=disable controller generation of ZQCS command. Co_gs_zq_calib_short can be used instead to control ZQ calibration commands. 0=internally generate ZQCS commands based on reg_ddrc_t_zq_short_interval_x1024 This is only present for implementations supporting DDR3 and LPDDR2 devices.
ps7_ddrc_CHE_T_ZQ_Short_Interval_Reg_dram_rstn_x1024:
  addr: 0xf80060a8
  mask: 0xff00000
  name: dram_rstn_x1024
  description: |
    Number of cycles to assert DRAM reset signal during init sequence. Units: 1024 Clock cycles. Applicable for DDR3 only.
ps7_ddrc_CHE_T_ZQ_Short_Interval_Reg_t_zq_short_interval_x1024:
  addr: 0xf80060a8
  mask: 0xfffff
  name: t_zq_short_interval_x1024
  description: |
    DDR2: not used.
    LPDDR2 and DDR3: Average interval to wait between automatically issuing ZQCS (ZQ calibration short) commands to DDR3 devices. Meaningless if reg_ddrc_dis_auto_zq=1. Units: 1024 Clock cycles.
ps7_ddrc_deep_pwrdwn_reg_deeppowerdown_to_x1024:
  addr: 0xf80060ac
  mask: 0x1fe
  name: deeppowerdown_to_x1024
  description: |
    DDR2 and DDR3: not sued.
    LPDDR2: Minimum deep power down time. DDR exits from deep power down mode immediately after reg_ddrc_deeppowerdown_en is deasserted. Value from the spec is 500us. Units are in 1024 clock cycles.
    For performance only.
ps7_ddrc_deep_pwrdwn_reg_deeppowerdown_en:
  addr: 0xf80060ac
  mask: 0x1
  name: deeppowerdown_en
  description: |
    DDR2 and DDR3: not used.
    LPDDR2:
    0: Brings Controller out of Deep Powerdown mode.
    1: Puts DRAM into Deep Powerdown mode when the transaction store is empty.
    For performance only. Dynamic Bit Field.
ps7_ddrc_reg_2c_reg_ddrc_dfi_rd_data_eye_train:
  addr: 0xf80060b0
  mask: 0x10000000
  name: reg_ddrc_dfi_rd_data_eye_train
  description: |
    DDR2: not applicable.
    LPDDR2 and DDR3: 0:
    1: Read Data Eye training mode has been enabled as part of init sequence.
ps7_ddrc_reg_2c_reg_ddrc_dfi_rd_dqs_gate_level:
  addr: 0xf80060b0
  mask: 0x8000000
  name: reg_ddrc_dfi_rd_dqs_gate_level
  description: |
    0: Read DQS gate leveling is disabled.
    1: Read DQS Gate Leveling mode has been enabled as part of init sequence; Valid only for DDR3 DFI designs
ps7_ddrc_reg_2c_reg_ddrc_dfi_wr_level_en:
  addr: 0xf80060b0
  mask: 0x4000000
  name: reg_ddrc_dfi_wr_level_en
  description: |
    0: Write leveling disabled.
    1: Write leveling mode has been enabled as part of init sequence; Valid only for DDR3 DFI designs
ps7_ddrc_reg_2c_ddrc_reg_trdlvl_max_error:
  addr: 0xf80060b0
  mask: 0x2000000
  name: ddrc_reg_trdlvl_max_error
  description: |
    DDR2: not applicable.
    LPDDR2 and DDR3: When '1' indicates that the reg_ddrc_dfi_rdrlvl_max_x1024 timer has timed out. This is a Clear-on-Write register. If read leveling or gate training timed out, an error is indicated by the DDRC and this bit gets set. The value is held at that value until it is cleared.
    Clearing is done by writing a '0' to this register.
ps7_ddrc_reg_2c_ddrc_reg_twrlvl_max_error:
  addr: 0xf80060b0
  mask: 0x1000000
  name: ddrc_reg_twrlvl_max_error
  description: |
    When '1' indicates that the reg_ddrc_dfi_wrlvl_max_x1024 timer has timed out. This is a Clear-on-Write register. If write leveling timed out, an error is indicated by the DDRC and this bit gets set. The value is held until it is cleared.
    Clearing is done by writing a '0' to this register.
    Only present in designs that support DDR3.
ps7_ddrc_reg_2c_dfi_rdlvl_max_x1024:
  addr: 0xf80060b0
  mask: 0xfff000
  name: dfi_rdlvl_max_x1024
  description: |
    Read leveling maximum time.
    Specifies the maximum number of clock cycles that the controller will wait for a response (phy_dfi_rdlvl_resp) to a read leveling enable signal (ddrc_dfi_rdlvl_en or ddrc_dfi_rdlvl_gate_en). Only applicable when connecting to PHY's operating in 'PHY RdLvl Evaluation' mode. Typical value 0xFFF Units 1024 clocks
ps7_ddrc_reg_2c_dfi_wrlvl_max_x1024:
  addr: 0xf80060b0
  mask: 0xfff
  name: dfi_wrlvl_max_x1024
  description: |
    Write leveling maximum time. Specifies the maximum number of clock cycles that the controller will wait for a response (phy_dfi_wrlvl_resp) to a write leveling enable signal (ddrc_dfi_wrlvl_en). Only applicable when connecting to PHY's operating in 'PHY WrLvl Evaluation' mode. Typical value 0xFFF Units 1024 clocks
ps7_ddrc_reg_2d_reserved_reg_ddrc_dis_pre_bypass:
  addr: 0xf80060b4
  mask: 0x400
  name: reserved_reg_ddrc_dis_pre_bypass
  description: |
    Reserved. Do not modify.
ps7_ddrc_reg_2d_reg_ddrc_skip_ocd:
  addr: 0xf80060b4
  mask: 0x200
  name: reg_ddrc_skip_ocd
  description: |
    This register must be kept at 1'b1. 1'b0 is NOT supported.
    1: Indicates the controller to skip OCD adjustment step during DDR2 initialization. OCD_Default and OCD_Exit are performed instead.
    0: Not supported.
ps7_ddrc_reg_2d_reserved_reg_ddrc_2t_delay:
  addr: 0xf80060b4
  mask: 0x1ff
  name: reserved_reg_ddrc_2t_delay
  description: |
    Reserved. Do not modify.
ps7_ddrc_dfi_timing_reg_ddrc_dfi_t_ctrlup_max:
  addr: 0xf80060b8
  mask: 0x1ff8000
  name: reg_ddrc_dfi_t_ctrlup_max
  description: |
    Specifies the maximum number of clock cycles that the ddrc_dfi_ctrlupd_req signal can assert.
ps7_ddrc_dfi_timing_reg_ddrc_dfi_t_ctrlup_min:
  addr: 0xf80060b8
  mask: 0x7fe0
  name: reg_ddrc_dfi_t_ctrlup_min
  description: |
    Specifies the minimum number of clock cycles that the ddrc_dfi_ctrlupd_req signal must be asserted.
ps7_ddrc_dfi_timing_reg_ddrc_dfi_t_rddata_en:
  addr: 0xf80060b8
  mask: 0x1f
  name: reg_ddrc_dfi_t_rddata_en
  description: |
    Time from the assertion of a READ command on the DFI interface to the assertion of the phy_dfi_rddata_en signal.
    DDR2 and DDR3: RL - 1
    LPDDR: RL
    Where RL is read latency of DRAM.
ps7_ddrc_CHE_ECC_CONTROL_REG_OFFSET_Clear_Correctable_DRAM_ECC_error:
  addr: 0xf80060c4
  mask: 0x2
  name: Clear_Correctable_DRAM_ECC_error
  description: |
    Writing 1 to this bit will clear the correctable log valid bit and the correctable error counters.
ps7_ddrc_CHE_ECC_CONTROL_REG_OFFSET_Clear_Uncorrectable_DRAM_ECC_error:
  addr: 0xf80060c4
  mask: 0x1
  name: Clear_Uncorrectable_DRAM_ECC_error
  description: |
    Writing 1 to this bit will clear the uncorrectable log valid bit and the uncorrectable error counters.
ps7_ddrc_CHE_CORR_ECC_LOG_REG_OFFSET_ECC_CORRECTED_BIT_NUM:
  addr: 0xf80060c8
  mask: 0xfe
  name: ECC_CORRECTED_BIT_NUM
  description: |
    Indicator of the bit number syndrome in error for single-bit errors. The field is 7-bit wide to handle 72-bits of data.
    This is an encoded value with ECC bits placed in between data. The encoding is given in section 5.4 Correctable bit number from the lowest error lane is reported here. There are only 13-valid bits going to an ECC lane (8-data + 5-ECC). Only 4-bits are needed to encode a max value of d'13. Bit[7] of this register is used to indicate the exact byte lane. When a error happens, if CORR_ECC_LOG_COL[0] from register 0x33 is 1'b0, then the error happened in Lane 0 or 1. If CORR_ECC_LOG_COL[0] is 1'b1, then the error happened in Lane 2 or 3. Bit[7] of this register indicates whether the error is from upper or lower byte lane. If it is 0, then it is lower byte lane and if it is 1, then it is upper byte lane. Together with CORR_ECC_LOG_COL[0] and bit[7] of this register, the exact byte lane with correctable error can be determined.
ps7_ddrc_CHE_CORR_ECC_LOG_REG_OFFSET_CORR_ECC_LOG_VALID:
  addr: 0xf80060c8
  mask: 0x1
  name: CORR_ECC_LOG_VALID
  description: |
    Set to 1 when a correctable ECC error is captured. As long as this is 1 no further ECC errors will be captured. This is cleared when a 1 is written to register bit[1] of ECC CONTROL REGISTER (0x31)
ps7_ddrc_CHE_CORR_ECC_ADDR_REG_OFFSET_CORR_ECC_LOG_BANK:
  addr: 0xf80060cc
  mask: 0x70000000
  name: CORR_ECC_LOG_BANK
  description: |
    Bank [2:0]
ps7_ddrc_CHE_CORR_ECC_ADDR_REG_OFFSET_CORR_ECC_LOG_ROW:
  addr: 0xf80060cc
  mask: 0xffff000
  name: CORR_ECC_LOG_ROW
  description: |
    Row [15:0]
ps7_ddrc_CHE_CORR_ECC_ADDR_REG_OFFSET_CORR_ECC_LOG_COL:
  addr: 0xf80060cc
  mask: 0xfff
  name: CORR_ECC_LOG_COL
  description: |
    Column [11:0]
ps7_ddrc_CHE_CORR_ECC_DATA_31_0_REG_OFFSET_CORR_ECC_LOG_DAT_31_0:
  addr: 0xf80060d0
  mask: 0xffffffff
  name: CORR_ECC_LOG_DAT_31_0
  description: |
    Bits [31:0] of the data that caused the captured correctable ECC error. (Data associated with the first ECC error if multiple errors occurred since CORR_ECC_LOG_VALID was cleared). Since each ECC engine handles 8-bits of data, only the lower 8-bits of this register have valid data. The upper 24-bits will always be 0.
ps7_ddrc_CHE_CORR_ECC_DATA_63_32_REG_OFFSET_CORR_ECC_LOG_DAT_63_32:
  addr: 0xf80060d4
  mask: 0xffffffff
  name: CORR_ECC_LOG_DAT_63_32
  description: |
    Bits [63:32] of the data that caused the captured correctable ECC error. (Data associated with the first ECC error if multiple errors occurred since CORR_ECC_LOG_VALID was cleared) Since each ECC engine handles 8-bits of data and that is logged in register 0x34, all the 32-bits of this register will always be 0.
ps7_ddrc_CHE_CORR_ECC_DATA_71_64_REG_OFFSET_CORR_ECC_LOG_DAT_71_64:
  addr: 0xf80060d8
  mask: 0xff
  name: CORR_ECC_LOG_DAT_71_64
  description: |
    Bits [71:64] of the data that caused the captured correctable ECC error. (Data associated with the first ECC error if multiple errors occurred since CORR_ECC_LOG_VALID was cleared) 5-bits of ECC are calculated over 8-bits of data.
    Bits[68:64] carries these 5-bits. Bits[71:69] are always 0.
ps7_ddrc_CHE_UNCORR_ECC_LOG_REG_OFFSET_UNCORR_ECC_LOG_VALID:
  addr: 0xf80060dc
  mask: 0x1
  name: UNCORR_ECC_LOG_VALID
  description: |
    Set to 1 when an uncorrectable ECC error is captured. As long as this is a 1, no further ECC errors will be captured. This is cleared when a 1 is written to register bit[0] of ECC CONTROL REGISTER (0x31).
ps7_ddrc_CHE_UNCORR_ECC_ADDR_REG_OFFSET_UNCORR_ECC_LOG_BANK:
  addr: 0xf80060e0
  mask: 0x70000000
  name: UNCORR_ECC_LOG_BANK
  description: |
    Bank [2:0]
ps7_ddrc_CHE_UNCORR_ECC_ADDR_REG_OFFSET_UNCORR_ECC_LOG_ROW:
  addr: 0xf80060e0
  mask: 0xffff000
  name: UNCORR_ECC_LOG_ROW
  description: |
    Row [15:0]
ps7_ddrc_CHE_UNCORR_ECC_ADDR_REG_OFFSET_UNCORR_ECC_LOG_COL:
  addr: 0xf80060e0
  mask: 0xfff
  name: UNCORR_ECC_LOG_COL
  description: |
    Column [11:0]
ps7_ddrc_CHE_UNCORR_ECC_DATA_31_0_REG_OFFSET_UNCORR_ECC_LOG_DAT_31_0:
  addr: 0xf80060e4
  mask: 0xffffffff
  name: UNCORR_ECC_LOG_DAT_31_0
  description: |
    bits [31:0] of the data that caused the captured uncorrectable ECC error. (Data associated with the first ECC error if multiple errors occurred since UNCORR_ECC_LOG_VALID was cleared). Since each ECC engine handles 8-bits of data, only the lower 8-bits of this register have valid data. The upper 24-bits will always be 0.
ps7_ddrc_CHE_UNCORR_ECC_DATA_63_32_REG_OFFSET_UNCORR_ECC_LOG_DAT_63_32:
  addr: 0xf80060e8
  mask: 0xffffffff
  name: UNCORR_ECC_LOG_DAT_63_32
  description: |
    bits [63:32] of the data that caused the captured uncorrectable ECC error. (Data associated with the first ECC error if multiple errors occurred since CORR_ECC_LOG_VALID was cleared) Since each ECC engine handles 8-bits of data and that is logged in register 0x34, all the 32-bits of this register will always be 0.
ps7_ddrc_CHE_UNCORR_ECC_DATA_71_64_REG_OFFSET_UNCORR_ECC_LOG_DAT_71_64:
  addr: 0xf80060ec
  mask: 0xff
  name: UNCORR_ECC_LOG_DAT_71_64
  description: |
    bits [71:64] of the data that caused the captured uncorrectable ECC error. (Data associated with the first ECC error if multiple errors occurred since UNCORR_ECC_LOG_VALID was cleared) 5-bits of ECC are calculated over 8-bits of data. Bits[68:64] carries these 5-bits. Bits[71:69] are always 0.
ps7_ddrc_CHE_ECC_STATS_REG_OFFSET_STAT_NUM_CORR_ERR:
  addr: 0xf80060f0
  mask: 0xff00
  name: STAT_NUM_CORR_ERR
  description: |
    Returns the number of correctable ECC errors seen since the last read. Counter saturates at max value. This is cleared when a 1 is written to register bit[1] of ECC CONTROL REGISTER (0x58).
ps7_ddrc_CHE_ECC_STATS_REG_OFFSET_STAT_NUM_UNCORR_ERR:
  addr: 0xf80060f0
  mask: 0xff
  name: STAT_NUM_UNCORR_ERR
  description: |
    Returns the number of uncorrectable errors since the last read. Counter saturates at max value. This is cleared when a 1 is written to register bit[0] of ECC CONTROL REGISTER (0x58).
ps7_ddrc_ECC_scrub_reg_ddrc_dis_scrub:
  addr: 0xf80060f4
  mask: 0x8
  name: reg_ddrc_dis_scrub
  description: |
    0: Enable ECC scrubs (valid only when reg_ddrc_ecc_mode = 100).
    1: Disable ECC scrubs
ps7_ddrc_ECC_scrub_reg_ddrc_ecc_mode:
  addr: 0xf80060f4
  mask: 0x7
  name: reg_ddrc_ecc_mode
  description: |
    DRAM ECC Mode. The only valid values that works for this project are 000 (No ECC) and 100 (SEC/DED over 1-beat). To run the design in ECC mode, set reg_ddrc_data_bus_width to 2'b01 (Half bus width) and reg_ddrc_ecc_mode to 100. In this mode, there will be 16-data bits + 6-bit ECC on the DRAM bus. Controller must NOT be put in full bus width mode, when ECC is turned ON.
    000 : No ECC,
    001: Reserved
    010: Parity
    011: Reserved
    100: SEC/DED over 1-beat
    101: SEC/DED over multiple beats
    110: Device Correction
    111: Reserved
ps7_ddrc_CHE_ECC_CORR_BIT_MASK_31_0_REG_OFFSET_ddrc_reg_ecc_corr_bit_mask:
  addr: 0xf80060f8
  mask: 0xffffffff
  name: ddrc_reg_ecc_corr_bit_mask
  description: |
    Bits [31:0] of ddrc_reg_ecc_corr_bit_mask register. Indicates the mask of the corrected data. 1 - on any bit indicates that the bit has been corrected by the DRAM ECC logic 0 - on any bit indicates that the bit has NOT been corrected by the DRAM ECC logic. Valid when any bit of 'ddrc_reg_ecc_corrected_err' is high. This mask doesn't indicate any correction that has been made in the ECC check bits. If there are errors in multiple lanes, then this signal will have the mask for the lowest lane. Each ECC engine works on 8-bits of data. Hence only the lower 8-bits carry valid information. Upper 24-bits are always 0.
ps7_ddrc_CHE_ECC_CORR_BIT_MASK_63_32_REG_OFFSET_ddrc_reg_ecc_corr_bit_mask:
  addr: 0xf80060fc
  mask: 0xffffffff
  name: ddrc_reg_ecc_corr_bit_mask
  description: |
    Bits [63:32] of ddrc_reg_ecc_corr_bit_mask register. Indicates the mask of the corrected data. 1 - on any bit indicates that the bit has been corrected by the DRAM ECC logic 0 - on any bit indicates that the bit has NOT been corrected by the DRAM ECC logic. Valid when any bit of 'ddrc_reg_ecc_corrected_err' is high. This mask doesn't indicate any correction that has been made in the ECC check bits. If there are errors in multiple lanes, then this signal will have the mask for the lowest lane. Each ECC engine works on 8-bits of data and this is reported in register 0x3E. All 32-bits of this register are 0 always.
ps7_ddrc_phy_rcvr_enable_reg_phy_dif_off:
  addr: 0xf8006114
  mask: 0xf0
  name: reg_phy_dif_off
  description: |
    Value to drive to IO receiver enable pins when turning it OFF.
    When in powerdown or self-refresh (CKE=0) this value will be sent to the IOs to control receiver on/off.
    IOD is the size specified by the IO_DIFEN_SIZE parameter.
    Depending on the IO, one of these signals dif_on or dif_off can be used.
ps7_ddrc_phy_rcvr_enable_reg_phy_dif_on:
  addr: 0xf8006114
  mask: 0xf
  name: reg_phy_dif_on
  description: |
    Value to drive to IO receiver enable pins when turning it ON.
    When NOT in powerdown or self-refresh (when CKE=1) this value will be sent to the IOs to control receiver on/off.
    IOD is the size specified by the IO_DIFEN_SIZE parameter.
ps7_ddrc_PHY_Config0_reg_phy_dq_offset:
  addr: 0xf8006118
  mask: 0x7f000000
  name: reg_phy_dq_offset
  description: |
    Offset value from DQS to DQ. Default value: 0x40 (for 90 degree shift).
    This is only used when reg_phy_use_wr_level=1.
    #Note 1: When a port width (W) is multiple of N instances of Ranks or Slices, each instance will get W/N bits. Instance n will get (n+1)*(W/N) -1: n (W/N) bits where n (0, 1, to N-1) is the instance number of Rank or Slice.
ps7_ddrc_PHY_Config0_reg_phy_bist_err_clr:
  addr: 0xf8006118
  mask: 0xff8000
  name: reg_phy_bist_err_clr
  description: |
    Clear the mismatch error flag from the BIST Checker.
    0: No effect
    1: sticky error flag is cleared
ps7_ddrc_PHY_Config0_reg_phy_bist_shift_dq:
  addr: 0xf8006118
  mask: 0x7fc0
  name: reg_phy_bist_shift_dq
  description: |
    Determines whether early shifting is required for a particular DQ bit when reg_phy_bist_mode is 10.
    0: PRBS pattern without any shift.
    1: PRBS pattern shifted early by 1 bit.
ps7_ddrc_PHY_Config0_reserved_reg_phy_board_lpbk_rx:
  addr: 0xf8006118
  mask: 0x20
  name: reserved_reg_phy_board_lpbk_rx
  description: |
    Reserved. Do not modify.
ps7_ddrc_PHY_Config0_reserved_reg_phy_board_lpbk_tx:
  addr: 0xf8006118
  mask: 0x10
  name: reserved_reg_phy_board_lpbk_tx
  description: |
    Reserved. Do not modify.
ps7_ddrc_PHY_Config0_reg_phy_wrlvl_inc_mode:
  addr: 0xf8006118
  mask: 0x8
  name: reg_phy_wrlvl_inc_mode
  description: |
    reserved
ps7_ddrc_PHY_Config0_reg_phy_gatelvl_inc_mode:
  addr: 0xf8006118
  mask: 0x4
  name: reg_phy_gatelvl_inc_mode
  description: |
    reserved
ps7_ddrc_PHY_Config0_reg_phy_rdlvl_inc_mode:
  addr: 0xf8006118
  mask: 0x2
  name: reg_phy_rdlvl_inc_mode
  description: |
    reserved
ps7_ddrc_PHY_Config0_reg_phy_data_slice_in_use:
  addr: 0xf8006118
  mask: 0x1
  name: reg_phy_data_slice_in_use
  description: |
    Data bus width selection for Read FIFO RE generation. One bit for each data slice.
    0: read data responses are ignored.
    1: data slice is valid.
    Note: The Phy Data Slice 0 must always be enabled.
ps7_ddrc_PHY_Config1_reg_phy_dq_offset:
  addr: 0xf800611c
  mask: 0x7f000000
  name: reg_phy_dq_offset
  description: |
    Offset value from DQS to DQ. Default value: 0x40 (for 90 degree shift).
    This is only used when reg_phy_use_wr_level=1.
    #Note 1: When a port width (W) is multiple of N instances of Ranks or Slices, each instance will get W/N bits. Instance n will get (n+1)*(W/N) -1: n (W/N) bits where n (0, 1, to N-1) is the instance number of Rank or Slice.
ps7_ddrc_PHY_Config1_reg_phy_bist_err_clr:
  addr: 0xf800611c
  mask: 0xff8000
  name: reg_phy_bist_err_clr
  description: |
    Clear the mismatch error flag from the BIST Checker.
    0: No effect
    1: sticky error flag is cleared
ps7_ddrc_PHY_Config1_reg_phy_bist_shift_dq:
  addr: 0xf800611c
  mask: 0x7fc0
  name: reg_phy_bist_shift_dq
  description: |
    Determines whether early shifting is required for a particular DQ bit when reg_phy_bist_mode is 10.
    0: PRBS pattern without any shift.
    1: PRBS pattern shifted early by 1 bit.
ps7_ddrc_PHY_Config1_reserved_reg_phy_board_lpbk_rx:
  addr: 0xf800611c
  mask: 0x20
  name: reserved_reg_phy_board_lpbk_rx
  description: |
    Reserved. Do not modify.
ps7_ddrc_PHY_Config1_reserved_reg_phy_board_lpbk_tx:
  addr: 0xf800611c
  mask: 0x10
  name: reserved_reg_phy_board_lpbk_tx
  description: |
    Reserved. Do not modify.
ps7_ddrc_PHY_Config1_reg_phy_wrlvl_inc_mode:
  addr: 0xf800611c
  mask: 0x8
  name: reg_phy_wrlvl_inc_mode
  description: |
    reserved
ps7_ddrc_PHY_Config1_reg_phy_gatelvl_inc_mode:
  addr: 0xf800611c
  mask: 0x4
  name: reg_phy_gatelvl_inc_mode
  description: |
    reserved
ps7_ddrc_PHY_Config1_reg_phy_rdlvl_inc_mode:
  addr: 0xf800611c
  mask: 0x2
  name: reg_phy_rdlvl_inc_mode
  description: |
    reserved
ps7_ddrc_PHY_Config1_reg_phy_data_slice_in_use:
  addr: 0xf800611c
  mask: 0x1
  name: reg_phy_data_slice_in_use
  description: |
    Data bus width selection for Read FIFO RE generation. One bit for each data slice.
    0: read data responses are ignored.
    1: data slice is valid.
    Note: The Phy Data Slice 0 must always be enabled.
ps7_ddrc_PHY_Config2_reg_phy_dq_offset:
  addr: 0xf8006120
  mask: 0x7f000000
  name: reg_phy_dq_offset
  description: |
    Offset value from DQS to DQ. Default value: 0x40 (for 90 degree shift).
    This is only used when reg_phy_use_wr_level=1.
    #Note 1: When a port width (W) is multiple of N instances of Ranks or Slices, each instance will get W/N bits. Instance n will get (n+1)*(W/N) -1: n (W/N) bits where n (0, 1, to N-1) is the instance number of Rank or Slice.
ps7_ddrc_PHY_Config2_reg_phy_bist_err_clr:
  addr: 0xf8006120
  mask: 0xff8000
  name: reg_phy_bist_err_clr
  description: |
    Clear the mismatch error flag from the BIST Checker.
    0: No effect
    1: sticky error flag is cleared
ps7_ddrc_PHY_Config2_reg_phy_bist_shift_dq:
  addr: 0xf8006120
  mask: 0x7fc0
  name: reg_phy_bist_shift_dq
  description: |
    Determines whether early shifting is required for a particular DQ bit when reg_phy_bist_mode is 10.
    0: PRBS pattern without any shift.
    1: PRBS pattern shifted early by 1 bit.
ps7_ddrc_PHY_Config2_reserved_reg_phy_board_lpbk_rx:
  addr: 0xf8006120
  mask: 0x20
  name: reserved_reg_phy_board_lpbk_rx
  description: |
    Reserved. Do not modify.
ps7_ddrc_PHY_Config2_reserved_reg_phy_board_lpbk_tx:
  addr: 0xf8006120
  mask: 0x10
  name: reserved_reg_phy_board_lpbk_tx
  description: |
    Reserved. Do not modify.
ps7_ddrc_PHY_Config2_reg_phy_wrlvl_inc_mode:
  addr: 0xf8006120
  mask: 0x8
  name: reg_phy_wrlvl_inc_mode
  description: |
    reserved
ps7_ddrc_PHY_Config2_reg_phy_gatelvl_inc_mode:
  addr: 0xf8006120
  mask: 0x4
  name: reg_phy_gatelvl_inc_mode
  description: |
    reserved
ps7_ddrc_PHY_Config2_reg_phy_rdlvl_inc_mode:
  addr: 0xf8006120
  mask: 0x2
  name: reg_phy_rdlvl_inc_mode
  description: |
    reserved
ps7_ddrc_PHY_Config2_reg_phy_data_slice_in_use:
  addr: 0xf8006120
  mask: 0x1
  name: reg_phy_data_slice_in_use
  description: |
    Data bus width selection for Read FIFO RE generation. One bit for each data slice.
    0: read data responses are ignored.
    1: data slice is valid.
    Note: The Phy Data Slice 0 must always be enabled.
ps7_ddrc_PHY_Config3_reg_phy_dq_offset:
  addr: 0xf8006124
  mask: 0x7f000000
  name: reg_phy_dq_offset
  description: |
    Offset value from DQS to DQ. Default value: 0x40 (for 90 degree shift).
    This is only used when reg_phy_use_wr_level=1.
    #Note 1: When a port width (W) is multiple of N instances of Ranks or Slices, each instance will get W/N bits. Instance n will get (n+1)*(W/N) -1: n (W/N) bits where n (0, 1, to N-1) is the instance number of Rank or Slice.
ps7_ddrc_PHY_Config3_reg_phy_bist_err_clr:
  addr: 0xf8006124
  mask: 0xff8000
  name: reg_phy_bist_err_clr
  description: |
    Clear the mismatch error flag from the BIST Checker.
    0: No effect
    1: sticky error flag is cleared
ps7_ddrc_PHY_Config3_reg_phy_bist_shift_dq:
  addr: 0xf8006124
  mask: 0x7fc0
  name: reg_phy_bist_shift_dq
  description: |
    Determines whether early shifting is required for a particular DQ bit when reg_phy_bist_mode is 10.
    0: PRBS pattern without any shift.
    1: PRBS pattern shifted early by 1 bit.
ps7_ddrc_PHY_Config3_reserved_reg_phy_board_lpbk_rx:
  addr: 0xf8006124
  mask: 0x20
  name: reserved_reg_phy_board_lpbk_rx
  description: |
    Reserved. Do not modify.
ps7_ddrc_PHY_Config3_reserved_reg_phy_board_lpbk_tx:
  addr: 0xf8006124
  mask: 0x10
  name: reserved_reg_phy_board_lpbk_tx
  description: |
    Reserved. Do not modify.
ps7_ddrc_PHY_Config3_reg_phy_wrlvl_inc_mode:
  addr: 0xf8006124
  mask: 0x8
  name: reg_phy_wrlvl_inc_mode
  description: |
    reserved
ps7_ddrc_PHY_Config3_reg_phy_gatelvl_inc_mode:
  addr: 0xf8006124
  mask: 0x4
  name: reg_phy_gatelvl_inc_mode
  description: |
    reserved
ps7_ddrc_PHY_Config3_reg_phy_rdlvl_inc_mode:
  addr: 0xf8006124
  mask: 0x2
  name: reg_phy_rdlvl_inc_mode
  description: |
    reserved
ps7_ddrc_PHY_Config3_reg_phy_data_slice_in_use:
  addr: 0xf8006124
  mask: 0x1
  name: reg_phy_data_slice_in_use
  description: |
    Data bus width selection for Read FIFO RE generation. One bit for each data slice.
    0: read data responses are ignored.
    1: data slice is valid.
    Note: The Phy Data Slice 0 must always be enabled.
ps7_ddrc_phy_init_ratio0_reg_phy_gatelvl_init_ratio:
  addr: 0xf800612c
  mask: 0xffc00
  name: reg_phy_gatelvl_init_ratio
  description: |
    The user programmable init ratio used Gate Leveling FSM
ps7_ddrc_phy_init_ratio0_reg_phy_wrlvl_init_ratio:
  addr: 0xf800612c
  mask: 0x3ff
  name: reg_phy_wrlvl_init_ratio
  description: |
    The user programmable init ratio used by Write Leveling FSM
ps7_ddrc_phy_init_ratio1_reg_phy_gatelvl_init_ratio:
  addr: 0xf8006130
  mask: 0xffc00
  name: reg_phy_gatelvl_init_ratio
  description: |
    The user programmable init ratio used Gate Leveling FSM
ps7_ddrc_phy_init_ratio1_reg_phy_wrlvl_init_ratio:
  addr: 0xf8006130
  mask: 0x3ff
  name: reg_phy_wrlvl_init_ratio
  description: |
    The user programmable init ratio used by Write Leveling FSM
ps7_ddrc_phy_init_ratio2_reg_phy_gatelvl_init_ratio:
  addr: 0xf8006134
  mask: 0xffc00
  name: reg_phy_gatelvl_init_ratio
  description: |
    The user programmable init ratio used Gate Leveling FSM
ps7_ddrc_phy_init_ratio2_reg_phy_wrlvl_init_ratio:
  addr: 0xf8006134
  mask: 0x3ff
  name: reg_phy_wrlvl_init_ratio
  description: |
    The user programmable init ratio used by Write Leveling FSM
ps7_ddrc_phy_init_ratio3_reg_phy_gatelvl_init_ratio:
  addr: 0xf8006138
  mask: 0xffc00
  name: reg_phy_gatelvl_init_ratio
  description: |
    The user programmable init ratio used Gate Leveling FSM
ps7_ddrc_phy_init_ratio3_reg_phy_wrlvl_init_ratio:
  addr: 0xf8006138
  mask: 0x3ff
  name: reg_phy_wrlvl_init_ratio
  description: |
    The user programmable init ratio used by Write Leveling FSM
ps7_ddrc_phy_rd_dqs_cfg0_reg_phy_rd_dqs_slave_delay:
  addr: 0xf8006140
  mask: 0xff800
  name: reg_phy_rd_dqs_slave_delay
  description: |
    If reg_phy_rd_dqs_slave_force is 1, replace delay/tap value for read DQS slave DLL with this value.
ps7_ddrc_phy_rd_dqs_cfg0_reg_phy_rd_dqs_slave_force:
  addr: 0xf8006140
  mask: 0x400
  name: reg_phy_rd_dqs_slave_force
  description: |
    0: Use reg_phy_rd_dqs_slave_ratio for the read DQS slave DLL
    1: overwrite the delay/tap value for read DQS slave DLL with the value of the reg_phy_rd_dqs_slave_delay bus.
ps7_ddrc_phy_rd_dqs_cfg0_reg_phy_rd_dqs_slave_ratio:
  addr: 0xf8006140
  mask: 0x3ff
  name: reg_phy_rd_dqs_slave_ratio
  description: |
    Ratio value for read DQS slave DLL. This is the fraction of a clock cycle represented by the shift to be applied to the read DQS in units of 256ths. In other words, the full-cycle tap value from the master DLL will be scaled by this number over 256 to get the delay value for the slave delay line. Provide a default value of 0x40 for most applications
ps7_ddrc_phy_rd_dqs_cfg1_reg_phy_rd_dqs_slave_delay:
  addr: 0xf8006144
  mask: 0xff800
  name: reg_phy_rd_dqs_slave_delay
  description: |
    If reg_phy_rd_dqs_slave_force is 1, replace delay/tap value for read DQS slave DLL with this value.
ps7_ddrc_phy_rd_dqs_cfg1_reg_phy_rd_dqs_slave_force:
  addr: 0xf8006144
  mask: 0x400
  name: reg_phy_rd_dqs_slave_force
  description: |
    0: Use reg_phy_rd_dqs_slave_ratio for the read DQS slave DLL
    1: overwrite the delay/tap value for read DQS slave DLL with the value of the reg_phy_rd_dqs_slave_delay bus.
ps7_ddrc_phy_rd_dqs_cfg1_reg_phy_rd_dqs_slave_ratio:
  addr: 0xf8006144
  mask: 0x3ff
  name: reg_phy_rd_dqs_slave_ratio
  description: |
    Ratio value for read DQS slave DLL. This is the fraction of a clock cycle represented by the shift to be applied to the read DQS in units of 256ths. In other words, the full-cycle tap value from the master DLL will be scaled by this number over 256 to get the delay value for the slave delay line. Provide a default value of 0x40 for most applications
ps7_ddrc_phy_rd_dqs_cfg2_reg_phy_rd_dqs_slave_delay:
  addr: 0xf8006148
  mask: 0xff800
  name: reg_phy_rd_dqs_slave_delay
  description: |
    If reg_phy_rd_dqs_slave_force is 1, replace delay/tap value for read DQS slave DLL with this value.
ps7_ddrc_phy_rd_dqs_cfg2_reg_phy_rd_dqs_slave_force:
  addr: 0xf8006148
  mask: 0x400
  name: reg_phy_rd_dqs_slave_force
  description: |
    0: Use reg_phy_rd_dqs_slave_ratio for the read DQS slave DLL
    1: overwrite the delay/tap value for read DQS slave DLL with the value of the reg_phy_rd_dqs_slave_delay bus.
ps7_ddrc_phy_rd_dqs_cfg2_reg_phy_rd_dqs_slave_ratio:
  addr: 0xf8006148
  mask: 0x3ff
  name: reg_phy_rd_dqs_slave_ratio
  description: |
    Ratio value for read DQS slave DLL. This is the fraction of a clock cycle represented by the shift to be applied to the read DQS in units of 256ths. In other words, the full-cycle tap value from the master DLL will be scaled by this number over 256 to get the delay value for the slave delay line. Provide a default value of 0x40 for most applications
ps7_ddrc_phy_rd_dqs_cfg3_reg_phy_rd_dqs_slave_delay:
  addr: 0xf800614c
  mask: 0xff800
  name: reg_phy_rd_dqs_slave_delay
  description: |
    If reg_phy_rd_dqs_slave_force is 1, replace delay/tap value for read DQS slave DLL with this value.
ps7_ddrc_phy_rd_dqs_cfg3_reg_phy_rd_dqs_slave_force:
  addr: 0xf800614c
  mask: 0x400
  name: reg_phy_rd_dqs_slave_force
  description: |
    0: Use reg_phy_rd_dqs_slave_ratio for the read DQS slave DLL
    1: overwrite the delay/tap value for read DQS slave DLL with the value of the reg_phy_rd_dqs_slave_delay bus.
ps7_ddrc_phy_rd_dqs_cfg3_reg_phy_rd_dqs_slave_ratio:
  addr: 0xf800614c
  mask: 0x3ff
  name: reg_phy_rd_dqs_slave_ratio
  description: |
    Ratio value for read DQS slave DLL. This is the fraction of a clock cycle represented by the shift to be applied to the read DQS in units of 256ths. In other words, the full-cycle tap value from the master DLL will be scaled by this number over 256 to get the delay value for the slave delay line. Provide a default value of 0x40 for most applications
ps7_ddrc_phy_wr_dqs_cfg0_reg_phy_wr_dqs_slave_delay:
  addr: 0xf8006154
  mask: 0xff800
  name: reg_phy_wr_dqs_slave_delay
  description: |
    If reg_phy_wr_dqs_slave_force is 1, replace delay/tap value for write DQS slave DLL with this value.
ps7_ddrc_phy_wr_dqs_cfg0_reg_phy_wr_dqs_slave_force:
  addr: 0xf8006154
  mask: 0x400
  name: reg_phy_wr_dqs_slave_force
  description: |
    0: Use reg_phy_wr_dqs_slave_ratio for the write DQS slave DLL
    1: overwrite the delay/tap value for write DQS slave DLL with the value of the reg_phy_wr_dqs_slave_delay bus.
ps7_ddrc_phy_wr_dqs_cfg0_reg_phy_wr_dqs_slave_ratio:
  addr: 0xf8006154
  mask: 0x3ff
  name: reg_phy_wr_dqs_slave_ratio
  description: |
    Ratio value for write DQS slave DLL. This is the fraction of a clock cycle represented by the shift to be applied to the write DQS in units of 256ths. In other words, the full-cycle tap value from the master DLL will be scaled by this number over 256 to get the delay value for the slave delay line. (Used to program the manual training ratio value)
ps7_ddrc_phy_wr_dqs_cfg1_reg_phy_wr_dqs_slave_delay:
  addr: 0xf8006158
  mask: 0xff800
  name: reg_phy_wr_dqs_slave_delay
  description: |
    If reg_phy_wr_dqs_slave_force is 1, replace delay/tap value for write DQS slave DLL with this value.
ps7_ddrc_phy_wr_dqs_cfg1_reg_phy_wr_dqs_slave_force:
  addr: 0xf8006158
  mask: 0x400
  name: reg_phy_wr_dqs_slave_force
  description: |
    0: Use reg_phy_wr_dqs_slave_ratio for the write DQS slave DLL
    1: overwrite the delay/tap value for write DQS slave DLL with the value of the reg_phy_wr_dqs_slave_delay bus.
ps7_ddrc_phy_wr_dqs_cfg1_reg_phy_wr_dqs_slave_ratio:
  addr: 0xf8006158
  mask: 0x3ff
  name: reg_phy_wr_dqs_slave_ratio
  description: |
    Ratio value for write DQS slave DLL. This is the fraction of a clock cycle represented by the shift to be applied to the write DQS in units of 256ths. In other words, the full-cycle tap value from the master DLL will be scaled by this number over 256 to get the delay value for the slave delay line. (Used to program the manual training ratio value)
ps7_ddrc_phy_wr_dqs_cfg2_reg_phy_wr_dqs_slave_delay:
  addr: 0xf800615c
  mask: 0xff800
  name: reg_phy_wr_dqs_slave_delay
  description: |
    If reg_phy_wr_dqs_slave_force is 1, replace delay/tap value for write DQS slave DLL with this value.
ps7_ddrc_phy_wr_dqs_cfg2_reg_phy_wr_dqs_slave_force:
  addr: 0xf800615c
  mask: 0x400
  name: reg_phy_wr_dqs_slave_force
  description: |
    0: Use reg_phy_wr_dqs_slave_ratio for the write DQS slave DLL
    1: overwrite the delay/tap value for write DQS slave DLL with the value of the reg_phy_wr_dqs_slave_delay bus.
ps7_ddrc_phy_wr_dqs_cfg2_reg_phy_wr_dqs_slave_ratio:
  addr: 0xf800615c
  mask: 0x3ff
  name: reg_phy_wr_dqs_slave_ratio
  description: |
    Ratio value for write DQS slave DLL. This is the fraction of a clock cycle represented by the shift to be applied to the write DQS in units of 256ths. In other words, the full-cycle tap value from the master DLL will be scaled by this number over 256 to get the delay value for the slave delay line. (Used to program the manual training ratio value)
ps7_ddrc_phy_wr_dqs_cfg3_reg_phy_wr_dqs_slave_delay:
  addr: 0xf8006160
  mask: 0xff800
  name: reg_phy_wr_dqs_slave_delay
  description: |
    If reg_phy_wr_dqs_slave_force is 1, replace delay/tap value for write DQS slave DLL with this value.
ps7_ddrc_phy_wr_dqs_cfg3_reg_phy_wr_dqs_slave_force:
  addr: 0xf8006160
  mask: 0x400
  name: reg_phy_wr_dqs_slave_force
  description: |
    0: Use reg_phy_wr_dqs_slave_ratio for the write DQS slave DLL
    1: overwrite the delay/tap value for write DQS slave DLL with the value of the reg_phy_wr_dqs_slave_delay bus.
ps7_ddrc_phy_wr_dqs_cfg3_reg_phy_wr_dqs_slave_ratio:
  addr: 0xf8006160
  mask: 0x3ff
  name: reg_phy_wr_dqs_slave_ratio
  description: |
    Ratio value for write DQS slave DLL. This is the fraction of a clock cycle represented by the shift to be applied to the write DQS in units of 256ths. In other words, the full-cycle tap value from the master DLL will be scaled by this number over 256 to get the delay value for the slave delay line. (Used to program the manual training ratio value)
ps7_ddrc_phy_we_cfg0_reg_phy_fifo_we_in_delay:
  addr: 0xf8006168
  mask: 0x1ff000
  name: reg_phy_fifo_we_in_delay
  description: |
    Delay value to be used when reg_phy_fifo_we_in_force
    is set to 1.
ps7_ddrc_phy_we_cfg0_reg_phy_fifo_we_in_force:
  addr: 0xf8006168
  mask: 0x800
  name: reg_phy_fifo_we_in_force
  description: |
    0: Use reg_phy_fifo_we_slave_ratio as ratio value for fifo_we_X slave DLL
    1: overwrite the delay/tap value for fifo_we_X slave DLL with the value of the reg_phy_fifo_we_in_delay bus.
    i.e. The 'force' bit selects between specifying the delay in 'ratio' units or tap delay units
ps7_ddrc_phy_we_cfg0_reg_phy_fifo_we_slave_ratio:
  addr: 0xf8006168
  mask: 0x7ff
  name: reg_phy_fifo_we_slave_ratio
  description: |
    Ratio value to be used when reg_phy_fifo_we_in_force is set to 0.
ps7_ddrc_phy_we_cfg1_reg_phy_fifo_we_in_delay:
  addr: 0xf800616c
  mask: 0x1ff000
  name: reg_phy_fifo_we_in_delay
  description: |
    Delay value to be used when reg_phy_fifo_we_in_force
    is set to 1.
ps7_ddrc_phy_we_cfg1_reg_phy_fifo_we_in_force:
  addr: 0xf800616c
  mask: 0x800
  name: reg_phy_fifo_we_in_force
  description: |
    0: Use reg_phy_fifo_we_slave_ratio as ratio value for fifo_we_X slave DLL
    1: overwrite the delay/tap value for fifo_we_X slave DLL with the value of the reg_phy_fifo_we_in_delay bus.
    i.e. The 'force' bit selects between specifying the delay in 'ratio' units or tap delay units
ps7_ddrc_phy_we_cfg1_reg_phy_fifo_we_slave_ratio:
  addr: 0xf800616c
  mask: 0x7ff
  name: reg_phy_fifo_we_slave_ratio
  description: |
    Ratio value to be used when reg_phy_fifo_we_in_force is set to 0.
ps7_ddrc_phy_we_cfg2_reg_phy_fifo_we_in_delay:
  addr: 0xf8006170
  mask: 0x1ff000
  name: reg_phy_fifo_we_in_delay
  description: |
    Delay value to be used when reg_phy_fifo_we_in_force
    is set to 1.
ps7_ddrc_phy_we_cfg2_reg_phy_fifo_we_in_force:
  addr: 0xf8006170
  mask: 0x800
  name: reg_phy_fifo_we_in_force
  description: |
    0: Use reg_phy_fifo_we_slave_ratio as ratio value for fifo_we_X slave DLL
    1: overwrite the delay/tap value for fifo_we_X slave DLL with the value of the reg_phy_fifo_we_in_delay bus.
    i.e. The 'force' bit selects between specifying the delay in 'ratio' units or tap delay units
ps7_ddrc_phy_we_cfg2_reg_phy_fifo_we_slave_ratio:
  addr: 0xf8006170
  mask: 0x7ff
  name: reg_phy_fifo_we_slave_ratio
  description: |
    Ratio value to be used when reg_phy_fifo_we_in_force is set to 0.
ps7_ddrc_phy_we_cfg3_reg_phy_fifo_we_in_delay:
  addr: 0xf8006174
  mask: 0x1ff000
  name: reg_phy_fifo_we_in_delay
  description: |
    Delay value to be used when reg_phy_fifo_we_in_force
    is set to 1.
ps7_ddrc_phy_we_cfg3_reg_phy_fifo_we_in_force:
  addr: 0xf8006174
  mask: 0x800
  name: reg_phy_fifo_we_in_force
  description: |
    0: Use reg_phy_fifo_we_slave_ratio as ratio value for fifo_we_X slave DLL
    1: overwrite the delay/tap value for fifo_we_X slave DLL with the value of the reg_phy_fifo_we_in_delay bus.
    i.e. The 'force' bit selects between specifying the delay in 'ratio' units or tap delay units
ps7_ddrc_phy_we_cfg3_reg_phy_fifo_we_slave_ratio:
  addr: 0xf8006174
  mask: 0x7ff
  name: reg_phy_fifo_we_slave_ratio
  description: |
    Ratio value to be used when reg_phy_fifo_we_in_force is set to 0.
ps7_ddrc_wr_data_slv0_reg_phy_wr_data_slave_delay:
  addr: 0xf800617c
  mask: 0xff800
  name: reg_phy_wr_data_slave_delay
  description: |
    If reg_phy_wr_data_slave_force is 1, replace delay/tap value for write data slave DLL with this value.
ps7_ddrc_wr_data_slv0_reg_phy_wr_data_slave_force:
  addr: 0xf800617c
  mask: 0x400
  name: reg_phy_wr_data_slave_force
  description: |
    0: Selects reg_phy_wr_data_slave_ratio for write data slave DLL
    1: overwrite the delay/tap value for write data slave DLL with the value of the reg_phy_wr_data_slave_force bus.
ps7_ddrc_wr_data_slv0_reg_phy_wr_data_slave_ratio:
  addr: 0xf800617c
  mask: 0x3ff
  name: reg_phy_wr_data_slave_ratio
  description: |
    Ratio value for write data slave DLL. This is the fraction of a clock cycle represented by the shift to be applied to the write DQ muxes in units of 256ths. In other words, the full-cycle tap value from the master DLL will be scaled by this number over 256 to get the delay value for the slave delay line.
ps7_ddrc_wr_data_slv1_reg_phy_wr_data_slave_delay:
  addr: 0xf8006180
  mask: 0xff800
  name: reg_phy_wr_data_slave_delay
  description: |
    If reg_phy_wr_data_slave_force is 1, replace delay/tap value for write data slave DLL with this value.
ps7_ddrc_wr_data_slv1_reg_phy_wr_data_slave_force:
  addr: 0xf8006180
  mask: 0x400
  name: reg_phy_wr_data_slave_force
  description: |
    0: Selects reg_phy_wr_data_slave_ratio for write data slave DLL
    1: overwrite the delay/tap value for write data slave DLL with the value of the reg_phy_wr_data_slave_force bus.
ps7_ddrc_wr_data_slv1_reg_phy_wr_data_slave_ratio:
  addr: 0xf8006180
  mask: 0x3ff
  name: reg_phy_wr_data_slave_ratio
  description: |
    Ratio value for write data slave DLL. This is the fraction of a clock cycle represented by the shift to be applied to the write DQ muxes in units of 256ths. In other words, the full-cycle tap value from the master DLL will be scaled by this number over 256 to get the delay value for the slave delay line.
ps7_ddrc_wr_data_slv2_reg_phy_wr_data_slave_delay:
  addr: 0xf8006184
  mask: 0xff800
  name: reg_phy_wr_data_slave_delay
  description: |
    If reg_phy_wr_data_slave_force is 1, replace delay/tap value for write data slave DLL with this value.
ps7_ddrc_wr_data_slv2_reg_phy_wr_data_slave_force:
  addr: 0xf8006184
  mask: 0x400
  name: reg_phy_wr_data_slave_force
  description: |
    0: Selects reg_phy_wr_data_slave_ratio for write data slave DLL
    1: overwrite the delay/tap value for write data slave DLL with the value of the reg_phy_wr_data_slave_force bus.
ps7_ddrc_wr_data_slv2_reg_phy_wr_data_slave_ratio:
  addr: 0xf8006184
  mask: 0x3ff
  name: reg_phy_wr_data_slave_ratio
  description: |
    Ratio value for write data slave DLL. This is the fraction of a clock cycle represented by the shift to be applied to the write DQ muxes in units of 256ths. In other words, the full-cycle tap value from the master DLL will be scaled by this number over 256 to get the delay value for the slave delay line.
ps7_ddrc_wr_data_slv3_reg_phy_wr_data_slave_delay:
  addr: 0xf8006188
  mask: 0xff800
  name: reg_phy_wr_data_slave_delay
  description: |
    If reg_phy_wr_data_slave_force is 1, replace delay/tap value for write data slave DLL with this value.
ps7_ddrc_wr_data_slv3_reg_phy_wr_data_slave_force:
  addr: 0xf8006188
  mask: 0x400
  name: reg_phy_wr_data_slave_force
  description: |
    0: Selects reg_phy_wr_data_slave_ratio for write data slave DLL
    1: overwrite the delay/tap value for write data slave DLL with the value of the reg_phy_wr_data_slave_force bus.
ps7_ddrc_wr_data_slv3_reg_phy_wr_data_slave_ratio:
  addr: 0xf8006188
  mask: 0x3ff
  name: reg_phy_wr_data_slave_ratio
  description: |
    Ratio value for write data slave DLL. This is the fraction of a clock cycle represented by the shift to be applied to the write DQ muxes in units of 256ths. In other words, the full-cycle tap value from the master DLL will be scaled by this number over 256 to get the delay value for the slave delay line.
ps7_ddrc_reg_64_reserved_reg_phy_int_lpbk:
  addr: 0xf8006190
  mask: 0x80000000
  name: reserved_reg_phy_int_lpbk
  description: |
    Reserved. Do not modify.
ps7_ddrc_reg_64_reg_phy_cmd_latency:
  addr: 0xf8006190
  mask: 0x40000000
  name: reg_phy_cmd_latency
  description: |
    If set to 1, command comes to phy_ctrl through a flop.
ps7_ddrc_reg_64_reg_phy_lpddr:
  addr: 0xf8006190
  mask: 0x20000000
  name: reg_phy_lpddr
  description: |
    0: DDR2 or DDR3.
    1: LPDDR2.
ps7_ddrc_reg_64_reserved_reg_phy_use_rank0_delays:
  addr: 0xf8006190
  mask: 0x10000000
  name: reserved_reg_phy_use_rank0_delays
  description: |
    Reserved. Do not modify.
ps7_ddrc_reg_64_reg_phy_ctrl_slave_delay:
  addr: 0xf8006190
  mask: 0xfe00000
  name: reg_phy_ctrl_slave_delay
  description: |
    If reg_phy_rd_dqs_slave_force is 1, replace delay/tap value for address/command timing slave DLL with this value. This is a bit value, the remaining 2 bits are in register 0x65 bits[19:18].
ps7_ddrc_reg_64_reg_phy_ctrl_slave_force:
  addr: 0xf8006190
  mask: 0x100000
  name: reg_phy_ctrl_slave_force
  description: |
    0: Use reg_phy_ctrl_slave_ratio for address/command timing slave DLL
    1: overwrite the delay/tap value for address/command timing slave DLL with the value of the reg_phy_rd_dqs_slave_delay bus.
ps7_ddrc_reg_64_reg_phy_ctrl_slave_ratio:
  addr: 0xf8006190
  mask: 0xffc00
  name: reg_phy_ctrl_slave_ratio
  description: |
    Ratio value for address/command launch timing in phy_ctrl macro. This is the fraction of a clock cycle represented by the shift to be applied to the read DQS in units of 256ths. In other words, the full cycle tap value from the master DLL will be scaled by this number over 256 to get the delay value for the slave delay line.
ps7_ddrc_reg_64_reg_phy_sel_logic:
  addr: 0xf8006190
  mask: 0x200
  name: reg_phy_sel_logic
  description: |
    Selects one of the two read leveling algorithms.'b0: Select algorithm # 1'b1: Select algorithm # 2
    Please refer to Read Data Eye Training section in PHY User Guide for details about the Read Leveling algorithms
ps7_ddrc_reg_64_reserved_reg_phy_all_dq_mpr_rd_resp:
  addr: 0xf8006190
  mask: 0x100
  name: reserved_reg_phy_all_dq_mpr_rd_resp
  description: |
    Reserved. Do not modify.
ps7_ddrc_reg_64_reg_phy_invert_clkout:
  addr: 0xf8006190
  mask: 0x80
  name: reg_phy_invert_clkout
  description: |
    Inverts the polarity of DRAM clock.
    0: core clock is passed on to DRAM
    1: inverted core clock is passed on to DRAM.
    Use this when CLK can arrive at a DRAM device ahead of DQS or coincidence with DQS based on board topology. This effectively delays the CLK to the DRAM device by half -cycle, providing a CLK edge that DQS can align to during leveling.
ps7_ddrc_reg_64_reg_phy_bist_mode:
  addr: 0xf8006190
  mask: 0x60
  name: reg_phy_bist_mode
  description: |
    The mode bits select the pattern type generated by the BIST generator. All the patterns are transmitted continuously once enabled.
    00: constant pattern (0 repeated on each DQ bit)
    01: low freq pattern (00001111 repeated on each DQ bit)
    10: PRBS pattern (2^7-1 PRBS pattern repeated on each DQ bit) Each DQ bit always has same data value except when early shifting in PRBS mode is requested
    11: reserved
ps7_ddrc_reg_64_reg_phy_bist_force_err:
  addr: 0xf8006190
  mask: 0x10
  name: reg_phy_bist_force_err
  description: |
    This register bit is used to check that BIST checker is not giving false pass.
    When this port is set 1, data bit gets inverted before sending out to the external memory and BIST checker must return a mismatch error.
ps7_ddrc_reg_64_reg_phy_bist_enable:
  addr: 0xf8006190
  mask: 0x8
  name: reg_phy_bist_enable
  description: |
    Enable the internal BIST generation and checker logic when this port is set HIGH. Setting this port as 0 will stop the BIST generator/checker.
    In order to run BIST tests, this port must be set along with reg_phy_loopback.
ps7_ddrc_reg_64_reg_phy_at_spd_atpg:
  addr: 0xf8006190
  mask: 0x4
  name: reg_phy_at_spd_atpg
  description: |
    0: run scan test at slow clock speed but with high coverage
    1: run scan test at full clock speed but with less coverage
    During normal function mode, this port must be set 0.
ps7_ddrc_reg_64_reg_phy_bl2:
  addr: 0xf8006190
  mask: 0x2
  name: reg_phy_bl2
  description: |
    Reserved for future Use.
ps7_ddrc_reg_64_reserved_reg_phy_loopback:
  addr: 0xf8006190
  mask: 0x1
  name: reserved_reg_phy_loopback
  description: |
    Reserved. Do not modify.
ps7_ddrc_reg_65_reg_phy_ctrl_slave_delay:
  addr: 0xf8006194
  mask: 0xc0000
  name: reg_phy_ctrl_slave_delay
  description: |
    If reg-phy_rd_dqs_slave_force is 1, replace delay/tap value for address/command timing slave DLL with this value
ps7_ddrc_reg_65_reg_phy_dis_calib_rst:
  addr: 0xf8006194
  mask: 0x20000
  name: reg_phy_dis_calib_rst
  description: |
    Disable the dll_calib (internally generated) signal from resetting the Read Capture FIFO pointers and portions of phy_data.
    Note: dll_calib is
    (i) generated by dfi_ctrl_upd_req or
    (ii) by the PHY when it detects that the clock frequency variation has exceeded the bounds set by reg_phy_dll_lock_diff or
    (iii) periodically throughout the leveling process.
    dll_calib will update the slave DL with PVT-compensated values according to master DLL outputs
ps7_ddrc_reg_65_reg_phy_use_rd_data_eye_level:
  addr: 0xf8006194
  mask: 0x10000
  name: reg_phy_use_rd_data_eye_level
  description: |
    Read Data Eye training control.
    0: Use register programmed ratio values
    1: Use ratio for delay line calculated by data eye leveling
    Note: This is a Synchronous dynamic signal that requires timing closure
ps7_ddrc_reg_65_reg_phy_use_rd_dqs_gate_level:
  addr: 0xf8006194
  mask: 0x8000
  name: reg_phy_use_rd_dqs_gate_level
  description: |
    Read DQS Gate training control.
    0: Use register programmed ratio values
    1: Use ratio for delay line calculated by DQS gate leveling
    Note: This is a Synchronous dynamic signal that requires timing closure.
ps7_ddrc_reg_65_reg_phy_use_wr_level:
  addr: 0xf8006194
  mask: 0x4000
  name: reg_phy_use_wr_level
  description: |
    Write Leveling training control.
    0: Use register programmed ratio values
    1: Use ratio for delay line calculated by write leveling
    Note: This is a Synchronous dynamic signal that requires timing closure.
ps7_ddrc_reg_65_reg_phy_dll_lock_diff:
  addr: 0xf8006194
  mask: 0x3c00
  name: reg_phy_dll_lock_diff
  description: |
    The Maximum number of delay line taps variation allowed while maintaining the master DLL lock.
    When the PHY is in locked state and the variation on the clock exceeds the variation indicated by the register, the lock signal is deasserted
ps7_ddrc_reg_65_reg_phy_rd_rl_delay:
  addr: 0xf8006194
  mask: 0x3e0
  name: reg_phy_rd_rl_delay
  description: |
    This delay determines when to select the active rank's ratio logic delay for Read Data and Read DQS slave delay lines after PHY receives a read command at Control Interface.
    The programmed value must be (Read Latency - 3) with a minimum value of 1.
ps7_ddrc_reg_65_reg_phy_wr_rl_delay:
  addr: 0xf8006194
  mask: 0x1f
  name: reg_phy_wr_rl_delay
  description: |
    This delay determines when to select the active rank's ratio logic delay for Write Data and Write DQS slave delay lines after PHY receives a write command at Control Interface.
    The programmed value must be (Write Latency - 4) with a minimum value of 1.
ps7_ddrc_reg69_6a0_phy_reg_status_fifo_we_slave_dll_value:
  addr: 0xf80061a4
  mask: 0x1ff00000
  name: phy_reg_status_fifo_we_slave_dll_value
  description: |
    Delay value applied to FIFO WE slave DLL.
ps7_ddrc_reg69_6a0_phy_reg_rdlvl_fifowein_ratio:
  addr: 0xf80061a4
  mask: 0xffe00
  name: phy_reg_rdlvl_fifowein_ratio
  description: |
    Ratio value generated by Read Gate training FSM.
ps7_ddrc_reg69_6a0_phy_reg_bist_err:
  addr: 0xf80061a4
  mask: 0x1ff
  name: phy_reg_bist_err
  description: |
    Mismatch error flag from the BIST Checker. 1 bit per data slice. 1'b1: Pattern mismatch error 1'b0: All patterns matched This is a sticky flag. In order to clear this bit, port reg_phy_bist_err_clr must be set HIGH. Note that reg6b is unused.
ps7_ddrc_reg69_6a1_phy_reg_status_fifo_we_slave_dll_value:
  addr: 0xf80061a8
  mask: 0x1ff00000
  name: phy_reg_status_fifo_we_slave_dll_value
  description: |
    Delay value applied to FIFO WE slave DLL.
ps7_ddrc_reg69_6a1_phy_reg_rdlvl_fifowein_ratio:
  addr: 0xf80061a8
  mask: 0xffe00
  name: phy_reg_rdlvl_fifowein_ratio
  description: |
    Ratio value generated by Read Gate training FSM.
ps7_ddrc_reg69_6a1_phy_reg_bist_err:
  addr: 0xf80061a8
  mask: 0x1ff
  name: phy_reg_bist_err
  description: |
    Mismatch error flag from the BIST Checker. 1 bit per data slice. 1'b1: Pattern mismatch error 1'b0: All patterns matched This is a sticky flag. In order to clear this bit, port reg_phy_bist_err_clr must be set HIGH. Note that reg6b is unused.
ps7_ddrc_reg6c_6d2_phy_reg_status_fifo_we_slave_dll_value:
  addr: 0xf80061b0
  mask: 0x1ff00000
  name: phy_reg_status_fifo_we_slave_dll_value
  description: |
    Delay value applied to FIFO WE slave DLL.
ps7_ddrc_reg6c_6d2_phy_reg_rdlvl_fifowein_ratio:
  addr: 0xf80061b0
  mask: 0xffe00
  name: phy_reg_rdlvl_fifowein_ratio
  description: |
    Ratio value generated by Read Gate training FSM.
ps7_ddrc_reg6c_6d2_phy_reg_bist_err:
  addr: 0xf80061b0
  mask: 0x1ff
  name: phy_reg_bist_err
  description: |
    Mismatch error flag from the BIST Checker. 1 bit per data slice. 1'b1: Pattern mismatch error 1'b0: All patterns matched This is a sticky flag. In order to clear this bit, port reg_phy_bist_err_clr must be set HIGH. Note that reg6b is unused.
ps7_ddrc_reg6c_6d3_phy_reg_status_fifo_we_slave_dll_value:
  addr: 0xf80061b4
  mask: 0x1ff00000
  name: phy_reg_status_fifo_we_slave_dll_value
  description: |
    Delay value applied to FIFO WE slave DLL.
ps7_ddrc_reg6c_6d3_phy_reg_rdlvl_fifowein_ratio:
  addr: 0xf80061b4
  mask: 0xffe00
  name: phy_reg_rdlvl_fifowein_ratio
  description: |
    Ratio value generated by Read Gate training FSM.
ps7_ddrc_reg6c_6d3_phy_reg_bist_err:
  addr: 0xf80061b4
  mask: 0x1ff
  name: phy_reg_bist_err
  description: |
    Mismatch error flag from the BIST Checker. 1 bit per data slice. 1'b1: Pattern mismatch error 1'b0: All patterns matched This is a sticky flag. In order to clear this bit, port reg_phy_bist_err_clr must be set HIGH. Note that reg6b is unused.
ps7_ddrc_reg6e_710_phy_reg_rdlvl_dqs_ratio:
  addr: 0xf80061b8
  mask: 0x3ff00000
  name: phy_reg_rdlvl_dqs_ratio
  description: |
    Ratio value generated by Read Data Eye training FSM.
ps7_ddrc_reg6e_710_phy_reg_wrlvl_dq_ratio:
  addr: 0xf80061b8
  mask: 0xffc00
  name: phy_reg_wrlvl_dq_ratio
  description: |
    Ratio value generated by the write leveling FSM for Write Data.
ps7_ddrc_reg6e_710_phy_reg_wrlvl_dqs_ratio:
  addr: 0xf80061b8
  mask: 0x3ff
  name: phy_reg_wrlvl_dqs_ratio
  description: |
    Ratio value generated by the write leveling FSM for Write DQS.
ps7_ddrc_reg6e_711_phy_reg_rdlvl_dqs_ratio:
  addr: 0xf80061bc
  mask: 0x3ff00000
  name: phy_reg_rdlvl_dqs_ratio
  description: |
    Ratio value generated by Read Data Eye training FSM.
ps7_ddrc_reg6e_711_phy_reg_wrlvl_dq_ratio:
  addr: 0xf80061bc
  mask: 0xffc00
  name: phy_reg_wrlvl_dq_ratio
  description: |
    Ratio value generated by the write leveling FSM for Write Data.
ps7_ddrc_reg6e_711_phy_reg_wrlvl_dqs_ratio:
  addr: 0xf80061bc
  mask: 0x3ff
  name: phy_reg_wrlvl_dqs_ratio
  description: |
    Ratio value generated by the write leveling FSM for Write DQS.
ps7_ddrc_reg6e_712_phy_reg_rdlvl_dqs_ratio:
  addr: 0xf80061c0
  mask: 0x3ff00000
  name: phy_reg_rdlvl_dqs_ratio
  description: |
    Ratio value generated by Read Data Eye training FSM.
ps7_ddrc_reg6e_712_phy_reg_wrlvl_dq_ratio:
  addr: 0xf80061c0
  mask: 0xffc00
  name: phy_reg_wrlvl_dq_ratio
  description: |
    Ratio value generated by the write leveling FSM for Write Data.
ps7_ddrc_reg6e_712_phy_reg_wrlvl_dqs_ratio:
  addr: 0xf80061c0
  mask: 0x3ff
  name: phy_reg_wrlvl_dqs_ratio
  description: |
    Ratio value generated by the write leveling FSM for Write DQS.
ps7_ddrc_reg6e_713_phy_reg_rdlvl_dqs_ratio:
  addr: 0xf80061c4
  mask: 0x3ff00000
  name: phy_reg_rdlvl_dqs_ratio
  description: |
    Ratio value generated by Read Data Eye training FSM.
ps7_ddrc_reg6e_713_phy_reg_wrlvl_dq_ratio:
  addr: 0xf80061c4
  mask: 0xffc00
  name: phy_reg_wrlvl_dq_ratio
  description: |
    Ratio value generated by the write leveling FSM for Write Data.
ps7_ddrc_reg6e_713_phy_reg_wrlvl_dqs_ratio:
  addr: 0xf80061c4
  mask: 0x3ff
  name: phy_reg_wrlvl_dqs_ratio
  description: |
    Ratio value generated by the write leveling FSM for Write DQS.
ps7_ddrc_phy_dll_sts0_phy_reg_status_wr_dqs_slave_dll_value:
  addr: 0xf80061cc
  mask: 0x7fc0000
  name: phy_reg_status_wr_dqs_slave_dll_value
  description: |
    Delay value applied to write DQS slave DLL
ps7_ddrc_phy_dll_sts0_phy_reg_status_wr_data_slave_dll_value:
  addr: 0xf80061cc
  mask: 0x3fe00
  name: phy_reg_status_wr_data_slave_dll_value
  description: |
    Delay value applied to write data slave DLL
ps7_ddrc_phy_dll_sts0_phy_reg_status_rd_dqs_slave_dll_value:
  addr: 0xf80061cc
  mask: 0x1ff
  name: phy_reg_status_rd_dqs_slave_dll_value
  description: |
    Delay value applied to read data slave DLL
ps7_ddrc_phy_dll_sts1_phy_reg_status_wr_dqs_slave_dll_value:
  addr: 0xf80061d0
  mask: 0x7fc0000
  name: phy_reg_status_wr_dqs_slave_dll_value
  description: |
    Delay value applied to write DQS slave DLL
ps7_ddrc_phy_dll_sts1_phy_reg_status_wr_data_slave_dll_value:
  addr: 0xf80061d0
  mask: 0x3fe00
  name: phy_reg_status_wr_data_slave_dll_value
  description: |
    Delay value applied to write data slave DLL
ps7_ddrc_phy_dll_sts1_phy_reg_status_rd_dqs_slave_dll_value:
  addr: 0xf80061d0
  mask: 0x1ff
  name: phy_reg_status_rd_dqs_slave_dll_value
  description: |
    Delay value applied to read data slave DLL
ps7_ddrc_phy_dll_sts2_phy_reg_status_wr_dqs_slave_dll_value:
  addr: 0xf80061d4
  mask: 0x7fc0000
  name: phy_reg_status_wr_dqs_slave_dll_value
  description: |
    Delay value applied to write DQS slave DLL
ps7_ddrc_phy_dll_sts2_phy_reg_status_wr_data_slave_dll_value:
  addr: 0xf80061d4
  mask: 0x3fe00
  name: phy_reg_status_wr_data_slave_dll_value
  description: |
    Delay value applied to write data slave DLL
ps7_ddrc_phy_dll_sts2_phy_reg_status_rd_dqs_slave_dll_value:
  addr: 0xf80061d4
  mask: 0x1ff
  name: phy_reg_status_rd_dqs_slave_dll_value
  description: |
    Delay value applied to read data slave DLL
ps7_ddrc_phy_dll_sts3_phy_reg_status_wr_dqs_slave_dll_value:
  addr: 0xf80061d8
  mask: 0x7fc0000
  name: phy_reg_status_wr_dqs_slave_dll_value
  description: |
    Delay value applied to write DQS slave DLL
ps7_ddrc_phy_dll_sts3_phy_reg_status_wr_data_slave_dll_value:
  addr: 0xf80061d8
  mask: 0x3fe00
  name: phy_reg_status_wr_data_slave_dll_value
  description: |
    Delay value applied to write data slave DLL
ps7_ddrc_phy_dll_sts3_phy_reg_status_rd_dqs_slave_dll_value:
  addr: 0xf80061d8
  mask: 0x1ff
  name: phy_reg_status_rd_dqs_slave_dll_value
  description: |
    Delay value applied to read data slave DLL
ps7_ddrc_dll_lock_sts_phy_reg_rdlvl_fifowein_ratio_slice3_msb:
  addr: 0xf80061e0
  mask: 0xf00000
  name: phy_reg_rdlvl_fifowein_ratio_slice3_msb
  description: |
    Used as 4-msbits of slice3's ratio value generated by Read Gate training FSM.
    Refer to description of reg69_6a[1:0], fifo_we_slave ratio, for more details
ps7_ddrc_dll_lock_sts_phy_reg_status_dll_slave_value_1:
  addr: 0xf80061e0
  mask: 0xff800
  name: phy_reg_status_dll_slave_value_1
  description: |
    Shows the current Coarse and Fine delay values going to all the Slave DLLs [1:0] - Fine value [8:2] - Coarse value
    (For Master DLL 1)
ps7_ddrc_dll_lock_sts_phy_reg_status_dll_slave_value_0:
  addr: 0xf80061e0
  mask: 0x7fc
  name: phy_reg_status_dll_slave_value_0
  description: |
    Shows the current Coarse and Fine delay values going to all the Slave DLLs [1:0] - Fine value [8:2] - Coarse value (For Master DLL 0)
ps7_ddrc_dll_lock_sts_phy_reg_status_dll_lock_1:
  addr: 0xf80061e0
  mask: 0x2
  name: phy_reg_status_dll_lock_1
  description: |
    Status Master DLL 1 signal:
    0: not locked
    1: locked
ps7_ddrc_dll_lock_sts_phy_reg_status_dll_lock_0:
  addr: 0xf80061e0
  mask: 0x1
  name: phy_reg_status_dll_lock_0
  description: |
    Master DLL 0 Status signal:
    0: not locked
    1: locked
ps7_ddrc_phy_ctrl_sts_phy_reg_status_phy_ctrl_of_in_lock_state:
  addr: 0xf80061e4
  mask: 0x30000000
  name: phy_reg_status_phy_ctrl_of_in_lock_state
  description: |
    Lock status from Master DLL Output Filter.
    0: not locked, 1: locked.
    Bit 28: Fine delay line.
    Bit 29: Coarse delay line.
ps7_ddrc_phy_ctrl_sts_phy_reg_status_phy_ctrl_dll_slave_value:
  addr: 0xf80061e4
  mask: 0xff00000
  name: phy_reg_status_phy_ctrl_dll_slave_value
  description: |
    Values applied to the PHY_CTRL Slave DLL:
    Bit field 21:20 is the Fine value
    Bit field 27:22 is the Course value
ps7_ddrc_phy_ctrl_sts_phy_reg_status_phy_ctrl_dll_lock:
  addr: 0xf80061e4
  mask: 0x80000
  name: phy_reg_status_phy_ctrl_dll_lock
  description: |
    PHY Control Master DLL Status:
    0: not locked, 1: locked
ps7_ddrc_phy_ctrl_sts_phy_reg_status_of_out_delay_value:
  addr: 0xf80061e4
  mask: 0x7fc00
  name: phy_reg_status_of_out_delay_value
  description: |
    Values from Master DDL Output Filter (no default value).
    Bit field 11:10 is the Fine value
    Bit field 18:12 is the Coarse value
ps7_ddrc_phy_ctrl_sts_phy_reg_status_of_in_delay_value:
  addr: 0xf80061e4
  mask: 0x3ff
  name: phy_reg_status_of_in_delay_value
  description: |
    Values applied to Master DDL Output Filter (no default value):
    Bit field 1:0 is the Fine value
    Bit field 9:2 is the Coarse value
ps7_ddrc_phy_ctrl_sts_reg2_phy_reg_status_phy_ctrl_slave_dll_value:
  addr: 0xf80061e8
  mask: 0x7fc0000
  name: phy_reg_status_phy_ctrl_slave_dll_value
  description: |
    Delay value applied to read DQS slave DLL.
ps7_ddrc_phy_ctrl_sts_reg2_reserved:
  addr: 0xf80061e8
  mask: 0x3fe00
  name: reserved
  description: |
    reserved
ps7_ddrc_phy_ctrl_sts_reg2_phy_reg_status_phy_ctrl_of_in_delay_value:
  addr: 0xf80061e8
  mask: 0x1ff
  name: phy_reg_status_phy_ctrl_of_in_delay_value
  description: |
    Values applied to Master DLL Output Filter:
    Bit field 1:0 is the Fine value
    Bit field 8:2 is the Coarse value
ps7_ddrc_axi_id_reg_arb_rev_num:
  addr: 0xf8006200
  mask: 0x3f00000
  name: reg_arb_rev_num
  description: |
    Revision Number
ps7_ddrc_axi_id_reg_arb_prov_num:
  addr: 0xf8006200
  mask: 0xff000
  name: reg_arb_prov_num
  description: |
    Prov number
ps7_ddrc_axi_id_reg_arb_part_num:
  addr: 0xf8006200
  mask: 0xfff
  name: reg_arb_part_num
  description: |
    Part Number
ps7_ddrc_page_mask_reg_arb_page_addr_mask:
  addr: 0xf8006204
  mask: 0xffffffff
  name: reg_arb_page_addr_mask
  description: |
    Set this register based on the value programmed on the reg_ddrc_addrmap_* registers.
    Set the Column address bits to 0. Set the Page and Bank address bits to 1.
    This is used for calculating page_match inside the slave modules in Arbiter. The page_match is considered during the arbitration process. This mask applies to 64-bit address and not byte address.
    Setting this value to 0 disables transaction prioritization based on page/bank match.
ps7_ddrc_axi_priority_wr_port0_reserved_reg_arb_dis_rmw_portn:
  addr: 0xf8006208
  mask: 0x80000
  name: reserved_reg_arb_dis_rmw_portn
  description: |
    Reserved. Do not modify.
ps7_ddrc_axi_priority_wr_port0_reg_arb_dis_page_match_wr_portn:
  addr: 0xf8006208
  mask: 0x40000
  name: reg_arb_dis_page_match_wr_portn
  description: |
    Disable the page match feature.
ps7_ddrc_axi_priority_wr_port0_reg_arb_disable_urgent_wr_portn:
  addr: 0xf8006208
  mask: 0x20000
  name: reg_arb_disable_urgent_wr_portn
  description: |
    Disable urgent for this Write Port.
ps7_ddrc_axi_priority_wr_port0_reg_arb_disable_aging_wr_portn:
  addr: 0xf8006208
  mask: 0x10000
  name: reg_arb_disable_aging_wr_portn
  description: |
    Disable aging for this Write Port.
ps7_ddrc_axi_priority_wr_port0_reserved:
  addr: 0xf8006208
  mask: 0xfc00
  name: reserved
  description: |
    Reserved
ps7_ddrc_axi_priority_wr_port0_reg_arb_pri_wr_portn:
  addr: 0xf8006208
  mask: 0x3ff
  name: reg_arb_pri_wr_portn
  description: |
    Priority of this Write Port n. Value in this register used to load the aging counters (when respective port request is asserted and grant is generated to that port). These register can be reprogrammed to set priority of each port. Lower the value more will be priority given to the port. For example if 0x82 (port 0) value is set to 'h3FF, and 0x83 (port 1) is set to 'h0FF, and both port0 and port1 have requests, in this case port1 will get high priority and grant will be given to port1.
ps7_ddrc_axi_priority_wr_port1_reserved_reg_arb_dis_rmw_portn:
  addr: 0xf800620c
  mask: 0x80000
  name: reserved_reg_arb_dis_rmw_portn
  description: |
    Reserved. Do not modify.
ps7_ddrc_axi_priority_wr_port1_reg_arb_dis_page_match_wr_portn:
  addr: 0xf800620c
  mask: 0x40000
  name: reg_arb_dis_page_match_wr_portn
  description: |
    Disable the page match feature.
ps7_ddrc_axi_priority_wr_port1_reg_arb_disable_urgent_wr_portn:
  addr: 0xf800620c
  mask: 0x20000
  name: reg_arb_disable_urgent_wr_portn
  description: |
    Disable urgent for this Write Port.
ps7_ddrc_axi_priority_wr_port1_reg_arb_disable_aging_wr_portn:
  addr: 0xf800620c
  mask: 0x10000
  name: reg_arb_disable_aging_wr_portn
  description: |
    Disable aging for this Write Port.
ps7_ddrc_axi_priority_wr_port1_reserved:
  addr: 0xf800620c
  mask: 0xfc00
  name: reserved
  description: |
    Reserved
ps7_ddrc_axi_priority_wr_port1_reg_arb_pri_wr_portn:
  addr: 0xf800620c
  mask: 0x3ff
  name: reg_arb_pri_wr_portn
  description: |
    Priority of this Write Port n. Value in this register used to load the aging counters (when respective port request is asserted and grant is generated to that port). These register can be reprogrammed to set priority of each port. Lower the value more will be priority given to the port. For example if 0x82 (port 0) value is set to 'h3FF, and 0x83 (port 1) is set to 'h0FF, and both port0 and port1 have requests, in this case port1 will get high priority and grant will be given to port1.
ps7_ddrc_axi_priority_wr_port2_reserved_reg_arb_dis_rmw_portn:
  addr: 0xf8006210
  mask: 0x80000
  name: reserved_reg_arb_dis_rmw_portn
  description: |
    Reserved. Do not modify.
ps7_ddrc_axi_priority_wr_port2_reg_arb_dis_page_match_wr_portn:
  addr: 0xf8006210
  mask: 0x40000
  name: reg_arb_dis_page_match_wr_portn
  description: |
    Disable the page match feature.
ps7_ddrc_axi_priority_wr_port2_reg_arb_disable_urgent_wr_portn:
  addr: 0xf8006210
  mask: 0x20000
  name: reg_arb_disable_urgent_wr_portn
  description: |
    Disable urgent for this Write Port.
ps7_ddrc_axi_priority_wr_port2_reg_arb_disable_aging_wr_portn:
  addr: 0xf8006210
  mask: 0x10000
  name: reg_arb_disable_aging_wr_portn
  description: |
    Disable aging for this Write Port.
ps7_ddrc_axi_priority_wr_port2_reserved:
  addr: 0xf8006210
  mask: 0xfc00
  name: reserved
  description: |
    Reserved
ps7_ddrc_axi_priority_wr_port2_reg_arb_pri_wr_portn:
  addr: 0xf8006210
  mask: 0x3ff
  name: reg_arb_pri_wr_portn
  description: |
    Priority of this Write Port n. Value in this register used to load the aging counters (when respective port request is asserted and grant is generated to that port). These register can be reprogrammed to set priority of each port. Lower the value more will be priority given to the port. For example if 0x82 (port 0) value is set to 'h3FF, and 0x83 (port 1) is set to 'h0FF, and both port0 and port1 have requests, in this case port1 will get high priority and grant will be given to port1.
ps7_ddrc_axi_priority_wr_port3_reserved_reg_arb_dis_rmw_portn:
  addr: 0xf8006214
  mask: 0x80000
  name: reserved_reg_arb_dis_rmw_portn
  description: |
    Reserved. Do not modify.
ps7_ddrc_axi_priority_wr_port3_reg_arb_dis_page_match_wr_portn:
  addr: 0xf8006214
  mask: 0x40000
  name: reg_arb_dis_page_match_wr_portn
  description: |
    Disable the page match feature.
ps7_ddrc_axi_priority_wr_port3_reg_arb_disable_urgent_wr_portn:
  addr: 0xf8006214
  mask: 0x20000
  name: reg_arb_disable_urgent_wr_portn
  description: |
    Disable urgent for this Write Port.
ps7_ddrc_axi_priority_wr_port3_reg_arb_disable_aging_wr_portn:
  addr: 0xf8006214
  mask: 0x10000
  name: reg_arb_disable_aging_wr_portn
  description: |
    Disable aging for this Write Port.
ps7_ddrc_axi_priority_wr_port3_reserved:
  addr: 0xf8006214
  mask: 0xfc00
  name: reserved
  description: |
    Reserved
ps7_ddrc_axi_priority_wr_port3_reg_arb_pri_wr_portn:
  addr: 0xf8006214
  mask: 0x3ff
  name: reg_arb_pri_wr_portn
  description: |
    Priority of this Write Port n. Value in this register used to load the aging counters (when respective port request is asserted and grant is generated to that port). These register can be reprogrammed to set priority of each port. Lower the value more will be priority given to the port. For example if 0x82 (port 0) value is set to 'h3FF, and 0x83 (port 1) is set to 'h0FF, and both port0 and port1 have requests, in this case port1 will get high priority and grant will be given to port1.
ps7_ddrc_axi_priority_rd_port0_reg_arb_set_hpr_rd_portn:
  addr: 0xf8006218
  mask: 0x80000
  name: reg_arb_set_hpr_rd_portn
  description: |
    Enable reads to be generated as HPR for this Read Port.
ps7_ddrc_axi_priority_rd_port0_reg_arb_dis_page_match_rd_portn:
  addr: 0xf8006218
  mask: 0x40000
  name: reg_arb_dis_page_match_rd_portn
  description: |
    Disable the page match feature.
ps7_ddrc_axi_priority_rd_port0_reg_arb_disable_urgent_rd_portn:
  addr: 0xf8006218
  mask: 0x20000
  name: reg_arb_disable_urgent_rd_portn
  description: |
    Disable urgent for this Read Port.
ps7_ddrc_axi_priority_rd_port0_reg_arb_disable_aging_rd_portn:
  addr: 0xf8006218
  mask: 0x10000
  name: reg_arb_disable_aging_rd_portn
  description: |
    Disable aging for this Read Port.
ps7_ddrc_axi_priority_rd_port0_reserved_reserved:
  addr: 0xf8006218
  mask: 0xfc00
  name: reserved_reserved
  description: |
    Reserved. Do not modify.
ps7_ddrc_axi_priority_rd_port0_reg_arb_pri_rd_portn:
  addr: 0xf8006218
  mask: 0x3ff
  name: reg_arb_pri_rd_portn
  description: |
    Priority of this Read Port n. Value in this register used to load the aging counters (when respective port request is asserted and grant is generated to that port). These register can be reprogrammed to set priority of each port. Lower the value more will be priority given to the port. For example if 0x82 (port 0) value is set to 'h3FF, and 0x83 (port 1) is set to 'h0FF, and both port0 and port1 have requests, in this case port1 will get high priority and grant will be given to port1.
ps7_ddrc_axi_priority_rd_port1_reg_arb_set_hpr_rd_portn:
  addr: 0xf800621c
  mask: 0x80000
  name: reg_arb_set_hpr_rd_portn
  description: |
    Enable reads to be generated as HPR for this Read Port.
ps7_ddrc_axi_priority_rd_port1_reg_arb_dis_page_match_rd_portn:
  addr: 0xf800621c
  mask: 0x40000
  name: reg_arb_dis_page_match_rd_portn
  description: |
    Disable the page match feature.
ps7_ddrc_axi_priority_rd_port1_reg_arb_disable_urgent_rd_portn:
  addr: 0xf800621c
  mask: 0x20000
  name: reg_arb_disable_urgent_rd_portn
  description: |
    Disable urgent for this Read Port.
ps7_ddrc_axi_priority_rd_port1_reg_arb_disable_aging_rd_portn:
  addr: 0xf800621c
  mask: 0x10000
  name: reg_arb_disable_aging_rd_portn
  description: |
    Disable aging for this Read Port.
ps7_ddrc_axi_priority_rd_port1_reserved_reserved:
  addr: 0xf800621c
  mask: 0xfc00
  name: reserved_reserved
  description: |
    Reserved. Do not modify.
ps7_ddrc_axi_priority_rd_port1_reg_arb_pri_rd_portn:
  addr: 0xf800621c
  mask: 0x3ff
  name: reg_arb_pri_rd_portn
  description: |
    Priority of this Read Port n. Value in this register used to load the aging counters (when respective port request is asserted and grant is generated to that port). These register can be reprogrammed to set priority of each port. Lower the value more will be priority given to the port. For example if 0x82 (port 0) value is set to 'h3FF, and 0x83 (port 1) is set to 'h0FF, and both port0 and port1 have requests, in this case port1 will get high priority and grant will be given to port1.
ps7_ddrc_axi_priority_rd_port2_reg_arb_set_hpr_rd_portn:
  addr: 0xf8006220
  mask: 0x80000
  name: reg_arb_set_hpr_rd_portn
  description: |
    Enable reads to be generated as HPR for this Read Port.
ps7_ddrc_axi_priority_rd_port2_reg_arb_dis_page_match_rd_portn:
  addr: 0xf8006220
  mask: 0x40000
  name: reg_arb_dis_page_match_rd_portn
  description: |
    Disable the page match feature.
ps7_ddrc_axi_priority_rd_port2_reg_arb_disable_urgent_rd_portn:
  addr: 0xf8006220
  mask: 0x20000
  name: reg_arb_disable_urgent_rd_portn
  description: |
    Disable urgent for this Read Port.
ps7_ddrc_axi_priority_rd_port2_reg_arb_disable_aging_rd_portn:
  addr: 0xf8006220
  mask: 0x10000
  name: reg_arb_disable_aging_rd_portn
  description: |
    Disable aging for this Read Port.
ps7_ddrc_axi_priority_rd_port2_reserved_reserved:
  addr: 0xf8006220
  mask: 0xfc00
  name: reserved_reserved
  description: |
    Reserved. Do not modify.
ps7_ddrc_axi_priority_rd_port2_reg_arb_pri_rd_portn:
  addr: 0xf8006220
  mask: 0x3ff
  name: reg_arb_pri_rd_portn
  description: |
    Priority of this Read Port n. Value in this register used to load the aging counters (when respective port request is asserted and grant is generated to that port). These register can be reprogrammed to set priority of each port. Lower the value more will be priority given to the port. For example if 0x82 (port 0) value is set to 'h3FF, and 0x83 (port 1) is set to 'h0FF, and both port0 and port1 have requests, in this case port1 will get high priority and grant will be given to port1.
ps7_ddrc_axi_priority_rd_port3_reg_arb_set_hpr_rd_portn:
  addr: 0xf8006224
  mask: 0x80000
  name: reg_arb_set_hpr_rd_portn
  description: |
    Enable reads to be generated as HPR for this Read Port.
ps7_ddrc_axi_priority_rd_port3_reg_arb_dis_page_match_rd_portn:
  addr: 0xf8006224
  mask: 0x40000
  name: reg_arb_dis_page_match_rd_portn
  description: |
    Disable the page match feature.
ps7_ddrc_axi_priority_rd_port3_reg_arb_disable_urgent_rd_portn:
  addr: 0xf8006224
  mask: 0x20000
  name: reg_arb_disable_urgent_rd_portn
  description: |
    Disable urgent for this Read Port.
ps7_ddrc_axi_priority_rd_port3_reg_arb_disable_aging_rd_portn:
  addr: 0xf8006224
  mask: 0x10000
  name: reg_arb_disable_aging_rd_portn
  description: |
    Disable aging for this Read Port.
ps7_ddrc_axi_priority_rd_port3_reserved_reserved:
  addr: 0xf8006224
  mask: 0xfc00
  name: reserved_reserved
  description: |
    Reserved. Do not modify.
ps7_ddrc_axi_priority_rd_port3_reg_arb_pri_rd_portn:
  addr: 0xf8006224
  mask: 0x3ff
  name: reg_arb_pri_rd_portn
  description: |
    Priority of this Read Port n. Value in this register used to load the aging counters (when respective port request is asserted and grant is generated to that port). These register can be reprogrammed to set priority of each port. Lower the value more will be priority given to the port. For example if 0x82 (port 0) value is set to 'h3FF, and 0x83 (port 1) is set to 'h0FF, and both port0 and port1 have requests, in this case port1 will get high priority and grant will be given to port1.
ps7_ddrc_trusted_mem_cfg_reg_decprot:
  addr: 0xf8006290
  mask: 0xffff
  name: reg_decprot
  description: |
    Sets the memory regions to be secure or non-secure. The memory is divided into 64Mb sections. For a 1 Gb part, the number of regions is 16. 0 - non-secure region 1 - secure region Reserved. Not used any more.
ps7_ddrc_excl_access_cfg0_reg_excl_acc_id1_port:
  addr: 0xf8006294
  mask: 0x3fe00
  name: reg_excl_acc_id1_port
  description: |
    Reserved
ps7_ddrc_excl_access_cfg0_reg_excl_acc_id0_port:
  addr: 0xf8006294
  mask: 0x1ff
  name: reg_excl_acc_id0_port
  description: |
    Reserved
ps7_ddrc_excl_access_cfg1_reg_excl_acc_id1_port:
  addr: 0xf8006298
  mask: 0x3fe00
  name: reg_excl_acc_id1_port
  description: |
    Reserved
ps7_ddrc_excl_access_cfg1_reg_excl_acc_id0_port:
  addr: 0xf8006298
  mask: 0x1ff
  name: reg_excl_acc_id0_port
  description: |
    Reserved
ps7_ddrc_excl_access_cfg2_reg_excl_acc_id1_port:
  addr: 0xf800629c
  mask: 0x3fe00
  name: reg_excl_acc_id1_port
  description: |
    Reserved
ps7_ddrc_excl_access_cfg2_reg_excl_acc_id0_port:
  addr: 0xf800629c
  mask: 0x1ff
  name: reg_excl_acc_id0_port
  description: |
    Reserved
ps7_ddrc_excl_access_cfg3_reg_excl_acc_id1_port:
  addr: 0xf80062a0
  mask: 0x3fe00
  name: reg_excl_acc_id1_port
  description: |
    Reserved
ps7_ddrc_excl_access_cfg3_reg_excl_acc_id0_port:
  addr: 0xf80062a0
  mask: 0x1ff
  name: reg_excl_acc_id0_port
  description: |
    Reserved
ps7_ddrc_mode_reg_read_ddrc_reg_rd_mrr_data:
  addr: 0xf80062a4
  mask: 0xffffffff
  name: ddrc_reg_rd_mrr_data
  description: |
    Mode register read Data. Valid when ddrc_co_rd_mrr_data_valid is high. Bits[7:0] carry the 8-bit MRR value. Valid for LPDDR2 only.
ps7_ddrc_lpddr_ctrl0_reg_ddrc_mr4_margin:
  addr: 0xf80062a8
  mask: 0xff0
  name: reg_ddrc_mr4_margin
  description: |
    UNUSED
ps7_ddrc_lpddr_ctrl0_reserved:
  addr: 0xf80062a8
  mask: 0x8
  name: reserved
  description: |
    Reserved. Datasheet does not mention this field
ps7_ddrc_lpddr_ctrl0_reg_ddrc_derate_enable:
  addr: 0xf80062a8
  mask: 0x4
  name: reg_ddrc_derate_enable
  description: |
    0: Timing parameter derating is disabled.
    1: Timing parameter derating is enabled using MR4 read value.
    This feature should only be enabled after LPDDR2 initialization is completed
ps7_ddrc_lpddr_ctrl0_reserved_reg_ddrc_per_bank_refresh:
  addr: 0xf80062a8
  mask: 0x2
  name: reserved_reg_ddrc_per_bank_refresh
  description: |
    Reserved. Do not modify.
ps7_ddrc_lpddr_ctrl0_reg_ddrc_lpddr2:
  addr: 0xf80062a8
  mask: 0x1
  name: reg_ddrc_lpddr2
  description: |
    0: DDR2 or DDR3 in use.
    1: LPDDR2 in Use.
ps7_ddrc_lpddr_ctrl1_reg_ddrc_mr4_read_interval:
  addr: 0xf80062ac
  mask: 0xffffffff
  name: reg_ddrc_mr4_read_interval
  description: |
    Interval between two MR4 reads, USED to derate the timing parameters.
ps7_ddrc_lpddr_ctrl2_reg_ddrc_t_mrw:
  addr: 0xf80062b0
  mask: 0x3ff000
  name: reg_ddrc_t_mrw
  description: |
    Time to wait during load mode register writes. Present only in designs configured to support LPDDR2. LPDDR2 typically requires value of 5.
ps7_ddrc_lpddr_ctrl2_reg_ddrc_idle_after_reset_x32:
  addr: 0xf80062b0
  mask: 0xff0
  name: reg_ddrc_idle_after_reset_x32
  description: |
    Idle time after the reset command, tINIT4.
    Units: 32 clock cycles.
ps7_ddrc_lpddr_ctrl2_reg_ddrc_min_stable_clock_x1:
  addr: 0xf80062b0
  mask: 0xf
  name: reg_ddrc_min_stable_clock_x1
  description: |
    Time to wait after the first CKE high, tINIT2.
    Units: 1 clock cycle. LPDDR2 typically requires 5 x tCK delay.
ps7_ddrc_lpddr_ctrl3_reg_ddrc_dev_zqinit_x32:
  addr: 0xf80062b4
  mask: 0x3ff00
  name: reg_ddrc_dev_zqinit_x32
  description: |
    ZQ initial calibration, tZQINIT.
    Units: 32 clock cycles. LPDDR2 typically requires 1 us.
ps7_ddrc_lpddr_ctrl3_reg_ddrc_max_auto_init_x1024:
  addr: 0xf80062b4
  mask: 0xff
  name: reg_ddrc_max_auto_init_x1024
  description: |
    Maximum duration of the auto initialization, tINIT5.
    Units: 1024 clock cycles. LPDDR2 typically requires 10 us.
ps7_gpio_MASK_DATA_0_LSW_MASK_0_LSW:
  addr: 0xe000a000
  mask: 0xffff0000
  name: MASK_0_LSW
  description: |
    On a write, only bits with a corresponding deasserted mask will change the output value.
    0: pin value is updated
    1: pin is masked
    Each bit controls the corresponding pin within the 16-bit half-bank.
    Reads return 0's.
ps7_gpio_MASK_DATA_0_LSW_DATA_0_LSW:
  addr: 0xe000a000
  mask: 0xffff
  name: DATA_0_LSW
  description: |
    On a write, these are the data values for the corresponding GPIO output bits. Each bit controls the corresponding pin within the 16-bit half-bank. Reads return the previous value written to this register or DATA_0[15:0]. Reads do not return the value on the GPIO pin.
ps7_gpio_MASK_DATA_0_MSW_MASK_0_MSW:
  addr: 0xe000a004
  mask: 0xffff0000
  name: MASK_0_MSW
  description: |
    Operation is the same as MASK_DATA_0_LSW[MASK_0_LSW]
ps7_gpio_MASK_DATA_0_MSW_DATA_0_MSW:
  addr: 0xe000a004
  mask: 0xffff
  name: DATA_0_MSW
  description: |
    Operation is the same as MASK_DATA_0_LSW[DATA_0_LSW]
ps7_gpio_MASK_DATA_1_LSW_MASK_1_LSW:
  addr: 0xe000a008
  mask: 0xffff0000
  name: MASK_1_LSW
  description: |
    Operation is the same as MASK_DATA_0_LSW[MASK_0_LSW]
ps7_gpio_MASK_DATA_1_LSW_DATA_1_LSW:
  addr: 0xe000a008
  mask: 0xffff
  name: DATA_1_LSW
  description: |
    Operation is the same as MASK_DATA_0_LSW[DATA_0_LSW]
ps7_gpio_MASK_DATA_1_MSW_MASK_1_MSW:
  addr: 0xe000a00c
  mask: 0x3f0000
  name: MASK_1_MSW
  description: |
    Operation is the same as MASK_DATA_0_LSW[MASK_0_LSW]
ps7_gpio_MASK_DATA_1_MSW_reserved:
  addr: 0xe000a00c
  mask: 0xffc0
  name: reserved
  description: |
    Not used, read back as zero
ps7_gpio_MASK_DATA_1_MSW_DATA_1_MSW:
  addr: 0xe000a00c
  mask: 0x3f
  name: DATA_1_MSW
  description: |
    Operation is the same as MASK_DATA_0_LSW[DATA_0_LSW]
ps7_gpio_MASK_DATA_2_LSW_MASK_2_LSW:
  addr: 0xe000a010
  mask: 0xffff0000
  name: MASK_2_LSW
  description: |
    Operation is the same as MASK_DATA_0_LSW[MASK_0_LSW]
ps7_gpio_MASK_DATA_2_LSW_DATA_2_LSW:
  addr: 0xe000a010
  mask: 0xffff
  name: DATA_2_LSW
  description: |
    Operation is the same as MASK_DATA_0_LSW[DATA_0_LSW]
ps7_gpio_MASK_DATA_2_MSW_MASK_2_MSW:
  addr: 0xe000a014
  mask: 0xffff0000
  name: MASK_2_MSW
  description: |
    Operation is the same as MASK_DATA_0_LSW[MASK_0_LSW]
ps7_gpio_MASK_DATA_2_MSW_DATA_2_MSW:
  addr: 0xe000a014
  mask: 0xffff
  name: DATA_2_MSW
  description: |
    Operation is the same as MASK_DATA_0_LSW[DATA_0_LSW]
ps7_gpio_MASK_DATA_3_LSW_MASK_3_LSW:
  addr: 0xe000a018
  mask: 0xffff0000
  name: MASK_3_LSW
  description: |
    Operation is the same as MASK_DATA_0_LSW[MASK_0_LSW]
ps7_gpio_MASK_DATA_3_LSW_DATA_3_LSW:
  addr: 0xe000a018
  mask: 0xffff
  name: DATA_3_LSW
  description: |
    Operation is the same as MASK_DATA_0_LSW[DATA_0_LSW]
ps7_gpio_MASK_DATA_3_MSW_MASK_3_MSW:
  addr: 0xe000a01c
  mask: 0xffff0000
  name: MASK_3_MSW
  description: |
    Operation is the same as MASK_DATA_0_LSW[MASK_0_LSW]
ps7_gpio_MASK_DATA_3_MSW_DATA_3_MSW:
  addr: 0xe000a01c
  mask: 0xffff
  name: DATA_3_MSW
  description: |
    Operation is the same as MASK_DATA_0_LSW[DATA_0_LSW]
ps7_gpio_DATA_0_DATA_0:
  addr: 0xe000a040
  mask: 0xffffffff
  name: DATA_0
  description: |
    Output Data
ps7_gpio_DATA_1_DATA_1:
  addr: 0xe000a044
  mask: 0x3fffff
  name: DATA_1
  description: |
    Output Data
ps7_gpio_DATA_2_DATA_2:
  addr: 0xe000a048
  mask: 0xffffffff
  name: DATA_2
  description: |
    Output Data
ps7_gpio_DATA_3_DATA_3:
  addr: 0xe000a04c
  mask: 0xffffffff
  name: DATA_3
  description: |
    Output Data
ps7_gpio_DATA_0_RO_DATA_0_RO:
  addr: 0xe000a060
  mask: 0xffffffff
  name: DATA_0_RO
  description: |
    Input Data
    NOTE: bits[8:7] of bank0 cannot be used as inputs and will always return 0 when read. See the GPIO chapter for more information.
ps7_gpio_DATA_1_RO_DATA_1_RO:
  addr: 0xe000a064
  mask: 0x3fffff
  name: DATA_1_RO
  description: |
    Input Data
ps7_gpio_DATA_2_RO_DATA_2_RO:
  addr: 0xe000a068
  mask: 0xffffffff
  name: DATA_2_RO
  description: |
    Input Data
ps7_gpio_DATA_3_RO_DATA_3_RO:
  addr: 0xe000a06c
  mask: 0xffffffff
  name: DATA_3_RO
  description: |
    Input Data
ps7_gpio_DIRM_0_DIRECTION_0:
  addr: 0xe000a204
  mask: 0xffffffff
  name: DIRECTION_0
  description: |
    Direction mode
    0: input
    1: output
    Each bit configures the corresponding pin within the 32-bit bank
    NOTE: bits[8:7] of bank0 cannot be used as inputs.
    The DIRM bits can be set to 0, but reading DATA_RO does not reflect the input value. See the GPIO chapter for more information.
ps7_gpio_OEN_0_OP_ENABLE_0:
  addr: 0xe000a208
  mask: 0xffffffff
  name: OP_ENABLE_0
  description: |
    Output enables
    0: disabled
    1: enabled
    Each bit configures the corresponding pin within the 32-bit bank
ps7_gpio_INT_MASK_0_INT_MASK_0:
  addr: 0xe000a20c
  mask: 0xffffffff
  name: INT_MASK_0
  description: |
    Interrupt mask
    0: interrupt source enabled
    1: interrupt source masked
    Each bit reports the status for the corresponding pin within the 32-bit bank
ps7_gpio_INT_EN_0_INT_ENABLE_0:
  addr: 0xe000a210
  mask: 0xffffffff
  name: INT_ENABLE_0
  description: |
    Interrupt enable
    0: no change
    1: clear interrupt mask
    Each bit configures the corresponding pin within the 32-bit bank
ps7_gpio_INT_DIS_0_INT_DISABLE_0:
  addr: 0xe000a214
  mask: 0xffffffff
  name: INT_DISABLE_0
  description: |
    Interrupt disable
    0: no change
    1: set interrupt mask
    Each bit configures the corresponding pin within the 32-bit bank
ps7_gpio_INT_STAT_0_INT_STATUS_0:
  addr: 0xe000a218
  mask: 0xffffffff
  name: INT_STATUS_0
  description: |
    Interrupt status
    Upon read:
    0: no interrupt
    1: interrupt event has occurred
    Upon write:
    0: no action
    1: clear interrupt status bit
    Each bit configures the corresponding pin within the 32-bit bank
ps7_gpio_INT_TYPE_0_INT_TYPE_0:
  addr: 0xe000a21c
  mask: 0xffffffff
  name: INT_TYPE_0
  description: |
    Interrupt type
    0: level-sensitive
    1: edge-sensitive
    Each bit configures the corresponding pin within the 32-bit bank
ps7_gpio_INT_POLARITY_0_INT_POL_0:
  addr: 0xe000a220
  mask: 0xffffffff
  name: INT_POL_0
  description: |
    Interrupt polarity
    0: active low or falling edge
    1: active high or rising edge
    Each bit configures the corresponding pin within the 32-bit bank
ps7_gpio_INT_ANY_0_INT_ON_ANY_0:
  addr: 0xe000a224
  mask: 0xffffffff
  name: INT_ON_ANY_0
  description: |
    Interrupt edge triggering mode
    0: trigger on single edge, using configured interrupt polarity
    1: trigger on both edges
    Each bit configures the corresponding pin within the 32-bit bank
ps7_gpio_DIRM_1_DIRECTION_1:
  addr: 0xe000a244
  mask: 0x3fffff
  name: DIRECTION_1
  description: |
    Operation is the same as DIRM_0[DIRECTION_0]
ps7_gpio_OEN_1_OP_ENABLE_1:
  addr: 0xe000a248
  mask: 0x3fffff
  name: OP_ENABLE_1
  description: |
    Operation is the same as OEN_0[OP_ENABLE_0]
ps7_gpio_INT_MASK_1_INT_MASK_1:
  addr: 0xe000a24c
  mask: 0x3fffff
  name: INT_MASK_1
  description: |
    Operation is the same as INT_MASK_0[INT_MASK_0]
ps7_gpio_INT_EN_1_INT_ENABLE_1:
  addr: 0xe000a250
  mask: 0x3fffff
  name: INT_ENABLE_1
  description: |
    Operation is the same as INT_EN_0[INT_ENABLE_0]
ps7_gpio_INT_DIS_1_INT_DISABLE_1:
  addr: 0xe000a254
  mask: 0x3fffff
  name: INT_DISABLE_1
  description: |
    Operation is the same as INT_DIS_0[INT_DISABLE_0]
ps7_gpio_INT_STAT_1_INT_STATUS_1:
  addr: 0xe000a258
  mask: 0x3fffff
  name: INT_STATUS_1
  description: |
    Operation is the same as INT_STAT_0[INT_STATUS_0]
ps7_gpio_INT_TYPE_1_INT_TYPE_1:
  addr: 0xe000a25c
  mask: 0x3fffff
  name: INT_TYPE_1
  description: |
    Operation is the same as INT_TYPE_0[INT_TYPE_0]
ps7_gpio_INT_POLARITY_1_INT_POL_1:
  addr: 0xe000a260
  mask: 0x3fffff
  name: INT_POL_1
  description: |
    Operation is the same as INT_POLARITY_0[INT_POL_0]
ps7_gpio_INT_ANY_1_INT_ON_ANY_1:
  addr: 0xe000a264
  mask: 0x3fffff
  name: INT_ON_ANY_1
  description: |
    Operation is the same as INT_ANY_0[INT_ON_ANY_0]
ps7_gpio_DIRM_2_DIRECTION_2:
  addr: 0xe000a284
  mask: 0xffffffff
  name: DIRECTION_2
  description: |
    Operation is the same as DIRM_0[DIRECTION_0]
ps7_gpio_OEN_2_OP_ENABLE_2:
  addr: 0xe000a288
  mask: 0xffffffff
  name: OP_ENABLE_2
  description: |
    Operation is the same as OEN_0[OP_ENABLE_0]
ps7_gpio_INT_MASK_2_INT_MASK_2:
  addr: 0xe000a28c
  mask: 0xffffffff
  name: INT_MASK_2
  description: |
    Operation is the same as INT_MASK_0[INT_MASK_0]
ps7_gpio_INT_EN_2_INT_ENABLE_2:
  addr: 0xe000a290
  mask: 0xffffffff
  name: INT_ENABLE_2
  description: |
    Operation is the same as INT_EN_0[INT_ENABLE_0]
ps7_gpio_INT_DIS_2_INT_DISABLE_2:
  addr: 0xe000a294
  mask: 0xffffffff
  name: INT_DISABLE_2
  description: |
    Operation is the same as INT_DIS_0[INT_DISABLE_0]
ps7_gpio_INT_STAT_2_INT_STATUS_2:
  addr: 0xe000a298
  mask: 0xffffffff
  name: INT_STATUS_2
  description: |
    Operation is the same as INT_STAT_0[INT_STATUS_0]
ps7_gpio_INT_TYPE_2_INT_TYPE_2:
  addr: 0xe000a29c
  mask: 0xffffffff
  name: INT_TYPE_2
  description: |
    Operation is the same as INT_TYPE_0[INT_TYPE_0]
ps7_gpio_INT_POLARITY_2_INT_POL_2:
  addr: 0xe000a2a0
  mask: 0xffffffff
  name: INT_POL_2
  description: |
    Operation is the same as INT_POLARITY_0[INT_POL_0]
ps7_gpio_INT_ANY_2_INT_ON_ANY_2:
  addr: 0xe000a2a4
  mask: 0xffffffff
  name: INT_ON_ANY_2
  description: |
    Operation is the same as INT_ANY_0[INT_ON_ANY_0]
ps7_gpio_DIRM_3_DIRECTION_3:
  addr: 0xe000a2c4
  mask: 0xffffffff
  name: DIRECTION_3
  description: |
    Operation is the same as DIRM_0[DIRECTION_0]
ps7_gpio_OEN_3_OP_ENABLE_3:
  addr: 0xe000a2c8
  mask: 0xffffffff
  name: OP_ENABLE_3
  description: |
    Operation is the same as OEN_0[OP_ENABLE_0]
ps7_gpio_INT_MASK_3_INT_MASK_3:
  addr: 0xe000a2cc
  mask: 0xffffffff
  name: INT_MASK_3
  description: |
    Operation is the same as INT_MASK_0[INT_MASK_0]
ps7_gpio_INT_EN_3_INT_ENABLE_3:
  addr: 0xe000a2d0
  mask: 0xffffffff
  name: INT_ENABLE_3
  description: |
    Operation is the same as INT_EN_0[INT_ENABLE_0]
ps7_gpio_INT_DIS_3_INT_DISABLE_3:
  addr: 0xe000a2d4
  mask: 0xffffffff
  name: INT_DISABLE_3
  description: |
    Operation is the same as INT_DIS_0[INT_DISABLE_0]
ps7_gpio_INT_STAT_3_INT_STATUS_3:
  addr: 0xe000a2d8
  mask: 0xffffffff
  name: INT_STATUS_3
  description: |
    Operation is the same as INT_STAT_0[INT_STATUS_0]
ps7_gpio_INT_TYPE_3_INT_TYPE_3:
  addr: 0xe000a2dc
  mask: 0xffffffff
  name: INT_TYPE_3
  description: |
    Operation is the same as INT_TYPE_0[INT_TYPE_0]
ps7_gpio_INT_POLARITY_3_INT_POL_3:
  addr: 0xe000a2e0
  mask: 0xffffffff
  name: INT_POL_3
  description: |
    Operation is the same as INT_POLARITY_0[INT_POL_0]
ps7_gpio_INT_ANY_3_INT_ON_ANY_3:
  addr: 0xe000a2e4
  mask: 0xffffffff
  name: INT_ON_ANY_3
  description: |
    Operation is the same as INT_ANY_0[INT_ON_ANY_0]
ps7_devcfg_CTRL_FORCE_RST:
  addr: 0xf8007000
  mask: 0x80000000
  name: FORCE_RST
  description: |
    Force the PS into secure lockdown.
    The secure lockdown state can only be cleared by issuing a PS_POR_B reset
ps7_devcfg_CTRL_PCFG_PROG_B:
  addr: 0xf8007000
  mask: 0x40000000
  name: PCFG_PROG_B
  description: |
    Program Signal used to reset the PL.
    It acts as the PROG_B signal in the PL.
ps7_devcfg_CTRL_PCFG_POR_CNT_4K:
  addr: 0xf8007000
  mask: 0x20000000
  name: PCFG_POR_CNT_4K
  description: |
    This register controls which POR timer the PL will use for power-up.
    0 - Use 64k timer
    1 - Use 4k timer
ps7_devcfg_CTRL_reserved:
  addr: 0xf8007000
  mask: 0x10000000
  name: reserved
  description: |
    Reserved
ps7_devcfg_CTRL_PCAP_PR:
  addr: 0xf8007000
  mask: 0x8000000
  name: PCAP_PR
  description: |
    After the initial configuration of the PL, a partial reconfiguration can be performed using either the ICAP or PCAP interface.
    These interfaces are mutually exclusive and cannot be used simultaneously.
    Switching between ICAP and PCAP is possible but users should ensure that no commands or data are being transmitted or received before changing interfaces.
    Failure to do this could lead to unexpected behavior.
    This bit selects between ICAP and PCAP for PL reconfiguration.
    0 - ICAP is selected for reconfiguration
    1 - PCAP is selected for reconfiguration
ps7_devcfg_CTRL_PCAP_MODE:
  addr: 0xf8007000
  mask: 0x4000000
  name: PCAP_MODE
  description: |
    This bit enables the PCAP interface
ps7_devcfg_CTRL_QUARTER_PCAP_RATE_EN:
  addr: 0xf8007000
  mask: 0x2000000
  name: QUARTER_PCAP_RATE_EN
  description: |
    This bit is used to reduce the PCAP data transmission to once every 4 clock cycles.
    This bit MUST be set when the AES engine is being used to decrypt configuration data for either the PS or PL.
    Setting this bit for non-encrypted PCAP data transmission is allowed but not recommended.
    0 - PCAP data transmitted every clock cycle
    1 - PCAP data transmitted every 4th clock cycle (must be used for encrypted data)
ps7_devcfg_CTRL_MULTIBOOT_EN:
  addr: 0xf8007000
  mask: 0x1000000
  name: MULTIBOOT_EN
  description: |
    This bit enables multi-boot out of reset. This bit is only cleared by a PS_POR_B reset,
    0 - Boot from default boot image base address
    1 - Boot from multi-boot offset address
ps7_devcfg_CTRL_JTAG_CHAIN_DIS:
  addr: 0xf8007000
  mask: 0x800000
  name: JTAG_CHAIN_DIS
  description: |
    This bit is used to disable the JTAG scan chain.
    The primary purpose is to protect the PL from unwanted JTAG accesses.
    The JTAG connection to the PS DAP and PL TAP will be disabled when this bit is set.
ps7_devcfg_CTRL_reserved_1:
  addr: 0xf8007000
  mask: 0x7f0000
  name: reserved_1
  description: |
    Reserved
ps7_devcfg_CTRL_USER_MODE:
  addr: 0xf8007000
  mask: 0x8000
  name: USER_MODE
  description: |
    Indicates which mode the CPU is operating in
    0 - CPU is running in ROM Mode
    1 - CPU is running in User Mode
    *This bit is sticky and is set by the boot ROM
ps7_devcfg_CTRL_reserved_RD_ISS_IS_1:
  addr: 0xf8007000
  mask: 0x4000
  name: reserved_RD_ISS_IS_1
  description: |
    Reserved. Do not modify.
ps7_devcfg_CTRL_reserved_WR_ISS_IS_1:
  addr: 0xf8007000
  mask: 0x2000
  name: reserved_WR_ISS_IS_1
  description: |
    Reserved. Do not modify.
ps7_devcfg_CTRL_PCFG_AES_FUSE:
  addr: 0xf8007000
  mask: 0x1000
  name: PCFG_AES_FUSE
  description: |
    (Lockable, see 0x004, bit 4)
    This bit is used to select the AES key source
    0 - BBRAM key
    1 - eFuse key
    User access to this bit is restricted.
    The boot ROM will make the key selection and lock this bit during the initial boot sequence.
    This bit is only cleared by PS_POR_B reset.
ps7_devcfg_CTRL_PCFG_AES_EN:
  addr: 0xf8007000
  mask: 0xe00
  name: PCFG_AES_EN
  description: |
    (Lockable, see 0x004, bit 3)
    This bit enables the AES engine within the PL.
    The three bits need to be either all 0's or 1's, any inconsistency will lead to security lockdown.
    000 - Disable AES engine
    111 - Enable AES engine
    All others - Secure lockdown
    User access to this bit is restricted.
    The boot ROM will enable the AES engine for secure boot and will always lock this bit before passing control to user code.
    This bit is only cleared by PS_POR_B reset.
ps7_devcfg_CTRL_SEU_EN:
  addr: 0xf8007000
  mask: 0x100
  name: SEU_EN
  description: |
    (Lockable, see 0x004, bit 2)
    This bit enables an automatic lockdown of the PS when a PL SEU is detected.
    0 - Ignore SEU signal from PL
    1 - Initiate secure lockdown when SEU signal received from PL
    This bit is sticky, once set it can only be cleared with a PS_POR_B reset.
ps7_devcfg_CTRL_SEC_EN:
  addr: 0xf8007000
  mask: 0x80
  name: SEC_EN
  description: |
    (Lockable, see 0x004, bit 1)
    This bit is used to indicate if the PS has been booted securely.
    0 - PS was not booted securely
    1 - PS was booted securely
    User access to this bit is restricted.
    The boot ROM will set this bit when a secure boot is initiated and will always lock the bit before passing control to user code.
    This bit is only cleared by PS_POR_B reset.
ps7_devcfg_CTRL_SPNIDEN:
  addr: 0xf8007000
  mask: 0x40
  name: SPNIDEN
  description: |
    (Lockable, see 0x004, bit 0)
    Secure Non-Invasive Debug Enable
    0 - Disable
    1 - Enable
ps7_devcfg_CTRL_SPIDEN:
  addr: 0xf8007000
  mask: 0x20
  name: SPIDEN
  description: |
    (Lockable, see 0x004, bit 0)
    Secure Invasive Debug Enable
    0 - Disable
    1 - Enable
ps7_devcfg_CTRL_NIDEN:
  addr: 0xf8007000
  mask: 0x10
  name: NIDEN
  description: |
    (Lockable, see 0x004, bit 0)
    Non-Invasive Debug Enable
    0 - Disable
    1 - Enable
ps7_devcfg_CTRL_DBGEN:
  addr: 0xf8007000
  mask: 0x8
  name: DBGEN
  description: |
    (Lockable, see 0x004, bit 0)
    Invasive Debug Enable
    0 - Disable
    1 - Enable
ps7_devcfg_CTRL_DAP_EN:
  addr: 0xf8007000
  mask: 0x7
  name: DAP_EN
  description: |
    (Lockable, see 0x004, bit 0)
    These bits will enable the ARM DAP.
    111 - ARM DAP Enabled
    Others - ARM DAP will be bypassed
ps7_devcfg_LOCK_reserved:
  addr: 0xf8007004
  mask: 0xffffffe0
  name: reserved
  description: |
    Reserved
ps7_devcfg_LOCK_AES_FUSE_LOCK:
  addr: 0xf8007004
  mask: 0x10
  name: AES_FUSE_LOCK
  description: |
    This bit locks the PCFG_AES_FUSE bit (CTRL[12]).
    0 - Open
    1 - Locked
    User access to this bit is restricted, the boot ROM will always set this bit prior to handing control over to user code.
    This bit is only cleared by a PS_POR_B reset.
ps7_devcfg_LOCK_AES_EN_LOCK:
  addr: 0xf8007004
  mask: 0x8
  name: AES_EN_LOCK
  description: |
    This bit locks the PCFG_AES_EN bits (CTRL[11:9]).
    0 - Open
    1 - Locked
    User access to this bit is restricted, the boot ROM will always set this bit prior to handing control over to user code.
    This bit is only cleared by a PS_POR_B reset.
ps7_devcfg_LOCK_SEU_LOCK:
  addr: 0xf8007004
  mask: 0x4
  name: SEU_LOCK
  description: |
    This bit locks the SEU_EN bit (CTRL[8]).
    0 - Open
    1 - Locked
    This bit is only cleared by a PS_POR_B reset.
ps7_devcfg_LOCK_SEC_LOCK:
  addr: 0xf8007004
  mask: 0x2
  name: SEC_LOCK
  description: |
    This bit locks the SEC_EN bit (CTRL[7]).
    0 - Open
    1 - Locked
    User access to this bit is restricted, the boot ROM will always set this bit prior to handing control over to user code.
    This bit is only cleared by a PS_POR_B reset.
ps7_devcfg_LOCK_DBG_LOCK:
  addr: 0xf8007004
  mask: 0x1
  name: DBG_LOCK
  description: |
    This bit locks the debug enable bits, SPNIDEN, SPIDEN, NIDEN, DBGEN, DAP_EN (CTRL[6:0]).
    0 - Open
    1 - Locked
    DBG_LOCK should only be used to prevent the debug access from being enabled. If DBG_LOCK is set and a soft-reset is issued, then the DAP_EN bits in the CTRL register (0x000) cannot be enabled until a power-on-reset is performed.
    This bit is only cleared by a PS_POR_B reset.
ps7_devcfg_CFG_reserved:
  addr: 0xf8007008
  mask: 0xfffff000
  name: reserved
  description: |
    Reserved
ps7_devcfg_CFG_RFIFO_TH:
  addr: 0xf8007008
  mask: 0xc00
  name: RFIFO_TH
  description: |
    These two bits define Rx FIFO level that sets interrupt flag
    00 - One fourth
    full for read
    01 - Half full for read
    10 - Three fourth full for read
    11 - Full for read(User could use this signal to trigger interrupt when read FIFO overflow)
ps7_devcfg_CFG_WFIFO_TH:
  addr: 0xf8007008
  mask: 0x300
  name: WFIFO_TH
  description: |
    These two bits define Tx FIFO level that sets interrupt flag
    00 - One fourth empty for write
    01 - Half empty for write
    10 - Three fourth empty for write
    11 - Empty for write
ps7_devcfg_CFG_RCLK_EDGE:
  addr: 0xf8007008
  mask: 0x80
  name: RCLK_EDGE
  description: |
    Read data active clock edge
    0 - Falling edge
    1 - Rising edge
ps7_devcfg_CFG_WCLK_EDGE:
  addr: 0xf8007008
  mask: 0x40
  name: WCLK_EDGE
  description: |
    Write data active clock edge
    0 - Falling edge
    1 - Rising edge
ps7_devcfg_CFG_DISABLE_SRC_INC:
  addr: 0xf8007008
  mask: 0x20
  name: DISABLE_SRC_INC
  description: |
    Disable automatic DMA AXI source address increment, if set, to allow AXI read from a keyhole address
ps7_devcfg_CFG_DISABLE_DST_INC:
  addr: 0xf8007008
  mask: 0x10
  name: DISABLE_DST_INC
  description: |
    Disable automatic DMA AXI destination address increment, if set, to allow AXI read from a keyhole address
ps7_devcfg_CFG_reserved_RD_ISSUE:
  addr: 0xf8007008
  mask: 0x8
  name: reserved_RD_ISSUE
  description: |
    Reserved. Do not modify.
ps7_devcfg_CFG_reserved_WR_ISSUE:
  addr: 0xf8007008
  mask: 0x4
  name: reserved_WR_ISSUE
  description: |
    Reserved. Do not modify.
ps7_devcfg_CFG_reserved_RDLEN:
  addr: 0xf8007008
  mask: 0x2
  name: reserved_RDLEN
  description: |
    Reserved. Do not modify.
ps7_devcfg_CFG_reserved_WRLEN:
  addr: 0xf8007008
  mask: 0x1
  name: reserved_WRLEN
  description: |
    Reserved. Do not modify.
ps7_devcfg_INT_STS_PSS_GTS_USR_B_INT:
  addr: 0xf800700c
  mask: 0x80000000
  name: PSS_GTS_USR_B_INT
  description: |
    Tri-state IO during HIZ, both edges
ps7_devcfg_INT_STS_PSS_FST_CFG_B_INT:
  addr: 0xf800700c
  mask: 0x40000000
  name: PSS_FST_CFG_B_INT
  description: |
    First configuration done, both edges
ps7_devcfg_INT_STS_PSS_GPWRDWN_B_INT:
  addr: 0xf800700c
  mask: 0x20000000
  name: PSS_GPWRDWN_B_INT
  description: |
    Global power down, both edges
ps7_devcfg_INT_STS_PSS_GTS_CFG_B_INT:
  addr: 0xf800700c
  mask: 0x10000000
  name: PSS_GTS_CFG_B_INT
  description: |
    Tri-state IO during configuration, both edges
ps7_devcfg_INT_STS_PSS_CFG_RESET_B_INT:
  addr: 0xf800700c
  mask: 0x8000000
  name: PSS_CFG_RESET_B_INT
  description: |
    PL configuration reset, both edges
ps7_devcfg_INT_STS_reserved:
  addr: 0xf800700c
  mask: 0x7000000
  name: reserved
  description: |
    Reserved
ps7_devcfg_INT_STS_AXI_WTO_INT:
  addr: 0xf800700c
  mask: 0x800000
  name: AXI_WTO_INT
  description: |
    AXI write address, data or response time out.
    AXI write is taking longer than expected (> 6144 cpu_1x clock cycles), this can be an indication of starvation
ps7_devcfg_INT_STS_AXI_WERR_INT:
  addr: 0xf800700c
  mask: 0x400000
  name: AXI_WERR_INT
  description: |
    AXI write response error
ps7_devcfg_INT_STS_AXI_RTO_INT:
  addr: 0xf800700c
  mask: 0x200000
  name: AXI_RTO_INT
  description: |
    AXI read address or response time out.
    AXI read is taking longer than expected (> 2048 cpu_1x clock cycles), this can be an indication of starvation
ps7_devcfg_INT_STS_AXI_RERR_INT:
  addr: 0xf800700c
  mask: 0x100000
  name: AXI_RERR_INT
  description: |
    AXI read response error
ps7_devcfg_INT_STS_reserved_1:
  addr: 0xf800700c
  mask: 0x80000
  name: reserved_1
  description: |
    Reserved
ps7_devcfg_INT_STS_RX_FIFO_OV_INT:
  addr: 0xf800700c
  mask: 0x40000
  name: RX_FIFO_OV_INT
  description: |
    This bit is used to indicate that RX FIFO overflows. Incoming read data from PCAP will be dropped and the DEVCI DMA may enter an unrecoverable state
    .
ps7_devcfg_INT_STS_WR_FIFO_LVL_INT:
  addr: 0xf800700c
  mask: 0x20000
  name: WR_FIFO_LVL_INT
  description: |
    Tx FIFO level < threshold, see reg 0x008
ps7_devcfg_INT_STS_RD_FIFO_LVL_INT:
  addr: 0xf800700c
  mask: 0x10000
  name: RD_FIFO_LVL_INT
  description: |
    Rx FIFO level >= threshold, see reg 0x008
ps7_devcfg_INT_STS_DMA_CMD_ERR_INT:
  addr: 0xf800700c
  mask: 0x8000
  name: DMA_CMD_ERR_INT
  description: |
    Illegal DMA command
ps7_devcfg_INT_STS_DMA_Q_OV_INT:
  addr: 0xf800700c
  mask: 0x4000
  name: DMA_Q_OV_INT
  description: |
    DMA command queue overflows
ps7_devcfg_INT_STS_DMA_DONE_INT:
  addr: 0xf800700c
  mask: 0x2000
  name: DMA_DONE_INT
  description: |
    This bit is used to indicate a DMA command
    is done.
    The bit is set either as soon as DMA is done (PCAP may not be finished) or both DMA and PCAP are done.
ps7_devcfg_INT_STS_D_P_DONE_INT:
  addr: 0xf800700c
  mask: 0x1000
  name: D_P_DONE_INT
  description: |
    Both DMA and PCAP transfers are done for intermediate and final transfers.
ps7_devcfg_INT_STS_P2D_LEN_ERR_INT:
  addr: 0xf800700c
  mask: 0x800
  name: P2D_LEN_ERR_INT
  description: |
    Inconsistent PCAP to DMA transfer length error
ps7_devcfg_INT_STS_reserved_2:
  addr: 0xf800700c
  mask: 0x780
  name: reserved_2
  description: |
    Reserved
ps7_devcfg_INT_STS_PCFG_HMAC_ERR_INT:
  addr: 0xf800700c
  mask: 0x40
  name: PCFG_HMAC_ERR_INT
  description: |
    Triggers when an HMAC error is received from the PL
ps7_devcfg_INT_STS_PCFG_SEU_ERR_INT:
  addr: 0xf800700c
  mask: 0x20
  name: PCFG_SEU_ERR_INT
  description: |
    Triggers when an SEU error is received from the PL
ps7_devcfg_INT_STS_PCFG_POR_B_INT:
  addr: 0xf800700c
  mask: 0x10
  name: PCFG_POR_B_INT
  description: |
    Triggers if the PL loses power, PL POR_B signal goes low
ps7_devcfg_INT_STS_PCFG_CFG_RST_INT:
  addr: 0xf800700c
  mask: 0x8
  name: PCFG_CFG_RST_INT
  description: |
    Triggers if the PL configuration controller is under reset
ps7_devcfg_INT_STS_PCFG_DONE_INT:
  addr: 0xf800700c
  mask: 0x4
  name: PCFG_DONE_INT
  description: |
    DONE signal from PL indicating that programming is complete and PL is in user mode.
ps7_devcfg_INT_STS_PCFG_INIT_PE_INT:
  addr: 0xf800700c
  mask: 0x2
  name: PCFG_INIT_PE_INT
  description: |
    Triggered on the positive edge of the PL INIT signal
ps7_devcfg_INT_STS_PCFG_INIT_NE_INT:
  addr: 0xf800700c
  mask: 0x1
  name: PCFG_INIT_NE_INT
  description: |
    Triggered on the negative edge of the PL INIT signal
ps7_devcfg_INT_MASK_M_PSS_GTS_USR_B_INT:
  addr: 0xf8007010
  mask: 0x80000000
  name: M_PSS_GTS_USR_B_INT
  description: |
    Interrupt mask for tri-state IO during HIZ, both edges
ps7_devcfg_INT_MASK_M_PSS_FST_CFG_B_INT:
  addr: 0xf8007010
  mask: 0x40000000
  name: M_PSS_FST_CFG_B_INT
  description: |
    Interrupt mask for first config done, both edges
ps7_devcfg_INT_MASK_M_PSS_GPWRDWN_B_INT:
  addr: 0xf8007010
  mask: 0x20000000
  name: M_PSS_GPWRDWN_B_INT
  description: |
    Interrupt mask for global power down, both edges
ps7_devcfg_INT_MASK_M_PSS_GTS_CFG_B_INT:
  addr: 0xf8007010
  mask: 0x10000000
  name: M_PSS_GTS_CFG_B_INT
  description: |
    Interrupt mask for tri-state IO in config, both edges
ps7_devcfg_INT_MASK_M_PSS_CFG_RESET_B_INT:
  addr: 0xf8007010
  mask: 0x8000000
  name: M_PSS_CFG_RESET_B_INT
  description: |
    Interrupt mask for config reset, both edges
ps7_devcfg_INT_MASK_reserved:
  addr: 0xf8007010
  mask: 0x7000000
  name: reserved
  description: |
    Reserved
ps7_devcfg_INT_MASK_M_AXI_WTO_INT:
  addr: 0xf8007010
  mask: 0x800000
  name: M_AXI_WTO_INT
  description: |
    Interrupt mask for AXI write time out interrupt
ps7_devcfg_INT_MASK_M_AXI_WERR_INT:
  addr: 0xf8007010
  mask: 0x400000
  name: M_AXI_WERR_INT
  description: |
    Interrupt mask for AXI write response error interrupt
ps7_devcfg_INT_MASK_M_AXI_RTO_INT:
  addr: 0xf8007010
  mask: 0x200000
  name: M_AXI_RTO_INT
  description: |
    Interrupt mask for AXI read time out interrupt
ps7_devcfg_INT_MASK_M_AXI_RERR_INT:
  addr: 0xf8007010
  mask: 0x100000
  name: M_AXI_RERR_INT
  description: |
    Interrupt mask for AXI read response error interrupt
ps7_devcfg_INT_MASK_reserved_1:
  addr: 0xf8007010
  mask: 0x80000
  name: reserved_1
  description: |
    Reserved
ps7_devcfg_INT_MASK_M_RX_FIFO_OV_INT:
  addr: 0xf8007010
  mask: 0x40000
  name: M_RX_FIFO_OV_INT
  description: |
    Interrupt mask for Rx FIFO overflow interrupt
ps7_devcfg_INT_MASK_M_WR_FIFO_LVL_INT:
  addr: 0xf8007010
  mask: 0x20000
  name: M_WR_FIFO_LVL_INT
  description: |
    Interrupt mask for Tx FIFO level < threshold interrupt
ps7_devcfg_INT_MASK_M_RD_FIFO_LVL_INT:
  addr: 0xf8007010
  mask: 0x10000
  name: M_RD_FIFO_LVL_INT
  description: |
    Interrupt mask for Rx FIFO level > threshold interrupt
ps7_devcfg_INT_MASK_M_DMA_CMD_ERR_INT:
  addr: 0xf8007010
  mask: 0x8000
  name: M_DMA_CMD_ERR_INT
  description: |
    Interrupt mask for illegal DMA command interrupt
ps7_devcfg_INT_MASK_M_DMA_FIFO_OV_INT:
  addr: 0xf8007010
  mask: 0x4000
  name: M_DMA_FIFO_OV_INT
  description: |
    Interrupt mask for DMA command FIFO overflows
ps7_devcfg_INT_MASK_M_DMA_DONE_INT:
  addr: 0xf8007010
  mask: 0x2000
  name: M_DMA_DONE_INT
  description: |
    Interrupt mask for DMA command done interrupt
ps7_devcfg_INT_MASK_M_D_P_DONE_INT:
  addr: 0xf8007010
  mask: 0x1000
  name: M_D_P_DONE_INT
  description: |
    Interrupt mask for DMA and PCAP done interrupt
ps7_devcfg_INT_MASK_M_P2D_LEN_ERR_INT:
  addr: 0xf8007010
  mask: 0x800
  name: M_P2D_LEN_ERR_INT
  description: |
    Interrupt mask Inconsistent xfer length error interrupt
ps7_devcfg_INT_MASK_reserved_2:
  addr: 0xf8007010
  mask: 0x780
  name: reserved_2
  description: |
    Reserved
ps7_devcfg_INT_MASK_M_PCFG_HMAC_ERR_INT:
  addr: 0xf8007010
  mask: 0x40
  name: M_PCFG_HMAC_ERR_INT
  description: |
    Interrupt mask for HMAC error
ps7_devcfg_INT_MASK_M_PCFG_SEU_ERR_INT:
  addr: 0xf8007010
  mask: 0x20
  name: M_PCFG_SEU_ERR_INT
  description: |
    Interrupt mask for PCFG_SEU_ERR interrupt
ps7_devcfg_INT_MASK_M_PCFG_POR_B_INT:
  addr: 0xf8007010
  mask: 0x10
  name: M_PCFG_POR_B_INT
  description: |
    Interrupt mask for PCFG_POR_B Interrupt
ps7_devcfg_INT_MASK_M_PCFG_CFG_RST_INT:
  addr: 0xf8007010
  mask: 0x8
  name: M_PCFG_CFG_RST_INT
  description: |
    Interrupt mask for PCFG_CFG_RESET interrupt
ps7_devcfg_INT_MASK_M_PCFG_DONE_INT:
  addr: 0xf8007010
  mask: 0x4
  name: M_PCFG_DONE_INT
  description: |
    Interrupt mask for PCFG_DONE interrupt
ps7_devcfg_INT_MASK_M_PCFG_INIT_PE_INT:
  addr: 0xf8007010
  mask: 0x2
  name: M_PCFG_INIT_PE_INT
  description: |
    Interrupt mask for PCFG_INIT_PE interrupt
ps7_devcfg_INT_MASK_M_PCFG_INIT_NE_INT:
  addr: 0xf8007010
  mask: 0x1
  name: M_PCFG_INIT_NE_INT
  description: |
    Interrupt mask for PCFG_INIT_NE interrupt
ps7_devcfg_STATUS_DMA_CMD_Q_F:
  addr: 0xf8007014
  mask: 0x80000000
  name: DMA_CMD_Q_F
  description: |
    DMA command queue full, if set
ps7_devcfg_STATUS_DMA_CMD_Q_E:
  addr: 0xf8007014
  mask: 0x40000000
  name: DMA_CMD_Q_E
  description: |
    DMA command queue empty, if set
ps7_devcfg_STATUS_DMA_DONE_CNT:
  addr: 0xf8007014
  mask: 0x30000000
  name: DMA_DONE_CNT
  description: |
    Number of completed DMA transfers that have not been acknowledged by software:
    00 - all finished transfers have been acknowledged
    01 - one finished transfer outstanding
    10 - two finished transfers outstanding
    11 - three or more finished transfers outstanding
    A finished transfer is acknowledged by clearing the interrupt status flag, i.e., bit 9 of the interrupt status register 0x00C.
    This count is cleared by writing a 1 to either bit location.
ps7_devcfg_STATUS_reserved:
  addr: 0xf8007014
  mask: 0xe000000
  name: reserved
  description: |
    Reserved
ps7_devcfg_STATUS_RX_FIFO_LVL:
  addr: 0xf8007014
  mask: 0x1f00000
  name: RX_FIFO_LVL
  description: |
    This register is used to indicate how many valid 32-Bit words in the Rx FIFO, max. is 31
ps7_devcfg_STATUS_reserved_1:
  addr: 0xf8007014
  mask: 0x80000
  name: reserved_1
  description: |
    Reserved
ps7_devcfg_STATUS_TX_FIFO_LVL:
  addr: 0xf8007014
  mask: 0x7f000
  name: TX_FIFO_LVL
  description: |
    This register is used to indicate how many valid 32-Bit words in the Tx FIFO, max. is 127
ps7_devcfg_STATUS_PSS_GTS_USR_B:
  addr: 0xf8007014
  mask: 0x800
  name: PSS_GTS_USR_B
  description: |
    Tri-state IO during HIZ, active low
ps7_devcfg_STATUS_PSS_FST_CFG_B:
  addr: 0xf8007014
  mask: 0x400
  name: PSS_FST_CFG_B
  description: |
    First PL configuration done, active low.
ps7_devcfg_STATUS_PSS_GPWRDWN_B:
  addr: 0xf8007014
  mask: 0x200
  name: PSS_GPWRDWN_B
  description: |
    Global power down, active low
ps7_devcfg_STATUS_PSS_GTS_CFG_B:
  addr: 0xf8007014
  mask: 0x100
  name: PSS_GTS_CFG_B
  description: |
    Tri-state IO during config, active low
ps7_devcfg_STATUS_SECURE_RST:
  addr: 0xf8007014
  mask: 0x80
  name: SECURE_RST
  description: |
    This bit is used to indicate a secure lockdown.
    Can only be cleared by a PS_POR_B reset.
ps7_devcfg_STATUS_ILLEGAL_APB_ACCESS:
  addr: 0xf8007014
  mask: 0x40
  name: ILLEGAL_APB_ACCESS
  description: |
    Indicates the UNLOCK register was not written with the correct unlock word.
    If set all secure boot features will be disabled, the DAP will be disabled and writing to the DEVCI registers will be disabled.
    The illegal access mode can only be cleared with a PS_POR_B reset.
ps7_devcfg_STATUS_PSS_CFG_RESET_B:
  addr: 0xf8007014
  mask: 0x20
  name: PSS_CFG_RESET_B
  description: |
    PL configuration reset, active low.
ps7_devcfg_STATUS_PCFG_INIT:
  addr: 0xf8007014
  mask: 0x10
  name: PCFG_INIT
  description: |
    PL INIT signal, indicates when housecleaning is done and the PL is ready to receive PCAP data.
    Positive and negative edges of the signal generate maskable interrupts in 0x00C.
ps7_devcfg_STATUS_EFUSE_BBRAM_KEY_DISABLE:
  addr: 0xf8007014
  mask: 0x8
  name: EFUSE_BBRAM_KEY_DISABLE
  description: |
    When this eFuse is blown, the BBRAM AES key is disabled.
    If the device is booted securely, the eFuse key must be used.
ps7_devcfg_STATUS_EFUSE_SEC_EN:
  addr: 0xf8007014
  mask: 0x4
  name: EFUSE_SEC_EN
  description: |
    When this eFuse is blown, the Zynq device must boot securely and use the eFuse as the AES key source.
    Non-secure boot will cause a security lockdown.
ps7_devcfg_STATUS_EFUSE_JTAG_DIS:
  addr: 0xf8007014
  mask: 0x2
  name: EFUSE_JTAG_DIS
  description: |
    When this eFuse is blown, the ARM DAP controller is permanently set in bypass mode.
    Any attempt to activate the DAP will cause a security lockdown.
ps7_devcfg_STATUS_reserved_SECURE_DIS:
  addr: 0xf8007014
  mask: 0x1
  name: reserved_SECURE_DIS
  description: |
    Reserved. Do not modify.
ps7_devcfg_DMA_SRC_ADDR_SRC_ADDR:
  addr: 0xf8007018
  mask: 0xffffffff
  name: SRC_ADDR
  description: |
    Source address for DMA transfer of AXI read.
    Setting SRC_ADDR[1:0] and DST_ADDR[1:0] to 2'b01 will cause the DMA engine to hold the DMA DONE interrupt until both the AXI and PCAP interfaces are done with the data transfer.
    Otherwise the interrupt will trigger as soon as the AXI interface is done.
ps7_devcfg_DMA_DST_ADDR_DST_ADDR:
  addr: 0xf800701c
  mask: 0xffffffff
  name: DST_ADDR
  description: |
    Destination address for DMA transfer of AXI write.
    Setting SRC_ADDR[1:0] and DST_ADDR[1:0] to 2'b01 will cause the DMA engine to hold the DMA DONE interrupt until both the AXI and PCAP interfaces are done with the data transfer.
    Otherwise the interrupt will trigger as soon as the AXI interface is done.
ps7_devcfg_DMA_SRC_LEN_reserved:
  addr: 0xf8007020
  mask: 0xf8000000
  name: reserved
  description: |
    Reserved
ps7_devcfg_DMA_SRC_LEN_LEN:
  addr: 0xf8007020
  mask: 0x7ffffff
  name: LEN
  description: |
    Up to 512MB data
ps7_devcfg_DMA_DEST_LEN_reserved:
  addr: 0xf8007024
  mask: 0xf8000000
  name: reserved
  description: |
    Reserved
ps7_devcfg_DMA_DEST_LEN_LEN:
  addr: 0xf8007024
  mask: 0x7ffffff
  name: LEN
  description: |
    Up to 512MB data
ps7_devcfg_ROM_SHADOW_reserved_ROM_SHADOW_EN:
  addr: 0xf8007028
  mask: 0xffffffff
  name: reserved_ROM_SHADOW_EN
  description: |
    Reserved. Do not modify.
ps7_devcfg_MULTIBOOT_ADDR_MULTIBOOT_ADDR:
  addr: 0xf800702c
  mask: 0xffffffff
  name: MULTIBOOT_ADDR
  description: |
    Multi-Boot offset address
ps7_devcfg_SW_ID_SW_ID:
  addr: 0xf8007030
  mask: 0xffffffff
  name: SW_ID
  description: |
    Software ID
ps7_devcfg_UNLOCK_UNLOCK:
  addr: 0xf8007034
  mask: 0xffffffff
  name: UNLOCK
  description: |
    Unlock value.
ps7_devcfg_MCTRL_PS_VERSION:
  addr: 0xf8007080
  mask: 0xf0000000
  name: PS_VERSION
  description: |
    Version ID for silicon
    0x0 = 1.0 Silicon
    0x1 = 2.0 Silicon
    0x2 = 3.0 Silicon
ps7_devcfg_MCTRL_reserved_ROM_128_CRC:
  addr: 0xf8007080
  mask: 0x8000000
  name: reserved_ROM_128_CRC
  description: |
    Reserved. Do not modify.
ps7_devcfg_MCTRL_reserved_RSA_ENABLE:
  addr: 0xf8007080
  mask: 0x4000000
  name: reserved_RSA_ENABLE
  description: |
    Reserved. Do not modify.
ps7_devcfg_MCTRL_reserved_DFT_JTAG_DIS:
  addr: 0xf8007080
  mask: 0x2000000
  name: reserved_DFT_JTAG_DIS
  description: |
    Reserved. Do not modify.
ps7_devcfg_MCTRL_reserved_DFT_MODE_DIS:
  addr: 0xf8007080
  mask: 0x1000000
  name: reserved_DFT_MODE_DIS
  description: |
    Reserved. Do not modify.
ps7_devcfg_MCTRL_reserved_STORE_AND_FWD:
  addr: 0xf8007080
  mask: 0x800000
  name: reserved_STORE_AND_FWD
  description: |
    Reserved. Do not modify.
ps7_devcfg_MCTRL_reserved:
  addr: 0xf8007080
  mask: 0x7fc000
  name: reserved
  description: |
    Reserved
ps7_devcfg_MCTRL_reserved_DFT_JTAG_DIS_TEST:
  addr: 0xf8007080
  mask: 0x2000
  name: reserved_DFT_JTAG_DIS_TEST
  description: |
    Reserved. Do not modify.
ps7_devcfg_MCTRL_reserved_DFT_MODE_DIS_TEST:
  addr: 0xf8007080
  mask: 0x1000
  name: reserved_DFT_MODE_DIS_TEST
  description: |
    Reserved. Do not modify.
ps7_devcfg_MCTRL_reserved_1:
  addr: 0xf8007080
  mask: 0xe00
  name: reserved_1
  description: |
    Reserved
ps7_devcfg_MCTRL_PCFG_POR_B:
  addr: 0xf8007080
  mask: 0x100
  name: PCFG_POR_B
  description: |
    PL POR_B signal used to determine power-up status of PL.
ps7_devcfg_MCTRL_reserved_2:
  addr: 0xf8007080
  mask: 0xe0
  name: reserved_2
  description: |
    Reserved
ps7_devcfg_MCTRL_INT_PCAP_LPBK:
  addr: 0xf8007080
  mask: 0x10
  name: INT_PCAP_LPBK
  description: |
    Internal PCAP loopback, if set
ps7_devcfg_MCTRL_reserved_3:
  addr: 0xf8007080
  mask: 0xc
  name: reserved_3
  description: |
    Reserved
ps7_devcfg_MCTRL_reserved_RFIFO_FLUSH:
  addr: 0xf8007080
  mask: 0x2
  name: reserved_RFIFO_FLUSH
  description: |
    Reserved. Do not modify.
ps7_devcfg_MCTRL_reserved_WFIFO_FLUSH:
  addr: 0xf8007080
  mask: 0x1
  name: reserved_WFIFO_FLUSH
  description: |
    Reserved. Do not modify.
ps7_devcfg_XADCIF_CFG_ENABLE:
  addr: 0xf8007100
  mask: 0x80000000
  name: ENABLE
  description: |
    Enable PS access of the XADC, if set
ps7_devcfg_XADCIF_CFG_reserved:
  addr: 0xf8007100
  mask: 0x7f000000
  name: reserved
  description: |
    Reserved
ps7_devcfg_XADCIF_CFG_CFIFOTH:
  addr: 0xf8007100
  mask: 0xf00000
  name: CFIFOTH
  description: |
    Command FIFO level threshold.
    Interrupt status flag is set if the FIFO level is less than or equal to the threshold
ps7_devcfg_XADCIF_CFG_DFIFOTH:
  addr: 0xf8007100
  mask: 0xf0000
  name: DFIFOTH
  description: |
    Data FIFO level threshold.
    Interrupt status flag is set if FIFO level is greater than the threshold
ps7_devcfg_XADCIF_CFG_reserved_1:
  addr: 0xf8007100
  mask: 0xc000
  name: reserved_1
  description: |
    Reserved
ps7_devcfg_XADCIF_CFG_WEDGE:
  addr: 0xf8007100
  mask: 0x2000
  name: WEDGE
  description: |
    Write launch edge :
    0 - Falling edge
    1 - Rising edge
ps7_devcfg_XADCIF_CFG_REDGE:
  addr: 0xf8007100
  mask: 0x1000
  name: REDGE
  description: |
    Read capture edge :
    0 - Falling edge
    1 - Rising edge
ps7_devcfg_XADCIF_CFG_reserved_2:
  addr: 0xf8007100
  mask: 0xc00
  name: reserved_2
  description: |
    Reserved
ps7_devcfg_XADCIF_CFG_TCKRATE:
  addr: 0xf8007100
  mask: 0x300
  name: TCKRATE
  description: |
    XADC clock frequency control.
    The base frequency is pcap_2x clock which has a nominal frequency of 200 MHz.
    00 - 1/2 of pcap_2x clock frequency
    01 - 1/4
    of pcap_2x clock frequency
    10 - 1/8 of pcap_2x clock frequency
    11 - 1/16 of pcap_2x clock frequency
ps7_devcfg_XADCIF_CFG_reserved_3:
  addr: 0xf8007100
  mask: 0xe0
  name: reserved_3
  description: |
    Reserved
ps7_devcfg_XADCIF_CFG_IGAP:
  addr: 0xf8007100
  mask: 0x1f
  name: IGAP
  description: |
    Minimum idle gap between successive commands.
ps7_devcfg_XADCIF_INT_STS_reserved:
  addr: 0xf8007104
  mask: 0xfffffc00
  name: reserved
  description: |
    Reserved
ps7_devcfg_XADCIF_INT_STS_CFIFO_LTH:
  addr: 0xf8007104
  mask: 0x200
  name: CFIFO_LTH
  description: |
    Command FIFO level less than or equal to the threshold (see register 0x100).
ps7_devcfg_XADCIF_INT_STS_DFIFO_GTH:
  addr: 0xf8007104
  mask: 0x100
  name: DFIFO_GTH
  description: |
    Data FIFO level greater than threshold (see register 0x100).
ps7_devcfg_XADCIF_INT_STS_OT:
  addr: 0xf8007104
  mask: 0x80
  name: OT
  description: |
    Over temperature alarm from XADC.
    This is a latched version of the raw signal which is also available in register 0x10C
ps7_devcfg_XADCIF_INT_STS_ALM:
  addr: 0xf8007104
  mask: 0x7f
  name: ALM
  description: |
    Alarm signals from XADC.
    These are latched version of the raw input alarm signals which are also available in register 0x10C
ps7_devcfg_XADCIF_INT_MASK_reserved:
  addr: 0xf8007108
  mask: 0xfffffc00
  name: reserved
  description: |
    Reserved
ps7_devcfg_XADCIF_INT_MASK_M_CFIFO_LTH:
  addr: 0xf8007108
  mask: 0x200
  name: M_CFIFO_LTH
  description: |
    Interrupt mask for command FIFO level threshold interrupt.
ps7_devcfg_XADCIF_INT_MASK_M_DFIFO_GTH:
  addr: 0xf8007108
  mask: 0x100
  name: M_DFIFO_GTH
  description: |
    Interrupt mask Data FIFO level greater than threshold interrupt.
ps7_devcfg_XADCIF_INT_MASK_M_OT:
  addr: 0xf8007108
  mask: 0x80
  name: M_OT
  description: |
    Interrupt mask for over temperature alarm interrupt
ps7_devcfg_XADCIF_INT_MASK_M_ALM:
  addr: 0xf8007108
  mask: 0x7f
  name: M_ALM
  description: |
    Interrupt mask for alarm signals from XADC.
ps7_devcfg_XADCIF_MSTS_reserved:
  addr: 0xf800710c
  mask: 0xfff00000
  name: reserved
  description: |
    Reserved
ps7_devcfg_XADCIF_MSTS_CFIFO_LVL:
  addr: 0xf800710c
  mask: 0xf0000
  name: CFIFO_LVL
  description: |
    Command FIFO level.
ps7_devcfg_XADCIF_MSTS_DFIFO_LVL:
  addr: 0xf800710c
  mask: 0xf000
  name: DFIFO_LVL
  description: |
    Data FIFO level.
ps7_devcfg_XADCIF_MSTS_CFIFOF:
  addr: 0xf800710c
  mask: 0x800
  name: CFIFOF
  description: |
    Command FIFO full.
ps7_devcfg_XADCIF_MSTS_CFIFOE:
  addr: 0xf800710c
  mask: 0x400
  name: CFIFOE
  description: |
    Command FIFO empty.
ps7_devcfg_XADCIF_MSTS_DFIFOF:
  addr: 0xf800710c
  mask: 0x200
  name: DFIFOF
  description: |
    Data FIFO full.
ps7_devcfg_XADCIF_MSTS_DFIFOE:
  addr: 0xf800710c
  mask: 0x100
  name: DFIFOE
  description: |
    Data FIFO empty.
ps7_devcfg_XADCIF_MSTS_OT:
  addr: 0xf800710c
  mask: 0x80
  name: OT
  description: |
    Raw over temperature alarm from the XADC.
    Latched version of the signal is available in the interrupt status register.
ps7_devcfg_XADCIF_MSTS_ALM:
  addr: 0xf800710c
  mask: 0x7f
  name: ALM
  description: |
    Raw alarm signals from the XADC.
    Latched version of the signals are available in the interrupt status register.
ps7_devcfg_XADCIF_CMDFIFO_CMD:
  addr: 0xf8007110
  mask: 0xffffffff
  name: CMD
  description: |
    32-bit command.
ps7_devcfg_XADCIF_RDFIFO_RDDATA:
  addr: 0xf8007114
  mask: 0xffffffff
  name: RDDATA
  description: |
    32-bit read data.
ps7_devcfg_XADCIF_MCTL_reserved:
  addr: 0xf8007118
  mask: 0xffffffe0
  name: reserved
  description: |
    Reserved
ps7_devcfg_XADCIF_MCTL_RESET:
  addr: 0xf8007118
  mask: 0x10
  name: RESET
  description: |
    This bit will reset the communication channel between the PS and XADC.
    If set, the PS-XADC communication channel will remain in reset until a 0 is written to this bit.
ps7_devcfg_XADCIF_MCTL_reserved_1:
  addr: 0xf8007118
  mask: 0xe
  name: reserved_1
  description: |
    Reserved
ps7_devcfg_XADCIF_MCTL_reserved_FLUSH:
  addr: 0xf8007118
  mask: 0x1
  name: reserved_FLUSH
  description: |
    Reserved. Do not modify.
ps7_mpcore_SCU_CONTROL_REGISTER_reserved:
  addr: 0xf8f00000
  mask: 0xffffff80
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is always zero.
ps7_mpcore_SCU_CONTROL_REGISTER_IC_standby_enable:
  addr: 0xf8f00000
  mask: 0x40
  name: IC_standby_enable
  description: |
    When set, this stops the Interrupt Controller clock when no interrupts are pending, and no CPU is performing a read/write request.
ps7_mpcore_SCU_CONTROL_REGISTER_SCU_standby_enable:
  addr: 0xf8f00000
  mask: 0x20
  name: SCU_standby_enable
  description: |
    When set, SCU CLK is turned off when all processors are in WFI mode,
    there is no pending request on the ACP (if implemented), and there is no
    remaining activity in the SCU.
    When SCU CLK is off, ARREADYS, AWREADYS and WREADYS on
    the ACP are forced LOW. The clock is turned on when any processor
    leaves WFI mode, or if there is a new request on the ACP.
ps7_mpcore_SCU_CONTROL_REGISTER_Force_all_Device_to_port0_enable:
  addr: 0xf8f00000
  mask: 0x10
  name: Force_all_Device_to_port0_enable
  description: |
    When set, all requests from the ACP or processors with AxCACHE =
    NonCacheable Bufferable are forced to be issued on the AXI Master port
    M0.
ps7_mpcore_SCU_CONTROL_REGISTER_SCU_Speculative_linefills_enable:
  addr: 0xf8f00000
  mask: 0x8
  name: SCU_Speculative_linefills_enable
  description: |
    When set, coherent linefill requests are sent speculatively to the L2C-310
    in parallel with the tag look-up. If the tag look-up misses, the confirmed
    linefill is sent to the L2C-310 and gets RDATA earlier because the data
    request was already initiated by the speculative request. This feature works
    only if the L2C-310 is present in the design.
ps7_mpcore_SCU_CONTROL_REGISTER_SCU_RAMs_Parity_enable:
  addr: 0xf8f00000
  mask: 0x4
  name: SCU_RAMs_Parity_enable
  description: |
    1 = Parity on.
    0 = Parity off. This is the default setting.
    This bit is always zero if support for parity is not implemented.
ps7_mpcore_SCU_CONTROL_REGISTER_Address_filtering_enable:
  addr: 0xf8f00000
  mask: 0x2
  name: Address_filtering_enable
  description: |
    1 = Addressing filtering on.
    0 = Addressing filtering off.
    The default value is the value of FILTEREN sampled when nSCURESET
    is deasserted.
    This bit is always zero if the SCU is implemented in the single master port
    configuration.
ps7_mpcore_SCU_CONTROL_REGISTER_SCU_enable:
  addr: 0xf8f00000
  mask: 0x1
  name: SCU_enable
  description: |
    1 = SCU enable.
    0 = SCU disable. This is the default setting
ps7_mpcore_SCU_CONFIGURATION_REGISTER_reserved_1:
  addr: 0xf8f00004
  mask: 0xffff0000
  name: reserved_1
  description: |
    Should Be Zero (SBZ)
ps7_mpcore_SCU_CONFIGURATION_REGISTER_Tag_RAM_sizes:
  addr: 0xf8f00004
  mask: 0xff00
  name: Tag_RAM_sizes
  description: |
    Bits [15:14] indicate Cortex-A9 processor CPU3 tag RAM size if present.
    Bits [13:12] indicate Cortex-A9 processor CPU2 tag RAM size if present.
    Bits [11:10] indicate Cortex-A9 processor CPU1 tag RAM size if present.
    Bits [9:8] indicate Cortex-A9 processor CPU0 tag RAM size.
    The encoding is as follows:
    b11 = reserved
    b10 = 64KB cache, 256 indexes per tag RAM
    b01 = 32KB cache, 128 indexes per tag RAM
    b00 = 16KB cache, 64 indexes per tag RAM.
ps7_mpcore_SCU_CONFIGURATION_REGISTER_CPUs_SMP:
  addr: 0xf8f00004
  mask: 0xf0
  name: CPUs_SMP
  description: |
    Shows the Cortex-A9 processors that are in Symmetric Multi-processing (SMP) or
    Asymmetric Multi-processing (AMP) mode.
    0 = this Cortex-A9 processor is in AMP mode not taking part in coherency or not present.
    1 = this Cortex-A9 processor is in SMP mode taking part in coherency.
    Bit 7 is for CPU3
    Bit 6 is for CPU2
    Bit 5 is for CPU1
    Bit 4 is for CPU0.
ps7_mpcore_SCU_CONFIGURATION_REGISTER_reserved:
  addr: 0xf8f00004
  mask: 0xc
  name: reserved
  description: |
    Should Be Zero (SBZ)
ps7_mpcore_SCU_CONFIGURATION_REGISTER_CPU_number:
  addr: 0xf8f00004
  mask: 0x3
  name: CPU_number
  description: |
    Number of CPUs present in the Cortex-A9 MPCore processor
    b11 = four Cortex-A9 processors, CPU0, CPU1, CPU2, and CPU3
    b10 = three Cortex-A9 processors, CPU0, CPU1, and CPU2
    b01 = two Cortex-A9 processors, CPU0 and CPU1
    b00 = one Cortex-A9 processor, CPU0.
ps7_mpcore_SCU_CPU_Power_Status_Register_reserved_3:
  addr: 0xf8f00008
  mask: 0xfc000000
  name: reserved_3
  description: |
    Should Be Zero (SBZ)
ps7_mpcore_SCU_CPU_Power_Status_Register_CPU3_status:
  addr: 0xf8f00008
  mask: 0x3000000
  name: CPU3_status
  description: |
    Power status of the Cortex-A9 processor:
    b00: Normal mode.
    b01: Reserved.
    b10: the Cortex-A9 processor is about to enter (or is in) dormant mode. No coherency
    request is sent to the Cortex-A9 processor.
    b11: the Cortex-A9 processor is about to enter (or is in) powered-off mode, or is nonpresent.
    No coherency request is sent to the Cortex-A9 processor.
ps7_mpcore_SCU_CPU_Power_Status_Register_reserved_2:
  addr: 0xf8f00008
  mask: 0xfc0000
  name: reserved_2
  description: |
    Should Be Zero (SBZ)
ps7_mpcore_SCU_CPU_Power_Status_Register_CPU2_status:
  addr: 0xf8f00008
  mask: 0x30000
  name: CPU2_status
  description: |
    Power status of the Cortex-A9 processor
ps7_mpcore_SCU_CPU_Power_Status_Register_reserved_1:
  addr: 0xf8f00008
  mask: 0xfc00
  name: reserved_1
  description: |
    Should Be Zero (SBZ)
ps7_mpcore_SCU_CPU_Power_Status_Register_CPU1_status:
  addr: 0xf8f00008
  mask: 0x300
  name: CPU1_status
  description: |
    Power status of the Cortex-A9 processor
ps7_mpcore_SCU_CPU_Power_Status_Register_reserved:
  addr: 0xf8f00008
  mask: 0xfc
  name: reserved
  description: |
    Should Be Zero (SBZ)
ps7_mpcore_SCU_CPU_Power_Status_Register_CPU0_status:
  addr: 0xf8f00008
  mask: 0x3
  name: CPU0_status
  description: |
    Power status of the Cortex-A9 processor
ps7_mpcore_SCU_Invalidate_All_Registers_in_Secure_State_NA:
  addr: 0xf8f0000c
  mask: 0xffff0000
  name: NA
  description: |
    NA
ps7_mpcore_SCU_Invalidate_All_Registers_in_Secure_State_CPU3_ways:
  addr: 0xf8f0000c
  mask: 0xf000
  name: CPU3_ways
  description: |
    Specifies the ways that must be invalidated for CPU3. Writing to these bits has no effect if the
    Cortex-A9 MPCore processor has fewer than four processors.
ps7_mpcore_SCU_Invalidate_All_Registers_in_Secure_State_CPU2_ways:
  addr: 0xf8f0000c
  mask: 0xf00
  name: CPU2_ways
  description: |
    Specifies the ways that must be invalidated for CPU2. Writing to these bits has no effect if the
    Cortex-A9 MPCore processor has fewer than three processors
ps7_mpcore_SCU_Invalidate_All_Registers_in_Secure_State_CPU1_ways:
  addr: 0xf8f0000c
  mask: 0xf0
  name: CPU1_ways
  description: |
    Specifies the ways that must be invalidated for CPU1. Writing to these bits has no effect if the
    Cortex-A9 MPCore processor has fewer than two processors.
ps7_mpcore_SCU_Invalidate_All_Registers_in_Secure_State_CPU0_ways:
  addr: 0xf8f0000c
  mask: 0xf
  name: CPU0_ways
  description: |
    Specifies the ways that must be invalidated for CPU0
ps7_mpcore_Filtering_Start_Address_Register_Filtering_start_address:
  addr: 0xf8f00040
  mask: 0xfff00000
  name: Filtering_start_address
  description: |
    Start address for use with master port 1 in a two-master port configuration when
    address filtering is enabled.
    The default value is the value of FILTERSTART sampled on exit from reset. The
    value on the pin gives the upper address bits with 1MB granularity.
ps7_mpcore_Filtering_Start_Address_Register_SBZ:
  addr: 0xf8f00040
  mask: 0xfffff
  name: SBZ
  description: |
    SBZ
ps7_mpcore_Filtering_End_Address_Register_Filtering_end_address:
  addr: 0xf8f00044
  mask: 0xfff00000
  name: Filtering_end_address
  description: |
    End address for use with master port 1 in a two-master port configuration, when
    address filtering is enabled.
    The default value is the value of FILTEREND sampled on exit from reset. The value
    on the pin gives the upper address bits with 1MB granularity.
ps7_mpcore_Filtering_End_Address_Register_SBZ:
  addr: 0xf8f00044
  mask: 0xfffff
  name: SBZ
  description: |
    SBZ
ps7_mpcore_SCU_Access_Control_Register_SAC_a:
  addr: 0xf8f00050
  mask: 0xfffffff0
  name: a
  description: |
    SBZ
ps7_mpcore_SCU_Access_Control_Register_SAC_CPU3:
  addr: 0xf8f00050
  mask: 0x8
  name: CPU3
  description: |
    0 = CPU3 cannot access the components.
    1 = CPU3 can access the components. This is the default.
ps7_mpcore_SCU_Access_Control_Register_SAC_CPU2:
  addr: 0xf8f00050
  mask: 0x4
  name: CPU2
  description: |
    0 = CPU2 cannot access the components.
    1 = CPU2 can access the components. This is the default.
ps7_mpcore_SCU_Access_Control_Register_SAC_CPU1:
  addr: 0xf8f00050
  mask: 0x2
  name: CPU1
  description: |
    0 = CPU1 cannot access the components.
    1 = CPU1 can access the components. This is the default.
ps7_mpcore_SCU_Access_Control_Register_SAC_CPU0:
  addr: 0xf8f00050
  mask: 0x1
  name: CPU0
  description: |
    0 = CPU0 cannot access the components.
    1 = CPU0 can access the components. This is the default.
ps7_mpcore_SCU_Non_secure_Access_Control_Register_SBZ:
  addr: 0xf8f00054
  mask: 0xfffff000
  name: SBZ
  description: |
    SBZ
ps7_mpcore_SCU_Non_secure_Access_Control_Register_CPU3_global_timer:
  addr: 0xf8f00054
  mask: 0x800
  name: CPU3_global_timer
  description: |
    same as above
ps7_mpcore_SCU_Non_secure_Access_Control_Register_CPU2_global_timer:
  addr: 0xf8f00054
  mask: 0x400
  name: CPU2_global_timer
  description: |
    same as above
ps7_mpcore_SCU_Non_secure_Access_Control_Register_CPU1_global_timer:
  addr: 0xf8f00054
  mask: 0x200
  name: CPU1_global_timer
  description: |
    same as above
ps7_mpcore_SCU_Non_secure_Access_Control_Register_CPU0_global_timer:
  addr: 0xf8f00054
  mask: 0x100
  name: CPU0_global_timer
  description: |
    Non-secure access to the global timer for CPU<n>.
    * <n> is 3 for bit[11]
    * <n> is 2 for bit[10]
    * <n> is 1 for bit[9]
    * <n> is 0 for bit[8].
    0 = Secure accesses only. This is the default value.
    1 = Secure accesses and Non-Secure accesses.
ps7_mpcore_SCU_Non_secure_Access_Control_Register_Private_timers_for_CPU3:
  addr: 0xf8f00054
  mask: 0x80
  name: Private_timers_for_CPU3
  description: |
    same as above
ps7_mpcore_SCU_Non_secure_Access_Control_Register_Private_timers_for_CPU2:
  addr: 0xf8f00054
  mask: 0x40
  name: Private_timers_for_CPU2
  description: |
    same as above
ps7_mpcore_SCU_Non_secure_Access_Control_Register_Private_timers_for_CPU1:
  addr: 0xf8f00054
  mask: 0x20
  name: Private_timers_for_CPU1
  description: |
    same as above
ps7_mpcore_SCU_Non_secure_Access_Control_Register_Private_timers_for_CPU0:
  addr: 0xf8f00054
  mask: 0x10
  name: Private_timers_for_CPU0
  description: |
    Non-secure access to the private timer and watchdog for CPU<n>.
    * <n> is 3 for bit[7]
    * <n> is 2 for bit[6]]
    * <n> is 1 for bit[5]
    * <n> is 0 for bit[4].
    0 = Secure accesses only. Non-secure reads return 0. This is the default value.
    1 = Secure accesses and Non-secure accesses.
ps7_mpcore_SCU_Non_secure_Access_Control_Register_Component_access_for_CPU3:
  addr: 0xf8f00054
  mask: 0x8
  name: Component_access_for_CPU3
  description: |
    same as above
ps7_mpcore_SCU_Non_secure_Access_Control_Register_Component_access_for_CPU2:
  addr: 0xf8f00054
  mask: 0x4
  name: Component_access_for_CPU2
  description: |
    same as above
ps7_mpcore_SCU_Non_secure_Access_Control_Register_Component_access_for_CPU1:
  addr: 0xf8f00054
  mask: 0x2
  name: Component_access_for_CPU1
  description: |
    same as above
ps7_mpcore_SCU_Non_secure_Access_Control_Register_Component_access_for_CPU0:
  addr: 0xf8f00054
  mask: 0x1
  name: Component_access_for_CPU0
  description: |
    Non-secure access to the components for CPU<n>.
    * <n> is 3 for bit[3]
    * <n> is 2 for bit[2]]
    * <n> is 1 for bit[1]
    * <n> is 0 for bit[0].
    0 = CPU cannot write the components
    1 = CPU can access the components.
ps7_mpcore_ICCICR_reserved:
  addr: 0xf8f00100
  mask: 0xffffffe0
  name: reserved
  description: |
    reserved
ps7_mpcore_ICCICR_SBPR:
  addr: 0xf8f00100
  mask: 0x10
  name: SBPR
  description: |
    Controls whether the CPU interface uses the Secure or Non-secure Binary Point Register for preemption.
    0: use the Secure Binary Point Register for Secure interrupts, and use the Non-secure Binary Point Register for Non-secure interrupts.
    1: use the Secure Binary Point Register for both Secure and Non-secure interrupts.
ps7_mpcore_ICCICR_FIQEn:
  addr: 0xf8f00100
  mask: 0x8
  name: FIQEn
  description: |
    Controls whether the GIC signals Secure interrupts to a target processor using the FIQ or the IRQ signal.
    0: using IRQ, 1: using FIQ.
    The GIC always signals Non-secure interrupts using IRQ.
ps7_mpcore_ICCICR_AckCtl:
  addr: 0xf8f00100
  mask: 0x4
  name: AckCtl
  description: |
    Controls whether a Secure read of the ICCIAR, when the highest priority pending interrupt is Non-secure, causes the CPU interface to acknowledge the interrupt.
ps7_mpcore_ICCICR_EnableNS:
  addr: 0xf8f00100
  mask: 0x2
  name: EnableNS
  description: |
    An alias of the Enable bit in the Non-secure ICCICR.
    This alias bit means Secure software can enable the signal of Non-secure interrupts.
ps7_mpcore_ICCICR_EnableS:
  addr: 0xf8f00100
  mask: 0x1
  name: EnableS
  description: |
    Global enable for the signaling of Secure interrupts by the CPU interfaces to the connected processors.
ps7_mpcore_ICCPMR_reserved:
  addr: 0xf8f00104
  mask: 0xffffff00
  name: reserved
  description: |
    reserved
ps7_mpcore_ICCPMR_Priority:
  addr: 0xf8f00104
  mask: 0xff
  name: Priority
  description: |
    The priority mask level for the CPU interface.
    If the priority of an interrupt is higher than the value indicated by this field, the interface signals the interrupt to the processor.
ps7_mpcore_ICCBPR_reserved:
  addr: 0xf8f00108
  mask: 0xfffffff8
  name: reserved
  description: |
    reserved
ps7_mpcore_ICCBPR_Binary_point:
  addr: 0xf8f00108
  mask: 0x7
  name: Binary_point
  description: |
    The value of this field controls
    the 8-bit interrupt priority field is split into a group priority field, used to determine interrupt preemption, and a subpriority field.
ps7_mpcore_ICCIAR_reserved:
  addr: 0xf8f0010c
  mask: 0xffffe000
  name: reserved
  description: |
    reserved
ps7_mpcore_ICCIAR_CPUID:
  addr: 0xf8f0010c
  mask: 0x1c00
  name: CPUID
  description: |
    Identifies the processor that requested the interrupt.
    Returns the number of the CPU interface that made the request.
ps7_mpcore_ICCIAR_ACKINTID:
  addr: 0xf8f0010c
  mask: 0x3ff
  name: ACKINTID
  description: |
    The interrupt ID.
    This read acts as an acknowledge for the interrupt.
ps7_mpcore_ICCEOIR_reserved:
  addr: 0xf8f00110
  mask: 0xffffe000
  name: reserved
  description: |
    reserved
ps7_mpcore_ICCEOIR_CPUID:
  addr: 0xf8f00110
  mask: 0x1c00
  name: CPUID
  description: |
    On completion of the processing of an SGI, this field contains the CPUID value from the corresponding ICCIAR access.
ps7_mpcore_ICCEOIR_EOIINTID:
  addr: 0xf8f00110
  mask: 0x3ff
  name: EOIINTID
  description: |
    The ACKINTID value from the corresponding ICCIAR access.
ps7_mpcore_ICCRPR_reserved:
  addr: 0xf8f00114
  mask: 0xffffff00
  name: reserved
  description: |
    reserved
ps7_mpcore_ICCRPR_Priority:
  addr: 0xf8f00114
  mask: 0xff
  name: Priority
  description: |
    The priority value of the highest priority interrupt that is active on the CPU interface.
ps7_mpcore_ICCHPIR_reserved:
  addr: 0xf8f00118
  mask: 0xffffe000
  name: reserved
  description: |
    reserved
ps7_mpcore_ICCHPIR_CPUID:
  addr: 0xf8f00118
  mask: 0x1c00
  name: CPUID
  description: |
    If the PENDINTID field returns the ID of an SGI, this field contains the CPUID value for that interrupt.
    The identifies the processor that generated the interrupt.
ps7_mpcore_ICCHPIR_PENDINTID:
  addr: 0xf8f00118
  mask: 0x3ff
  name: PENDINTID
  description: |
    The interrupt ID of the highest priority pending interrupt.
ps7_mpcore_ICCABPR_reserved:
  addr: 0xf8f0011c
  mask: 0xfffffff8
  name: reserved
  description: |
    reserved
ps7_mpcore_ICCABPR_Binary_point:
  addr: 0xf8f0011c
  mask: 0x7
  name: Binary_point
  description: |
    Provides an alias of the Non-secure ICCBPR.
ps7_mpcore_ICCIDR_Part_number:
  addr: 0xf8f001fc
  mask: 0xfff00000
  name: Part_number
  description: |
    Identifies the peripheral
ps7_mpcore_ICCIDR_Architecture_version:
  addr: 0xf8f001fc
  mask: 0xf0000
  name: Architecture_version
  description: |
    Identifies the architecture version
ps7_mpcore_ICCIDR_Revision_number:
  addr: 0xf8f001fc
  mask: 0xf000
  name: Revision_number
  description: |
    Returns the revision number of the Interrupt Controller. The implementer defines the
    format of this field.
ps7_mpcore_ICCIDR_Implementer:
  addr: 0xf8f001fc
  mask: 0xfff
  name: Implementer
  description: |
    Returns the JEP106 code of the company that implemented the Cortex-A9 processor
    interface RTL. It uses the following construct:
    [11:8] the JEP106 continuation code of the implementer
    [7] 0
    [6:0] the JEP106 code [6:0] of the implementer
ps7_mpcore_Global_Timer_Counter_Register0_a:
  addr: 0xf8f00200
  mask: 0xffffffff
  name: a
  description: |
    There are two timer counter registers. They are the lower 32-bit timer counter at offset
    0x00 and the upper 32-bit timer counter at offset 0x04.
    You must access these registers with 32-bit accesses. You cannot use STRD/LDRD.
    To modify the register proceed as follows:
    1. Clear the timer enable bit in the Global Timer Control Register
    2. Write the lower 32-bit timer counter register
    3. Write the upper 32-bit timer counter register
    4. Set the timer enable bit.
    To get the value from the Global Timer Counter register proceed as follows:
    1. Read the upper 32-bit timer counter register
    2. Read the lower 32-bit timer counter register
    3. Read the upper 32-bit timer counter register again. If the value is different to the
    32-bit upper value read previously, go back to step 2. Otherwise the 64-bit timer
    counter value is correct.
ps7_mpcore_Global_Timer_Counter_Register1_a:
  addr: 0xf8f00204
  mask: 0xffffffff
  name: a
  description: |
    There are two timer counter registers. They are the lower 32-bit timer counter at offset
    0x00 and the upper 32-bit timer counter at offset 0x04.
    You must access these registers with 32-bit accesses. You cannot use STRD/LDRD.
    To modify the register proceed as follows:
    1. Clear the timer enable bit in the Global Timer Control Register
    2. Write the lower 32-bit timer counter register
    3. Write the upper 32-bit timer counter register
    4. Set the timer enable bit.
    To get the value from the Global Timer Counter register proceed as follows:
    1. Read the upper 32-bit timer counter register
    2. Read the lower 32-bit timer counter register
    3. Read the upper 32-bit timer counter register again. If the value is different to the
    32-bit upper value read previously, go back to step 2. Otherwise the 64-bit timer
    counter value is correct.
ps7_mpcore_Global_Timer_Control_Register_reserved_1:
  addr: 0xf8f00208
  mask: 0xffff0000
  name: reserved_1
  description: |
    Reserved
ps7_mpcore_Global_Timer_Control_Register_Prescaler:
  addr: 0xf8f00208
  mask: 0xff00
  name: Prescaler
  description: |
    The prescaler modifies the clock period for the decrementing event for the Counter
    Register. See Calculating timer intervals on page 4-2 for the equation
ps7_mpcore_Global_Timer_Control_Register_reserved:
  addr: 0xf8f00208
  mask: 0xf0
  name: reserved
  description: |
    Reserved
ps7_mpcore_Global_Timer_Control_Register_a:
  addr: 0xf8f00208
  mask: 0x8
  name: a
  description: |
    This bit is banked per Cortex-A9 processor.
    1'b0: single shot mode.
    When the counter reaches the comparator value, sets the event flag. It is the responsibility
    of software to update the comparator value to get further events.
    1'b1: auto increment mode.
    Each time the counter reaches the comparator value, the comparator register is
    incremented with the auto-increment register, so that further events can be set periodically
    without any software updates.
ps7_mpcore_Global_Timer_Control_Register_IRQ_Enable:
  addr: 0xf8f00208
  mask: 0x4
  name: IRQ_Enable
  description: |
    This bit is banked per Cortex-A9 processor.
    If set, the interrupt ID 27 is set as pending in the Interrupt Distributor when the event flag
    is set in the Timer Status Register.
ps7_mpcore_Global_Timer_Control_Register_Comp_Enablea:
  addr: 0xf8f00208
  mask: 0x2
  name: Comp_Enablea
  description: |
    This bit is banked per Cortex-A9 processor.
    If set, it allows the comparison between the 64-bit Timer Counter and the related 64-bit
    Comparator Register.
ps7_mpcore_Global_Timer_Control_Register_Timer_Enable:
  addr: 0xf8f00208
  mask: 0x1
  name: Timer_Enable
  description: |
    Timer enable
    1'b0 = Timer is disabled and the counter does not increment.
    All registers can still be read and written
    1'b1 = Timer is enabled and the counter increments normally
ps7_mpcore_Global_Timer_Interrupt_Status_Register_reserved:
  addr: 0xf8f0020c
  mask: 0xfffffffe
  name: reserved
  description: |
    UNK/SBZP
ps7_mpcore_Global_Timer_Interrupt_Status_Register_Event_flag:
  addr: 0xf8f0020c
  mask: 0x1
  name: Event_flag
  description: |
    This is a banked register for all Cortex-A9 processors present.
    The event flag is a sticky bit that is automatically set when the Counter Register reaches
    the Comparator Register value. If the timer interrupt is enabled, Interrupt ID 27 is set as
    pending in the Interrupt Distributor after the event flag is set. The event flag is cleared
    when written to 1. Figure 4-7 shows the Global Timer Interrupt Status Register bit
    assignment.
ps7_mpcore_Comparator_Value_Register0_a:
  addr: 0xf8f00210
  mask: 0xffffffff
  name: a
  description: |
    There are two 32-bit registers, the lower 32-bit comparator value register at offset 0x10
    and the upper 32-bit comparator value register at offset 0x14.
    You must access these registers with 32-bit accesses. You cannot use STRD/LDRD. There
    is a Comparator Value Register for each Cortex-A9 processor.
    To ensure that updates to this register do not set the Interrupt Status Register proceed as
    follows:
    1. Clear the Comp Enable bit in the Timer Control Register.
    2. Write the lower 32-bit Comparator Value Register.
    3. Write the upper 32-bit Comparator Value Register.
    4. Set the Comp Enable bit and, if necessary, the IRQ enable bit.
ps7_mpcore_Comparator_Value_Register1_a:
  addr: 0xf8f00214
  mask: 0xffffffff
  name: a
  description: |
    There are two 32-bit registers, the lower 32-bit comparator value register at offset 0x10
    and the upper 32-bit comparator value register at offset 0x14.
    You must access these registers with 32-bit accesses. You cannot use STRD/LDRD. There
    is a Comparator Value Register for each Cortex-A9 processor.
    To ensure that updates to this register do not set the Interrupt Status Register proceed as
    follows:
    1. Clear the Comp Enable bit in the Timer Control Register.
    2. Write the lower 32-bit Comparator Value Register.
    3. Write the upper 32-bit Comparator Value Register.
    4. Set the Comp Enable bit and, if necessary, the IRQ enable bit.
ps7_mpcore_Auto_increment_Register_a:
  addr: 0xf8f00218
  mask: 0xffffffff
  name: a
  description: |
    Auto-increment Register
    This 32-bit register gives the increment value of the Comparator Register when the
    Auto-increment bit is set in the Timer Control Register. Each Cortex-A9 processor
    present has its own Auto-increment Register
    If the comp enable and auto-increment bits are set when the global counter reaches the
    Comparator Register value, the comparator is incremented by the auto-increment value,
    so that a new event can be set periodically.
    The global timer is not affected and goes on incrementing
ps7_mpcore_Private_Timer_Load_Register_a:
  addr: 0xf8f00600
  mask: 0xffffffff
  name: a
  description: |
    The Timer Load Register contains the value copied to the Timer Counter Register when
    it decrements down to zero with auto reload mode enabled. Writing to the Timer Load
    Register means that you also write to the Timer Counter Register.
ps7_mpcore_Private_Timer_Counter_Register_a:
  addr: 0xf8f00604
  mask: 0xffffffff
  name: a
  description: |
    The Timer Counter Register is a decrementing counter.
    The Timer Counter Register decrements if the timer is enabled using the timer enable
    bit in the Timer Control Register. If a Cortex-A9 processor timer is in debug state, the
    counter only decrements when the Cortex-A9 processor returns to non debug state.
    When the Timer Counter Register reaches zero and auto reload mode is enabled, it
    reloads the value in the Timer Load Register and then decrements from that value. If
    auto reload mode is not enabled, the Timer Counter Register decrements down to zero
    and stops.
    When the Timer Counter Register reaches zero, the timer interrupt status event flag is
    set and the interrupt ID 29 is set as pending in the Interrupt Distributor, if interrupt
    generation is enabled in the Timer Control Register.
    Writing to the Timer Counter Register or Timer Load Register forces the Timer Counter
    Register to decrement from the newly written value.
ps7_mpcore_Private_Timer_Control_Register_SBZP:
  addr: 0xf8f00608
  mask: 0xffff0000
  name: SBZP
  description: |
    UNK/SBZP.
ps7_mpcore_Private_Timer_Control_Register_Prescaler:
  addr: 0xf8f00608
  mask: 0xff00
  name: Prescaler
  description: |
    The prescaler modifies the clock period for the decrementing event for the Counter
    Register. See Calculating timer intervals on page 4-2 for the equation.\'5c
ps7_mpcore_Private_Timer_Control_Register_UNK_SBZP:
  addr: 0xf8f00608
  mask: 0xf8
  name: UNK_SBZP
  description: |
    UNK/SBZP.
ps7_mpcore_Private_Timer_Control_Register_IRQ_Enable:
  addr: 0xf8f00608
  mask: 0x4
  name: IRQ_Enable
  description: |
    If set, the interrupt ID 29 is set as pending in the Interrupt Distributor when the event flag
    is set in the Timer Status Register.
ps7_mpcore_Private_Timer_Control_Register_Auto_reload:
  addr: 0xf8f00608
  mask: 0x2
  name: Auto_reload
  description: |
    1'b0 = Single shot mode.
    Counter decrements down to zero, sets the event flag and stops.
    1'b1 = Auto-reload mode.
    Each time the Counter Register reaches zero, it is reloaded with the value contained in the
    Timer Load Register.
ps7_mpcore_Private_Timer_Control_Register_Timer_Enable:
  addr: 0xf8f00608
  mask: 0x1
  name: Timer_Enable
  description: |
    Timer enable
    1'b0 = Timer is disabled and the counter does not decrement.
    All registers can still be read and written
    1'b1 = Timer is enabled and the counter decrements normally
ps7_mpcore_Private_Timer_Interrupt_Status_Register_UNK_SBZP:
  addr: 0xf8f0060c
  mask: 0xfffffffe
  name: UNK_SBZP
  description: |
    UNK/SBZP
ps7_mpcore_Private_Timer_Interrupt_Status_Register_a:
  addr: 0xf8f0060c
  mask: 0x1
  name: a
  description: |
    This is a banked register for all Cortex-A9 processors present.
    The event flag is a sticky bit that is automatically set when the Counter Register reaches
    zero. If the timer interrupt is enabled, Interrupt ID 29 is set as pending in the Interrupt
    Distributor after the event flag is set. The event flag is cleared when written to 1.
ps7_mpcore_Watchdog_Load_Register_a:
  addr: 0xf8f00620
  mask: 0xffffffff
  name: a
  description: |
    Watchdog Load Register
    The Watchdog Load Register contains the value copied to the Watchdog Counter
    Register when it decrements down to zero with auto reload mode enabled, in Timer
    mode. Writing to the Watchdog Load Register means that you also write to the
    Watchdog Counter Register
ps7_mpcore_Watchdog_Counter_Register_a:
  addr: 0xf8f00624
  mask: 0xffffffff
  name: a
  description: |
    Watchdog Counter Register
    The Watchdog Counter Register is a down counter.
    It decrements if the Watchdog is enabled using the Watchdog enable bit in the Watchdog
    Control Register. If the Cortex-A9 processor associated with the Watchdog is in debug
    state, the counter does not decrement until the Cortex-A9 processor returns to non
    debug state.
    When the Watchdog Counter Register reaches zero and auto reload mode is enabled,
    and in timer mode, it reloads the value in the Watchdog Load Register and then
    decrements from that value. If auto reload mode is not enabled or the watchdog is not
    in timer mode, the Watchdog Counter Register decrements down to zero and stops.
    When in watchdog mode the only way to update the Watchdog Counter Register is to
    write to the Watchdog Load Register. When in timer mode the Watchdog Counter
    Register is write accessible.
    The behavior of the watchdog when the Watchdog Counter Register reaches zero
    depends on its current mode:
    Timer mode When the Watchdog Counter Register reaches zero, the watchdog
    interrupt status event flag is set and the interrupt ID 30 is set as pending
    in the Interrupt Distributor, if interrupt generation is enabled in the
    Watchdog Control Register.
    Watchdog mode
    If a software failure prevents the Watchdog Counter Register from being
    refreshed, the Watchdog Counter Register reaches zero, the Watchdog
    reset status flag is set and the associated WDRESETREQ reset request
    output pin is asserted. The external reset source is then responsible for
    resetting all or part of the Cortex-A9 MPCore design.
ps7_mpcore_Watchdog_Control_Register_reserved:
  addr: 0xf8f00628
  mask: 0xffff0000
  name: reserved
  description: |
    Reserved.
ps7_mpcore_Watchdog_Control_Register_Prescaler:
  addr: 0xf8f00628
  mask: 0xff00
  name: Prescaler
  description: |
    The prescaler modifies the clock period for the decrementing event for the Counter
    Register.
ps7_mpcore_Watchdog_Control_Register_a:
  addr: 0xf8f00628
  mask: 0xf0
  name: a
  description: |
    Reserved.
ps7_mpcore_Watchdog_Control_Register_Watchdog_mode:
  addr: 0xf8f00628
  mask: 0x8
  name: Watchdog_mode
  description: |
    1'b0 = Timer mode, default
    Writing a zero to this bit has no effect. You must use the Watchdog Disable Register to
    put the watchdog into timer mode. See Watchdog Disable Register on page 4-9.
    1'b1 = Watchdog mode.
ps7_mpcore_Watchdog_Control_Register_IT_Enable:
  addr: 0xf8f00628
  mask: 0x4
  name: IT_Enable
  description: |
    If set, the interrupt ID 30 is set as pending in the Interrupt Distributor when the event flag
    is set in the watchdog Status Register.
    In watchdog mode this bit is ignored
ps7_mpcore_Watchdog_Control_Register_Auto_reload:
  addr: 0xf8f00628
  mask: 0x2
  name: Auto_reload
  description: |
    1'b0 = Single shot mode.
    Counter decrements down to zero, sets the event flag and stops.
    1'b1 = Auto-reload mode.
    Each time the Counter Register reaches zero, it is reloaded with the value contained in the
    Load Register and then continues decrementing.
ps7_mpcore_Watchdog_Control_Register_Watchdog_Enable:
  addr: 0xf8f00628
  mask: 0x1
  name: Watchdog_Enable
  description: |
    Global watchdog enable
    1'b0 = Watchdog is disabled and the counter does not decrement. All registers can still be
    read and /or written
    1'b1 = Watchdog is enabled and the counter decrements normally.
ps7_mpcore_Watchdog_Interrupt_Status_Register_reserved:
  addr: 0xf8f0062c
  mask: 0xfffffffe
  name: reserved
  description: |
    Reserved
ps7_mpcore_Watchdog_Interrupt_Status_Register_Event_flag:
  addr: 0xf8f0062c
  mask: 0x1
  name: Event_flag
  description: |
    The event flag is a sticky bit that is automatically set when the Counter Register reaches
    zero in timer mode. If the watchdog interrupt is enabled, Interrupt ID 30 is set as
    pending in the Interrupt Distributor after the event flag is set. The event flag is cleared
    when written with a value of 1. Trying to write a zero to the event flag or a one when it
    is not set has no effect.
ps7_mpcore_Watchdog_Reset_Status_Register_reserved:
  addr: 0xf8f00630
  mask: 0xfffffffe
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is always zero.
ps7_mpcore_Watchdog_Reset_Status_Register_Reset_flag:
  addr: 0xf8f00630
  mask: 0x1
  name: Reset_flag
  description: |
    The reset flag is a sticky bit that is automatically set when the Counter Register reaches
    zero and a reset request is sent accordingly. (In watchdog mode)
    The reset flag is cleared when written with a value of 1. Trying to write a zero to the
    reset flag or a one when it is not set has no effect. This flag is not reset by normal
    Cortex-A9 processor resets but has its own reset line, nWDRESET. nWDRESET must
    not be asserted when the Cortex-A9 processor reset assertion is the result of a watchdog
    reset request with WDRESETREQ. This distinction enables software to differentiate
    between a normal boot sequence, reset flag is zero, and one caused by a previous
    watchdog time-out, reset flag set to one.
ps7_mpcore_Watchdog_Disable_Register_a:
  addr: 0xf8f00634
  mask: 0xffffffff
  name: a
  description: |
    Watchdog Disable Register
    Use the Watchdog Disable Register to switch from watchdog to timer mode. The
    software must write 0x12345678 then 0x87654321 successively to the Watchdog Disable
    Register so that the watchdog mode bit in the Watchdog Control Register is set to zero.
    If one of the values written to the Watchdog Disable Register is incorrect or if any other
    write occurs in between the two word writes, the watchdog remains in its current state.
    To reactivate the Watchdog, the software must write 1 to the watchdog mode bit of the
    Watchdog Control Register.
ps7_mpcore_ICDDCR_reserved:
  addr: 0xf8f01000
  mask: 0xfffffffc
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is always zero.
ps7_mpcore_ICDDCR_Enable_Non_secure:
  addr: 0xf8f01000
  mask: 0x2
  name: Enable_Non_secure
  description: |
    0 = disables all Non-secure interrupts control bits in the distributor from changing state
    because of any external stimulus change that occurs on the corresponding SPI or PPI
    signals
    1 = enables the distributor to update register locations for Non-secure interrupts
    FOR: ICDDCR_for_Non_secure_mode
    31,1 --> Reserved. Writes are ignored, read data is always zero.
ps7_mpcore_ICDDCR_Enable_secure:
  addr: 0xf8f01000
  mask: 0x1
  name: Enable_secure
  description: |
    0 = disables all Secure interrupt control bits in the distributor from changing state
    because of any external stimulus change that occurs on the corresponding SPI or PPI
    signals.
    1 = enables the distributor to update register locations for Secure interrupts.
    FOR: ICDDCR_for_Non_secure_mode
    0 --> Enable_Non_secure --> 0 = disables all Non-secure interrupts control bits in the
    distributor from changing state because of any external
    stimulus change that occurs on the corresponding SPI or
    PPI signals
    1 = enables the distributor to update register locations for
    Non-secure interrupts
ps7_mpcore_ICDICTR_reserved:
  addr: 0xf8f01004
  mask: 0xe0000000
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is always zero.
ps7_mpcore_ICDICTR_LSPI:
  addr: 0xf8f01004
  mask: 0xf800
  name: LSPI
  description: |
    Returns the number of Lockable Shared Peripheral Interrupts (LSPIs) that the controller
    contains. The encoding is:
    b11111 = 31 LSPIs, which are the interrupts of IDs 32-62.
    When CFGSDISABLE is HIGH then the interrupt controller prevents writes to any
    register locations that control the operating state of an LSPI.
ps7_mpcore_ICDICTR_SecurityExtn:
  addr: 0xf8f01004
  mask: 0x400
  name: SecurityExtn
  description: |
    Returns the number of security domains that the controller contains:
    1 = the controller contains two security domains.
    This bit always returns the value one.
ps7_mpcore_ICDICTR_SBZ:
  addr: 0xf8f01004
  mask: 0x300
  name: SBZ
  description: |
    Reserved
ps7_mpcore_ICDICTR_CPU_Number:
  addr: 0xf8f01004
  mask: 0xe0
  name: CPU_Number
  description: |
    The encoding is:
    b000 the Cortex-A9 MPCore configuration contains one Cortex-A9 processor.
    b001 the Cortex-A9 MPCore configuration contains two Cortex-A9 processors.
    b010 the Cortex-A9 MPCore configuration contains three Cortex-A9 processors.
    b011 the Cortex-A9 MPCore configuration contains four Cortex-A9 processors.
    b1xx: Unused values.
ps7_mpcore_ICDICTR_IT_Lines_Number:
  addr: 0xf8f01004
  mask: 0x1f
  name: IT_Lines_Number
  description: |
    The encoding is:
    b00000 = the distributor provides 32 interrupts, no external interrupt lines.
    b00001 = the distributor provides 64 interrupts, 32 external interrupt lines.
    b00010 = the distributor provides 96 interrupts, 64 external interrupt lines.
    b00011 = the distributor provide 128 interrupts, 96 external interrupt lines.
    b00100 = the distributor provides 160 interrupts, 128 external interrupt lines.
    b00101 = the distributor provides 192 interrupts, 160 external interrupt lines.
    b00110 = the distributor provides 224 interrupts, 192 external interrupt lines.
    b00111 = the distributor provides 256 interrupts, 224 external interrupt lines.
    All other values not used.
ps7_mpcore_ICDIIDR0_Implementation_Version:
  addr: 0xf8f01008
  mask: 0xff000000
  name: Implementation_Version
  description: |
    Gives implementation version number
ps7_mpcore_ICDIIDR1_Revision_Number:
  addr: 0xf8f01008
  mask: 0xfff000
  name: Revision_Number
  description: |
    Return the revision number of the controller
ps7_mpcore_ICDIIDR2_Implementer:
  addr: 0xf8f01008
  mask: 0xfff
  name: Implementer
  description: |
    Implementer Number
ps7_mpcore_ICDISR0_Security_Status:
  addr: 0xf8f01080
  mask: 0xffffffff
  name: Security_Status
  description: |
    The ICDISRn provide a Security status bit for each interrupt supported by the GIC.
    Each bit controls the security status of the corresponding interrupt.
    Accessible by Secure accesses only.
    The register addresses are RAZ/WI to Non-secure accesses.
    ICDISR0 is banked for each connected processor.
ps7_mpcore_ICDISR1_Security_Status:
  addr: 0xf8f01084
  mask: 0xffffffff
  name: Security_Status
  description: |
    The ICDISRn provide a Security status bit for each interrupt supported by the GIC.
    Each bit controls the security status of the corresponding interrupt.
    Accessible by Secure accesses only.
    The register addresses are RAZ/WI to Non-secure accesses.
    ICDISR0 is banked for each connected processor.
ps7_mpcore_ICDISR2_Security_Status:
  addr: 0xf8f01088
  mask: 0xffffffff
  name: Security_Status
  description: |
    The ICDISRn provide a Security status bit for each interrupt supported by the GIC.
    Each bit controls the security status of the corresponding interrupt.
    Accessible by Secure accesses only.
    The register addresses are RAZ/WI to Non-secure accesses.
    ICDISR0 is banked for each connected processor.
ps7_mpcore_ICDISER0_Set:
  addr: 0xf8f01100
  mask: 0xffffffff
  name: Set
  description: |
    The ICDISERs provide a Set-enable bit for each interrupt supported by the GIC.
    Writing 1 to a Set-enable bit enables forwarding of the corresponding interrupt to the CPU interfaces.
    A register bit that corresponds to a Secure interrupt is RAZ/WI to Non-secure access.
    ICDISER0 is banked for each connected processor.
ps7_mpcore_ICDISER1_Set:
  addr: 0xf8f01104
  mask: 0xffffffff
  name: Set
  description: |
    The ICDISERs provide a Set-enable bit for each interrupt supported by the GIC.
    Writing 1 to a Set-enable bit enables forwarding of the corresponding interrupt to the CPU interfaces.
    A register bit that corresponds to a Secure interrupt is RAZ/WI to Non-secure access.
ps7_mpcore_ICDISER2_Set:
  addr: 0xf8f01108
  mask: 0xffffffff
  name: Set
  description: |
    The ICDISERs provide a Set-enable bit for each interrupt supported by the GIC.
    Writing 1 to a Set-enable bit enables forwarding of the corresponding interrupt to the CPU interfaces.
    A register bit that corresponds to a Secure interrupt is RAZ/WI to Non-secure access.
ps7_mpcore_ICDICER0_Clear:
  addr: 0xf8f01180
  mask: 0xffffffff
  name: Clear
  description: |
    The ICDICERs provide a Clear-enable bit for each interrupt supported by the GIC.
    Writing 1 to a Clear-enable bit disables forwarding of the corresponding interrupt to the CPU interfaces.
    A register bit that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDICER0 is banked for each connected processor.
ps7_mpcore_ICDICER1_Clear:
  addr: 0xf8f01184
  mask: 0xffffffff
  name: Clear
  description: |
    The ICDICERs provide a Clear-enable bit for each interrupt supported by the GIC.
    Writing 1 to a Clear-enable bit disables forwarding of the corresponding interrupt to the CPU interfaces.
    A register bit that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ps7_mpcore_ICDICER2_Clear:
  addr: 0xf8f01188
  mask: 0xffffffff
  name: Clear
  description: |
    The ICDICERs provide a Clear-enable bit for each interrupt supported by the GIC.
    Writing 1 to a Clear-enable bit disables forwarding of the corresponding interrupt to the CPU interfaces.
    A register bit that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
ps7_mpcore_ICDISPR0_Set:
  addr: 0xf8f01200
  mask: 0xffffffff
  name: Set
  description: |
    The ICDISPRs provide a Set-pending bit for each interrupt supported by the GIC.
    Writing 1 to a Set-pending bit sets the status of the corresponding peripheral interrupt to pending.
    A register bit that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDISPR0 is banked for each connected processor.
ps7_mpcore_ICDISPR1_Set:
  addr: 0xf8f01204
  mask: 0xffffffff
  name: Set
  description: |
    The ICDISPRs provide a Set-pending bit for each interrupt supported by the GIC.
    Writing 1 to a Set-pending bit sets the status of the corresponding peripheral interrupt to pending.
    A register bit that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDISPR0 is banked for each connected processor.
ps7_mpcore_ICDISPR2_Set:
  addr: 0xf8f01208
  mask: 0xffffffff
  name: Set
  description: |
    The ICDISPRs provide a Set-pending bit for each interrupt supported by the GIC.
    Writing 1 to a Set-pending bit sets the status of the corresponding peripheral interrupt to pending.
    A register bit that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDISPR0 is banked for each connected processor.
ps7_mpcore_ICDICPR0_Clear:
  addr: 0xf8f01280
  mask: 0xffffffff
  name: Clear
  description: |
    The ICDICPRs provide a Clear-pending bit for each interrupt supported by the GIC.
    Writing 1 to a Clear-pending bit clears the status of the corresponding peripheral interrupt to pending.
    A register bit that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDICPR0 is banked for each connected processor.
ps7_mpcore_ICDICPR1_Clear:
  addr: 0xf8f01284
  mask: 0xffffffff
  name: Clear
  description: |
    The ICDICPRs provide a Clear-pending bit for each interrupt supported by the GIC.
    Writing 1 to a Clear-pending bit clears the status of the corresponding peripheral interrupt to pending.
    A register bit that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDICPR0 is banked for each connected processor.
ps7_mpcore_ICDICPR2_Clear:
  addr: 0xf8f01288
  mask: 0xffffffff
  name: Clear
  description: |
    The ICDICPRs provide a Clear-pending bit for each interrupt supported by the GIC.
    Writing 1 to a Clear-pending bit clears the status of the corresponding peripheral interrupt to pending.
    A register bit that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDICPR0 is banked for each connected processor.
ps7_mpcore_ICDABR0_Active:
  addr: 0xf8f01300
  mask: 0xffffffff
  name: Active
  description: |
    The ICDABRs provide an Active bit for each interrupt supported by the GIC.
    The bit reads as one if the status of the interrupt is active or active and pending.
    Read the ICDSPR or ICDCPR to find the pending status of the interrupt.
    ICDABR0 is banked for each connected processor.
ps7_mpcore_ICDABR1_Active:
  addr: 0xf8f01304
  mask: 0xffffffff
  name: Active
  description: |
    The ICDABRs provide an Active bit for each interrupt supported by the GIC.
    The bit reads as one if the status of the interrupt is active or active and pending.
    Read the ICDSPR or ICDCPR to find the pending status of the interrupt.
    ICDABR0 is banked for each connected processor.
ps7_mpcore_ICDABR2_Active:
  addr: 0xf8f01308
  mask: 0xffffffff
  name: Active
  description: |
    The ICDABRs provide an Active bit for each interrupt supported by the GIC.
    The bit reads as one if the status of the interrupt is active or active and pending.
    Read the ICDSPR or ICDCPR to find the pending status of the interrupt.
    ICDABR0 is banked for each connected processor.
ps7_mpcore_ICDIPR0_Priority:
  addr: 0xf8f01400
  mask: 0xffffffff
  name: Priority
  description: |
    The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPR0 to ICDIPR7 are banked for each connected processor
ps7_mpcore_ICDIPR1_Priority:
  addr: 0xf8f01404
  mask: 0xffffffff
  name: Priority
  description: |
    The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPR0 to ICDIPR7 are banked for each connected processor
ps7_mpcore_ICDIPR2_Priority:
  addr: 0xf8f01408
  mask: 0xffffffff
  name: Priority
  description: |
    The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPR0 to ICDIPR7 are banked for each connected processor
ps7_mpcore_ICDIPR3_Priority:
  addr: 0xf8f0140c
  mask: 0xffffffff
  name: Priority
  description: |
    The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPR0 to ICDIPR7 are banked for each connected processor
ps7_mpcore_ICDIPR4_Priority:
  addr: 0xf8f01410
  mask: 0xffffffff
  name: Priority
  description: |
    The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPR0 to ICDIPR7 are banked for each connected processor
ps7_mpcore_ICDIPR5_Priority:
  addr: 0xf8f01414
  mask: 0xffffffff
  name: Priority
  description: |
    The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPR0 to ICDIPR7 are banked for each connected processor
ps7_mpcore_ICDIPR6_Priority:
  addr: 0xf8f01418
  mask: 0xffffffff
  name: Priority
  description: |
    The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPR0 to ICDIPR7 are banked for each connected processor
ps7_mpcore_ICDIPR7_Priority:
  addr: 0xf8f0141c
  mask: 0xffffffff
  name: Priority
  description: |
    The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPR0 to ICDIPR7 are banked for each connected processor
ps7_mpcore_ICDIPR8_Priority:
  addr: 0xf8f01420
  mask: 0xffffffff
  name: Priority
  description: |
    The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPR0 to ICDIPR7 are banked for each connected processor
ps7_mpcore_ICDIPR9_Priority:
  addr: 0xf8f01424
  mask: 0xffffffff
  name: Priority
  description: |
    The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPR0 to ICDIPR7 are banked for each connected processor
ps7_mpcore_ICDIPR10_Priority:
  addr: 0xf8f01428
  mask: 0xffffffff
  name: Priority
  description: |
    The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPR0 to ICDIPR7 are banked for each connected processor
ps7_mpcore_ICDIPR11_Priority:
  addr: 0xf8f0142c
  mask: 0xffffffff
  name: Priority
  description: |
    The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPR0 to ICDIPR7 are banked for each connected processor
ps7_mpcore_ICDIPR12_Priority:
  addr: 0xf8f01430
  mask: 0xffffffff
  name: Priority
  description: |
    The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPR0 to ICDIPR7 are banked for each connected processor
ps7_mpcore_ICDIPR13_Priority:
  addr: 0xf8f01434
  mask: 0xffffffff
  name: Priority
  description: |
    The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPR0 to ICDIPR7 are banked for each connected processor
ps7_mpcore_ICDIPR14_Priority:
  addr: 0xf8f01438
  mask: 0xffffffff
  name: Priority
  description: |
    The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPR0 to ICDIPR7 are banked for each connected processor
ps7_mpcore_ICDIPR15_Priority:
  addr: 0xf8f0143c
  mask: 0xffffffff
  name: Priority
  description: |
    The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPR0 to ICDIPR7 are banked for each connected processor
ps7_mpcore_ICDIPR16_Priority:
  addr: 0xf8f01440
  mask: 0xffffffff
  name: Priority
  description: |
    The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPR0 to ICDIPR7 are banked for each connected processor
ps7_mpcore_ICDIPR17_Priority:
  addr: 0xf8f01444
  mask: 0xffffffff
  name: Priority
  description: |
    The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPR0 to ICDIPR7 are banked for each connected processor
ps7_mpcore_ICDIPR18_Priority:
  addr: 0xf8f01448
  mask: 0xffffffff
  name: Priority
  description: |
    The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPR0 to ICDIPR7 are banked for each connected processor
ps7_mpcore_ICDIPR19_Priority:
  addr: 0xf8f0144c
  mask: 0xffffffff
  name: Priority
  description: |
    The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPR0 to ICDIPR7 are banked for each connected processor
ps7_mpcore_ICDIPR20_Priority:
  addr: 0xf8f01450
  mask: 0xffffffff
  name: Priority
  description: |
    The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPR0 to ICDIPR7 are banked for each connected processor
ps7_mpcore_ICDIPR21_Priority:
  addr: 0xf8f01454
  mask: 0xffffffff
  name: Priority
  description: |
    The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPR0 to ICDIPR7 are banked for each connected processor
ps7_mpcore_ICDIPR22_Priority:
  addr: 0xf8f01458
  mask: 0xffffffff
  name: Priority
  description: |
    The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPR0 to ICDIPR7 are banked for each connected processor
ps7_mpcore_ICDIPR23_Priority:
  addr: 0xf8f0145c
  mask: 0xffffffff
  name: Priority
  description: |
    The ICDIPRs provide an 8-bit Priority field for each interrupt supported by the GIC.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPR0 to ICDIPR7 are banked for each connected processor
ps7_mpcore_ICDIPTR0_Target:
  addr: 0xf8f01800
  mask: 0xffffffff
  name: Target
  description: |
    The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
    This field stores the lists of processors that the interrupt is sent to if it is asserted.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
    Meaning of CPU targets field bit values:
    0bxxxxxxx1: CPU interface 0
    0bxxxxxx1x: CPU interface 1
ps7_mpcore_ICDIPTR1_Target:
  addr: 0xf8f01804
  mask: 0xffffffff
  name: Target
  description: |
    The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
    This field stores the lists of processors that the interrupt is sent to if it is asserted.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
    Meaning of CPU targets field bit values:
    0bxxxxxxx1: CPU interface 0
    0bxxxxxx1x: CPU interface 1
ps7_mpcore_ICDIPTR2_Target:
  addr: 0xf8f01808
  mask: 0xffffffff
  name: Target
  description: |
    The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
    This field stores the lists of processors that the interrupt is sent to if it is asserted.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
    Meaning of CPU targets field bit values:
    0bxxxxxxx1: CPU interface 0
    0bxxxxxx1x: CPU interface 1
ps7_mpcore_ICDIPTR3_Target:
  addr: 0xf8f0180c
  mask: 0xffffffff
  name: Target
  description: |
    The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
    This field stores the lists of processors that the interrupt is sent to if it is asserted.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
    Meaning of CPU targets field bit values:
    0bxxxxxxx1: CPU interface 0
    0bxxxxxx1x: CPU interface 1
ps7_mpcore_ICDIPTR4_Target:
  addr: 0xf8f01810
  mask: 0xffffffff
  name: Target
  description: |
    The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
    This field stores the lists of processors that the interrupt is sent to if it is asserted.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
    Meaning of CPU targets field bit values:
    0bxxxxxxx1: CPU interface 0
    0bxxxxxx1x: CPU interface 1
ps7_mpcore_ICDIPTR5_Target:
  addr: 0xf8f01814
  mask: 0xffffffff
  name: Target
  description: |
    The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
    This field stores the lists of processors that the interrupt is sent to if it is asserted.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
    Meaning of CPU targets field bit values:
    0bxxxxxxx1: CPU interface 0
    0bxxxxxx1x: CPU interface 1
ps7_mpcore_ICDIPTR6_Target:
  addr: 0xf8f01818
  mask: 0xffffffff
  name: Target
  description: |
    The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
    This field stores the lists of processors that the interrupt is sent to if it is asserted.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
    Meaning of CPU targets field bit values:
    0bxxxxxxx1: CPU interface 0
    0bxxxxxx1x: CPU interface 1
ps7_mpcore_ICDIPTR7_Target:
  addr: 0xf8f0181c
  mask: 0xffffffff
  name: Target
  description: |
    The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
    This field stores the lists of processors that the interrupt is sent to if it is asserted.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
    Meaning of CPU targets field bit values:
    0bxxxxxxx1: CPU interface 0
    0bxxxxxx1x: CPU interface 1
ps7_mpcore_ICDIPTR8_Target:
  addr: 0xf8f01820
  mask: 0xffffffff
  name: Target
  description: |
    The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
    This field stores the lists of processors that the interrupt is sent to if it is asserted.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
    Meaning of CPU targets field bit values:
    0bxxxxxxx1: CPU interface 0
    0bxxxxxx1x: CPU interface 1
ps7_mpcore_ICDIPTR9_Target:
  addr: 0xf8f01824
  mask: 0xffffffff
  name: Target
  description: |
    The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
    This field stores the lists of processors that the interrupt is sent to if it is asserted.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
    Meaning of CPU targets field bit values:
    0bxxxxxxx1: CPU interface 0
    0bxxxxxx1x: CPU interface 1
ps7_mpcore_ICDIPTR10_Target:
  addr: 0xf8f01828
  mask: 0xffffffff
  name: Target
  description: |
    The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
    This field stores the lists of processors that the interrupt is sent to if it is asserted.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
    Meaning of CPU targets field bit values:
    0bxxxxxxx1: CPU interface 0
    0bxxxxxx1x: CPU interface 1
ps7_mpcore_ICDIPTR11_Target:
  addr: 0xf8f0182c
  mask: 0xffffffff
  name: Target
  description: |
    The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
    This field stores the lists of processors that the interrupt is sent to if it is asserted.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
    Meaning of CPU targets field bit values:
    0bxxxxxxx1: CPU interface 0
    0bxxxxxx1x: CPU interface 1
ps7_mpcore_ICDIPTR12_Target:
  addr: 0xf8f01830
  mask: 0xffffffff
  name: Target
  description: |
    The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
    This field stores the lists of processors that the interrupt is sent to if it is asserted.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
    Meaning of CPU targets field bit values:
    0bxxxxxxx1: CPU interface 0
    0bxxxxxx1x: CPU interface 1
ps7_mpcore_ICDIPTR13_Target:
  addr: 0xf8f01834
  mask: 0xffffffff
  name: Target
  description: |
    The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
    This field stores the lists of processors that the interrupt is sent to if it is asserted.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
    Meaning of CPU targets field bit values:
    0bxxxxxxx1: CPU interface 0
    0bxxxxxx1x: CPU interface 1
ps7_mpcore_ICDIPTR14_Target:
  addr: 0xf8f01838
  mask: 0xffffffff
  name: Target
  description: |
    The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
    This field stores the lists of processors that the interrupt is sent to if it is asserted.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
    Meaning of CPU targets field bit values:
    0bxxxxxxx1: CPU interface 0
    0bxxxxxx1x: CPU interface 1
ps7_mpcore_ICDIPTR15_Target:
  addr: 0xf8f0183c
  mask: 0xffffffff
  name: Target
  description: |
    The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
    This field stores the lists of processors that the interrupt is sent to if it is asserted.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
    Meaning of CPU targets field bit values:
    0bxxxxxxx1: CPU interface 0
    0bxxxxxx1x: CPU interface 1
ps7_mpcore_ICDIPTR16_Target:
  addr: 0xf8f01840
  mask: 0xffffffff
  name: Target
  description: |
    The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
    This field stores the lists of processors that the interrupt is sent to if it is asserted.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
    Meaning of CPU targets field bit values:
    0bxxxxxxx1: CPU interface 0
    0bxxxxxx1x: CPU interface 1
ps7_mpcore_ICDIPTR17_Target:
  addr: 0xf8f01844
  mask: 0xffffffff
  name: Target
  description: |
    The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
    This field stores the lists of processors that the interrupt is sent to if it is asserted.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
    Meaning of CPU targets field bit values:
    0bxxxxxxx1: CPU interface 0
    0bxxxxxx1x: CPU interface 1
ps7_mpcore_ICDIPTR18_Target:
  addr: 0xf8f01848
  mask: 0xffffffff
  name: Target
  description: |
    The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
    This field stores the lists of processors that the interrupt is sent to if it is asserted.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
    Meaning of CPU targets field bit values:
    0bxxxxxxx1: CPU interface 0
    0bxxxxxx1x: CPU interface 1
ps7_mpcore_ICDIPTR19_Target:
  addr: 0xf8f0184c
  mask: 0xffffffff
  name: Target
  description: |
    The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
    This field stores the lists of processors that the interrupt is sent to if it is asserted.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
    Meaning of CPU targets field bit values:
    0bxxxxxxx1: CPU interface 0
    0bxxxxxx1x: CPU interface 1
ps7_mpcore_ICDIPTR20_Target:
  addr: 0xf8f01850
  mask: 0xffffffff
  name: Target
  description: |
    The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
    This field stores the lists of processors that the interrupt is sent to if it is asserted.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
    Meaning of CPU targets field bit values:
    0bxxxxxxx1: CPU interface 0
    0bxxxxxx1x: CPU interface 1
ps7_mpcore_ICDIPTR21_Target:
  addr: 0xf8f01854
  mask: 0xffffffff
  name: Target
  description: |
    The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
    This field stores the lists of processors that the interrupt is sent to if it is asserted.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
    Meaning of CPU targets field bit values:
    0bxxxxxxx1: CPU interface 0
    0bxxxxxx1x: CPU interface 1
ps7_mpcore_ICDIPTR22_Target:
  addr: 0xf8f01858
  mask: 0xffffffff
  name: Target
  description: |
    The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
    This field stores the lists of processors that the interrupt is sent to if it is asserted.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
    Meaning of CPU targets field bit values:
    0bxxxxxxx1: CPU interface 0
    0bxxxxxx1x: CPU interface 1
ps7_mpcore_ICDIPTR23_Target:
  addr: 0xf8f0185c
  mask: 0xffffffff
  name: Target
  description: |
    The ICDIPTRs provide an 8-bit CPU targets field for each interrupt supported by the GIC.
    This field stores the lists of processors that the interrupt is sent to if it is asserted.
    These registers are byte accessible.
    A register field that corresponds to a Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDIPTR0 to ICDIPTR7 are read-only, and each field returns a value corresponding only to the processor reading the register.
    Meaning of CPU targets field bit values:
    0bxxxxxxx1: CPU interface 0
    0bxxxxxx1x: CPU interface 1
ps7_mpcore_ICDICFR0_Config:
  addr: 0xf8f01c00
  mask: 0xffffffff
  name: Config
  description: |
    The ICDICFRs provide a 2-bit Int_config field for each interrupt supported by the GIC.
    A register field that corresponds to Secure interrupt is RAZ/WI to Non-secure accesses.
    ICDICFR0 is read-only.
    Meaning of each 2-bit Int_config:
    SGI: both bits are read-only; always 0b10
    PPI: both bits are read-only; always 0b01 (active LOW level sensitive) for PPI[1], and [4]; always 0b11(rising-edge sensitive) for PPI[0], [2], and [3].
    SPI: LSB is read-only, and is always 1;
    0b01=active HIGH level sensitive; 0b11=rising-edge sensitive.
ps7_mpcore_ICDICFR1_Config:
  addr: 0xf8f01c04
  mask: 0xffffffff
  name: Config
  description: |
    (ditto)
    ICDICFR1 is banked for each connected processor.
ps7_mpcore_ICDICFR2_Config:
  addr: 0xf8f01c08
  mask: 0xffffffff
  name: Config
  description: |
    (ditto)
ps7_mpcore_ICDICFR3_Config:
  addr: 0xf8f01c0c
  mask: 0xffffffff
  name: Config
  description: |
    (ditto)
ps7_mpcore_ICDICFR4_Config:
  addr: 0xf8f01c10
  mask: 0xffffffff
  name: Config
  description: |
    (ditto)
ps7_mpcore_ICDICFR5_Config:
  addr: 0xf8f01c14
  mask: 0xffffffff
  name: Config
  description: |
    (ditto)
ps7_mpcore_ppi_status_reserved:
  addr: 0xf8f01d00
  mask: 0xffff0000
  name: reserved
  description: |
    Reserved. Writes are ignored, read data is always zero
ps7_mpcore_ppi_status_ppi_status:
  addr: 0xf8f01d00
  mask: 0xf800
  name: ppi_status
  description: |
    Returns the status of the PPI(4:0) inputs on the distributor:
    * PPI[4] is nIRQ
    * PPI[3] is the private watchdog
    * PPI[2] is the private timer
    * PPI[1] is nFIQ
    * PPI[0] is the global timer.
    PPI[1] and PPI[4] are active LOW
    PPI[0], PPI[2] and PPI[3] are active HIGH.
    Note
    These bits return the actual status of the PPI(4:0) signals. The ICDISPRn and ICDICPRn registers
    can also provide the PPI(4:0) status but because you can write to these registers then they might
    not contain the actual status of the PPI(4:0) signals.
ps7_mpcore_ppi_status_SBZ:
  addr: 0xf8f01d00
  mask: 0x7ff
  name: SBZ
  description: |
    SBZ
ps7_mpcore_spi_status_0_spi_status:
  addr: 0xf8f01d04
  mask: 0xffffffff
  name: spi_status
  description: |
    Returns the status of the IRQ ID32 to ID63 inputs on the distributor. These bits return the actual status of the IRQ signals.
    Note: The ICDISPR1 and ICDICPR1 registers can also provide the IRQ status but because you can write to these registers then they might not contain the actual status of the IRQ signals.
ps7_mpcore_spi_status_1_spi_status:
  addr: 0xf8f01d08
  mask: 0xffffffff
  name: spi_status
  description: |
    Returns the status of the IRQ ID64 to ID95 inputs on the distributor. These bits return the actual status of the IRQ signals.
    Note: The ICDISPR2 and ICDICPR2 registers can also provide the IRQ status but because you can write to these registers then they might not contain the actual status of the IRQ signals.
ps7_mpcore_ICDSGIR_reserved:
  addr: 0xf8f01f00
  mask: 0xfc000000
  name: reserved
  description: |
    reserved
ps7_mpcore_ICDSGIR_TargetListFilter:
  addr: 0xf8f01f00
  mask: 0x3000000
  name: TargetListFilter
  description: |
    0b00: send the interrupt to the CPU interfaces specified in the CPUTargetList field
    0b01: send the interrupt to all CPU interfaces except the CPU interface that requested the interrupt
    0b10: send the interrupt on only to the CPU interface that requested the interrupt
    0b11: reserved
ps7_mpcore_ICDSGIR_CPUTargetList:
  addr: 0xf8f01f00
  mask: 0xff0000
  name: CPUTargetList
  description: |
    When TargetListFilter is 0b00, defines the CPU interfaces the Distributor must send the interrupt to.
    Each bit refers to the corresponding CPU interface.
ps7_mpcore_ICDSGIR_SATT:
  addr: 0xf8f01f00
  mask: 0x8000
  name: SATT
  description: |
    Determines the condition for sending the SGI specified in the SGIINTID field to a specified CPU interfaces:
    0: only if the SGI is configured as Secure on that interface.
    1: only if the SGI is configured as Non-secure on that interface.
ps7_mpcore_ICDSGIR_SBZ:
  addr: 0xf8f01f00
  mask: 0x7ff0
  name: SBZ
  description: |
    SBZ
ps7_mpcore_ICDSGIR_SGIINTID:
  addr: 0xf8f01f00
  mask: 0xf
  name: SGIINTID
  description: |
    The Interrupt ID of the SGI to send to the specified CPU interfaces.
ps7_mpcore_ICPIDR4_reserved:
  addr: 0xf8f01fd0
  mask: 0xfffffff0
  name: reserved
  description: |
    reserved
ps7_mpcore_ICPIDR4_ContinuationCode:
  addr: 0xf8f01fd0
  mask: 0xf
  name: ContinuationCode
  description: |
    ARM-defined ContinuationCode field
ps7_mpcore_ICPIDR5_reserved:
  addr: 0xf8f01fd4
  mask: 0xffffffff
  name: reserved
  description: |
    Reserved
ps7_mpcore_ICPIDR6_reserved:
  addr: 0xf8f01fd8
  mask: 0xffffffff
  name: reserved
  description: |
    Reserved
ps7_mpcore_ICPIDR7_reserved:
  addr: 0xf8f01fdc
  mask: 0xffffffff
  name: reserved
  description: |
    Reserved
ps7_mpcore_ICPIDR0_reserved:
  addr: 0xf8f01fe0
  mask: 0xffffff00
  name: reserved
  description: |
    reserved
ps7_mpcore_ICPIDR0_DevID_low:
  addr: 0xf8f01fe0
  mask: 0xff
  name: DevID_low
  description: |
    ARM-defined DevID[7:0] field
ps7_mpcore_ICPIDR1_reserved:
  addr: 0xf8f01fe4
  mask: 0xffffff00
  name: reserved
  description: |
    reserved
ps7_mpcore_ICPIDR1_ARchID_low:
  addr: 0xf8f01fe4
  mask: 0xf0
  name: ARchID_low
  description: |
    ARM-defined ArchID[3:0] field
ps7_mpcore_ICPIDR1_DevID_high:
  addr: 0xf8f01fe4
  mask: 0xf
  name: DevID_high
  description: |
    ARM-defined DevID[11:8] field
ps7_mpcore_ICPIDR2_reserved:
  addr: 0xf8f01fe8
  mask: 0xffffff00
  name: reserved
  description: |
    reserved
ps7_mpcore_ICPIDR2_ArchRev:
  addr: 0xf8f01fe8
  mask: 0xf0
  name: ArchRev
  description: |
    ARM-defined ArchRev field
ps7_mpcore_ICPIDR2_UsesJEPcode:
  addr: 0xf8f01fe8
  mask: 0x8
  name: UsesJEPcode
  description: |
    ARM-defined ContinuationCode field
ps7_mpcore_ICPIDR2_ArchID_high:
  addr: 0xf8f01fe8
  mask: 0x7
  name: ArchID_high
  description: |
    ARM-defined ArchID[6:4] field
ps7_mpcore_ICPIDR3_reserved_1:
  addr: 0xf8f01fec
  mask: 0xffffff00
  name: reserved_1
  description: |
    reserved
ps7_mpcore_ICPIDR3_Revision:
  addr: 0xf8f01fec
  mask: 0xf0
  name: Revision
  description: |
    ARM-defined Revision field
ps7_mpcore_ICPIDR3_reserved:
  addr: 0xf8f01fec
  mask: 0xf
  name: reserved
  description: |
    reserved
ps7_mpcore_ICCIDR0_a:
  addr: 0xf8f01ff0
  mask: 0xffffffff
  name: a
  description: |
    ARM-defined fixed values for the preamble for component discovery
ps7_mpcore_ICCIDR1_a:
  addr: 0xf8f01ff4
  mask: 0xffffffff
  name: a
  description: |
    ARM-defined fixed values for the preamble for component discovery
ps7_mpcore_ICCIDR2_a:
  addr: 0xf8f01ff8
  mask: 0xffffffff
  name: a
  description: |
    ARM-defined fixed values for the preamble for component discovery
ps7_mpcore_ICCIDR3_a:
  addr: 0xf8f01ffc
  mask: 0xffffffff
  name: a
  description: |
    ARM-defined fixed values for the preamble for component discovery
ps7_debug_etb_RDP_a:
  addr: 0xf8801004
  mask: 0xffffffff
  name: a
  description: |
    Defines the depth, in words, of the trace RAM.
ps7_debug_etb_STS_FtEmpty:
  addr: 0xf880100c
  mask: 0x8
  name: FtEmpty
  description: |
    Formatter pipeline empty. All data stored to RAM.
ps7_debug_etb_STS_AcqComp:
  addr: 0xf880100c
  mask: 0x4
  name: AcqComp
  description: |
    Acquisition complete.
    The acquisition complete flag indicates that capture has been completed when the formatter stops because of any of the methods defined in the Formatter and Flush Control Register, or TraceCaptEn = 0. This also results in FtStopped in the Formatter and Flush Status Register going HIGH.
ps7_debug_etb_STS_Triggered:
  addr: 0xf880100c
  mask: 0x2
  name: Triggered
  description: |
    The Triggered bit is set when a trigger has been observed. This does not indicate that a trigger has been embedded in the trace data by the formatter, but is determined by the programming of the Formatter and Flush Control Register.
ps7_debug_etb_STS_Full:
  addr: 0xf880100c
  mask: 0x1
  name: Full
  description: |
    RAM Full.
    The flag indicates when the RAM write pointer has wrapped around.
ps7_debug_etb_RRD_a:
  addr: 0xf8801010
  mask: 0xffffffff
  name: a
  description: |
    Data read from the ETB Trace RAM.
ps7_debug_etb_RRP_a:
  addr: 0xf8801014
  mask: 0x3ff
  name: a
  description: |
    Sets the read pointer used to read entries from the Trace RAM over the APB interface.
ps7_debug_etb_RWP_a:
  addr: 0xf8801018
  mask: 0x3ff
  name: a
  description: |
    Sets the write pointer used to write entries from the CoreSight bus into the Trace RAM
ps7_debug_etb_TRG_a:
  addr: 0xf880101c
  mask: 0x3ff
  name: a
  description: |
    The counter is used as follows:
    - Trace after
    The counter is set to a large value, slightly less than the number of entries in the RAM.
    - Trace before
    The counter is set to a small value.
    - Trace about
    The counter is set to half the depth of the Trace RAM.
    This register must not be written to when trace capture is enabled (FtStopped=0, TraceCaptEn=1). If a write is attempted, the register is not updated. A read access is permitted with trace capture enabled.
ps7_debug_etb_CTL_TraceCaptEn:
  addr: 0xf8801020
  mask: 0x1
  name: TraceCaptEn
  description: |
    ETB Trace Capture Enable.
    1 = enable trace capture
    0 = disable trace capture.
    This is the master enable bit forcing FtStopped HIGH when TraceCaptEn is LOW.
    When capture is disabled, any remaining data in the ATB formatter is stored to RAM.
    When all data is stored the formatter outputs FtStopped. Capture is fully disabled, or complete, when FtStopped goes HIGH.
ps7_debug_etb_RWD_a:
  addr: 0xf8801024
  mask: 0xffffffff
  name: a
  description: |
    Data written to the ETB Trace RAM.
    When trace capture is disabled, the contents of this register are placed into the ETB Trace RAM when this register is written to.
    Writing to this register increments the RAM Write Pointer Register.
    If trace capture is enabled, and this register is accessed, then a read from this register outputs 0xFFFFFFFF. Reads of this register never increment the RAM Write Pointer Register. A constant stream of 1s being output corresponds to a synchronization output from the ETB. If a write access is attempted, the data is not written into Trace RAM.
ps7_debug_etb_FFSR_FtStopped:
  addr: 0xf8801300
  mask: 0x2
  name: FtStopped
  description: |
    Formatter stopped. The formatter has received a stop request signal and all trace data and post-amble has been output. Any more trace data on the ATB interface is ignored and ATREADYS goes HIGH.
ps7_debug_etb_FFSR_FlInProg:
  addr: 0xf8801300
  mask: 0x1
  name: FlInProg
  description: |
    Flush In Progress. This is an indication of the current state of AFVALIDS.
ps7_debug_etb_FFCR_StopTrig:
  addr: 0xf8801304
  mask: 0x2000
  name: StopTrig
  description: |
    Stop the formatter when a Trigger Event has been observed.
ps7_debug_etb_FFCR_StopFl:
  addr: 0xf8801304
  mask: 0x1000
  name: StopFl
  description: |
    Stop the formatter when a flush has completed (return of AFREADYS). This forces the FIFO to drain off any part-completed packets. Setting this bit enables this function but this is clear on reset (disabled).
ps7_debug_etb_FFCR_reserved:
  addr: 0xf8801304
  mask: 0x800
  name: reserved
  description: |
    Reserved
ps7_debug_etb_FFCR_TrigFl:
  addr: 0xf8801304
  mask: 0x400
  name: TrigFl
  description: |
    Indicate a trigger on Flush completion (AFREADYS being returned).
ps7_debug_etb_FFCR_TrigEvt:
  addr: 0xf8801304
  mask: 0x200
  name: TrigEvt
  description: |
    Indicate a trigger on a Trigger Event.
ps7_debug_etb_FFCR_TrigIn:
  addr: 0xf8801304
  mask: 0x100
  name: TrigIn
  description: |
    Indicate a trigger on TRIGIN being asserted.
ps7_debug_etb_FFCR_reserved_1:
  addr: 0xf8801304
  mask: 0x80
  name: reserved_1
  description: |
    Reserved
ps7_debug_etb_FFCR_FOnMan:
  addr: 0xf8801304
  mask: 0x40
  name: FOnMan
  description: |
    Manually generate a flush of the system. Setting this bit causes a flush to be generated. This is cleared when the flush has been serviced. This bit is clear on reset.
ps7_debug_etb_FFCR_FOnTrig:
  addr: 0xf8801304
  mask: 0x20
  name: FOnTrig
  description: |
    Generate flush using Trigger event. Set this bit to cause a flush of data in the system when a Trigger Event occurs. This bit is clear on reset.
ps7_debug_etb_FFCR_FOnFlIn:
  addr: 0xf8801304
  mask: 0x10
  name: FOnFlIn
  description: |
    Generate flush using the FLUSHIN interface. Set this bit to enable use of the FLUSHIN connection. This bit is clear on reset.
ps7_debug_etb_FFCR_reserved_2:
  addr: 0xf8801304
  mask: 0xc
  name: reserved_2
  description: |
    Reserved
ps7_debug_etb_FFCR_EnFCont:
  addr: 0xf8801304
  mask: 0x2
  name: EnFCont
  description: |
    Continuous Formatting. Continuous mode in the ETB corresponds to normal mode with the embedding of triggers. Can only be changed when FtStopped is HIGH. This bit is clear on reset.
ps7_debug_etb_FFCR_EnFTC:
  addr: 0xf8801304
  mask: 0x1
  name: EnFTC
  description: |
    Enable Formatting. Do not embed Triggers into the formatted stream. Trace disable cycles and triggers are indicated by TRACECTL, where fitted. Can only be changed when FtStopped is HIGH. This bit is clear on reset.
ps7_debug_etb_ITMISCOP0_FULL:
  addr: 0xf8801ee0
  mask: 0x2
  name: FULL
  description: |
    Set the value of FULL
ps7_debug_etb_ITMISCOP0_ACQCOMP:
  addr: 0xf8801ee0
  mask: 0x1
  name: ACQCOMP
  description: |
    Set the value of ACQCOMP
ps7_debug_etb_ITTRFLINACK_FLUSHINACK:
  addr: 0xf8801ee4
  mask: 0x2
  name: FLUSHINACK
  description: |
    Set the value of FLUSHINACK
ps7_debug_etb_ITTRFLINACK_TRIGINACK:
  addr: 0xf8801ee4
  mask: 0x1
  name: TRIGINACK
  description: |
    Set the value of TRIGINACK
ps7_debug_etb_ITTRFLIN_FLUSHIN:
  addr: 0xf8801ee8
  mask: 0x2
  name: FLUSHIN
  description: |
    Read the value of FLUSHIN
ps7_debug_etb_ITTRFLIN_TRIGIN:
  addr: 0xf8801ee8
  mask: 0x1
  name: TRIGIN
  description: |
    Read the value of TRIGIN
ps7_debug_etb_ITATBDATA0_ATDATA31:
  addr: 0xf8801eec
  mask: 0x10
  name: ATDATA31
  description: |
    Read the value of ATDATA[31]
ps7_debug_etb_ITATBDATA0_ATDATA23:
  addr: 0xf8801eec
  mask: 0x8
  name: ATDATA23
  description: |
    Read the value of ATDATA[23]
ps7_debug_etb_ITATBDATA0_ATDATA15:
  addr: 0xf8801eec
  mask: 0x4
  name: ATDATA15
  description: |
    Read the value of ATDATA[15]
ps7_debug_etb_ITATBDATA0_ATDATA7:
  addr: 0xf8801eec
  mask: 0x2
  name: ATDATA7
  description: |
    Read the value of ATDATA[7]
ps7_debug_etb_ITATBDATA0_ATDATA0:
  addr: 0xf8801eec
  mask: 0x1
  name: ATDATA0
  description: |
    Read the value of ATDATA[0]
ps7_debug_etb_ITATBCTR2_AFVALIDS:
  addr: 0xf8801ef0
  mask: 0x2
  name: AFVALIDS
  description: |
    Set the value of AFVALIDS
ps7_debug_etb_ITATBCTR2_ATREADYS:
  addr: 0xf8801ef0
  mask: 0x1
  name: ATREADYS
  description: |
    Set the value of ATREADYS
ps7_debug_etb_ITATBCTR1_ATID:
  addr: 0xf8801ef4
  mask: 0x7f
  name: ATID
  description: |
    Read the value of ATIDS
ps7_debug_etb_ITATBCTR0_ATBYTES:
  addr: 0xf8801ef8
  mask: 0x300
  name: ATBYTES
  description: |
    Read the value of ATBYTES
ps7_debug_etb_ITATBCTR0_reserved:
  addr: 0xf8801ef8
  mask: 0xfc
  name: reserved
  description: |
    Reserved
ps7_debug_etb_ITATBCTR0_AFREADY:
  addr: 0xf8801ef8
  mask: 0x2
  name: AFREADY
  description: |
    Read the value of AFREADYS
ps7_debug_etb_ITATBCTR0_ATVALID:
  addr: 0xf8801ef8
  mask: 0x1
  name: ATVALID
  description: |
    Read the value of ATVALIDS
ps7_debug_etb_IMCR_a:
  addr: 0xf8801f00
  mask: 0x1
  name: a
  description: |
    Enable Integration Test registers.
ps7_debug_etb_CTSR_a:
  addr: 0xf8801fa0
  mask: 0xf
  name: a
  description: |
    The claim tag register is used for any interrogating tools to determine if the device is being programmed or has been programmed.
    Read:
    1= Claim tag is implemented, 0 = Claim tag is not implemented
    Write:
    1= Set claim tag bit, 0= No effect
ps7_debug_etb_CTCR_a:
  addr: 0xf8801fa4
  mask: 0xf
  name: a
  description: |
    The claim tag register is used for any interrogating tools to determine if the device is being programmed or has been programmed.
    Read: Current value of claim tag.
    Write: 1= Clear claim tag bit, 0= No effect
ps7_debug_etb_LAR_a:
  addr: 0xf8801fb0
  mask: 0xffffffff
  name: a
  description: |
    Write Access Code.
    Write behavior depends on PADDRDBG31 pin:
    - PADDRDBG31=0 (lower 2GB):
    After reset (via PRESETDBGn), ETB is locked, i.e., writes to all other registers using lower 2GB addresses are ignored.
    To unlock, 0xC5ACCE55 must be written this register.
    After the required registers are written, to lock again, write a value other than 0xC5ACCE55 to this register.
    - PADDRDBG31=1 (upper 2GB):
    ETB is unlocked when upper 2GB addresses are used to write to all the registers.
    However, write to this register is ignored using a upper 2GB address!
    Note: read from this register always returns 0, regardless of PADDRDBG31.
ps7_debug_etb_LSR_n8BIT:
  addr: 0xf8801fb4
  mask: 0x4
  name: n8BIT
  description: |
    Set to 0 since ETB implements a 32-bit lock access register
ps7_debug_etb_LSR_STATUS:
  addr: 0xf8801fb4
  mask: 0x2
  name: STATUS
  description: |
    Read behavior depends on PADDRDBG31 pin:
    - PADDRDBG31=0 (lower 2GB):
    When a lower 2GB address is used to read this register, this bit indicates whether ETB is in locked state
    (1= locked, 0= unlocked).
    - PADDRDBG31=1 (upper 2GB):
    always returns 0.
ps7_debug_etb_LSR_IMP:
  addr: 0xf8801fb4
  mask: 0x1
  name: IMP
  description: |
    Read behavior depends on PADDRDBG31 pin:
    - PADDRDBG31=0 (lower 2GB):
    always returns 1, meaning lock mechanism are implemented.
    - PADDRDBG31=1 (upper 2GB):
    always returns 0, meaning lock mechanism is NOT implemented.
ps7_debug_etb_ASR_a:
  addr: 0xf8801fb8
  mask: 0xff
  name: a
  description: |
    Indicates functionality not implemented
ps7_debug_etb_DEVID_SyncATCLK:
  addr: 0xf8801fc8
  mask: 0x20
  name: SyncATCLK
  description: |
    ETB RAM is synchronous to ATCLK
ps7_debug_etb_DEVID_InputMux:
  addr: 0xf8801fc8
  mask: 0x1f
  name: InputMux
  description: |
    no input multiplexing
ps7_debug_etb_DTIR_a:
  addr: 0xf8801fcc
  mask: 0xff
  name: a
  description: |
    A trace sink and specifically an ETB
ps7_debug_etb_PERIPHID4_n4KB_count:
  addr: 0xf8801fd0
  mask: 0xf0
  name: n4KB_count
  description: |
    4KB Count, set to 0
ps7_debug_etb_PERIPHID4_JEP106ID:
  addr: 0xf8801fd0
  mask: 0xf
  name: JEP106ID
  description: |
    JEP106 continuation code
ps7_debug_etb_PERIPHID5_a:
  addr: 0xf8801fd4
  mask: 0xff
  name: a
  description: |
    reserved
ps7_debug_etb_PERIPHID6_a:
  addr: 0xf8801fd8
  mask: 0xff
  name: a
  description: |
    reserved
ps7_debug_etb_PERIPHID7_a:
  addr: 0xf8801fdc
  mask: 0xff
  name: a
  description: |
    reserved
ps7_debug_etb_PERIPHID0_a:
  addr: 0xf8801fe0
  mask: 0xff
  name: a
  description: |
    PartNumber0
ps7_debug_etb_PERIPHID1_JEP106ID:
  addr: 0xf8801fe4
  mask: 0xf0
  name: JEP106ID
  description: |
    JEP106 Identity Code [3:0]
ps7_debug_etb_PERIPHID1_PartNumber1:
  addr: 0xf8801fe4
  mask: 0xf
  name: PartNumber1
  description: |
    PartNumber1
ps7_debug_etb_PERIPHID2_RevNum:
  addr: 0xf8801fe8
  mask: 0xf0
  name: RevNum
  description: |
    Revision number of Peripheral
ps7_debug_etb_PERIPHID2_JEDEC:
  addr: 0xf8801fe8
  mask: 0x8
  name: JEDEC
  description: |
    Indicates that a JEDEC assigned value is used
ps7_debug_etb_PERIPHID2_JEP106ID:
  addr: 0xf8801fe8
  mask: 0x7
  name: JEP106ID
  description: |
    JEP106 Identity Code [6:4]
ps7_debug_etb_PERIPHID3_RevAnd:
  addr: 0xf8801fec
  mask: 0xf0
  name: RevAnd
  description: |
    RevAnd, at top level
ps7_debug_etb_PERIPHID3_CustMod:
  addr: 0xf8801fec
  mask: 0xf
  name: CustMod
  description: |
    Customer Modified
ps7_debug_etb_COMPID0_a:
  addr: 0xf8801ff0
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_debug_etb_COMPID1_a:
  addr: 0xf8801ff4
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_debug_etb_COMPID2_a:
  addr: 0xf8801ff8
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_debug_etb_COMPID3_a:
  addr: 0xf8801ffc
  mask: 0xff
  name: a
  description: |
    Preamble
ps7_smcc_memc_status_raw_ecc_int1:
  addr: 0xe000e000
  mask: 0x1000
  name: raw_ecc_int1
  description: |
    NAND Flash ECC interrupt raw status:
    0: Not asserted
    1: Asserted
ps7_smcc_memc_status_reserved_raw_ecc_int0:
  addr: 0xe000e000
  mask: 0x800
  name: reserved_raw_ecc_int0
  description: |
    Reserved. Do not modify.
ps7_smcc_memc_status_ecc_int1:
  addr: 0xe000e000
  mask: 0x400
  name: ecc_int1
  description: |
    NAND Flash ECC interrupt status after mask/enable:
    0: Not asserted
    1: Asserted
ps7_smcc_memc_status_reserved_ecc_int0:
  addr: 0xe000e000
  mask: 0x200
  name: reserved_ecc_int0
  description: |
    Reserved. Do not modify.
ps7_smcc_memc_status_ecc_int1_en:
  addr: 0xe000e000
  mask: 0x100
  name: ecc_int1_en
  description: |
    NAND Flash ECC interrupt enable setting:
    0: Masked
    1: Enabled
ps7_smcc_memc_status_reserved_ecc_int0_en:
  addr: 0xe000e000
  mask: 0x80
  name: reserved_ecc_int0_en
  description: |
    Reserved. Do not modify.
ps7_smcc_memc_status_raw_int_status1:
  addr: 0xe000e000
  mask: 0x40
  name: raw_int_status1
  description: |
    NAND Flash raw interrupt status before mask/enable:
    0: Not asserted
    1: Asserted
ps7_smcc_memc_status_raw_int_status0:
  addr: 0xe000e000
  mask: 0x20
  name: raw_int_status0
  description: |
    SRAM/NOR raw interrupt raw status before the mask/enable:
    0: Not asserted
    1: Asserted
ps7_smcc_memc_status_int_status1:
  addr: 0xe000e000
  mask: 0x10
  name: int_status1
  description: |
    NAND Flash interrupt status after the mask/enable:
    0: Not asserted
    1: Asserted
ps7_smcc_memc_status_int_status0:
  addr: 0xe000e000
  mask: 0x8
  name: int_status0
  description: |
    SRAM/NOR interrupt status after the mask/enable :
    0: Not asserted
    1: Asserted
ps7_smcc_memc_status_int_en1:
  addr: 0xe000e000
  mask: 0x4
  name: int_en1
  description: |
    NAND Flash interrupt enable status:
    0: Disabled
    1: Enabled
ps7_smcc_memc_status_int_en0:
  addr: 0xe000e000
  mask: 0x2
  name: int_en0
  description: |
    SRAM/NOR interface interrupt enable setting:
    0: Disabled
    1: Enabled
ps7_smcc_memc_status_state:
  addr: 0xe000e000
  mask: 0x1
  name: state
  description: |
    SMC operating state:
    0: Normal
    1: Low-power state
ps7_smcc_memif_cfg_exclusive_monitors:
  addr: 0xe000e004
  mask: 0x30000
  name: exclusive_monitors
  description: |
    Return the number of exclusive access monitor resources that are implemented in the SMC.
    B00: 0 monitors
    b01: 1 monitor
    b10: 2 monitors
    b11: 4 monitors
ps7_smcc_memif_cfg_reserved_1:
  addr: 0xe000e004
  mask: 0x8000
  name: reserved_1
  description: |
    Reserved
ps7_smcc_memif_cfg_remap1:
  addr: 0xe000e004
  mask: 0x4000
  name: remap1
  description: |
    Return the value of the remap_1 input.
ps7_smcc_memif_cfg_memory_width1:
  addr: 0xe000e004
  mask: 0x3000
  name: memory_width1
  description: |
    The width of the NAND Flash interface can be 8 or 16 bits.
    00: 8 Bit Interface
    01: 16 Bit Interface
ps7_smcc_memif_cfg_memory_chips1:
  addr: 0xe000e004
  mask: 0xc00
  name: memory_chips1
  description: |
    The NAND Flash interface provides one chip select.
ps7_smcc_memif_cfg_memory_type1:
  addr: 0xe000e004
  mask: 0x300
  name: memory_type1
  description: |
    SMC controller 1 supports the NAND Flash interface with hardware assisted ECC.
ps7_smcc_memif_cfg_reserved:
  addr: 0xe000e004
  mask: 0x80
  name: reserved
  description: |
    Reserved
ps7_smcc_memif_cfg_remap0:
  addr: 0xe000e004
  mask: 0x40
  name: remap0
  description: |
    Return the value of the remap_0 input
ps7_smcc_memif_cfg_memory_width0:
  addr: 0xe000e004
  mask: 0x30
  name: memory_width0
  description: |
    The width of the SRAM/NOR interface is 8 bits.
ps7_smcc_memif_cfg_memory_chips0:
  addr: 0xe000e004
  mask: 0xc
  name: memory_chips0
  description: |
    The SRAM/NOR interface provides two chip selects. Reads as \'7b0,1\'7d
ps7_smcc_memif_cfg_memory_type0:
  addr: 0xe000e004
  mask: 0x3
  name: memory_type0
  description: |
    SMC controller 0 supports the SRAM/NOR interface.
ps7_smcc_memc_cfg_set_ecc_int_enable1:
  addr: 0xe000e008
  mask: 0x40
  name: ecc_int_enable1
  description: |
    NAND Flash ECC interrupt enable:
    0: No change
    1: Enable
ps7_smcc_memc_cfg_set_reserved_ecc_int_enable0:
  addr: 0xe000e008
  mask: 0x20
  name: reserved_ecc_int_enable0
  description: |
    Reserved. Do not modify.
ps7_smcc_memc_cfg_set_reserved:
  addr: 0xe000e008
  mask: 0x18
  name: reserved
  description: |
    Reserved, write as zero.
ps7_smcc_memc_cfg_set_low_power_req:
  addr: 0xe000e008
  mask: 0x4
  name: low_power_req
  description: |
    Put SMC into low-power mode when memory interface goes idle:
    0: No change
    1: Enable low-power state
ps7_smcc_memc_cfg_set_int_enable1:
  addr: 0xe000e008
  mask: 0x2
  name: int_enable1
  description: |
    NAND Flash interrupt enable:
    0: No change
    1: Enable
ps7_smcc_memc_cfg_set_int_enable0:
  addr: 0xe000e008
  mask: 0x1
  name: int_enable0
  description: |
    SRAM/NOR interrupt enable:
    0: No change
    1: Enable
ps7_smcc_memc_cfg_clr_ecc_int_disable1:
  addr: 0xe000e00c
  mask: 0x40
  name: ecc_int_disable1
  description: |
    NAND Flash ECC interrupt disable:
    0: No change
    1: Disable
ps7_smcc_memc_cfg_clr_reserved_ecc_int_disable0:
  addr: 0xe000e00c
  mask: 0x20
  name: reserved_ecc_int_disable0
  description: |
    Reserved. Do not modify.
ps7_smcc_memc_cfg_clr_int_clr_1:
  addr: 0xe000e00c
  mask: 0x10
  name: int_clr_1
  description: |
    0: No effect
    1: Clear SMC Interrupt 1 as an alternative to an AXI read
ps7_smcc_memc_cfg_clr_int_clr_0:
  addr: 0xe000e00c
  mask: 0x8
  name: int_clr_0
  description: |
    0: No effect
    1: Clear SMC Interrupt 0 as an alternative to an AXI read
ps7_smcc_memc_cfg_clr_low_power_exit:
  addr: 0xe000e00c
  mask: 0x4
  name: low_power_exit
  description: |
    Exit low-power mode. The affect takes place when memory interface goes idle:
    0: No change
    1: Exit from low-power state
ps7_smcc_memc_cfg_clr_int_disable1:
  addr: 0xe000e00c
  mask: 0x2
  name: int_disable1
  description: |
    NAND Flash interrupt disable:
    0: No change
    1: disable (apply mask)
ps7_smcc_memc_cfg_clr_int_disable0:
  addr: 0xe000e00c
  mask: 0x1
  name: int_disable0
  description: |
    SRAM/NOR interrupt disable:
    0: No change
    1: disable (apply mask)
ps7_smcc_direct_cmd_chip_select:
  addr: 0xe000e010
  mask: 0x3800000
  name: chip_select
  description: |
    Select register bank to update and enable chip mode register access based on CMD_TYPE:
    000: SRAM/NOR chip select 0.
    001: SRAM/NOR chip select 1.
    100: NAND Flash.
    others: reserved.
ps7_smcc_direct_cmd_cmd_type:
  addr: 0xe000e010
  mask: 0x600000
  name: cmd_type
  description: |
    Select the command type:
    00: UpdateRegs and AXI
    01: ModeReg
    10: UpdateRegs
    11: ModeReg and UpdateRegs
ps7_smcc_direct_cmd_reserved_set_cre:
  addr: 0xe000e010
  mask: 0x100000
  name: reserved_set_cre
  description: |
    Reserved. Do not modify.
ps7_smcc_direct_cmd_addr:
  addr: 0xe000e010
  mask: 0xfffff
  name: addr
  description: |
    When cmd_type = UpdateRegs and AXI then:
    Bits [15:0] are used to match wdata[15:0]
    Bits [19:16] are reserved. Write as zero.
    When cmd_type = ModeReg or ModeReg and UpdateRegs, these bits map to the external memory address bits [19:0].
    When cmd_type = UpdateRegs, these bits are reserved. Write as zero.
ps7_smcc_set_cycles_Set_t6:
  addr: 0xe000e014
  mask: 0xf00000
  name: Set_t6
  description: |
    Timing parameter for SRAM/NOR, bit 20 only (other bits are ignored):
    o For asynchronous multiplexed transfers this bit controls when the SMC asserts we_n:
    0: assert we_n two mclk cycles after asserting cs_n.
    1: assert we_n and cs_n together.
    Timing parameter for NAND Flash, bits 23:20:
    o Busy to RE timing (t_rr), minimum permitted value = 0.
ps7_smcc_set_cycles_Set_t5:
  addr: 0xe000e014
  mask: 0xe0000
  name: Set_t5
  description: |
    Timing parameter for SRAM/NOR:
    o Turnaround time (t_ta), minimum value = 1.
    Timing parameter for NAND Flash:
    o ID read time (t_ar), mnimum value = 0.
ps7_smcc_set_cycles_Set_t4:
  addr: 0xe000e014
  mask: 0x1c000
  name: Set_t4
  description: |
    Timing parameter for SRAM/NOR:
    o Page cycle time (t_pc), minimum value = 1.
    Timing parameter for NAND Flash:
    o Page cycle time (t_clr), minimum value = 1.
ps7_smcc_set_cycles_Set_t3:
  addr: 0xe000e014
  mask: 0x3800
  name: Set_t3
  description: |
    Timing parameter for SRAM/NOR:
    o Write Enable (t_wp) assertion delay, minimum value = 1.
    Timing parameter for NAND Flash:
    o Write Enable (t_wp) deassertion delay, minimum value = 1.
ps7_smcc_set_cycles_Set_t2:
  addr: 0xe000e014
  mask: 0x700
  name: Set_t2
  description: |
    Timing parameter for SRAM/NOR:
    o Output Enable (t_ceoe) assertion delay, minimum value = 1.
    Timing parameter for NAND Flash:
    o REA (t_rea) assertion delay, minimum value = 1.
ps7_smcc_set_cycles_Set_t1:
  addr: 0xe000e014
  mask: 0xf0
  name: Set_t1
  description: |
    Timing parameter for SRAM/NOR and NAND Flash:
    Write cycle time, minimum value = 2.
ps7_smcc_set_cycles_Set_t0:
  addr: 0xe000e014
  mask: 0xf
  name: Set_t0
  description: |
    Timing parameter for SRAM/NOR and NAND Flash:
    Read cycle time, minimum value = 2.
ps7_smcc_set_opmode_reserved_set_burst_align:
  addr: 0xe000e018
  mask: 0xe000
  name: reserved_set_burst_align
  description: |
    Reserved. Do not modify.
ps7_smcc_set_opmode_set_bls:
  addr: 0xe000e018
  mask: 0x1000
  name: set_bls
  description: |
    NAND Flash: reserved, write zero.
    SRAM/NOR: Value written to the byte lane strobe (bls) bit. This bit affects the assertion of the byte-lane strobe outputs.
    0: bls timing equals chip select timing. This is the default setting.
    1: bls timing equals we_n timing. This setting is used for eight memories that have no bls_n inputs. In this case, the bls_n output of the SMC is connected to the we_n memory input.
ps7_smcc_set_opmode_set_adv:
  addr: 0xe000e018
  mask: 0x800
  name: set_adv
  description: |
    Contains the value to be written to the specific SRAM chip opmode Register address valid (adv) bit. The memory uses the address advance signal adv_n when set.
    For a NAND memory interface this bit is reserved, and written as zero.
ps7_smcc_set_opmode_set_baa:
  addr: 0xe000e018
  mask: 0x400
  name: set_baa
  description: |
    NAND Flash: reserved, write zero.
    SRAM/NOR: Value written burst address advance (baa) bit. The memory uses the baa_n signal when set.
ps7_smcc_set_opmode_set_wr_bl:
  addr: 0xe000e018
  mask: 0x380
  name: set_wr_bl
  description: |
    NAND Flash: reserved, write zero.
    SRAM/NORE: Value written for wr_bl :
    000: 1 beat
    001: 4 beats
    010: 8 beats
    011: 16 beats
    100: 32 beats
    101: continuous
    others: reserved.
ps7_smcc_set_opmode_reserved_set_wr_sync:
  addr: 0xe000e018
  mask: 0x40
  name: reserved_set_wr_sync
  description: |
    Reserved. Do not modify.
ps7_smcc_set_opmode_set_rd_bl:
  addr: 0xe000e018
  mask: 0x38
  name: set_rd_bl
  description: |
    NAND Flash: reserved, write zero.
    SRAM/NOR: value written to opmode (rd_bl field). Memory Burst Length:
    000: 1 beat
    001: 4 beats
    010: 8 beats
    011: 16 beats
    100: 32 beats
    101: continuous
    others: reserved
ps7_smcc_set_opmode_reserved_set_rd_sync:
  addr: 0xe000e018
  mask: 0x4
  name: reserved_set_rd_sync
  description: |
    Reserved. Do not modify.
ps7_smcc_set_opmode_set_mw:
  addr: 0xe000e018
  mask: 0x3
  name: set_mw
  description: |
    SRAM/NOR: mw= 00 (8-bit)
    NAND Flash: mw= 00 (8-bit) or 01 (16-bit)
ps7_smcc_refresh_period_0_period:
  addr: 0xe000e020
  mask: 0xf
  name: period
  description: |
    Set the number of consecutive memory bursts that are permitted, prior to the SMC deasserting chip select to enable the PSRAM to initiate a refresh cycle. The options are:
    b0000: disable the insertion of idle cycles between consecutive bursts
    b0001: an idle cycle occurs after each burst
    b0010: an idle cycle occurs after 2 consecutive bursts
    b0011: an idle cycle occurs after 3 consecutive bursts
    b0100: an idle cycle occurs after 4 consecutive bursts
    . . .
    b1111: an idle cycle occurs after 15 consecutive bursts.
ps7_smcc_refresh_period_1_period:
  addr: 0xe000e024
  mask: 0xf
  name: period
  description: |
    Set the number of consecutive memory bursts that are permitted, prior to the SMC deasserting chip select to enable the PSRAM to initiate a refresh cycle. The options are:
    b0000: disable the insertion of idle cycles between consecutive bursts
    b0001: an idle cycle occurs after each burst
    b0010: an idle cycle occurs after 2 consecutive bursts
    b0011: an idle cycle occurs after 3 consecutive bursts
    b0100: an idle cycle occurs after 4 consecutive bursts
    . . .
    b1111: an idle cycle occurs after 15 consecutive bursts.
ps7_smcc_sram_cycles0_0_we_time:
  addr: 0xe000e100
  mask: 0x100000
  name: we_time
  description: |
    Asynchronous assertion, refer to SET_CYCLES register.
ps7_smcc_sram_cycles0_0_t_tr:
  addr: 0xe000e100
  mask: 0xe0000
  name: t_tr
  description: |
    Turnaround time, refer to SET_CYCLES register.
ps7_smcc_sram_cycles0_0_t_pc:
  addr: 0xe000e100
  mask: 0x1c000
  name: t_pc
  description: |
    Page cycle time, refer to SET_CYCLES register.
ps7_smcc_sram_cycles0_0_t_wp:
  addr: 0xe000e100
  mask: 0x3800
  name: t_wp
  description: |
    WE assertion delay, refer to SET_CYCLES register.
ps7_smcc_sram_cycles0_0_t_ceoe:
  addr: 0xe000e100
  mask: 0x700
  name: t_ceoe
  description: |
    OE assertion delay, refer to SET_CYCLES register.
ps7_smcc_sram_cycles0_0_t_wc:
  addr: 0xe000e100
  mask: 0xf0
  name: t_wc
  description: |
    Write cycle time, refer to SET_CYCLES register.
ps7_smcc_sram_cycles0_0_t_rc:
  addr: 0xe000e100
  mask: 0xf
  name: t_rc
  description: |
    Read cycle time, refer to SET_CYCLES register.
ps7_smcc_opmode0_0_address_match:
  addr: 0xe000e104
  mask: 0xff000000
  name: address_match
  description: |
    Return the value of this tie-off. This is the comparison value for address bits [31:24] to determine the chip that is selected.
ps7_smcc_opmode0_0_address_mask:
  addr: 0xe000e104
  mask: 0xff0000
  name: address_mask
  description: |
    Return the value of this tie-off. This is the mask for address bits[31:24] to determine the chip that must be selected. A logic 1 indicates the bit is used for comparison.
ps7_smcc_opmode0_0_reserved_burst_align:
  addr: 0xe000e104
  mask: 0xe000
  name: reserved_burst_align
  description: |
    Reserved. Do not modify.
ps7_smcc_opmode0_0_reserved_bls:
  addr: 0xe000e104
  mask: 0x1000
  name: reserved_bls
  description: |
    Reserved. Do not modify.
ps7_smcc_opmode0_0_reserved_adv:
  addr: 0xe000e104
  mask: 0x800
  name: reserved_adv
  description: |
    Reserved. Do not modify.
ps7_smcc_opmode0_0_baa:
  addr: 0xe000e104
  mask: 0x400
  name: baa
  description: |
    The memory uses the burst address advance signal, baa_n, when set. For a NAND memory interface, this bit is reserved.
ps7_smcc_opmode0_0_wr_bl:
  addr: 0xe000e104
  mask: 0x380
  name: wr_bl
  description: |
    Selects the write burst lengths, see SET_OPMODE register.
ps7_smcc_opmode0_0_reserved_wr_sync:
  addr: 0xe000e104
  mask: 0x40
  name: reserved_wr_sync
  description: |
    Reserved. Do not modify.
ps7_smcc_opmode0_0_rd_bl:
  addr: 0xe000e104
  mask: 0x38
  name: rd_bl
  description: |
    Select memory burst lengths, see SET_OPMODE Register.
ps7_smcc_opmode0_0_reserved_rd_sync:
  addr: 0xe000e104
  mask: 0x4
  name: reserved_rd_sync
  description: |
    Reserved. Do not modify.
ps7_smcc_opmode0_0_mw:
  addr: 0xe000e104
  mask: 0x3
  name: mw
  description: |
    Select data bus width (8 or 16), see SET_OPMODE register.
ps7_smcc_sram_cycles0_1_we_time:
  addr: 0xe000e120
  mask: 0x100000
  name: we_time
  description: |
    Asynchronous assertion, refer to SET_CYCLES register.
ps7_smcc_sram_cycles0_1_t_tr:
  addr: 0xe000e120
  mask: 0xe0000
  name: t_tr
  description: |
    Turnaround time, refer to SET_CYCLES register.
ps7_smcc_sram_cycles0_1_t_pc:
  addr: 0xe000e120
  mask: 0x1c000
  name: t_pc
  description: |
    Page cycle time, refer to SET_CYCLES register.
ps7_smcc_sram_cycles0_1_t_wp:
  addr: 0xe000e120
  mask: 0x3800
  name: t_wp
  description: |
    WE assertion delay, refer to SET_CYCLES register.
ps7_smcc_sram_cycles0_1_t_ceoe:
  addr: 0xe000e120
  mask: 0x700
  name: t_ceoe
  description: |
    OE assertion delay, refer to SET_CYCLES register.
ps7_smcc_sram_cycles0_1_t_wc:
  addr: 0xe000e120
  mask: 0xf0
  name: t_wc
  description: |
    Write cycle time, refer to SET_CYCLES register.
ps7_smcc_sram_cycles0_1_t_rc:
  addr: 0xe000e120
  mask: 0xf
  name: t_rc
  description: |
    Read cycle time, refer to SET_CYCLES register.
ps7_smcc_opmode0_1_address_match:
  addr: 0xe000e124
  mask: 0xff000000
  name: address_match
  description: |
    see 0x120
ps7_smcc_opmode0_1_address_mask:
  addr: 0xe000e124
  mask: 0xff0000
  name: address_mask
  description: |
    see 0x120
ps7_smcc_opmode0_1_burst_align:
  addr: 0xe000e124
  mask: 0xe000
  name: burst_align
  description: |
    reserved
ps7_smcc_opmode0_1_bls:
  addr: 0xe000e124
  mask: 0x1000
  name: bls
  description: |
    reserved
ps7_smcc_opmode0_1_adv:
  addr: 0xe000e124
  mask: 0x800
  name: adv
  description: |
    reserved
ps7_smcc_opmode0_1_baa:
  addr: 0xe000e124
  mask: 0x400
  name: baa
  description: |
    The memory uses the burst address advance signal, baa_n, when set.
    For a NAND memory interface, this bit is reserved.
ps7_smcc_opmode0_1_wr_bl:
  addr: 0xe000e124
  mask: 0x380
  name: wr_bl
  description: |
    Selects the write burst lengths, see SET_OPMODE register.
ps7_smcc_opmode0_1_wr_sync:
  addr: 0xe000e124
  mask: 0x40
  name: wr_sync
  description: |
    SRAM/NOR interface operates in asynchronous mode
ps7_smcc_opmode0_1_rd_bl:
  addr: 0xe000e124
  mask: 0x38
  name: rd_bl
  description: |
    Select memory burst lengths, see SET_OPMODE Register.
ps7_smcc_opmode0_1_rd_sync:
  addr: 0xe000e124
  mask: 0x4
  name: rd_sync
  description: |
    reserved
ps7_smcc_opmode0_1_mw:
  addr: 0xe000e124
  mask: 0x3
  name: mw
  description: |
    Data bus width (8 or 16), see SET_OPMODE register.
ps7_smcc_nand_cycles1_0_t_rr:
  addr: 0xe000e180
  mask: 0xf00000
  name: t_rr
  description: |
    BUSY to RE, refer to SET_CYCLES register.
ps7_smcc_nand_cycles1_0_t_ar:
  addr: 0xe000e180
  mask: 0xe0000
  name: t_ar
  description: |
    ID read time, refer to SET_CYCLES register.
ps7_smcc_nand_cycles1_0_t_clr:
  addr: 0xe000e180
  mask: 0x1c000
  name: t_clr
  description: |
    Page cycle time, refer to SET_CYCLES register. Status read time for NAND chip configurations.Minimum permitted value = 0.
ps7_smcc_nand_cycles1_0_t_wp:
  addr: 0xe000e180
  mask: 0x3800
  name: t_wp
  description: |
    WE deassertion delay, refer to SET_CYCLES register.
ps7_smcc_nand_cycles1_0_t_rea:
  addr: 0xe000e180
  mask: 0x700
  name: t_rea
  description: |
    RE assertion delay, refer to SET_CYCLES register.
ps7_smcc_nand_cycles1_0_t_wc:
  addr: 0xe000e180
  mask: 0xf0
  name: t_wc
  description: |
    Write cycle time, refer to SET_CYCLES register.
ps7_smcc_nand_cycles1_0_t_rc:
  addr: 0xe000e180
  mask: 0xf
  name: t_rc
  description: |
    Read cycle time, refer to SET_CYCLES register.
ps7_smcc_opmode1_0_address_match:
  addr: 0xe000e184
  mask: 0xff000000
  name: address_match
  description: |
    Return the value of this tie-off. This is the comparison value for address bits [31:24] to determine the chip that is selected.
ps7_smcc_opmode1_0_address_mask:
  addr: 0xe000e184
  mask: 0xff0000
  name: address_mask
  description: |
    Return the value of this tie-off. This is the mask for address bits[31:24] to determine the chip that must be selected. A logic 1 indicates the bit is used for comparison.
ps7_smcc_opmode1_0_reserved_burst_align:
  addr: 0xe000e184
  mask: 0xe000
  name: reserved_burst_align
  description: |
    Reserved. Do not modify.
ps7_smcc_opmode1_0_reserved_bls:
  addr: 0xe000e184
  mask: 0x1000
  name: reserved_bls
  description: |
    Reserved. Do not modify.
ps7_smcc_opmode1_0_reserved_adv:
  addr: 0xe000e184
  mask: 0x800
  name: reserved_adv
  description: |
    Reserved. Do not modify.
ps7_smcc_opmode1_0_reserved_baa:
  addr: 0xe000e184
  mask: 0x400
  name: reserved_baa
  description: |
    Reserved. Do not modify.
ps7_smcc_opmode1_0_reserved_wr_bl:
  addr: 0xe000e184
  mask: 0x380
  name: reserved_wr_bl
  description: |
    Reserved. Do not modify.
ps7_smcc_opmode1_0_reserved_wr_sync:
  addr: 0xe000e184
  mask: 0x40
  name: reserved_wr_sync
  description: |
    Reserved. Do not modify.
ps7_smcc_opmode1_0_reserved_rd_bl:
  addr: 0xe000e184
  mask: 0x38
  name: reserved_rd_bl
  description: |
    Reserved. Do not modify.
ps7_smcc_opmode1_0_reserved_rd_sync:
  addr: 0xe000e184
  mask: 0x4
  name: reserved_rd_sync
  description: |
    Reserved. Do not modify.
ps7_smcc_opmode1_0_mw:
  addr: 0xe000e184
  mask: 0x3
  name: mw
  description: |
    Data bus width is 8 bits, see SET_OPMODE register.
ps7_smcc_user_status_user_status:
  addr: 0xe000e200
  mask: 0xff
  name: user_status
  description: |
    This value returns the state of the user_status[7:0] inputs.
ps7_smcc_user_config_user_config:
  addr: 0xe000e204
  mask: 0xff
  name: user_config
  description: |
    This value sets the state of the user_config[7:0] outputs.
ps7_smcc_ecc_status_1_ecc_read:
  addr: 0xe000e400
  mask: 0x3e000000
  name: ecc_read
  description: |
    Read flags for ECC blocks. Indicate whether the stored ECC value for each block has been read from memory:
    0: not read
    1: read
    Bit [29] Extra block (if used).
    Bit [28] Block 3.
    Bit [27] Block 2.
    Bit [26] Block 1.
    Bit [25] Block 0.
ps7_smcc_ecc_status_1_ecc_can_correct:
  addr: 0xe000e400
  mask: 0x1f00000
  name: ecc_can_correct
  description: |
    Correctable flag for each ECC block:
    0: not correctable error
    1: correctable error
    Bit [24] Extra block (if used).
    Bit [23] Block 3.
    Bit [22] Block 2.
    Bit [21] Block 1.
    Bit [20] Block 0.
ps7_smcc_ecc_status_1_ecc_fail:
  addr: 0xe000e400
  mask: 0xf8000
  name: ecc_fail
  description: |
    Pass/fail flag for each ECC block
ps7_smcc_ecc_status_1_ecc_value_valid:
  addr: 0xe000e400
  mask: 0x7c00
  name: ecc_value_valid
  description: |
    Valid flag for each ECC block.
ps7_smcc_ecc_status_1_ecc_read_not_write:
  addr: 0xe000e400
  mask: 0x200
  name: ecc_read_not_write
  description: |
    ECC calcuation type:
    0: write
    1: read
ps7_smcc_ecc_status_1_ecc_last_status:
  addr: 0xe000e400
  mask: 0x180
  name: ecc_last_status
  description: |
    Last ECC result is updated after completing the ECC calculation:
    00: Completed successfully.
    01: Unaligned Address, or out-of-range.
    10: Data stop after incomplete block.
    11: Data stopped but values not read/written because of ecc_jump value.
ps7_smcc_ecc_status_1_ecc_status:
  addr: 0xe000e400
  mask: 0x40
  name: ecc_status
  description: |
    Status of the ECC block:
    0: idle
    1: busy
ps7_smcc_ecc_status_1_raw_int_status:
  addr: 0xe000e400
  mask: 0x3f
  name: raw_int_status
  description: |
    The interrupts are:
    Bit [5] Abort.
    Bit [4] Extra block (if used).
    Bit [3] Block 3.
    Bit [2] Block 2.
    Bit [1] Block 1.
    Bit [0] Block 0.
    To clear the interrupt, write a 1 to the bit.
ps7_smcc_ecc_memcfg_1_ecc_extra_block_size:
  addr: 0xe000e404
  mask: 0x1800
  name: ecc_extra_block_size
  description: |
    The size of the extra block in memory after the last 512 block:
    00: 4 bytes
    01: 8 bytes
    10: 16 bytes
    11: 32 bytes
    Note: These bits are only present if you configure the SMC to use the ECC Extra Block Enable option.
ps7_smcc_ecc_memcfg_1_ecc_extra_block:
  addr: 0xe000e404
  mask: 0x400
  name: ecc_extra_block
  description: |
    If configured, this enables a small block for extra information after the last 512 bytes block in the page. Note: These bits are only present if the ECC Extra Block Enable option is configured.
ps7_smcc_ecc_memcfg_1_ecc_int_abort:
  addr: 0xe000e404
  mask: 0x200
  name: ecc_int_abort
  description: |
    Interrupt on ECC abort:
    0: don't assert
    1: assert
ps7_smcc_ecc_memcfg_1_ecc_int_pass:
  addr: 0xe000e404
  mask: 0x100
  name: ecc_int_pass
  description: |
    Interrupt when a correct ECC value is read from memory:
    0: don't assert
    1: assert
ps7_smcc_ecc_memcfg_1_ecc_ignore_add_eight:
  addr: 0xe000e404
  mask: 0x80
  name: ecc_ignore_add_eight
  description: |
    Use to indicate if A8 is output with the address, required to find the aligned start of blocks:
    0: A8 is output
    1: A8 is not output
ps7_smcc_ecc_memcfg_1_ecc_jump:
  addr: 0xe000e404
  mask: 0x60
  name: ecc_jump
  description: |
    Indicate that the memory supports column change address commands:
    00: no jumping, reads and writes only occur at end of page
    01: jump using column change commands
    10: jump using full command
    11: reserved
ps7_smcc_ecc_memcfg_1_ecc_read_end:
  addr: 0xe000e404
  mask: 0x10
  name: ecc_read_end
  description: |
    Indicate when ECC values are read from memory:
    0: ECC value for a block must be read immediately after the block. Data access must stop on a 512 byte boundary.
    1: ECC values for all blocks are read at the end of the page.
ps7_smcc_ecc_memcfg_1_ecc_mode:
  addr: 0xe000e404
  mask: 0xc
  name: ecc_mode
  description: |
    Specify the mode of the ECC block:
    00: bypassed
    01: ECC values are calculated and made available on the APB interface. But they are not read to or written from memory.
    10: ECC values and calculated and read/written to memory. For a read, the ECC value is checked and the result of the check is made available on the APB interface.
    11: reserved
ps7_smcc_ecc_memcfg_1_page_size:
  addr: 0xe000e404
  mask: 0x3
  name: page_size
  description: |
    The number of 512 byte blocks in a page:
    00: No 512 byte blocks. Reserved if an ecc_extra_block is not configured and enabled.
    01: One 512 byte block.
    10: Two 512 byte blocks.
    11: Four 512 byte blocks.
ps7_smcc_ecc_memcommand1_1_nand_rd_cmd_end_valid:
  addr: 0xe000e408
  mask: 0x1000000
  name: nand_rd_cmd_end_valid
  description: |
    Use the end command
ps7_smcc_ecc_memcommand1_1_nand_rd_cmd_end:
  addr: 0xe000e408
  mask: 0xff0000
  name: nand_rd_cmd_end
  description: |
    Use the NAND command to initiate a write (0x30).
ps7_smcc_ecc_memcommand1_1_nand_rd_cmd:
  addr: 0xe000e408
  mask: 0xff00
  name: nand_rd_cmd
  description: |
    Use the NAND command used to initiate a read (0x00).
ps7_smcc_ecc_memcommand1_1_nand_wr_cmd:
  addr: 0xe000e408
  mask: 0xff
  name: nand_wr_cmd
  description: |
    Use the NAND command to initiate a write (0x80).
ps7_smcc_ecc_memcommand2_1_nand_rd_col_change_end_valid:
  addr: 0xe000e40c
  mask: 0x1000000
  name: nand_rd_col_change_end_valid
  description: |
    Use the end command
ps7_smcc_ecc_memcommand2_1_nand_rd_col_change_end:
  addr: 0xe000e40c
  mask: 0xff0000
  name: nand_rd_col_change_end
  description: |
    Use the NAND command to initiate a write.
ps7_smcc_ecc_memcommand2_1_nand_rd_col_change:
  addr: 0xe000e40c
  mask: 0xff00
  name: nand_rd_col_change
  description: |
    Use the NAND command to initiate a read or Spare bits pointer command.
ps7_smcc_ecc_memcommand2_1_nand_wr_col_change:
  addr: 0xe000e40c
  mask: 0xff
  name: nand_wr_col_change
  description: |
    The NAND command used to initiate a write
ps7_smcc_ecc_addr0_1_ecc_addr:
  addr: 0xe000e410
  mask: 0xffffffff
  name: ecc_addr
  description: |
    Address bits 31 to 0
ps7_smcc_ecc_addr1_1_ecc_addr:
  addr: 0xe000e414
  mask: 0xffffff
  name: ecc_addr
  description: |
    Address bits 55 to 32
ps7_smcc_ecc_value0_1_ecc_int:
  addr: 0xe000e418
  mask: 0x80000000
  name: ecc_int
  description: |
    Interrupt flag for this value
ps7_smcc_ecc_value0_1_ecc_valid:
  addr: 0xe000e418
  mask: 0x40000000
  name: ecc_valid
  description: |
    Indicate if this value is valid
ps7_smcc_ecc_value0_1_ecc_read:
  addr: 0xe000e418
  mask: 0x20000000
  name: ecc_read
  description: |
    Indicate if the ECC value has been read from memory
ps7_smcc_ecc_value0_1_ecc_fail:
  addr: 0xe000e418
  mask: 0x10000000
  name: ecc_fail
  description: |
    Indicate if this value has failed
ps7_smcc_ecc_value0_1_ecc_correct:
  addr: 0xe000e418
  mask: 0x8000000
  name: ecc_correct
  description: |
    Indicate if this block is correctable
ps7_smcc_ecc_value0_1_reserved:
  addr: 0xe000e418
  mask: 0x7000000
  name: reserved
  description: |
    Reserved, read undefined
ps7_smcc_ecc_value0_1_ecc_value:
  addr: 0xe000e418
  mask: 0xffffff
  name: ecc_value
  description: |
    ECC value of check result for block, depending on ECC configuration
ps7_smcc_ecc_value1_1_ecc_int:
  addr: 0xe000e41c
  mask: 0x80000000
  name: ecc_int
  description: |
    Interrupt flag for this value
ps7_smcc_ecc_value1_1_ecc_valid:
  addr: 0xe000e41c
  mask: 0x40000000
  name: ecc_valid
  description: |
    Indicate if this value is valid
ps7_smcc_ecc_value1_1_ecc_read:
  addr: 0xe000e41c
  mask: 0x20000000
  name: ecc_read
  description: |
    Indicate if the ECC value has been read from memory
ps7_smcc_ecc_value1_1_ecc_fail:
  addr: 0xe000e41c
  mask: 0x10000000
  name: ecc_fail
  description: |
    Indicate if this value has failed
ps7_smcc_ecc_value1_1_ecc_correct:
  addr: 0xe000e41c
  mask: 0x8000000
  name: ecc_correct
  description: |
    Indicate if this block is correctable
ps7_smcc_ecc_value1_1_reserved:
  addr: 0xe000e41c
  mask: 0x7000000
  name: reserved
  description: |
    Reserved, read undefined
ps7_smcc_ecc_value1_1_ecc_value:
  addr: 0xe000e41c
  mask: 0xffffff
  name: ecc_value
  description: |
    ECC value of check result for block, depending on ECC configuration
ps7_smcc_ecc_value2_1_ecc_int:
  addr: 0xe000e420
  mask: 0x80000000
  name: ecc_int
  description: |
    Interrupt flag for this value
ps7_smcc_ecc_value2_1_ecc_valid:
  addr: 0xe000e420
  mask: 0x40000000
  name: ecc_valid
  description: |
    Indicate if this value is valid
ps7_smcc_ecc_value2_1_ecc_read:
  addr: 0xe000e420
  mask: 0x20000000
  name: ecc_read
  description: |
    Indicate if the ECC value has been read from memory
ps7_smcc_ecc_value2_1_ecc_fail:
  addr: 0xe000e420
  mask: 0x10000000
  name: ecc_fail
  description: |
    Indicate if this value has failed
ps7_smcc_ecc_value2_1_ecc_correct:
  addr: 0xe000e420
  mask: 0x8000000
  name: ecc_correct
  description: |
    Indicate if this block is correctable
ps7_smcc_ecc_value2_1_reserved:
  addr: 0xe000e420
  mask: 0x7000000
  name: reserved
  description: |
    Reserved, read undefined
ps7_smcc_ecc_value2_1_ecc_value:
  addr: 0xe000e420
  mask: 0xffffff
  name: ecc_value
  description: |
    ECC value of check result for block, depending on ECC configuration
ps7_smcc_ecc_value3_1_ecc_int:
  addr: 0xe000e424
  mask: 0x80000000
  name: ecc_int
  description: |
    Interrupt flag for this value
ps7_smcc_ecc_value3_1_ecc_valid:
  addr: 0xe000e424
  mask: 0x40000000
  name: ecc_valid
  description: |
    Indicate if this value is valid
ps7_smcc_ecc_value3_1_ecc_read:
  addr: 0xe000e424
  mask: 0x20000000
  name: ecc_read
  description: |
    Indicate if the ECC value has been read from memory
ps7_smcc_ecc_value3_1_ecc_fail:
  addr: 0xe000e424
  mask: 0x10000000
  name: ecc_fail
  description: |
    Indicate if this value has failed
ps7_smcc_ecc_value3_1_ecc_correct:
  addr: 0xe000e424
  mask: 0x8000000
  name: ecc_correct
  description: |
    Indicate if this block is correctable
ps7_smcc_ecc_value3_1_reserved:
  addr: 0xe000e424
  mask: 0x7000000
  name: reserved
  description: |
    Reserved, read undefined
ps7_smcc_ecc_value3_1_ecc_value:
  addr: 0xe000e424
  mask: 0xffffff
  name: ecc_value
  description: |
    ECC value of check result for block, depending on ECC configuration
